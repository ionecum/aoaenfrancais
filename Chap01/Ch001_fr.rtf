{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Arial;}{\f5\froman\fprq2\fcharset0 Footlight MT Light;}{\f6\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f7\froman\fprq2\fcharset0 Arial Narrow;}{\f8\froman\fprq2\fcharset0 Courier New;}{\f9\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f10\fnil\fprq2\fcharset0 Times New Roman;}{\f11\fnil\fprq2\fcharset0 Arial Narrow;}{\f12\fnil\fprq2\fcharset0 Footlight MT Light;}{\f13\fnil\fprq2\fcharset0 Courier New;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Normal;}
{\s1\sbasedon0\snext1\dbch\af9\langfe1033\dbch\af9\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f4\fs23\lang1033\b\kerning1 Heading 1;}
{\*\cs15\snext15 WW8Num2z0;}
{\*\cs16\snext16 Default Paragraph Font;}
{\*\cs17\sbasedon16\snext17\super Footnote Characters;}
{\*\cs18\sbasedon16\snext18 Page Number;}
{\*\cs19\snext19\super Footnote Anchor;}
{\*\cs20\snext20\super Endnote Anchor;}
{\*\cs21\snext21 Endnote Characters;}
{\s22\sbasedon0\snext23\dbch\af9\langfe1081\dbch\af9\afs28\qj\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f6\fs28\lang1033\kerning1 Heading;}
{\s23\sbasedon0\snext23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1 Text Body;}
{\s24\sbasedon23\snext24\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1 List;}
{\s25\sbasedon0\snext25\dbch\af9\langfe1081\dbch\af9\afs24\ai\qj\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f5\fs24\lang1033\i\kerning1 Caption;}
{\s26\sbasedon0\snext26\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Index;}
{\s27\sbasedon0\snext27\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang1033\kerning1 Code;}
{\s28\sbasedon0\snext28\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text Indent 3;}
{\s29\sbasedon0\snext29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Text Body Indent;}
{\s30\sbasedon0\snext30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1 Footnote;}
{\s31\sbasedon0\snext31\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Header and Footer;}
{\s32\sbasedon0\snext32\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Footer;}
{\s33\sbasedon0\snext33\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text 2;}
{\s34\sbasedon0\snext34\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text Indent 2;}
{\s35\sbasedon0\snext35\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Header;}
{\s36\sbasedon0\snext36\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Table Contents;}
{\s37\sbasedon36\snext37\dbch\af9\langfe1081\dbch\af9\afs20\ab\qc\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\b\kerning1 Table Heading;}
{\s38\sbasedon0\snext38\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Frame Contents;}
}{\*\generator LibreOffice/6.4.4.2$Windows_X86_64 LibreOffice_project/3d775be2011f3886db32dfd395a6a6d1ca2630ff}{\info{\title Organisation Syst\u232\'e8me                           Chapitre trois}{\author Danilo Renzi}{\creatim\yr2003\mo9\dy2\hr4\min2}{\author Danilo Renzi}{\revtim\yr2021\mo5\dy26\hr19\min6}{\printim\yr2021\mo4\dy2\hr20\min9}}{\*\userprops}\deftab720
\hyphauto1\viewscale170
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s32\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af12\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8419\shpright8640\shpz30{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s32\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af12\langfe1081\afs20 \ltrch\cs18\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 30}}}
\par \pard}}}

\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s32\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af12\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8419\shpright8640\shpz30{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s32\dbch\af9\langfe1081\dbch\af9\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af12\langfe1081\afs20 \ltrch\cs18\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 30}}}
\par \pard}}}

\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs48\loch
Premi\u232\'e8re section}
\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs48\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs48\loch
Organisation de la }{\rtlch \ltrch\fs48\lang3084\loch
m}{\rtlch \ltrch\fs48\loch
achine}
\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\pagebb\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20\rtlch \ltrch\fs33\loch

\par \pard\plain \s23\dbch\af9\langfe1033\dbch\af9\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f4\fs35\lang1033\b\kerning1\pagebb\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs33\loch
Repr\u233\'e9sentation des }{\rtlch \ltrch\fs33\lang3084\loch
d}{\rtlch \ltrch\fs33\loch
onn\u233\'e9es                           Chapitre 1}
\par \pard\plain \s0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
La plus grande difficult\u233\'e9 que la plupart des d\u233\'e9butants rencontrent en apprenant le langage assembleur est probablement l'usage commun des syst\u232\'e8mes de num\u233\'e9ration binaire et hexad\u233\'e9cimal. Beaucoup de programmeurs pensent que les nombres hexad\u233\'e9cimaux (ou hex}{{\super \rtlch\dbch\af11 \ltrch\super\fs21\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Le terme }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
hexad\u233\'e9cimal}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 est parfois abr\u233\'e9g\u233\'e9 par }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
hex}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
, m\u234\'eame si, techniquement parlant, hex veut dire base six et non base seize. }
}}
}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
) repr\u233\'e9sentent la preuve d\u233\'e9finitive que Dieu n'a jamais destin\u233\'e9 personne \u224\'e0 travailler en assembleur. Quoi que ces nombres ne ressemblent pas }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
\u224\'e0 ce que vous voyez tous les jours}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
, leurs avantages d\u233\'e9passent de loin }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
les}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
 inconv\u233\'e9nients. }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
Donc}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
, comprendre ces syst\u232\'e8mes de num\u233\'e9ration est important parce que leur utilisation simplifie d'autres sujets complexes, par exemple, l'alg\u232\'e8bre bool\u233\'e9enne et la conception logique, les repr\u233\'e9sentations num\u233\'e9riques sign\u233\'e9es, les codes des caract\u232\'e8res et les paquets de donn\u233\'e9es. }
\par \pard\plain \s0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s1\dbch\af9\langfe1033\dbch\af9\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f4\fs23\lang1033\b\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p1_00}{\*\bkmkend p1_00}\loch
1.0\tab Vue }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
nsemble}{\loch
 du }{\rtlch \ltrch\lang3084\loch
c}{\loch
hapitre}
\par \pard\plain \s0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
Ce chapitre d\u233\'e9crit plusieurs concepts importants, dont les syst\u232\'e8mes de num\u233\'e9ration binaire et }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
hexad\u233\'e9cimal}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
, l'organisation binaire des donn\u233\'e9es (bits, quartets, octets, mots et doubles-mots), nombres sign\u233\'e9s et non sign\u233\'e9s, op\u233\'e9rations arithm\u233\'e9tiques, logiques, de d\u233\'e9calage et de rotation sur les valeurs binaires, champs de bits, paquets de donn\u233\'e9es et l'ensemble des caract\u232\'e8res ASCII. Ceci constitue la mati\u232\'e8re de base,}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
 ainsi que l\u8217\'92essence de la compr\u233\'e9hension du contenu du reste du livre, laquelle d\u233\'e9pend de la ma\u238\'eetrise de ces notions}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
. Si vous avez d\u233\'e9j\u224\'e0 abord\u233\'e9 ces sujets }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
dans }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
d'autres cours, vous devriez tout de m\u234\'eame les parcourir avant de passer au prochain chapitre. Si vous n'\u234\'eates pas familiaris\u233\'e9 avec cette mati\u232\'e8re ou si vous n'en avez qu'une vague connaissance, vous devriez l'\u233\'e9tudier soigneusement avant }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
d\u8217\'92aller plus loin}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
. }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\i\loch\f7\loch
Tout le contenu du chapitre est important ! }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs21\loch\f7\loch
N'en sautez donc aucune partie. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }
\par \pard\plain \s0\dbch\af9\langfe1081\dbch\af9\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p1_01}{\*\bkmkend p1_01}\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs23\b\loch\f7\loch
1.1\tab Syst\u232\'e8mes de }{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
n}{\rtlch\dbch\af11\dbch\af11\hich\af7 \ltrch\fs23\b\loch\f7\loch
um\u233\'e9ration}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des syst\u232\'e8mes informatiques ne repr\u233\'e9sentent pas les valeurs num\u233\'e9riques }{\rtlch \ltrch\lang3084\loch
de fa\u231\'e7on }{\loch
d\u233\'e9cimal}{\rtlch \ltrch\lang3084\loch
e}{\loch
. Au contraire, ils font usage du syst\u232\'e8me de num\u233\'e9ration binaire ou de compl\u233\'e9ment \u224\'e0 deux. Pour comprendre les limitations de l'arithm\u233\'e9tique informatique vous devez comprendre comment les ordinateurs repr\u233\'e9sentent les }{\rtlch \ltrch\lang3084\loch
nombres}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p1_01_01}{\*\bkmkend p1_01_01}\rtlch \ltrch\fs23\b\loch
1.1.1\tab Une }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
\u233\'e9vision du }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me d\u233\'e9cimal}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs23\b
 }{\loch
Vous avez utilis\u233\'e9 le syst\u232\'e8me de num\u233\'e9ration d\u233\'e9cimal (base 10) }{\rtlch \ltrch\lang3084\loch
pendant tellement de temps que }{\loch
vous le consid\u233\'e9rez d\u233\'e9sormais \u233\'e9vident au point d'en oublier les propri\u233\'e9t\u233\'e9s intrins\u232\'e8ques. Quand vous voyez un nombre comme "123" vous ne pensez pas \u224\'e0 la valeur 123, mais vous vous faites une image mentale sur le nombre d'objets que la valeur repr\u233\'e9sente. En r\u233\'e9alit\u233\'e9, cependant, le nombre 123 repr\u233\'e9sente :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\loch
1 * 10}{\rtlch \ltrch\super\loch
2}{\loch
 + 2 * 10}{\rtlch \ltrch\super\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
 + 3 * 10}{\rtlch \ltrch\super\lang3084\loch
0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
ou}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
100 + 20 + 3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
Chaque chiffre apparaissant \u224\'e0 la gauche de la virgule d\u233\'e9cimale repr\u233\'e9sente une valeur de z\u233\'e9ro \u224\'e0 neuf fois une puissance croissante de dix. Et chaque nombre apparaissant \u224\'e0 la droite de la virgule d\u233\'e9cimale repr\u233\'e9sente une valeur de z\u233\'e9ro \u224\'e0 neuf fois une puissance d\u233\'e9croissante de dix. Par exemple, la valeur 123,456 peut s'\u233\'e9crire :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
1 * 10}{\rtlch \ltrch\super\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 + 2 * 10}{\rtlch \ltrch\super\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
 + 3 * 10}{\rtlch \ltrch\super\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
 + 4 * 10}{\rtlch \ltrch\super\lang3084\loch
-1}{\rtlch \ltrch\lang3084\loch
 + 5 * 10}{\rtlch \ltrch\super\lang3084\loch
-2}{\rtlch \ltrch\lang3084\loch
 + 6 * 10}{\rtlch \ltrch\super\lang3084\loch
-3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
ou}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
100 + 20 + 3 + 0,4 + 0,05 + 0,006}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\fs23\lang3084\b\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_01_02}{\*\bkmkend p1_01_02}\rtlch \ltrch\fs23\b\loch
1.1.2\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me de }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
um\u233\'e9ration binaire}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La plupart des syst\u232\'e8mes informatiques modernes (en incluant l'IBM PC) fonctionnent en utilisant la logique binaire. L'ordinateur repr\u233\'e9sente les donn\u233\'e9es en utilisant deux niveaux de voltage (normalement 0v et 5v). Avec ces deux niveaux, on peut repr\u233\'e9senter exactement deux valeurs. Celles-ci peuvent \u234\'eatre repr\u233\'e9sent\u233\'e9es par tout couple de nombres mais, par convention, on utilise les valeurs 0 et 1. Et ces derni\u232\'e8res correspondent exactement aux deux chiffres utilis\u233\'e9s dans le syst\u232\'e8me de num\u233\'e9ration binaire. Puisqu'il y a une correspondance entre les niveaux logiques utilis\u233\'e9s par les 80x86 et les deux termes utilis\u233\'e9s en num\u233\'e9ration binaire, il n'est par surprenant que l'IBM PC s'en serve. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le syst\u232\'e8me de num\u233\'e9ration binaire fonctionne tout comme le syst\u232\'e8me de num\u233\'e9ration d\u233\'e9cimale, avec deux exceptions : les nombres binaires comprennent seulement les chiffres 0 et 1 (au lieu de 0-9) et utilisent des puissances de deux \u224\'e0 la place des puissances de dix. Par cons\u233\'e9quent, il est facile de convertir un nombre binaire en d\u233\'e9cimal. Pour chaque "1" de la cha\u238\'eene binaire, on ajoute 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
, o\u249\'f9 }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 est la position du bit. Par exemple, la valeur binaire 11001010}{\rtlch \ltrch\sub\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 repr\u233\'e9sente : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
1 * 2}{\rtlch \ltrch\super\lang3084\loch
7}{\rtlch \ltrch\lang3084\loch
 + 1 * 2}{\rtlch \ltrch\super\lang3084\loch
6}{\rtlch \ltrch\lang3084\loch
 + 0 * 2}{\rtlch \ltrch\super\lang3084\loch
5}{\rtlch \ltrch\lang3084\loch
 + 0 * 2}{\rtlch \ltrch\super\lang3084\loch
4}{\rtlch \ltrch\lang3084\loch
 + 1 * 2}{\rtlch \ltrch\super\lang3084\loch
3}{\rtlch \ltrch\lang3084\loch
 + 0 * 2}{\rtlch \ltrch\super\lang3084\loch
2 }{\rtlch \ltrch\lang3084\loch
+ 1 * 2}{\rtlch \ltrch\super\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
 + 0 * 2}{\rtlch \ltrch\super\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
 }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
= 128 + 64 + 8 + 2 }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
= 202}{\rtlch \ltrch\sub\lang3084\loch
10}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour convertir un nombre d\u233\'e9cimal en binaire, c'est un peu plus difficile. Vous devez trouver les puissances de deux qui, additionn\u233\'e9es, produisent le r\u233\'e9sultat d\u233\'e9cimal. La m\u233\'e9thode la plus facile est de proc\u233\'e9der de la plus grande puissance de deux dans le nombre jusqu'\u224\'e0 2}{\rtlch \ltrch\super\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
. Consid\u233\'e9rez la valeur d\u233\'e9cimale 1359 :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 2}{\rtlch \ltrch\super\lang3084\loch
10}{\rtlch \ltrch\lang3084\loch
 = 1024, 2}{\rtlch \ltrch\super\lang3084\loch
11}{\rtlch \ltrch\lang3084\loch
 = 2048. Donc 1024 est la plus grande puissance de deux inf\u233\'e9rieure \u224\'e0 1359. Soustrayez 1024 de 1359 et commencez la valeur binaire avec un "1" \u224\'e0 gauche. Binaire = "1", r\u233\'e9sultat d\u233\'e9cimal : 1359 - 1024 = 335.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 La prochaine puissance de deux (2}{\rtlch \ltrch\super\lang3084\loch
9}{\rtlch \ltrch\lang3084\loch
 = 512) est plus grande que le r\u233\'e9sultat obtenu ci-dessus, donc, ajouter "0" \u224\'e0 la fin de la cha\u238\'eene binaire. Nombre binaire = "10" et le r\u233\'e9sultat d\u233\'e9cimal est encore 335. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 La prochaine puissance de deux est 256 (2}{\rtlch \ltrch\super\lang3084\loch
8}{\rtlch \ltrch\lang3084\loch
). Soustraire ceci \u224\'e0 335 et ajouter "1" \u224\'e0 la fin de la cha\u238\'eene binaire. Nombre binaire = "101", avec un r\u233\'e9sultat d\u233\'e9cimal de 79. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 128 (2}{\rtlch \ltrch\super\lang3084\loch
7}{\rtlch \ltrch\lang3084\loch
) est plus grand que 79, donc ajouter "0" \u224\'e0 la cha\u238\'eene binaire. Nombre binaire = "1010" et le r\u233\'e9sultat d\u233\'e9cimal reste 79. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 La prochaine plus petite puissance de deux (2}{\rtlch \ltrch\super\lang3084\loch
6}{\rtlch \ltrch\lang3084\loch
 = 64) est inf\u233\'e9rieure \u224\'e0 79, donc lui soustraire 64 et ajouter "1" \u224\'e0 la cha\u238\'eene binaire. Nombre binaire = "10101", avec un r\u233\'e9sultat d\u233\'e9cimal de 15. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 15 est inf\u233\'e9rieur \u224\'e0 la prochaine puissance de deux (2}{\rtlch \ltrch\super\lang3084\loch
5}{\rtlch \ltrch\lang3084\loch
 = 32), donc ajouter simplement "0" \u224\'e0 la fin de la cha\u238\'eene binaire. Nombre binaire = "101010" et le r\u233\'e9sultat d\u233\'e9cimal est encore 15. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 16 (2}{\rtlch \ltrch\super\lang3084\loch
4}{\rtlch \ltrch\lang3084\loch
) est plus grand que 15, donc ajouter un autre "0" \u224\'e0 la cha\u238\'eene. Nombre binaire = "1010100", avec un r\u233\'e9sultat binaire encore de 15. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 2}{\rtlch \ltrch\super\lang3084\loch
3}{\rtlch \ltrch\lang3084\loch
 (8) est inf\u233\'e9rieur \u224\'e0 15, donc ajouter un autre "1". Nombre binaire = "10101001" avec un r\u233\'e9sultat d\u233\'e9cimal de 7. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 2}{\rtlch \ltrch\super\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 est plus petit que 7, donc le lui soustraire en ajoutant un autre "1" \u224\'e0 la cha\u238\'eene. Nombre binaire = "101010011", r\u233\'e9sultat d\u233\'e9cimal : 3. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 2}{\rtlch \ltrch\super\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
 est inf\u233\'e9rieur \u224\'e0 3, donc ajouter un autre "1" au nombre binaire et soustraire 2 au nombre d\u233\'e9cimal. Nombre binaire = "1010100111" et le r\u233\'e9sultat d\u233\'e9cimal est maintenant 1. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Finalement le r\u233\'e9sultat d\u233\'e9cimal est 1, qui correspond \u224\'e0 2}{\rtlch \ltrch\super\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
, donc ajouter "1" final \u224\'e0 la fin de la cha\u238\'eene binaire. Le r\u233\'e9sultat final binaire est : "10101001111". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Quoique les nombres binaires apparaissent sans trop d'importance dans les langages de haut niveau, ils sont partout dans les programmes en assembleur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_01_03}{\*\bkmkend p1_01_03}\rtlch \ltrch\fs23\b\loch
1.1.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
ormats binaires}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
De fa\u231\'e7on purement abstraite, chaque nombre binaire contient un nombre infini de chiffres (ou }{\rtlch \ltrch\lang3084\i\loch
bits}{\rtlch \ltrch\lang3084\loch
 qui est une contraction du terme anglais }{\rtlch \ltrch\lang3084\i\loch
binary digit}{\rtlch \ltrch\lang3084\loch
). Par exemple, on peut repr\u233\'e9senter le nombre cinq par : }
\par \trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx1663\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3434\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5205\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6976\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\rtlch \ltrch\lang3084\loch
101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\rtlch \ltrch\lang3084\loch
00000101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\rtlch \ltrch\lang3084\loch
0000000000101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\rtlch \ltrch\lang3084\loch
000000000000101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084
\u8230\'85}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Tout nombre arbitraire de z\u233\'e9ros peut pr\u233\'e9c\u233\'e9der le nombre binaire sans changer sa valeur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
On adopterait la convention d'ignorer tout z\u233\'e9ro superflu. Par exemple, 101}{\rtlch \ltrch\super\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 repr\u233\'e9senterait le nombre cinq. Cependant, par le fait que les processeurs 80x86 travaillent avec des groupes de huit bits, l'on trouvera beaucoup plus simple d'exprimer tous les nombres avec des z\u233\'e9ros de remplissage, de fa\u231\'e7on \u224\'e0 les faire appara\u238\'eetre comme s'ils \u233\'e9taient des nombres de quatre ou de huit bits. Par cons\u233\'e9quent, en adoptant cette convention, on \u233\'e9crira le nombre cinq comme 0101}{\rtlch \ltrch\super\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 ou 00000101}{\rtlch \ltrch\super\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La plupart des gens s\u233\'e9parent par un point}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Les notations changent selon les pays, par exemple, aux Etats-Unis et dans nombre d'autres pays, on utilise la virgule, n.d.t.}
}}
}{\rtlch \ltrch\lang3084\loch
 tout groupe de trois chiffres pour rendre plus simple la lecture des gros nombres d\u233\'e9cimaux. Par exemple, 1.023.435.208 est beaucoup plus facile \u224\'e0 lire et \u224\'e0 comprendre que 1023435208. Dans ce texte, on adoptera une convention similaire pour la lecture des nombres binaires. Nous s\u233\'e9parerons chaque groupe de quatre chiffres binaires par un espace. Par exemple, la valeur binaire 1010111110110010 sera \u233\'e9crite : 1010 1111 1011 0010. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Souvent, on empaquette plusieurs valeurs dans le m\u234\'eame nombre binaire. Une forme de l'instruction MOV sur 80x86 (voir annexe D) utilise l'encodage binaire 10110 }{\rtlch \ltrch\lang3084\i\loch
rrr dddd dddd }{\rtlch \ltrch\lang3084\loch
pour embo\u238\'eeter trois objets dans 16 bits : un code d'op\u233\'e9ration de cinq bits (10110), un registre dans un champ de trois bits (rrr) et une valeur imm\u233\'e9diate de huit bits (dddd dddd). Par convention, on assignera une valeur num\u233\'e9rique \u224\'e0 chaque position de bit. Nous allons num\u233\'e9roter chaque bit comme suit : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab 1) Le bit le plus \u224\'e0 la droite du nombre binaire est la position de bit z\u233\'e9ro. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab 2) Chaque bit \u224\'e0 gauche est donn\u233\'e9 par la prochaine et successive position de bit. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une valeur binaire de huit bits utilise les bits z\u233\'e9ro \u224\'e0 sept : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \tab \tab x}{\rtlch \ltrch\sub\lang3084\loch
7  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
6  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
5  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
4  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
3  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
2  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
1  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une valeur binaire de seize bits utilise les positions de z\u233\'e9ro \u224\'e0 quinze : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \tab \tab x}{\rtlch \ltrch\sub\lang3084\loch
15  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
14  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
13 }{\loch
 }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
12  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
11  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
10  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
9  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
8  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
7  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
6  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
5  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
4  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
3  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
2  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
1  }{\rtlch \ltrch\lang3084\loch
x}{\rtlch \ltrch\sub\lang3084\loch
0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le bit z\u233\'e9ro est normalement r\u233\'e9f\u233\'e9r\u233\'e9 comme le }{\rtlch \ltrch\lang3084\i\loch
bit de poids faible }{\rtlch \ltrch\lang3084\loch
ou}{\rtlch \ltrch\lang3084\i\loch
 bit le moins significatif }{\rtlch \ltrch\lang3084\loch
(low order bit ou L.O. en anglais). Alors que le bit le plus \u224\'e0 gauche est nomm\u233\'e9 le }{\rtlch \ltrch\lang3084\i\loch
bit de poids fort}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\lang3084\i\loch
bit le plus significatif}{\rtlch \ltrch\lang3084\loch
 (high order bit ou H.O. en anglais). L'on se r\u233\'e9f\u233\'e9rera aux bits interm\u233\'e9diaires avec leur nombre de position respectif. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02}{\*\bkmkend p1_02}\rtlch \ltrch\fs23\b\loch
1.2\tab Organisation des }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En math\u233\'e9matiques pures, une valeur est form\u233\'e9e par un nombre arbitraire de bits. Cependant, les ordinateurs travaillent avec un certain nombre sp\u233\'e9cifique (et fini) de bits. Des groupes quelconques sont des bits isol\u233\'e9s, des bits group\u233\'e9s par quatre (nomm\u233\'e9s }{\rtlch \ltrch\lang3084\i\loch
quartets }{\rtlch \ltrch\lang3084\loch
ou }{\rtlch \ltrch\lang3084\i\loch
quarters}{\rtlch \ltrch\lang3084\loch
 en anglais), par huit (nomm\u233\'e9s }{\rtlch \ltrch\lang3084\i\loch
octets }{\rtlch\ai0 \ltrch\lang3084\i0\loch
ou }{\rtlch\ai \ltrch\lang3084\i\loch
bytes }{\rtlch\ai0 \ltrch\lang3084\i0\loch
en anglais}{\rtlch \ltrch\lang3084\loch
), par seize (qu'on nomme }{\rtlch \ltrch\lang3084\i\loch
mots}{\rtlch\ai0 \ltrch\lang3084\i0\loch
, ou }{\rtlch\ai \ltrch\lang3084\i\loch
words}{\rtlch\ai0 \ltrch\lang3084\i0\loch
 en anglais}{\rtlch \ltrch\lang3084\loch
), et ainsi de suite. Les tailles ne sont pas arbitraires et ces valeurs particuli\u232\'e8res ont toutes une raison d'\u234\'eatre. Cette section d\u233\'e9crira les groupes de bits d'usage le plus commun dans les puces Intel 80x86. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02_01}{\*\bkmkend p1_02_01}\rtlch \ltrch\fs23\b\loch
1.2.1\tab Bits}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
La plus petite "unit\u233\'e9" de donn\u233\'e9es dans un ordinateur binaire est le simple }{\rtlch \ltrch\i\loch
bit}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
"bit" est la contraction anglaise de }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
binary digit }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
(nombre binaire), ndt. }
}}
}{\loch
. Puisqu'une telle unit\u233\'e9 est capable de repr\u233\'e9senter seulement deux valeurs diff\u233\'e9rentes (typiquement 0 et 1) vous aurez l'impression qu'il y a un tr\u232\'e8s petit nombre d'objets qu'on peut repr\u233\'e9senter avec un simple bit. C'est faux ! Il y a une infinit\u233\'e9 de nombres qu'on peut repr\u233\'e9senter avec }{\rtlch \ltrch\lang3084\loch
deux \u233\'e9tats oppos\u233\'e9s}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
En effet, avec un seul bit, vous pouvez repr\u233\'e9senter toute paire de deux objets diff\u233\'e9rents. Des exemples comprennent 0 et 1, Vrai et Faux, }{\rtlch \ltrch\lang3084\loch
A}{\loch
llum\u233\'e9 ou }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
teint, }{\rtlch \ltrch\lang3084\loch
M}{\loch
\u226\'e2le ou }{\rtlch \ltrch\lang3084\loch
F}{\loch
emelle, }{\rtlch \ltrch\lang3084\loch
Bon}{\loch
 ou }{\rtlch \ltrch\lang3084\loch
M}{\loch
auvais, }{\rtlch \ltrch\lang3084\loch
etc}{\loch
. }{\rtlch \ltrch\lang3084\loch
Cependant, on n\u8217\'92est pas limit\u233\'e9 \u224\'e0 repr\u233\'e9senter seulement deux \u233\'e9tats oppos\u233\'e9s comme }{\loch
des types de donn\u233\'e9es binaires (c'est-\u224\'e0-dire, ces objets qui prennent seulement deux valeurs distinctes). Vous pourriez utiliser un bit pour repr\u233\'e9senter les nombres 723 et 1245. Ou bien 6254 et 5. }{\rtlch \ltrch\lang3084\loch
Ou m\u234\'eame les }{\loch
couleurs rouge et bleu. Ou }{\rtlch \ltrch\lang3084\loch
encore }{\loch
deux objets }{\rtlch \ltrch\lang3084\loch
sans }{\loch
relation, par exemple, }{\rtlch \ltrch\lang3084\loch
le}{\loch
 rouge et le nombre 3256. Bref, vous pouvez repr\u233\'e9senter }{\rtlch \ltrch\lang3084\loch
n\u8217\'92importe quelle sorte de }{\loch
couple de valeurs avec un bit. Par contre, }{\rtlch \ltrch\lang3084\loch
on peut repr\u233\'e9senter au plus deux valeurs}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Aussi}{\loch
, diff\u233\'e9rents bits peuvent repr\u233\'e9senter diff\u233\'e9rentes choses. Par exemple, un bit pourrait \u234\'eatre utilis\u233\'e9 pour repr\u233\'e9senter les valeurs 0 et 1, alors qu'un bit adjacent }{\rtlch \ltrch\lang3084\loch
pourrait parfaitement }{\loch
repr\u233\'e9senter les valeurs Vrai et Faux. }{\rtlch \ltrch\lang3084\loch
Que peut-on dire }{\loch
en regardant simplement les bits ? La r\u233\'e9ponse, assur\u233\'e9ment, est : \u171\'abrien\u187\'bb. Mais ceci illustre toute l'id\u233\'e9e qui se trouve derri\u232\'e8re les structures de donn\u233\'e9es des ordinateurs : }{\rtlch \ltrch\i\loch
les donn\u233\'e9es sont ce que vous d\u233\'e9finissez. }{\loch
Si vous vous servez d'un bit pour repr\u233\'e9senter une valeur bool\u233\'e9enne (Vrai ou Faux), alors ce bit repr\u233\'e9sentera cette valeur. }{\rtlch \ltrch\lang3084\loch
Et afin que ce bit maintienne une }{\loch
signification v\u233\'e9ritable, vous devrez \u234\'eatre coh\u233\'e9rent. Cela \u233\'e9tant, si vous utilisez un bit pour repr\u233\'e9senter Vrai ou Faux, }{\rtlch \ltrch\lang3084\loch
il va de soi que vous ne devriez pas utiliser ce }{\loch
m\u234\'eame bit pour indiquer une relation rouge/bleu. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Puisque}{\loch
 la plupart des objets que vous modelez demandent plus de deux valeurs pour \u234\'eatre d\u233\'e9crits, il en d\u233\'e9coule que les bits ne sont pas exactement les types de donn\u233\'e9es les plus populaires }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on peut utiliser}{\loch
. Cependant, ces derniers joueront tout de m\u234\'eame un r\u244\'f4le important dans vos programmes, }{\rtlch \ltrch\lang3084\loch
car tous les autres objets sont constitu\u233\'e9s par des groupes de bits}{\loch
. Bien s\u251\'fbr, il y a plusieurs types de donn\u233\'e9es qui demandent deux valeurs distinctes, ce qui fait d\u233\'e9duire que les bits sont \u233\'e9galement importants en eux-m\u234\'eames. Mais, vous }{\rtlch \ltrch\lang3084\loch
allez bient\u244\'f4t d\u233\'e9couvrir que }{\loch
les bits individuels sont difficiles \u224\'e0 manipuler, par cons\u233\'e9quent, on utilise souvent d'autres types de donn\u233\'e9es pour repr\u233\'e9senter des valeurs bool\u233\'e9ennes. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02_02}{\*\bkmkend p1_02_02}\rtlch \ltrch\fs23\b\loch
1.2.2\tab Quartets}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un }{\rtlch \ltrch\i\loch
quartet}{\loch
 ou }{\rtlch \ltrch\i\loch
nibble}{\loch
 en anglais, est un groupe de quatre bits. Il ne constitue pas une tr\u232\'e8s importante structure de donn\u233\'e9es, sauf pour deux types d'objets : nombres de type BCD (sigle du terme anglais }{\rtlch \ltrch\i\loch
binary coded decimal}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Binaire cod\u233\'e9 d\u233\'e9cimal, en fran\u231\'e7ais, ntd. }
}}
}{\loch
), et nombres hexad\u233\'e9cimaux. Quatre bits sont requis pour repr\u233\'e9senter ces nombres. Avec un quartet, on peut repr\u233\'e9senter jusqu'\u224\'e0 seize valeurs diff\u233\'e9rentes. Dans le cas des nombres hexad\u233\'e9cimaux, les valeurs 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E et F sont repr\u233\'e9sent\u233\'e9es par quatre bits (voir "Le syst\u232\'e8me de num\u233\'e9ration hexad\u233\'e9cimal au paragraphe 1.3). Alors que BCD utilise dix diff\u233\'e9rents chiffres (0, 1, 2, 3, 4, 5, 6, 7, 8, 9) et demande \u233\'e9galement quatre bits. En fait, tout groupe de seize valeurs diff\u233\'e9rentes peut \u234\'eatre repr\u233\'e9sent\u233\'e9 par un quartet, mais le syst\u232\'e8me hexad\u233\'e9cimal et le syst\u232\'e8me BCD sont les outils primaires qu'on repr\u233\'e9sente avec une telle structure. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02_03}{\*\bkmkend p1_02_03}\rtlch \ltrch\fs23\b\loch
1.2.3\tab Octets}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Sans conteste, la plus importante structure de donn\u233\'e9es utilis\u233\'e9e dans les microprocesseurs 80x86 est }{\rtlch \ltrch\lang3084\i\loch
l'octet}{\rtlch \ltrch\lang3084\loch
 (ou }{\rtlch \ltrch\lang3084\i\loch
byte}{\rtlch \ltrch\lang3084\loch
 en anglais). Un octet contient huit bits et c\u8217\'92est la plus petite donn\u233\'e9e adressable dans un microprocesseur 80x86. La m\u233\'e9moire principale et les emplacements d'entr\u233\'e9es/sorties sont tous constitu\u233\'e9es par des adresses de huit bits. Ceci veut dire que l'objet le plus petit pouvant \u234\'eatre acc\u233\'e9d\u233\'e9 individuellement par un programme tournant sur 80x86 est une valeur d'octet. Acc\u233\'e9der \u224\'e0 toute unit\u233\'e9 plus petite demande la lecture de l'octet contenant la donn\u233\'e9e et le masquage dans celui-ci des bits superflus. Les bits dans un octet sont normalement d\u233\'e9nombr\u233\'e9s de z\u233\'e9ro \u224\'e0 sept, via la convention illustr\u233\'e9e dans la figure 1.1.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le bit 0 est dit }{\rtlch \ltrch\lang3084\i\loch
le bit de poids le plus faible}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\lang3084\i\loch
le bit faible}{\rtlch \ltrch\lang3084\loch
, alors que le bit 7 est indiqu\u233\'e9 comme \u233\'e9tant }{\rtlch \ltrch\lang3084\i\loch
le bit de poids le plus fort}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\lang3084\i\loch
le bit fort}{\rtlch \ltrch\lang3084\loch
 de l'octet. L'on se r\u233\'e9f\u232\'e8re \u224\'e0 tous les autres bits par leur num\u233\'e9ro. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1125\shpbxcolumn\shpbxignore\shpleft0\shpright6855{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw457\pich75\picwgoal6855\pichgoal1125\pngblip
89504e470d0a1a0a0000000d49484452000001c90000004b08030000002cee8c2400000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000021a49444154789ced98c191c320100409
8664140cc928984d866074e8be0c553636276eaabbfcdac22b7b5ac28b53bdc08284491330e902265dc0a40b987401932e60d2054cba80491730e902265dc0a4
0b987401932eec6bb2a41b553ff5e2a2ba64558d9c458f5616971bb4685794e5e7d8d7648d08212d9faa9a4a84fa2632ef9a5ae750e57abcd8e23a735577d483
ec6bb271f6c1467b6c843321e6a6ea27b5ca37d466a67f28f3215b9472bf76626b93e2c309b9d76dec90fb650ebd07d692f515fbd571c916ad58e45efc183b9b
3c45dce5c8a997598faa36bb38b4862b8abc21aea2d2c0e4c7e8d1e6ba8ec108d237a80393ad8752a9dd60f253aafa6c675281d750d5f89d7e7b0f7af5dd5bce
30fc4e7e4aa87bfe1e30fb63411b45d5ee5adb9eab6757b93ae5508313b3eba7489383b3603b0aeae9556a08391f157d7e1d6cd09c276111987401932e60d205
4cba80491730e902265dc0a40b9874613f93e99ff2786efb9954359d942e8f627dabfc5e8f61fd0fd9d1e4d97327a5cbaf2f3e873d44797cc1416b4c76607232
374c627211989ccc0d93df31f9746c98c4e4323039991b2631b9084c4ee686494c2e029393b96112938bc0e4646e98c4e4223039991b2631b9084c4ee686494c
2e622467507e7d3126ff98f43f793a364c7e8ba763dbd024cc81491730e902265dc0a40b987401932e60d2054cbaf0fc7f13f01d30e902265dc0a40b98740193
2e60d2054cba8049177e002bf9e8c188b82e3a0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 1.1 D\u233\'e9nombrement dans un octet}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Notez qu'un octet contient aussi exactement deux quartets (voir figure 1.2).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1095\shpbxcolumn\shpbxignore\shpleft0\shpright6900{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw460\pich73\picwgoal6900\pichgoal1095\pngblip
89504e470d0a1a0a0000000d49484452000001cc000000490803000000870fe66b00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000038049444154789ced9c518ee3200c867d
182ec361384a5e7c943e7098f8027b8895ba9090b6539ccecc828a8bfeefa1482e835d3e859068040998061a5d00e807644e04644e04644e04644e04644e0464
4e04644e04644e04644e04644e04644e8449998132cfd1e829ac7ae7a08db2ba3accce2d4a577614a2368632c496520d0fc7a4cc0b335335e96e5182e91704e6
8b368a32e5174a03739d8f383aaf0ce1556b8bbb68858cc7a4ccc452cd2da752156bab2267232a17ec9afe5ee91f43565f879d2ed307099afae11895b952a52d
cd9fb61246f2fa5ae8583311bd53d75351aeccc8a2ca4c4145bd014c169557b22a14bc235f8bb8f88bbae8b1574db057c690bca0aa61c8ec80a227505cbdbeba
694b6492a36f53d431c2c9620d99edc47a959585746bac8679db103fab38e99cc63ed9d0e09ed90e53fd0c12f3965379d820d696d935c658afca79dbaaf889e4
d2fe592b04bbd976582bebfc19f1643fab9860af8da13fd79e0c2178ce046f003227023227023227023227023227023227023227023227023227c2944cfa5046
cfdb8199423274adc993d523ac44bb8547cfdb8199423274fd5b93e7b043f8faa7863a8547cfdb8199423290d98699423290d98699423290d9869942321f2a73
f4b4ddb0538940662b762a11c86cc54e250299add8a94420b3153b950864b662a71281cc56ec542290d98a9d4a04325bb1538940662b762a11c86cc54e250299
add8a94420b3153b950864b662a712c9ff03a4ebe91186cc37439fc9e869bb61a71281cc56ec54029a81cc8980cc8980cc89302ef3e428b5c271a44f6997fffc
312f9374caf116acd5e6b682ca0e9195cda2db02e9c353e97cfc518efc2a8b9c25e9926300d66afb2233375c4f341f1dbac8549274c931006bb53dcadc0f08ad
65d2165cf2551388bc1caddfafa7b3339eaa2c7296a44b8e015896b97f32b9af1d420a1c4b20b97c405e69fd66c0fde029fe41a696a44b8e01582bca3dbc5539
16db279929cec744fbad57693d950be7db530a2b99f224b3438e01d893993f5f5e99fb6bbfdbe6846eada7f242b03eac56cd226749bae41880659927f7ccfcc5
d944bb9ffd9e6fef991d720cc05a617799fb5dab6c34ef174299d4e37eb67d5f5a9f3ffd6f96d93cec2d49e71c03302c931e1e01ef57ceadc33ed1dbf7a5f565
75fcc90668ef5744d2f15cd933c7004c1675e7f51ba00487af6d3e68bf77921e39de827199e037a8076880cf043227e21fc0c923027859bc650000000049454e
44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 1.2 Les deux quartets dans un octet}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les bits de la plage 0\u8230\'853 comprennent le }{\rtlch \ltrch\lang3084\i\loch
quartet de poids faible}{\rtlch \ltrch\lang3084\loch
, alors que les bits de la plage 4\u8230\'857 constituent le }{\rtlch \ltrch\lang3084\i\loch
quartet de poids fort}{\rtlch \ltrch\lang3084\loch
. Puisqu\u8217\'92un octet contient exactement deux quartets, le repr\u233\'e9senter requiert deux chiffres hexad\u233\'e9cimaux. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Puisqu'un octet contient huit bits, il peut repr\u233\'e9senter 2}{\rtlch \ltrch\super\lang3084\loch
8}{\rtlch \ltrch\lang3084\loch
, ou 256, valeurs diff\u233\'e9rentes. G\u233\'e9n\u233\'e9ralement, l'on utilise les octets pour repr\u233\'e9senter des valeurs num\u233\'e9riques dans la plage 0\u8230\'85255,  des valeurs non sign\u233\'e9es dans la plage -128\u8230\'85+127 (voir "Nombres sign\u233\'e9s et non sign\u233\'e9s", au paragraphe 1.7), des codes de caract\u232\'e8res ASCII/IBM et autres types de donn\u233\'e9es sp\u233\'e9ciaux qui demandent au plus 256 valeurs diff\u233\'e9rentes. Certains ensembles ont moins de 256 \u233\'e9l\u233\'e9ments, donc, huit bits sont plus que suffisants. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La famille 80x86 est faite de machines adressables par octets (voir "Disposition de la m\u233\'e9moire et acc\u232\'e8s" au d\u233\'e9but du chapitre 4), donc il s'av\u232\'e8re plus efficace de manipuler un octet tout entier qu'un bit isol\u233\'e9 ou un quartet. Pour cette raison, beaucoup de programmeurs utilisent un octet complet pour repr\u233\'e9senter des types de donn\u233\'e9es qui demandent non plus de 256 valeurs, m\u234\'eame si moins de huit bits pourraient suffire. Par exemple, on repr\u233\'e9sente souvent les valeurs Vrai ou Faux par 00000001}{\rtlch \ltrch\sub\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 et 00000000}{\rtlch \ltrch\sub\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
 (respectivement).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'application la plus importante des octets est probablement le stockage des codes de caract\u232\'e8res (voir "Le jeu de caract\u232\'e8res ASCII", au paragraphe 1.11). Il y a 128 codes d\u233\'e9finis dans ce jeu. IBM utilise les 128 possibles valeurs restantes pour un jeu \u233\'e9tendu, qui comprend des caract\u232\'e8res europ\u233\'e9ens, des symboles graphiques, des lettres grecques et des symboles math\u233\'e9matiques. Voir l'appendice A pour l'assignation des codes aux caract\u232\'e8res}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Au moment de la traduction de ce chapitre, l'original anglais de cet appendix }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
n'\u233\'e9tait pas encore disponible}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
. }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
R\u233\'e9f\u233\'e9rez-vou au projet original https://www.plantation-productions.com/Webster/ }
}}
}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02_04}{\*\bkmkend p1_02_04}\rtlch \ltrch\fs23\b\loch
1.2.4\tab Mots}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un }{\rtlch \ltrch\lang3084\i\loch
mot}{\rtlch \ltrch\lang3084\loch
 (}{\rtlch \ltrch\lang3084\i\loch
word}{\rtlch \ltrch\lang3084\loch
, en anglais) est un groupe de seize bits. On d\u233\'e9nombre ces bits de z\u233\'e9ro \u224\'e0 quinze. Ce d\u233\'e9nombrement appara\u238\'eet \u224\'e0 la figure 1.3. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Figure 1.3 Le nombre de bits dans un mot. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1095\shpbxcolumn\shpbxignore\shpleft0\shpright6990{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw466\pich73\picwgoal6990\pichgoal1095\pngblip
89504e470d0a1a0a0000000d49484452000001d2000000490803000000be68573000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000033c49444154789ced9a517284201044b9
1e8781c370180ec31c86884a129976abb474d79deaf7918f0ec119de826c555c25b610f7e90ac8c550a939a8d41c546a0e2a3507959a834acd41a5e6a0527350
a939a8d41c546a0e2a3507959a834acd41a5e6a0527350a939a8d41c546a0e2a35c749a53e4d3f92732ea9b4e56874f63eebb4f8ed147d0e0fd2e2bde8524a18
e65d892eeab095ec50cb7128e36f38cac7f26654836b7d63872fa6684f84f111ce295d16c0a55244a5d3940e8c16578a2b3acde2839e6358e1f57939eb6ad5bc
fd4f8244ed544ac90e2cbccf05c563871db4f03b85a80e7b7dd05d7682ea38c429a53e2c4b5c505afda074cda539195349db4dbd8eed536dd2e2d4236b5b845a
03589d6964f1a8f80cd6b74d8ddca1cf4a9d3fb4e08943833d4de0d8521d7662aa091c2e8738a5b4d465876d8fbc259d966ce860cdab440fd2a9bba8d2bf5ffe
4b9b3cbd662d8dc05d8a12e119863425a0b9ea0e3bbe401f82ea98c76b4b4387bfc525e4ff1827dfa5b3d220c329b1881655d4527d8901a4d30924201d1a76eb
675daf433bd8d0db710ae11196d1b2a7e01db0aa3b5ca608d8c7d86067e870e5894a1bdbe7b73482a2fae810749a865db3af14efd2e9780d01689a9e25684342
cfade2800f3cb0c293a19d4b4c404ec70efb2c0f542a05281507ee94bba39ba7acc756a814bf4b1be8846d7f815e6d70c7b4c2c052ea9a1b65ee501f177030e8
f05f818a8fbd4bfb121774f08aa88366bdf1cab68b25f5a59431ad50e98b1b2fd094bc649017d8ef7c2dd54bac3b5c464fc731b84cab06d778ec7005df78fd87
6ebc7d87f9e1f16ee77be972e519af1acbfb71dcd32f94ee7c2ff51e6eddec02c8c187629d04bf780f6c31fc0579f79b303ebb3ff6bd943c182a3507959a834a
cd41a5e6a0527350a939a8d41c546a0e2a3507959a834acd41a5e638aed49137f21ea53b9eaf88f103ef8bbfb4ecd79c519a34addb0be21ba7fedab2a9944aa9
f482984aa9f4484ca5544aa517c4774e4da5544aa50f2f9b4aa9944a9f5e36955229953ebd6c2aa5522a7d7ad9544aa554faf4b2a9944aa9f4e9655329959efb
77325cd215f19d36beb3ec372925efe3db95eecc7d497c237796fd16a5e4e150a939a8d41c546a0e2a3587fc008996ab956a0ac6140000000049454e44ae4260
82}}}}}
}{\rtlch \ltrch\lang3084\loch
C}{\rtlch \ltrch\lang3084\loch
omme l'octet, le bit 0 est le bit de poids le plus faible et le bit 15 est le bit de poids le plus fort. Quand on fait r\u233\'e9f\u233\'e9rence aux autres bits dans le mot, on les r\u233\'e9f\u233\'e9rence par le num\u233\'e9ro correspondant \u224\'e0 leur position. Notez qu'un mot contient exactement deux octets. Par cons\u233\'e9quent, les bits 0..7 forment l}{\rtlch \ltrch\lang3084\i\loch
'octet faible}{\rtlch \ltrch\lang3084\loch
, alors que les octets 8\u8230\'8515 constituent l'}{\rtlch \ltrch\lang3084\i\loch
octet fort}{\rtlch \ltrch\lang3084\loch
 du mot (voir figure 1.4).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1320\shpbxcolumn\shpbxignore\shpleft0\shpright6900{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw460\pich88\picwgoal6900\pichgoal1320\pngblip
89504e470d0a1a0a0000000d49484452000001cc0000005808030000004f85375500000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004fe49444154789ced9deb8ddc300c84d5
9e8a918b51312a466a204d048af5bab5c5f1254e96d686e0203860e77c32c9cf7a383fb826abc4c8ac0e40f53e294c41529882a4300549610a92c21424852948
0a539014a620294c41529882a4300549610a92c214248529480a539014a620294c41529882a43005e92f605abffff0c6184fdce2a3ab83b581bad19e87186358
e0466b130d25ba69dcaecd6cd42c211b90ef3645f1ba1af973745524bf1ede9ce03743943b42fb86eec36cb91b1f63226e4e73b5aa9f4c8c26523724ebe81853
71fbfd42a0a19271c79fb8b4519a29c66068cd6d88c025090ea1925fc441121ce1416ac12414c71ddd86695d2b6e446eb613cceea7426376933f4fe47eed18ea
e446436e994bfe393b5098fdca6851f08196b68c8ca8a18724d7a715dc70ca6fb81eac5424c1a1cd670fd6933bba0d33e636abce0b5c73f7624dc1773fa7cd02
774f6c23eeeb9707b760a3e52aae07d4fc9636b86401421e4c9d4c131cb2119238e777bc9ef29912fc8acd23f2b7f4177f5e61ba342d0a0d7122f1b4c0e3e680
bb2f3809b853aea63fe0b404fbf296d12eb84f1fb8620504de590378d204db080e9398f31b9a12ecfa309845e75b177703f18cab9da3ae9f66ca354c3c33cb29
c502407b65135a2611e112b0c3cb1ba8edcee6e298e210cd39c131ca67c14c11c04c069c172faf2e8402bd36439878cf2cf268cff4780f43d3a4c4058a48432e
8a3541ba42c08b418287f88856ec99a3b8112db3299175a59f66d33981e6da18e3ec6608f39bd32c026453007e44c9d623272d2e4db05dbd2fbee09c4cf2ebf6
9c60173ecddae74fb36356d9e9cee6e23db31d6ae6d344db07e779fc0dcc8bf74c6be1740dc6011f3c0e6d0cbcbfde9856f87df7eac5f662a55ef19ea9fa5829
4c41529882a4300549610a92c214248529480a539014a620294c41529882a4300549610ad22d9846f5a498615e007e870defc767ffa7617faf9b307f5295bbbe
c1661cdae41f546fb219875698d8e6abb8c244b6c2a4b6c244365fc51526b21526195a61429bb1e28c432b4c6833569c716885096dc68a330ead30a1cd5871c6
a11526b4192bce38b4c2843663c519875698d066ac38e3d00a13da8c15671c5a61429bb1e28c432b4c6833569c716885096dc68a330ead30a1cd5871c6a11526
b4192bce3834334c838bf50e9b13a6c1357c87fd3fc3543d27852948cc30559f2d8529480a53901e84d95b9bbe0c6fa64fc66c5fcd7e126e46b740537b9ee08c
3b34fda9dbdbeb8aa5612f84696c0887ce77dea4945e9fffb58fdcfb44dadfc663fba5fdf94b8786b54bc35e07b3a53d7dde7f948e82d1942e75a974da425d21
9fd509666b897668f2d69bc155dfb9b561af83d93ab16ee7a9e87ced70b7b9dadc3398845ba43daa73fbdb16cfab29636fcd5a3b63eeeed2b09f8479de5e4697
d2f1b9ee9965c7d99ff1fd5ff945695078d191f9419d60f6780f6914854a39f60699cbc27e12e6567a42be666683f97560687b666990e852afca74b858a4dfcc
cc3dabda42d3c4d2177e69d89fb767968edadbeb115faf3fd9334be76467e2e2b017c00ca33f7b3fcd86d1dcb4ccccbaceb6aad4cd07f6937d56754549d9b713
6b3bcd96a72d7cfdb67e7542fbe288a5612f8039b6c9d4df33fbe7f69e998751df5282c1fd641f55ff9fd23141c77be6688edbf7cc6e2c0d7bfd6191083555fe
7cc1ded30febf360e2ef9af878e1ef6b783886d501a8de278529480a539014a620294c41529882a4300549610ad22f036bde6dd45c9ad90000000049454e44ae
426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 1.4 Les deux octets dans un mot }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Naturellement, un mot peut \u234\'eatre successivement divis\u233\'e9 en quatre nibbes, comme montr\u233\'e9 \u224\'e0 la figure 1.5. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1455\shpbxcolumn\shpbxignore\shpleft0\shpright6900{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw460\pich97\picwgoal6900\pichgoal1455\pngblip
89504e470d0a1a0a0000000d49484452000001cc0000006108030000006cf0613000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000065249444154789ced9d0d96a42a0c85d9
1e8b81c5b01816031b789b98e3f0272a5c5aa9b2ab9cbcdc33a76b2aad21e453d09613c5c22223f1ed0058f789611212c324248649480c9390182621314c4262
9884c4300989611212c324248649480c93905e8029e30fa3b4769d75f1adbf64d65a7be44219df59ebc7c16ab5b62816ad0db07aa3956f8d2e4421fbee5a25bb
4da31537d8f5af44a1810f1f8203e6b67f5906766452f33055daa54d56b62e5a00b3b18b97bd351c0bceb4d6fa71b0c6edcce1d8c90a3607721e72e861ca7ac4
36c406d288e0243bca5738aabd863e906b855c8430504726350d533a01f62b56670530bb66fb6cb58d9be2a27c1cad31b7285ff1770a9b61cafadc46a700dc20
2d6dff8a5bbc8381e6a67f456a811d99d40bc36cdcc50bd30c43f97cedfc95ef0d89752ba781b57151c9805007d4d4e0cc441e3c1cdf041ef6fafe15393c487a
0408b9181d7e737a15661cf74c6b0d271086a98503d6704878609d8019875960f602cc99eda153bc1b0422760f9dc67dffb294c0c3329a8e9f07b3df57e4140c
ce4c403e2417239e8019ae74d0c01726310bc0a159375218e4a033a3fe15a1e3243086d3e0e360fa78c8c9c61a2e39b5d0fdc67d43e98b690fe731ccd19c1935
984a0783722b0961a6ee7566d4bfb4f5c0b7c263efe3e64c27db710893c8e4653ba9a40ba02ef831cce1d5ac8fd7819de275649f1a785b61e0d56c1f711363bb
313ad2c0383d72117b813a32a9578759ab9ae3ee0798f1aeaddf58845b397df10268749fe9db288ad9a03b3c7c6a871b66607572e2b4720ade50a60e5e74f1ad
fb4cd663c5300989611212c324248649480c9390182621314c42629884c43009896112d2144cc1fa987e1fe600f055eb0f66d8dcaf99a7c3fbada8e77c9c6912
e69f5eb1e1abd6b179f9af97b8c93c13c787a3fe61638609cd375063981f4d0bc364985f8e7ab8f12b2c19e677a366980c9361be131ec3fc685a1826c3fc72d4
0c936132cc77c263981f4d0bc364985f8e9a61324c86f94e780cf3a36961980cf3cb517f13e6202fc08cad63f3e761de61feb761b23e24864948bf0f93f56c31
4c42629884f40ecc5cc647c47f62efece0d39bc5ba51adc00bce45e3f61870f63e2a3978b189ad0d58224395aa2e9753257ce31686aea2d75181c7d7f416cc54
3929c334b1b086c8e53544629736715aa4da3983f272179c47f726bb4d4ea397d63bae5277de84abf1afcead92367db7aa64594ba9857261e3eb3063959bbd5b
107a74abdc4ff58d5ed05b3017b5461d0e7267cacff0d5ba5a4647acd10ecacb9d39174b759bdb58a07758a5eeb4096d6bd6b3739b2a038954c3c7649aa1355d
36bfec571edda2d06d2d0f79df4cf71e4cbf0e2662d97ee6ceac9ed5e2535246e5e5ce9c97b1aa7e880579c755ea4e9b8823e2361e963287f143e7ff4499b560
de044c6b776ef7deb7d04dadebf51498b1441d82198795ec399c38a5f4142e2f77ea1cc004de7195baf3269c3a64bd243777a0b4a157aa133003b40e6613baae
2e1f0373d10ec25c377169c6d1c3f272e7ce51465aefa32a75579ab05bd61381583d4decca0286395949dd96cc3df3eb4c07531e428f6ef5b3e6cc20b99f337d
9933c3154099c4ac8f89199597bbe07c37f1f832f1b4de8755eaae3421c43adeda34e9e73933ce97792809d7cbce6d9b5ff52babdb12ba3d861edd8e6b02bea8
b7619633b3b99aad45d2cb75fda0bcdc05e7d17d7b35db7a1f55a9bb1e7f741e936eb5cad744c694b3ddd9a5443e05d357b72574730c3dba5d9e746bc27a9818
2621314c42629884c4300989611212c324248649480c9390182621bd08b37d28e4cdfea514dd1284e683a68e9df3cd1b2507cb0f6ecdc83d30d34bbd7c0d5dc8
f25bffbf85e9e303d6fdbbce447994e91f0f33ffe5bf9e9abbf518eb420cb3fe09beaec720a7432a734676ab2be05a92f218ee95a704a711ccee268e5fe5f655
d7f5246521465d50b2adc7a0a6432a656b036b49fa5530774630b19bde1ec52f88ed1a79b2a9ed21ed6e3d063509f0650f13ac25699692dc1ac1ec6ee333333e
d9dd60360b4ae0bb7eff7d9d9d99602d49b394e4d60866771bce99cb613d89975bfcf055d034743267a2b524c7a524f74630bbdb16497cffba590e900bccf2ec
be5e00d547f8e494061dbf65a4dc9aec06dc76f941b3fae0fd086ef1c27a84182621314c42629884c4300989611212c324248649480c9390182621314c426298
84f4171ab860a0c3d2387f0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 1.5 Les quartets dans un mot. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le quartet 0 est le quartet de poids le plus faible est le quartet 3 est le quartet fort du mot. Les deux autres quartets sont le "quartet un" et le "quartet deux". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Avec 16 bits, vous pouvez repr\u233\'e9senter 2}{\rtlch \ltrch\super\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
 (65 536) valeurs diff\u233\'e9rentes. Celles-ci peuvent \u234\'eatre les valeurs de la plage 0\u8230\'8565535 (ou, comme c'est souvent le cas, -32 768\u8230\'85+32 767), ou tout autre type de donn\u233\'e9es ne d\u233\'e9passant les 65 536 valeurs. Les trois utilisations majeures pour les mots sont les valeurs enti\u232\'e8res, les offsets et les segments (voir encore "Disposition de la m\u233\'e9moire et acc\u232\'e8s", au d\u233\'e9but du chapitre 4, pour une description des segments et des offsets). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les mots peuvent repr\u233\'e9senter des valeurs enti\u232\'e8res de la plage 0\u8230\'8565 536 ou -32 768\u8230\'85+32 767. Les valeurs num\u233\'e9riques non sign\u233\'e9es sont repr\u233\'e9sent\u233\'e9es par la valeur binaire correspondant au nombre des bits dans le mot. Les valeurs sign\u233\'e9es utilisent la forme \u224\'e0 deux compl\u233\'e9ments (voir encore "Nombres sign\u233\'e9es et non sign\u233\'e9s", au paragraphe 1.7). Les valeurs de segment, qui ont toujours 16 bits de long, constituent l'}{\rtlch \ltrch\lang3084\i\loch
adresse de paragraphe}{\rtlch \ltrch\lang3084\loch
 des segments de code, de donn\u233\'e9es, extra-segment ou segment de pile dans la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_02_05}{\*\bkmkend p1_02_05}\rtlch \ltrch\fs23\b\loch
1.2.5\tab Doubles-}{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ots}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un double-mot est exactement ce que son nom implique, une paire de mots. Par cons\u233\'e9quent, une telle quantit\u233\'e9 est form\u233\'e9e de 32 bits, comme montr\u233\'e9 \u224\'e0 la figure 1.6.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 1.6 Le nombre des bits dans un double-mot}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom945\shpbxcolumn\shpbxignore\shpleft0\shpright6900{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw460\pich63\picwgoal6900\pichgoal945\pngblip
89504e470d0a1a0a0000000d49484452000001cc0000003f08030000005a7408b700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000001d549444154789ced976d7284201005b9
9e8781c370180f03874940d92455f9309219b2f5aafb8f96b50e6fe95124bc800a35fc770230039942205308640a814c21902904328540a610c8140299422053
08640a814c21eecb4c29d77edccca39c95534ad5baf4489b634ac5bc740b9c826dd93da57de2b6db32db6cd4dc8ed1fc916e0e5be5dcea9bf7c9481b1dbae4a0
46d372a54d709e688fdb327bc7b47bb6622e331f95cb59df9833addb92b2d976497f35d574ffbe9935b3378ecfcc9c1d3ef33faee8696bc8536faf4b8a71e0d9
ce9b9019439d1cec92a3c3ad17a08343667f7b65fbdae6afef853247233ac88ce3b97198f1f0e9c4a3b865bd1532eb1f06bb20be39b4af7d3c993dbbfdc7d558
760c59b566f62fcdeaf364eef93180f9ec9c69cbf618c4966cbd102ffb9a2d71ec33cd6586b60b6c6db2b701ac4b8fb47b8c1e4ba6fdbe78d53e139e17640a81
4c21902904328540a610c814029942205308640a312133c032fc65e607e1fdf4c3f9d7577f7579fac61b992cca59a7fef6c7c8fc39133291e99a1a99c8442632
91e99a1a99c844263291e99afa1f65c232902984bb4c7856902904328540a612c814029942205308640a814c21902904328540a610c814029942205308640a81
4c219029c42b99416fc6bef3b99f0000000049454e44ae426082}}}}}

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Naturellement, ce double-mot peut \u234\'eatre divis\u233\'e9 en en mot fort et en un mot faible, ou en quatre diff\u233\'e9rents octets, ou encore en seize diff\u233\'e9rents quartets (voir figure 1.7). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Les doubles-mots peuvent repr\u233\'e9senter tout genre de choses diff\u233\'e9rentes. Ils r\u233\'e9presentent d'abord les adresses segment\u233\'e9es. Un autre objet commun repr\u233\'e9sent\u233\'e9 par un double-mot est une valeur enti\u232\'e8re de 32 bits (qui permet des nombres non sign\u233\'e9s dans la plage 0\u8230\'854294967295 ou la plage sign\u233\'e9e -2147483648\u8230\'85+2147483647). Les valeurs \u224\'e0 virgule flottante de 32 bits s'arrangent aussi dans des doubles-mots. La plupart du temps, on utilise des doubles-mots pour stocker des adresses segment\u233\'e9es. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3255\shpbxcolumn\shpbxignore\shpleft0\shpright6900{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw460\pich217\picwgoal6900\pichgoal3255\pngblip
89504e470d0a1a0a0000000d49484452000001cc000000d908030000009a69f02800000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000009a349444154789ced9d8db5a32a148569
cf62a0188ab11869609a78cbc7e14f8d9a00823a67f65eebe63a09ff9f08dec9718b196223f17403a076024c46024c46024c46024c46024c46024c46024c4602
4c46024c462a81a99436f47b68de0ae38b564a99e66587f66aa9d4d4a1f079b2ad1e9acd09ad747de68256d8b13054936c3f9b2d435bb4b615b43f51427b658f
d32455d1aaf0719ca7b13a770198d1271fa6f630b52b7a2a6b4fa6427b7bae27e385d9b4950c3f752aebe3a4cbf364cab83e18d5a1686aaf115ad59ff21915b4
2ba9beb4a29c5298e23cb91aa868257a2c6b0ea63d0d75b309b4d5d4ee0cbc116668760f98324c9b1e032e76076da5db9d81b7c1343179873191896187c2ddcc
a4d677d85dc5f21be9ae3593369aa6d3ccf43b08aa61ea3433a7a1e53e6523d3703cec6e76bc65373bc9709fd91ea6b03781f63c19e595bbacf3d2e96594b2d3
92d974d376d77d26f47601262301262301262301262301262301262301262301262315c114d09dea0cf3bf28b11cae8f2fbcddbabcf5db7fa256877fdabcddba
bcf5db8009988009988009988009988009988009988009987f114ce84e012623f58509bd5b80c94880c9481d618a7505464ba9531423c5331a0a12dac763beec
ec5a9ab3ed810b743214486576e1048f75e12698bedb891c7d057fa418a17dc4c05b619a44cf4ba72eecc209b8c3f48152299084bed12f29468382a5354526cc
4a0bfa6efef856981f3d7047039d9ecad876bba082c7bb7013cc50cdb0fa6ca08bade74903632fba6ebebe15e6f0f16f3a92f4ae98e325e6f12ef484a9481b98
a936692cc071a2f52684248a10cbf656989f3db0d3721aed9968a4e7fc862e3c3433c749d33329e8610c0bcceecf1ea8d0f9ccd4d48549dbb918dbfd78179e59
332d471a9c8176870bcc6e61d91774ba66ce93bb9cd2067705f3d92edc01d3c4bda07d89bb4129e34b5c33fdbad3e15126971436e3f3fa5e247c34b82e0cf3b2
663edd853b60d281ddb3ca380f49ee1906a3f49fa8907a94ea751b205af78def41b8cf8c2d1c5c17a8edd4b7f9055d78d9d8415704988c04988c04988c04988c
04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c04988c54
0413a6d33bb9a8c596c55e31032b8109d3e943ed1f6a7041974ca74bb8c074fab8fc9667c92503cdc22ec2747aa78626c5738a56adcf9c2f984eefd5f6f27d23
4c984e7f29bc5969b7c084e9f4811afb2adfb566c274fa48baed427cc974ba840b4ca70fd4fac6f8aefb4ce8e5024c46024c46024c46024c46024c46024c4602
4c46024c462a83f9b46dcb3fa6ce303b9a81f574d5fa4b9b0d988009986f6c3660022660beb1d980099880f9c66603266002e61b9bdd192674a7009391fac284
5e2dc06424c06424c06424c064a44a9862f5fae9934ec6763245e65d092bfe569221675c777021769e2a18ce9a2a97772a028e5603db6d7cbed4599e2d984b6e
9dde7dcc95dca6acafe5ac244bd247b952047d6d7497ab606d84bd964c01e93571ff4b967ee3735e674536fffae9f91aa2fe28e4cac85128f71487fa5a0e4b9a
943dbf853b8ece956d2a20ff4bf7911a0625fc04aa8afb5fb2f41b9ff33a2bb26d2eb69b13dc5e04c941d44e1fff5a17a8f7ad24b18a98af7e44449899ab0a74
0ad24b537fae1a25f179d4617cceeb2ccbf6c5e9dd7e46e6bd141f3ef8275ad4d6f3ad24399b14c7581d894e15d0d44815285f34299a49cf75addfc1ec303ee7
7556643b9f99142e3f699a31c293af83795e929d962928555e8b4eb5b3715341a841ad3627cd67669bf139afb322dbd735d3fed076535c38ebce4b9adc8ae62f
8317626853376205cb36c5aec872884f81eab16636189ff33a2bb28943a7f7b445749b40e17a53b7aa7d29693471e0afc4b6bb6e5089a982313e84c3ae6ad3b4
49575174e7f139a9b32e9b88abf9c6e9dddd4751c3ddc928a5734baf5ad5be94b4dc048608faba6e50057497ea2ad054810e13ddde962cf78635309d8d7cdff1
d9d5d9a29013e966cff46957d25315dc52693f98a6d9b326da95f454053755da736642370b301909301909301909301909301909301909301909301909301909
3019093019093019093019093019093019093019093019093019093019093019093019093019093019a90e266ce1776a6e0b6f35aa3267e52a98b0853f54535b
f8d9c7a214853054e1802dfc71f98dcf12ba381519aad7f60cb6f03bb5b5859f57819c4519ca055bf8bd9a5fbeef82095bf82f85372db03b4cd8c21fa8bdf3f9
2d6b266ce18fd4d8167ebe6b370b5bf80375b831bee53e137aa70093910093910093910093910093910093910093910093916a1f8408dda9ce30cb0cee8a7cea
ca0cf37adaf5bda6d980099880f9c66603266002e61b9b0d988009986f6c3660022660beb1d99d6142770a3019a92f4ce88d024c46024c463a82e963769cd197
d8a4da2476a6cf139936179e10dec66b5232fb9bf73e4776906cf409cb68974f9a1ddaeb92679b5c475bec9c5808df90d26f3d7fe810668c2331df6026e7d7d2
e827e7e54c717bd94102defd39bb9e60169de349e992e687f6cae0f796973c8c505648b22bb9381ee14387304735c799a99d039ef04678e2c8f4b9306e237839
bbf0863c3ad1fd39f30210934ffa6786903437b437241ff392c711ca09490e2517470a7de810e62ca34ba7f076c8f1d791e973e9aaebcf5761f2435e7d8eec20
d93021868c96a5ab4bde102ec9b302de0b46280c4a66eaf30a0f1b21566ba63ff6bff6a6cfc5f1c2decb59c8fcb8299f233b48d6275f5b46ff489a1dda9bcacc
bbe2475bec0c3c615032539fe918a65d898f61ee4d9f8baff1decb59144449aedc9fb3ae867e979293782939eb3489c9f34cae932d7646a3c3a064a63ed309cc
594dc730639a64fa5c5a77f07256f930438edc20599fdc9d75bf369d6b5fe99c110fc9f3a20d175bec8c936a1994f66ba6d5b059334d583377a6cfa61466f072
a66d53e6d629e4c80d925dcca27f362d24cd0ded5d353d47c916fbf710c52ef6d8cdd2cb74bc9bfd347d2e3e91a297737ec86b618ec52cfae7202e25674db690
3cd7e43ad962ff86991ad2fe3e13fa4b05988c04988c04988c04988c04988c04988c540df3f34f4f46dbdbc05e4f72e5ad2d830b03d90aa6a13fb6f678e0ef3f
a0edfff9d3433d8da8a2d90aa6ff2b548fe7ddf1d786c195816c05331c616a5668c3603878afaaa0a28c2afd6fd8aa1ceca72a240efe7133cc6d6ecccc7abd60
666e7363cdacd77bd6ccb0edf29b30fb82bb9362050661e4d26eb67c242fc38c0518addced1156cd62b9ed47faca52bacf2c1f498c3d23012623012623012623
012623012623012623012623012623012623fd0f73b1c6f1441d35fa0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 1.7 Quartets, Octets et mots dans un double-mot}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_03}{\*\bkmkend p1_03}\rtlch \ltrch\fs23\b\loch
1.3\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me de }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
um\u233\'e9ration hexad\u233\'e9cimal}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un grand probl\u232\'e8me avec le syst\u232\'e8me binaire est leur longueur. Pour repr\u233\'e9senter la valeur 202}{\rtlch \ltrch\sub\loch
10}{\loch
, il faut huit chiffres binaires. La version d\u233\'e9cimale demande seulement trois chiffres et, donc, peut repr\u233\'e9senter des nombres de fa\u231\'e7on beaucoup plus compacte. Ceci n'a pas \u233\'e9chapp\u233\'e9 aux ing\u233\'e9nieurs }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l\u8217\'92heure de concevoir }{\loch
des syst\u232\'e8mes informatiques binaires. En faisant face \u224\'e0 de grandes valeurs, les nombres binaires deviennent rapidement inutilisables. Malheureusement, un ordinateur pense en binaire et }{\rtlch \ltrch\lang3084\loch
il convient le plus souvent }{\loch
d'utiliser ce syst\u232\'e8me. }{\rtlch \ltrch\lang3084\loch
Bien qu\u8217\'92on peut convertir }{\loch
entre d\u233\'e9cimal et binaire, la conversion n'est pas }{\rtlch \ltrch\lang3084\loch
aussi simple}{\loch
. Le syst\u232\'e8me de num\u233\'e9ration hexad\u233\'e9cimal (en base 16) r\u233\'e9sout ces probl\u232\'e8mes. Les nombres hexad\u233\'e9cimaux offrent les deux caract\u233\'e9ristiques qu'on cherche : ils sont encore plus compacts que les nombres d\u233\'e9cimaux et il est facile de les convertir en binaire et vice-versa. C'est pourquoi, la plupart des syst\u232\'e8mes informatiques binaires utilisent le syst\u232\'e8me de num\u233\'e9ration hexad\u233\'e9cimal}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
La soci\u233\'e9t\u233\'e9 Digital Equipment est la seule qui encore r\u233\'e9siste. Ils utilisent encore les nombres octals dans la plupart de leurs syst\u232\'e8mes. Un h\u233\'e9ritage des jours o\u249\'f9 ils produisaient des machines de 12 bits.  }
}}
}{\loch
. Etant donn\u233\'e9 que la base d'un tel nombre est 16, chaque chiffre \u224\'e0 la gauche du point d\u233\'e9cimal repr\u233\'e9sente une puissance successive de seize. Par exemple, le nombre 1234}{\rtlch \ltrch\sub\loch
16}{\loch
 est \u233\'e9gal \u224\'e0 :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 * 16}{\rtlch \ltrch\super\loch
3}{\loch
 \tab \tab +\tab  2 * 16}{\rtlch \ltrch\super\loch
2\tab \tab }{\loch
 +\tab  3 * 16}{\rtlch \ltrch\super\loch
1\tab \tab }{\loch
 + \tab 4 * 16}{\rtlch \ltrch\super\loch
0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
ou}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
4096 + 512 + 48 + 4 = 4660}{\rtlch \ltrch\sub\loch
10}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Chaque chiffre hexad\u233\'e9cimal peut repr\u233\'e9senter une des seize valeurs allant de 0 \u224\'e0 15}{\rtlch \ltrch\sub\loch
10}{\loch
. }{\rtlch \ltrch\lang3084\loch
Puisque notre syst\u232\'e8me num\u233\'e9rique n\u8217\'92a que dix chiffres}{\loch
, on a besoin d'inventer six unit\u233\'e9s additionnelles pour repr\u233\'e9senter les valeurs dans la plage }{\rtlch \ltrch\lang3084\loch
de}{\loch
 10}{\rtlch \ltrch\sub\loch
10}{\loch
 \u224\'e0 15}{\rtlch \ltrch\sub\loch
10}{\loch
. Au lieu de cr\u233\'e9er de nouveaux symboles, on utilise les lettres de l'alphabet, de A \u224\'e0 F. Ce qui suit, repr\u233\'e9sente des exemples valides de nombres hexad\u233\'e9cimaux : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1234}{\rtlch \ltrch\sub\loch
16\tab \tab }{\loch
DEAD}{\rtlch \ltrch\sub\loch
16\tab \tab }{\loch
BEEF}{\rtlch \ltrch\sub\loch
16}{\loch
\tab \tab 0AFB}{\rtlch \ltrch\sub\loch
16\-}{\loch
\tab \tab FEED}{\rtlch \ltrch\sub\loch
16}{\loch
\tab \tab DEAF}{\rtlch \ltrch\sub\loch
16}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisqu'on a besoin souvent d'entrer des nombres hexad\u233\'e9cimaux dans un syst\u232\'e8me informatique, il nous faut un m\u233\'e9canisme diff\u233\'e9rent pour }{\rtlch \ltrch\lang3084\loch
les }{\loch
repr\u233\'e9senter. Apr\u232\'e8s tout, dans la plupart des ordinateurs, il n'est pas possible d'inclure un index pour indiquer la base de la valeur associ\u233\'e9e. On adoptera donc les conventions suivantes :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Toutes les valeurs num\u233\'e9riques (peu importe la base) commencent avec un chiffre.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Toutes les valeurs hexad\u233\'e9cimales terminent avec la lettre "h", par exemple 123A4h}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Actuellement, le suffixe "h" des nombres hexad\u233\'e9cimaux est une convention de Intel, non une convention g\u233\'e9n\u233\'e9rale. Les assembleurs 68000 et 65c816 utilis\u233\'e9s dans les syst\u232\'e8mes Macintosh et Apple II pr\u233\'e9fixent ces nombres avec le symbole "$". }
}}
}{\loch
.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Toutes les valeurs binaires terminent avec la lettre "b". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Les nombres d\u233\'e9cimaux peuvent avoir le suffixe "t" ou "d". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Exemples de nombres hexad\u233\'e9cimaux valides :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1234h\tab \tab 0DEADh\tab \tab 0BEEFh\tab \tab 0AFBh\tab \tab 0FEEDh\tab \tab 0DEAFh}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous pouvez voir, les nombres hexad\u233\'e9cimaux sont compacts et faciles \u224\'e0 lire. De plus, vous pouvez effectuer facilement les conversions entre hexad\u233\'e9cimal et binaire. Consid\u233\'e9rez la table suivante : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 1 : conversion binaires/hexa}
\par \trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\loch
Binaire}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb0\sa120{\loch
Hexad\u233\'e9cimal}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0000}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0001}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0010}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
2}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0011}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
3}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0100}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
4}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
5}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0110}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
6}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0111}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
7}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1000}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
8}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1001}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
9}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1010}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
A}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1011}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
B}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1100}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
C}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1101}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
D}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1110}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
E}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4231\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7075\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1111}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
F}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette table donne toute l'information dont vous avez besoin pour convertir tout nombre hexad\u233\'e9cimal en nombre binaire ou vice-versa. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour convertir un nombre hexad\u233\'e9cimal en binaire, substituez simplement dans le nombre les quatre bits correspondant \u224\'e0 chaque chiffre hexad\u233\'e9cimal. Par exemple, pour convertir 0ABCDh en valeur binaire, convertissez chaque chiffre conform\u233\'e9ment \u224\'e0 la table ci-dessus : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab 0\tab \tab A\tab \tab B\tab \tab C\tab \tab D\tab Hexad\u233\'e9cimal}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab 0000\tab \tab 1010\tab \tab 1011\tab \tab 1100\tab \tab 1101\tab Binaire}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour convertir un nombre binaire en format hexad\u233\'e9cimal est \u233\'e9galement facile. La premi\u232\'e8re \u233\'e9tape est de remplir le c\u244\'f4t\u233\'e9 gauche du nombre binaire de z\u233\'e9ros pour s'assurer qu'il y a un multiple de quatre bits dans le nombre de chiffres. Par exemple, \u233\'e9tant donn\u233\'e9 le nombre 1011001010, il faudrait commencer par ajouter deux bits \u224\'e0 la gauche du nombre de fa\u231\'e7on qu'il contienne 12 bits. La valeur binaire convertie devient 001011001010. La prochaine \u233\'e9tape consiste \u224\'e0 subdiviser le nombre en groupes de quatre bits, c'-\u224\'e0-d., 0010 1100 1010. Finalement comparez ces valeurs dans la table est substituez-les avec les chiffres hexad\u233\'e9cimaux appropri\u233\'e9s, donc, 2CA. Comparez \u224\'e0 cela la difficult\u233\'e9 de conversion entre nombres d\u233\'e9cimaux et binaires ou entre d\u233\'e9cimaux et hexad\u233\'e9cimaux !}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque convertir entre hexad\u233\'e9cimal et binaire est une op\u233\'e9ration que vous ferez r\u233\'e9p\u233\'e9titivement, }{\rtlch \ltrch\lang3084\loch
il convient de m\u233\'e9moriser les nombres binaires de 1 \u224\'e0 15 (illustr\u233\'e9 dans la }{\loch
table }{\rtlch \ltrch\lang3084\loch
ci-dessus)}{\loch
. M\u234\'eame si vous avez une calculatrice qui fait la conversion pour vous, vous trouverez que les conversions manuelles entre nombres binaires et hexad\u233\'e9cimaux sont beaucoup plus rapides et beaucoup plus efficaces.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_04}{\*\bkmkend p1_04}\rtlch \ltrch\fs23\b\loch
1.4\tab Op\u233\'e9rations arithm\u233\'e9tiques sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
ombres }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
inaires et }{\rtlch \ltrch\fs23\lang3084\b\loch
h}{\rtlch \ltrch\fs23\b\loch
exad\u233\'e9cimaux }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a diverses op\u233\'e9rations qu'on peut effectuer avec des nombres binaires et hexad\u233\'e9cimaux. Par exemple, on peut additionner, soustraire, multiplier, diviser et effectuer d'autres op\u233\'e9rations arithm\u233\'e9tiques. }{\rtlch \ltrch\lang3084\loch
M\u234\'eame si vous n\u8217\'92avez pas besoin de devenir pr\u233\'e9cis\u233\'e9ment un expert dans ce domaine}{\loch
, }{\rtlch \ltrch\lang3084\loch
il faudrait \u234\'eatre tout de moins capable d\u8217\'92effectuer }{\loch
ces op\u233\'e9rations manuellement avec papier et crayon. }{\rtlch \ltrch\lang3084\loch
Ceci vous donnera clart\u233\'e9, m\u234\'eame si, \u224\'e0 la fin, vous ferez la plupart de ces convertions \u224\'e0 l\u8217\'92aide d\u8217\'92une }{\loch
calculatrice. Il y a plusieurs de ces }{\rtlch \ltrch\lang3084\loch
outils dans me march\u233\'e9}{\loch
 ; la liste suivante donne un certain nombre de fabriquants qui produisent ces appareils : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab Manufacturiers de calculatrices hexad\u233\'e9cimales : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1087\li142\ri0\lin142\rin0\fi0{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Casio}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1087\li142\ri0\lin142\rin0\fi0{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Hewlett-Packard}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1087\li142\ri0\lin142\rin0\fi0{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Sharp}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1087\li142\ri0\lin142\rin0\fi0\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Texas Instruments}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette liste n'est pas du tout exhaustive. D'autres constructeurs peuvent \u233\'e9galement }{\rtlch \ltrch\lang3084\loch
en }{\loch
produire. Certes, Hewlett-Packard est la meilleure du genre, }{\rtlch \ltrch\lang3084\loch
mais c\u8217\'92est plus ch\u232\'e8re}{\loch
. Sharp et Casio produisent des calculatrices qui se vendent \u224\'e0 moins de 50 $. Si vous }{\rtlch \ltrch\lang3084\loch
comptez de programmer en assembleur}{\loch
, avoir une de ces calculatrices est essentiel. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre alternative pour avoir une calculatrice hexad\u233\'e9cimale est d'obtenir un programme TSR (Terminate and Stay Resident), comme SideKick}{\rtlch \ltrch\super\loch
tm}{\loch
 qui contient un calculateur int\u233\'e9gr\u233\'e9. Cependant, \u224\'e0 moins }{\rtlch \ltrch\lang3084\loch
que vous ne l\u8217\'92ayez d\u233\'e9j\u224\'e0, }{\loch
ou \u224\'e0 moins de n'avoir besoin des autres caract\u233\'e9ristiques qu'il offre, cela ne vaut en d\u233\'e9finitive pas la peine, \u233\'e9tant donn\u233\'e9 qu'il co\u251\'fbte plus qu'une calculatrice est il n'est pas aussi commode \u224\'e0 utiliser. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprendre pourquoi vous devriez investir une petite somme }{\rtlch \ltrch\lang3084\loch
en }{\loch
une calculatrice, consid\u233\'e9rez le probl\u232\'e8me arithm\u233\'e9tique suivant : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
9h +}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
1h =}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
----}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous seriez tent\u233\'e9s d'\u233\'e9crire la r\u233\'e9ponse "10h" comme solution du probl\u232\'e8me. Mais, c'est faux ! La r\u233\'e9ponse correcte est dix, qui s'\u233\'e9crit "0Ah", et non seize, qui s'\u233\'e9crit "10h". Un probl\u232\'e8me semblable existe avec cette autre op\u233\'e9ration :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
10h  -}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
01h =}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
-------}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous \u234\'eates peut-\u234\'eatre port\u233\'e9s \u224\'e0 r\u233\'e9pondre "9h", m\u234\'eame si la r\u233\'e9ponse correcte est cependant "0Fh". Souvenez-vous que ce probl\u232\'e8me pose la question : \u171\'abquelle est la diff\u233\'e9rence entre seize et un ?\u187\'bb. La r\u233\'e9ponse est \u233\'e9videmment quinze, qui se note "0Fh". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
M\u234\'eame si les deux probl\u232\'e8mes mentionn\u233\'e9s ne vous impressionnent pas particuli\u232\'e8rement, dans une situation de stress, votre cerveau passera au mode d\u233\'e9cimal, }{\rtlch \ltrch\lang3084\loch
tout moment de distraction am\u232\'e8nera \u224\'e0 des }{\loch
r\u233\'e9sultats incorrects. Morale de l'histoire - si vous devez effectuer une op\u233\'e9ration arithm\u233\'e9tique \u224\'e0 la main sur des nombres hexad\u233\'e9cimaux, accordez-vous un moment et faites attention. Vous pourriez \u224\'e0 la limite convertir les nombres en d\u233\'e9cimal, effectuer l'op\u233\'e9ration et les reconvertir en hexad\u233\'e9cimal. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous ne devriez jamais effectuer des calculs arithm\u233\'e9tiques directement en binaire. Puisque ces nombres contiennent souvent de longues cha\u238\'eenes de bits, vous }{\rtlch \ltrch\lang3084\loch
aurez}{\loch
 trop d'opportunit\u233\'e9s de vous tromper. Si vous tombez sur des nombres binaires, convertissez-les toujours en hex, effectuez les calculs en hex (de pr\u233\'e9f\u233\'e9rence avec une calculatrice), et reconvertissez le r\u233\'e9sultat en binaire, si n\u233\'e9cessaire.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_05}{\*\bkmkend p1_05}\rtlch \ltrch\fs23\b\loch
1.5\tab Op\u233\'e9rations logiques sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
its}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a quatre op\u233\'e9rations logiques fondamentales qu'on peut effectuer sur des nombres binaires ou hexad\u233\'e9cimaux : AND, OR, XOR (OR exclusif) et NOT}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
Il est d\u8217\'92usage commun de nommer ces op\u233\'e9rateurs en anglais, tout le monde les comprend et ils correspondent exactement aux commandes }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
commandes logiques du langage assembleur, n.d.t. }
}}
}{\loch
. Contrairement aux op\u233\'e9rations arithm\u233\'e9tiques, un calculateur n'est pas n\u233\'e9cessaire pour effectuer ces op\u233\'e9rations. C'est souvent plus facile de les faire \u224\'e0 la main. L'op\u233\'e9ration AND logique est dyadique}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Dans beaucoup de textes, ces op\u233\'e9rations sont dites "binaires". Cependant, le terme "dyadique" veut dire la m\u234\'eame chose et \u233\'e9vite la confusion avec le syst\u232\'e8me de num\u233\'e9ration binaire. }
}}
}{\loch
 (elle accepte exactement deux op\u233\'e9randes). Ces op\u233\'e9randes sont de simples bits binaires (en base 2). L'op\u233\'e9ration AND consiste en : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
0 AND 0 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
0 AND 1 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
1 AND 0 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 AND 1 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une mani\u232\'e8re compacte de repr\u233\'e9senter un AND est de se servir d'une table de v\u233\'e9rit\u233\'e9 : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 2 : Table de v\u233\'e9rit\u233\'e9 pour AND}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
AND}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\b\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
C'est semblable \u224\'e0 la table de multiplication }{\rtlch \ltrch\lang3084\loch
de l}{\loch
'\u233\'e9cole primaire. Les colonnes \u224\'e0 la gauche et en haut repr\u233\'e9sentent les valeurs d'entr\u233\'e9e de l'op\u233\'e9ration AND. La valeur situ\u233\'e9e \u224\'e0 l'intersection d'une ligne et d'une colonne (pour une paire sp\u233\'e9cifique de valeurs d'entr\u233\'e9e), est le r\u233\'e9sultat de l'op\u233\'e9ration logique entre ces deux valeurs. En fran\u231\'e7ais cette op\u233\'e9ration se traduit par : \u171\'ab Si la premi\u232\'e8re op\u233\'e9rande est 1 et la seconde op\u233\'e9rande est 1, le r\u233\'e9sultat est 1 ; sinon, }{\rtlch \ltrch\lang3084\loch
c\u8217\'92}{\loch
est 0 \u187\'bb.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un fait important \u224\'e0 noter \u224\'e0 propos de l'op\u233\'e9ration AND est que vous pouvez l'utiliser pour forcer un r\u233\'e9sultat de z\u233\'e9ro. Si l'une des deux op\u233\'e9randes est nulle, le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
sera}{\loch
 toujours 0, }{\rtlch \ltrch\lang3084\loch
peu importe }{\loch
la valeur de l'autre op\u233\'e9rande. Par exemple, la ligne contenant une entr\u233\'e9e de z\u233\'e9ro ne contient que des z\u233\'e9ros et la colonne qui contient une entr\u233\'e9e de z\u233\'e9ro ne contient \u233\'e9galement que des z\u233\'e9ros. Inversement, si une op\u233\'e9rande contient 1, le r\u233\'e9sultat est exactement la valeur de l'autre op\u233\'e9rande. Ces caract\u233\'e9ristiques de l'op\u233\'e9ration AND sont tr\u232\'e8s importantes, en particulier quand vous travaillez avec des cha\u238\'eenes de bits et vous voulez forcer des bits individuels \u224\'e0 \u234\'eatre nuls. On \u233\'e9tudiera ces applications de l'op\u233\'e9ration AND dans la prochaine section. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'op\u233\'e9ration logique OR est \u233\'e9galement dyadique. Sa d\u233\'e9finition est : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
0 OR 0 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
0 OR 1 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 OR 0 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 OR 1 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La table de v\u233\'e9rit\u233\'e9 du OR prend la forme suivante : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 3 : Table de v\u233\'e9rit\u233\'e9 pour OR}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
OR}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En peu de termes}{\loch
, l'op\u233\'e9ration OR s'explique par : \u171\'ab Si }{\rtlch \ltrch\lang3084\loch
une des deux op\u233\'e9randes ou les deux valent }{\loch
1, alors le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
c\u8217\'92}{\loch
est 1 ; sinon, }{\rtlch \ltrch\lang3084\loch
c\u8217\'92est}{\loch
 z\u233\'e9ro \u187\'bb. Cette op\u233\'e9ration est \u233\'e9galement connue comme }{\rtlch \ltrch\i\loch
OR inclusif}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Donc, si une seule des deux op\u233\'e9randes }{\rtlch \ltrch\lang3084\loch
est}{\loch
 1, le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
sera}{\loch
 toujours 1, peu importe la valeur de l'autre op\u233\'e9rande. Et si une op\u233\'e9rande vaut 0, le r\u233\'e9sultat est toujours la valeur de l'autre op\u233\'e9rande. Comme l'op\u233\'e9ration AND, ceci }{\rtlch \ltrch\lang3084\loch
a}{\loch
 un effet de bord important }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on peut exploiter \u224\'e0 l\u8217\'92heure d\u8217\'92effectuer }{\loch
une op\u233\'e9ration de cha\u238\'eenes de bits (voir la prochaine section). Notez qu'il y a une diff\u233\'e9rence entre le OR inclusif le la signification }{\rtlch \ltrch\lang3084\loch
litt\u233\'e9raire }{\loch
du mot "ou". Consid\u233\'e9rez la phrase : \u171\'ab Je vais au magasin ou je vais au parc \u187\'bb. Une telle affirmation implique }{\rtlch \ltrch\lang3084\loch
que vous allez soit au magasin, soit au parc, pas aux }{\loch
deux endroits en m\u234\'eame temps. Par cons\u233\'e9quent, la version litt\u233\'e9raire du mot "ou" est l\u233\'e9g\u232\'e8rement diff\u233\'e9rente de l'op\u233\'e9ration OR inclusive ; elle est beaucoup plus proche de l'op\u233\'e9ration OR }{\rtlch\ai \ltrch\i\loch
exclusif}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
XOR (OR eXclusif) est \u233\'e9galement une op\u233\'e9ration dyadique. Et elle est d\u233\'e9finie comme suit : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
0 XOR 0 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
0 XOR 1 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 XOR 0 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1 XOR 1 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La table de v\u233\'e9rit\u233\'e9 de l'op\u233\'e9ration XOR prend la forme suivante : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 4 : Table de v\u233\'e9rit\u233\'e9 pour XOR}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
XOR}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Donc}{\loch
, l'op\u233\'e9ration XOR peut s'exprimer par : \u171\'ab }{\rtlch \ltrch\lang3084\loch
Si l\u8217\'92une des deux op\u233\'e9randes, mais pas les deux, vaut 1}{\loch
, alors le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
sera}{\loch
 1 ; sinon, }{\rtlch \ltrch\lang3084\loch
c\u8217\'92est}{\loch
 0 \u187\'bb. Notez que la version exclusive de OR est identique \u224\'e0 la signification }{\rtlch \ltrch\lang3084\loch
litt\u233\'e9raire }{\loch
du mot "ou". }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si l'une des deux op\u233\'e9randes dans un XOR vaut 1, alors le r\u233\'e9sultat est toujours l'}{\rtlch \ltrch\i\loch
inverse}{\loch
 de l'autre op\u233\'e9rande ; autrement dit, si une op\u233\'e9rande vaut 1, le r\u233\'e9sultat est 0 si l'autre op\u233\'e9rande vaut 1, ou bien}{\rtlch \ltrch\lang3084\loch
 c\u8217\'92}{\loch
est 1, si l'autre op\u233\'e9rande vaut 0. Si la premi\u232\'e8re op\u233\'e9rande contient un z\u233\'e9ro, alors le r\u233\'e9sultat sera exactement la valeur de l'autre op\u233\'e9rande. Cette propri\u233\'e9t\u233\'e9 vous permet d'invertir s\u233\'e9lectivement les bits dans une cha\u238\'eene de bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'op\u233\'e9ration NOT est monadique (c'est-\u224\'e0-dire qu'elle }{\rtlch \ltrch\lang3084\loch
n\u8217\'92}{\loch
accepte }{\rtlch \ltrch\lang3084\loch
q\u8217\'92}{\loch
une op\u233\'e9rande). C'est : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
NOT 0 = 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
NOT 1 = 0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La table de v\u233\'e9rit\u233\'e9 de NOT prend la forme suivante : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 5 : Table de v\u233\'e9rit\u233\'e9 pour NOT}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
NOT}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{
 }\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_06}{\*\bkmkend p1_06}\rtlch \ltrch\fs23\b\loch
1.6\tab Op\u233\'e9rations logiques sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
ombres }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
inaires et les }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ha\u238\'eenes de }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
its}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme }{\rtlch \ltrch\lang3084\loch
il est }{\loch
d\u233\'e9crit dans la section pr\u233\'e9c\u233\'e9dente, les op\u233\'e9rations logiques fonctionnent seulement avec des op\u233\'e9randes d'un seul bit. Etant donn\u233\'e9 que les processeurs 80x86 utilisent des groupes de huit, seize ou trente-deux bits, on doit faire une extension de la signification de ces fonctions pour pouvoir traiter plus de deux bits }{\rtlch \ltrch\lang3084\loch
\u224\'e0 la fois}{\loch
. Les fonctions logiques 80x86 op\u232\'e8rent sur une base de bit-\u224\'e0-bit (on appelle cela en anglais }{\rtlch \ltrch\i\loch
bitwise op\u233\'e9ration}{\loch
). Etant donn\u233\'e9 deux valeurs num\u233\'e9riques, ces fonctions traitent individuellement les bits qui les composent, bit \u224\'e0 bit. Par exemple, si vous voulez calculer le AND des deux valeurs suivantes de huit bits, alors l'op\u233\'e9ration sera effectu\u233\'e9e sur chaque colonne prise individuellement}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Ceci peut toujours se faire, parce qu'il n'y a jamais de retenue dans les op\u233\'e9rations logiques, n.d.t.}
}}
}{\loch
 : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1011 0101}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1110 1110}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
---------}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1010 0100}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La forme bit-}{\rtlch \ltrch\lang3084\loch
\u224\'e0}{\loch
-bit de l'ex\u233\'e9cution peut facilement \u234\'eatre appliqu\u233\'e9e \u224\'e0 d'autres op\u233\'e9rations logiques.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On a d\u233\'e9fini les op\u233\'e9rations logiques en termes de valeurs binaires ; en effet, vous trouverez beaucoup plus facile de les effectuer en binaire, plut\u244\'f4t qu'en d'autres bases. Par cons\u233\'e9quent, si vous devez calculer une op\u233\'e9ration logique entre deux nombres hexad\u233\'e9cimaux, vous devriez d'abord les convertir en binaire. Ceci s'applique avec toutes les op\u233\'e9rations logiques (par exemple, AND, OR, XOR, etc.).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La possibilit\u233\'e9 de forcer des bits individuels \u224\'e0 valoir 0 ou 1 via AND ou OR,}{\rtlch \ltrch\lang3084\loch
 ainsi que}{\loch
 la possibilit\u233\'e9 d'inverser des bits \u224\'e0 l'aide de XOR est tr\u232\'e8s importante dans le travail avec des cha\u238\'eenes de bits. Ces op\u233\'e9rations vous permettent de manipuler s\u233\'e9lectivement certains bits dans une valeur donn\u233\'e9e en laissant les autres inchang\u233\'e9s. Par exemple, si vous avez une valeur binaire X de huit bits et vous voulez vous assurer que les bits de 4 \u224\'e0 7 ne contiennent que des z\u233\'e9ros, vous pouvez soumettre X \u224\'e0 un AND }{\rtlch \ltrch\lang3084\loch
contre}{\loch
 la valeur binaire 0000 1111. Ceci force le quartet le plus significatif \u224\'e0 valoir z\u233\'e9ro tout en laissant les premiers quatre bits inchang\u233\'e9s. D'autre part, vous pourriez forcer le bit le moins significatif \u224\'e0 1 en laissant les autres intacts via un OR entre X et la valeur binaire 0000 0001, puis effectuer un XOR entre X et 0000 0100, respectivement. L'utilisation de AND, OR et XOR pour manipuler des cha\u238\'eenes de bits de cette mani\u232\'e8re est connue comme }{\rtlch \ltrch\i\loch
masquage de cha\u238\'eenes de bits}{\loch
. On utilise ce terme parce qu'on peut se servir de certaines valeurs (1 pour AND, 0 pour OR ou XOR) pour "masquer" certains bits et les pr\u233\'e9server du changement lors d'une op\u233\'e9ration qui a pour but de modifier une valeur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_07}{\*\bkmkend p1_07}\rtlch \ltrch\fs23\b\loch
1.7\tab Nombres }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9s et }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
on }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9s}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout \u224\'e0 l'heure, on a consid\u233\'e9r\u233\'e9 les nombres binaires comme des valeurs non sign\u233\'e9es. Le nombre binaire \u8230\'8500000 repr\u233\'e9sente z\u233\'e9ro, \u8230\'8500001 repr\u233\'e9sente un, \u8230\'8500010 repr\u233\'e9sente deux et ainsi de suite. Que se passe-t-il alors pour les nombres n\u233\'e9gatifs ? Les valeurs sign\u233\'e9es ont bien \u233\'e9t\u233\'e9 mentionn\u233\'e9es dans les sections pr\u233\'e9c\u233\'e9dentes et on a \u233\'e9galement parl\u233\'e9 du syst\u232\'e8me de num\u233\'e9ration par compl\u233\'e9ment \u224\'e0 deux ; mais l'on n'a pas expliqu\u233\'e9 comment repr\u233\'e9senter les nombres n\u233\'e9gatifs en binaire. On va justement le voir !}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour repr\u233\'e9senter des nombres sign\u233\'e9s }{\rtlch \ltrch\lang3084\loch
par}{\loch
 le syst\u232\'e8me binaire, on doit placer une restriction \u224\'e0 ces nombres : ils doivent avoir un nombre fini et fixe de bits. }{\rtlch \ltrch\lang3084\loch
Cette restriction est naturelle, car les microprocesseurs comme le 80x86 }{\loch
peuvent adresser seulement un nombre fini de bits. }{\rtlch \ltrch\lang3084\loch
Donc, pour repr\u233\'e9senter les nombres n\u233\'e9gatifs, nous devons }{\loch
limiter les nombres \u224\'e0 des tailles pr\u233\'e9d\u233\'e9finies, comme huit, seize, trente-deux bits ou plus encore. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Avec un nombre fixe de bits, on peut seulement repr\u233\'e9senter un certain nombre d'objets. Par exemple, avec huit bits, l'on peut repr\u233\'e9senter seulement 256 objets diff\u233\'e9rents. Et les nombres n\u233\'e9gatifs, }{\rtlch \ltrch\lang3084\loch
sont des objects tout comme }{\loch
les nombres positifs. Par cons\u233\'e9quent, avec huit bits, on doit forc\u233\'e9ment utiliser certaines des 256 valeurs \u224\'e0 disposition pour repr\u233\'e9senter les nombres n\u233\'e9gatifs. En d'autres termes, on doit sacrifier certains nombres positifs pour pouvoir d\u233\'e9finir les nombres n\u233\'e9gatifs. Pour r\u233\'e9aliser cela, on peut assigner la moiti\u233\'e9 du nombre total de possibilit\u233\'e9s aux nombres n\u233\'e9gatifs, et laisser l'autre aux nombres positifs. Donc, avec un octet, on peut repr\u233\'e9senter les valeurs n\u233\'e9gatives de la plage -128\u8230\'85-1 et }{\rtlch \ltrch\lang3084\loch
les valeurs}{\loch
 positives de la plage 0\u8230\'85127}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
En th\u233\'e9orie, z\u233\'e9ro n'est ni n\u233\'e9gatif ni positif. Pour des raisons techniques (dues \u224\'e0 des implications mat\u233\'e9rielles), on consid\u232\'e8re z\u233\'e9ro comme \u233\'e9tant un nombre positif. }
}}
}{\loch
. Avec un mot (16 bits), on peut repr\u233\'e9senter}{\rtlch \ltrch\lang3084\loch
 de }{\loch
-32768 }{\rtlch \ltrch\lang3084\loch
\u224\'e0 }{\loch
+32767. Avec un double-mot (de 32 bits), notre plage sera [-2147483648, +2147483647]. En g\u233\'e9n\u233\'e9ral, avec }{\rtlch \ltrch\i\loch
n}{\loch
 bits, on peut repr\u233\'e9senter les valeurs sign\u233\'e9es dans la plage -2}{\rtlch \ltrch\super\loch
n-1}{\loch
 \u224\'e0 +2}{\rtlch \ltrch\super\loch
n-1}{\loch
-1. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Nous avons donc }{\rtlch \ltrch\lang3084\loch
trouv\u233\'e9 la fa\u231\'e7on de repr\u233\'e9senter les }{\loch
valeurs n\u233\'e9gatives. Mais, de quelle fa\u231\'e7on le fait-on exactement ? Il y a divers moyens, mais la technologie 80x86 utilise la compl\u233\'e9mentation \u224\'e0 deux. Dans un tel syst\u232\'e8me, le bit de poids le plus fort d'un nombre est le }{\rtlch \ltrch\i\loch
bit du signe}{\loch
. Si ce bit est z\u233\'e9ro, le nombre est positif, sinon, il est n\u233\'e9gatif. Exemples : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab Pour des nombres de 16 bits : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab 8000h est n\u233\'e9gatif, parce que le bit le plus significatif est \u224\'e0 1.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab 100h est positif, parce que le bit le plus significatif est \u224\'e0 0.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab 7FFFh est positif. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab 0FFFFh est n\u233\'e9gatif. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab 0FFFh est positif.  }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le bit fort est z\u233\'e9ro, alors le nombre est positif et, par cons\u233\'e9quent, il est stock\u233\'e9 dans une valeur binaire standard. Si, au contraire, il est}{\rtlch \ltrch\lang3084\loch
 \u224\'e0 }{\loch
un, alors le nombre est n\u233\'e9gatif et, par cons\u233\'e9quent, il est stock\u233\'e9 en forme de compl\u233\'e9ment \u224\'e0 deux. Pour convertir un nombre positif dans sa version n\u233\'e9gative (en forme de compl\u233\'e9ment \u224\'e0 deux), vous utiliserez cet algorithme : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab 1) Inverser tous les bits du nombre, c'est-\u224\'e0-dire, lui appliquer la fonction NOT. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab 2) Ajoutez 1 au r\u233\'e9sultat. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Par exemple, pour calculer l'\u233\'e9quivalent 8 bits de -5 : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
0000 0101\tab \tab Cinq, en binaire.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1111 1010\tab \tab Apr\u232\'e8s une inversion de tous les bits.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1111 1011\tab \tab R\u233\'e9sultat obtenu apr\u232\'e8s l'ajout de 1.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si on prend ce r\u233\'e9sultat et on effectue encore un compl\u233\'e9ment \u224\'e0 deux, alors on obtient de nouveau notre valeur originale, 00000101, tout comment on s'attendait : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1111 1011\tab \tab Compl\u233\'e9ment \u224\'e0 deux de -5.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
0000 0100\tab \tab Apr\u232\'e8s inversion.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
0000 0101\tab \tab Apr\u232\'e8s ajout de 1, nous obtenons +5.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les exemples qui suivent fournissent certaines valeurs positives et n\u233\'e9gatives de 16 bits : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab 7FFFh : +32767,\tab le plus gros nombre positif sur 16 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab 8000h : -32768,\tab le plus petit nombre n\u233\'e9gatif sur 16 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab 40000h : 16 384.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour changer le signe des nombres ci-dessus, faites ce qui suit : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
7FFFh :\tab 0111 1111 1111 1111\tab \tab +32767d.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1000 0000 0000 0000\tab \tab Inversion de tous les bits.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi720\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1000 0000 0000 0001\tab \tab Ajout de 1 (8001h ou \u8211\'9632767d).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
8000h :\tab 1000 0000 0000 0000\tab \tab -32768d.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab 0111 1111 1111 1111\tab \tab Inversion de tous les bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab 1000 0000 0000 0000\tab \tab Ajout de 1 (8000h ou \u8211\'9632768d).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
4000h :\tab 0100 0000 0000 0000\tab \tab 16384d.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab 1011 1111 1111 1111\tab \tab Inversion de tous les bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab 1100 0000 0000 0000\tab \tab Ajout de 1 (0C00h ou \u8211\'9616384d).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
8000h invers\u233\'e9 devient 7FFFh. Apr\u232\'e8s avoir ajout\u233\'e9 1, on obtient 8000h ! Qu'est-ce qui arrive ? -( - 32768) vaudrait donc \u8211\'9632768 ? Certainement non. Mais, la valeur +32768 ne peut pas \u234\'eatre repr\u233\'e9sent\u233\'e9 avec un nombre sign\u233\'e9 de 16 bits ; donc, on ne peut pas changer le signe de la valeur la plus petite. Si vous tentez cette op\u233\'e9ration, les microprocesseurs 80x86 provoqueront un d\u233\'e9passement de capacit\u233\'e9 (}{\rtlch \ltrch\i\loch
overflow}{\loch
). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pourquoi donc se tracasser avec un syst\u232\'e8me de num\u233\'e9ration aussi minable ? Pourquoi ne pas utiliser le bit fort comme un drapeau de signe (}{\rtlch \ltrch\i\loch
sign flag}{\loch
) et stocker l'\u233\'e9quivalent positif du nombre dans les bits qui restent ? La r\u233\'e9ponse r\u233\'e9side dans le mat\u233\'e9riel. Il s'av\u232\'e8re que changer les signes des nombres est le seul travail ennuyeux. Avec la technique du compl\u233\'e9ment \u224\'e0 deux, la plupart des autres op\u233\'e9rations se r\u233\'e9v\u232\'e8lent aussi faciles que travailler en syst\u232\'e8me binaire non sign\u233\'e9. Par exemple, supposez devoir effectuer l'addition 5 + (-5). Le r\u233\'e9sultat est z\u233\'e9ro. Consid\u233\'e9rez ce qui arrive quand on effectue cette addition en mode compl\u233\'e9ment \u224\'e0 deux :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
00000101}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
11111011}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
--------}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8
                                 }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
1 00000000}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On termine avec une retenue dans le neuvi\u232\'e8me bit et tous les autres bits \u224\'e0 z\u233\'e9ro. Evidemment, si l'on ignore cette retenue, ajouter deux valeurs sign\u233\'e9es produit toujours le bon r\u233\'e9sultat quand on utilise le mode compl\u233\'e9ment \u224\'e0 deux. Ce qui veut dire qu'on peut utiliser le m\u234\'eame composant mat\u233\'e9riel pour les additions et pour les soustractions sign\u233\'e9es et non sign\u233\'e9es, }{\rtlch \ltrch\lang3084\loch
ce qui ne serait pas possible avec des modes diff\u233\'e9rents}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les questions \u224\'e0 la fin de ce chapitre mises \u224\'e0 part, vous n'aurez jamais besoin d'effectuer \u224\'e0 la main les op\u233\'e9rations en mode compl\u233\'e9ment \u224\'e0 deux. Les processeurs 80x86 fournissent une instruction, NEG (negate), qui effectue cette op\u233\'e9ration pour vous. De plus, toutes les calculatrices hexad\u233\'e9cimales sont en mesure de l'effectuer en pressant simplement la touche de changement de signe (+/- ou CHS). N\u233\'e9anmoins, effectuer la compl\u233\'e9mentation \u224\'e0 deux \u224\'e0 la main est facile, et vous devez savoir comment le faire. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une fois encore, vous devez noter que les donn\u233\'e9es repr\u233\'e9sent\u233\'e9es par un ensemble de bits d\u233\'e9pendent enti\u232\'e8rement du contexte. La valeur binaire de huit bits 11000000b pourrait repr\u233\'e9senter un caract\u232\'e8re IBM/ASCII ou bien la valeur d\u233\'e9cimale non sign\u233\'e9e 192, ou la valeur d\u233\'e9cimale sign\u233\'e9e \u8211\'9664, etc. En tant que programmeur, c'est votre responsabilit\u233\'e9 d'utiliser cette donn\u233\'e9e convenablement. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_08}{\*\bkmkend p1_08}\rtlch \ltrch\fs23\b\loch
1.8\tab Extensions des }{\rtlch \ltrch\fs23\lang3084\b\loch
v}{\rtlch \ltrch\fs23\b\loch
aleurs }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9es et }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
on }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Etant donn\u233\'e9 que les entiers format\u233\'e9s en mode compl\u233\'e9ment \u224\'e0 deux ont une longueur fixe, un petit probl\u232\'e8me surgit. Qu,est-ce qu'arrive-t-il si vous avez besoin de convertir un entier sign\u233\'e9 de 8 bits en un entier sign\u233\'e9 de 16 bits ? Ce probl\u232\'e8me et son inverse (conversion d'une valeur de 16 bits en une valeur de 8 bits), peut \u234\'eatre envisag\u233\'e9 par les op\u233\'e9rations }{\rtlch \ltrch\i\loch
d'extension}{\loch
 et de }{\rtlch \ltrch\i\loch
contraction}{\loch
. De la m\u234\'eame mani\u232\'e8re, les 80x86 travaillent avec des valeurs d'une longueur fixe, m\u234\'eame si nous sommes en train de travailler avec des nombres non sign\u233\'e9s. L'extension de z\u233\'e9ros (}{\rtlch \ltrch\i\loch
zero extension}{\loch
) permet de convertir de petites valeurs non sign\u233\'e9es en des valeurs plus grandes. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez la valeur "-64". La version compl\u233\'e9mentaire sur 8 bits de cette valeur est 0C0h. L'\u233\'e9quivalent 16 bits de ce nombre est 0FFC0h. Maintenant, consid\u233\'e9rez la valeur "+64". Les versions 8 et 16 bits de cette valeur sont 40h et 0040h. La diff\u233\'e9rence entre les nombres de 8 et de 16 bits peut \u234\'eatre d\u233\'e9crite par cette r\u232\'e8gle : "Si le nombre est n\u233\'e9gatif, l'octet fort de celui-ci contiendra 0FFh ; s'il est positif, son octet fort de sa version 16 bits sera form\u233\'e9 par des z\u233\'e9ros. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Elargir une valeur sign\u233\'e9e d'un certain nombre de bits \u224\'e0 un format plus grand est facile. Il suffit de copier le bit du signe dans tous les bits additionnels du nouveau format. Par exemple, pour \u233\'e9largir un nombre de 8 bits \u224\'e0 un nombre de 16 bits, copiez simplement le bit 7 du nombre de 8 bits dans tous les bits de la plage 8...15. Et pour \u233\'e9largir un nombre de 16 bits \u224\'e0 un double-mot, copiez simplement le bit 15 dans tous les bits de la plage 16...31.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'extension des nombres sign\u233\'e9s est n\u233\'e9cessaire quand on manipule des valeurs sign\u233\'e9es ayant diff\u233\'e9rentes longueurs. Souvent, vous avez besoin de convertir un octet en un mot. Vous devriez appliquer cette extension avant d'effectuer toute op\u233\'e9ration avec des nombres plus grands. D'autres op\u233\'e9rations (sp\u233\'e9cialement les multiplications et les divisions) peuvent n\u233\'e9cessiter un \u233\'e9largissement allant jusqu'\u224\'e0 32 bits. Naturellement, les valeurs non sign\u233\'e9es ne sont pas soumises \u224\'e0 la m\u234\'eame r\u232\'e8gle que les valeurs sign\u233\'e9es}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Autrement dit, en \u233\'e9largissant les valeurs consid\u233\'e9r\u233\'e9es d'avance comme non sign\u233\'e9es, les bits de remplissage doivent toujours valoir z\u233\'e9ro, m\u234\'eame si le bit fort du petit format \u233\'e9tait diff\u233\'e9rent de z\u233\'e9ro, n.d.t. }
}}
}{\loch
.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Exemples d'extension sign\u233\'e9e :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
Huit bits\tab \tab Seize bits\tab \tab Trente-deux bits}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
80h\tab \tab \tab FF80h\tab \tab \tab FFFFFF80h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
28h\tab \tab \tab 0028h\tab \tab \tab 00000028h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
9Ah\tab \tab \tab FF9Ah\tab \tab \tab FFFFFF9Ah}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
7Fh\tab \tab \tab 007Fh\tab \tab \tab 0000007Fh}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
---\tab \tab \tab 1020h\tab \tab \tab 00001020h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
---\tab \tab \tab 8088h\tab \tab \tab FFFF8088h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour \u233\'e9largir un octet non sign\u233\'e9, il faut }{\rtlch \ltrch\i\loch
z\u233\'e9ro-\u233\'e9largir}{\loch
 la valeur. Ce genre d'extension est tr\u232\'e8s facile, il suffit simplement d'ajouter des z\u233\'e9ros de remplissage l\u224\'e0 o\u249\'f9 l'op\u233\'e9ration est requise. Par exemple, pour \u233\'e9largir la valeur non sign\u233\'e9e de 8 bits 82h \u224\'e0 une valeur non sign\u233\'e9e de 16 bits, ajoutez simplement des z\u233\'e9ros dans l'octet fort du mot : 0082h. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
Huit bits\tab \tab Seize bits\tab \tab Trente-deux bits}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
80h\tab \tab \tab 0080h\tab \tab \tab 00000080h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
28h\tab \tab \tab 0028h\tab \tab \tab 00000028h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
9Ah\tab \tab \tab 009Ah\tab \tab \tab 0000009Ah}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
7Fh\tab \tab \tab 007Fh\tab \tab \tab 0000007Fh}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
---\tab \tab \tab 1020h\tab \tab \tab 00001020h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
---\tab \tab \tab 8088h\tab \tab \tab 00008088h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Contracter une valeur sign\u233\'e9e en un format plus petit est un pe}{\rtlch \ltrch\lang3084\loch
u}{\loch
 plus d\u233\'e9licat. Les extensions n'\u233\'e9chouent jamais. Etant donn\u233\'e9e une valeur sign\u233\'e9e de }{\rtlch \ltrch\i\loch
m}{\loch
 bits, vous pourrez toujours la convertir en un nombre de }{\rtlch \ltrch\i\loch
n}{\loch
 bits (o\u249\'f9 n > m). Malheureusement, \u233\'e9tant donn\u233\'e9 un nombre de }{\rtlch \ltrch\i\loch
n}{\loch
 bits, vous ne }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 pas toujours le convertir en un nombre de }{\rtlch \ltrch\i\loch
m }{\loch
bits quand m < n. Par exemple, consid\u233\'e9rez la valeur -448. Sa repr\u233\'e9sentation hexad\u233\'e9cimale sur 16 bits est 0FE40h. Ce nombre a une taille trop grande pour \u234\'eatre contenu dans un espace de 8 bits. C'est un exemple de condition de d\u233\'e9passement, qui a lieu lors des op\u233\'e9rations de conversion. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprimer efficacement des valeurs, il faut jeter un coup d'oeil \u224\'e0 l'octet ou aux octets forts que vous voulez liquider. Les octets forts que vous voulez supprimer doivent contenir soit des z\u233\'e9ros, soit 0FFh. Si vous rencontrez toute autre valeur, vous ne pourrez pas contracter le nombre sans le tronquer. Finalement, l'octet fort de votre valeur r\u233\'e9sultante doit toujours correspondre \u224\'e0 la valeur d'origine. Exemples (16 bits \u224\'e0 8 bits) :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
FF80h peut \u234\'eatre converti en 80h. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
0040h peut \u234\'eatre converti en 40h.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
FE40h ne peut pas \u234\'eatre converti en une valeur de 8 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab 0100h ne peut pas \u234\'eatre converti en une valeur de 8 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_09}{\*\bkmkend p1_09}\rtlch \ltrch\fs23\b\loch
1.9\tab D\u233\'e9calages et }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
otations}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre ensemble d'op\u233\'e9rations logiques - qui s'applique aux cha\u238\'eenes de bits - constitue les op\u233\'e9rations de }{\rtlch \ltrch\i\loch
d\u233\'e9calage}{\loch
 et de }{\rtlch \ltrch\i\loch
rotation}{\loch
. Les deux cat\u233\'e9gories peuvent \u224\'e0 leur tour se subdiviser en }{\rtlch \ltrch\i\loch
d\u233\'e9calage \u224\'e0 gauche}{\loch
, }{\rtlch \ltrch\i\loch
rotation \u224\'e0 gauche}{\loch
, }{\rtlch \ltrch\i\loch
d\u233\'e9calage \u224\'e0 droite }{\loch
et }{\rtlch \ltrch\i\loch
rotation \u224\'e0 droite}{\loch
. Ces op\u233\'e9rations s'av\u232\'e8rent extr\u234\'eamement utiles \u224\'e0 la programmation en assembleur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop697\shpbottom2108\shpbxcolumn\shpbxignore\shpleft0\shpright6915{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw461\pich94\picwgoal6915\pichgoal1410\pngblip
89504e470d0a1a0a0000000d49484452000001cd0000005e0803000000761ebf7600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000031149444154789ced9a5172e230104475
3d1dc61cc687f161a40bec09f8d55a0e2c94a6e54a40ac265dfdfe3274c4300f0b992414c14398dd8018886c32219b4cc82613b2c9846c32219b4cc82613b2c9
846c32219b4cc82613b2c9846c32219b4cc82613b2c984339b6ba898f225ac9d30aa9708aa5b8c1b88a6f8dd25720c68015738b39953daecd0e296d024c39a52
068bac40500e298504ca5b8e8b5d02bc7df6a47b9dce6cee6c66b8696f126903762a195eb1b9fab0d5b5ca37e5b898256a13eb05b7ec067f36ada3155c3ca55a
5be0e61913dc3cf325e2278cd6512a66892d40efbe70d7df6667be2e3100a179c968efdbaf6d68335df09be212d06e6d965865f305809f3ac4056f7260bebb1c
7cb0290bd2b9e2fd5ad7e60832b8523a83cc0995d3712ab6275218ae6be3938d3e3747904043c7c1d35e6efb1915edb479df7fedd4730da3a36e4c095d9c3ad3
8e60430d257cafb8f5ee00d14e9be091a9737f8b96d0fda6f8bfc82613b2c9846c32219b4cc82613b2c9846c32e1c366f8a5cc9e5b8b8f8660179d698d28774c
fcb88c9e71263e1a0ae58fe5c4cfd53225fdfa2bfe0c3e1aeadbcc2d5f1337e1eb94f4ecb9b5f868e8c4663bc5dbc4db5fb84fbcc0741bffe7a7c074137fd82c
4d7af6dc5a7c3474bad3023f15e4c7c41f1f6e9d74eb67b769e2379b6d5c363b409bc703668b2bf7726b13c64b80f16b80f11260fceebe89cb660760f328db0f
ac47f99df815c70b8edfdf29b2f93d5a9b47ed7e4b67ddb4f39e1297cd1ea133bde701b6e5a971d93ce1c9e6f163781e6025e372991397cd534e6c7e61e67d63
4e5c364f39dd692b602f3c981597cd13740a1a838f86748732061f0de9db8331f86848dfec8dc14743fad67d0c3e1ad25fc4c6e0a321d91c838f863efabf0701
a751fca7e9775ef327f0d150f8a5cc9e5b8b8f86665b7995d9736b71d7907803d964423699904d26649309d964423699904d26649309d964423699904d266493
09d964423699904d26649309d964423699904d26649309d964423699904d26649309d964423699904d26649309d964423699904d26649309d964423699904d26
fe0202cbe7a1cb5d4a820000000049454e44ae426082}}}}}
}{\loch
L}{\loch
e d\u233\'e9calage \u224\'e0 gauche d\u233\'e9place chaque bit d'une cha\u238\'eene d'une position vers la gauche (voir figure 1.8).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 1.8 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 gauche}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le bit z\u233\'e9ro se d\u233\'e9place \u224\'e0 la position 1, la valeur qui \u233\'e9tait \u224\'e0 la position 1 passe \u224\'e0 la position 2 et ainsi de suite. Il y a sans doute deux questions qui surgissent naturellement : \u171\'ab Qu'est-ce qui arrive \u224\'e0 la position du bit z\u233\'e9ro ? \u187\'bb et \u171\'ab Qu'est-ce qui devient le bit qui occupait la position sept ? \u187\'bb. Eh bien, ceci d\u233\'e9pend du contexte. Le bit \u224\'e0 la position z\u233\'e9ro prendra la valeur 0 et le bit de la position 7 sera perdu. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Noter que d\u233\'e9caler une valeur vers la gauche, c'est faire la m\u234\'eame chose que la multiplier par sa base. Par exemple, d\u233\'e9caler un nombre d\u233\'e9cimal d'une position vers la gauche (ajouter un z\u233\'e9ro \u224\'e0 la droite du nombre) \u233\'e9quivaut \u224\'e0 multiplier ce nombre par dix (sa base) :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
  }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab 1234 SHL 1 = 12340 \tab (SHL 1 = d\u233\'e9caler d'une position vers la gauche)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque la base d'un nombre binaire est deux, le d\u233\'e9caler vers la gauche c'est le multiplier par deux. Et si vous d\u233\'e9calez une valeur binaire vers la gauche deux fois, vous la multipliez en fait par 2 deux fois (autrement dit par quatre). Et si vous le faites trois fois, vous la multipliez par huit (2*2*2). En g\u233\'e9n\u233\'e9ral, si vous d\u233\'e9calez une valeur par la gauche }{\rtlch \ltrch\i\loch
n }{\loch
fois, vous multipliez cette derni\u232\'e8re par 2}{\rtlch \ltrch\super\loch
n}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un d\u233\'e9calage vers la droite fonctionne de la m\u234\'eame mani\u232\'e8re, sauf qu'on d\u233\'e9place les bits vers la direction oppos\u233\'e9e.  Le bit 7 passe au bit 6, le bit 6 au bit 5, le bit 5 au bit 4, etc. Pendant un d\u233\'e9calage vers la droite, le bit 7 prend la valeur 0 et le bit z\u233\'e9ro est perdu (voir figure 1.9).}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 1.9 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 droite}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1140\shpbxcolumn\shpbxignore\shpleft0\shpright6750{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw450\pich76\picwgoal6750\pichgoal1140\pngblip
89504e470d0a1a0a0000000d49484452000001c20000004c0803000000c90b476b00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002cd49444154789ced99d191e230104495
9e82b18371300a464ae022d85fad07c3b1785a142bb893baaadf1f5353f6d00f09194215e484d103887791427aa4901e29a4470ae991427aa4901e29a4470ae9
994ee1160c575ec3d66846f51a4135c598406b8eaf5fa2d61203bac848a65358724e3ea598328a2e6c391770910d582921e790413995b8f84be0cf4cddbb6773
389dc29de412cdfb98c815506214b8368b09f0d5cd8cbb725ca0421b645be14d8731a3422f6603cba49aaa05ee8d31c3fccb1af10da397922bbc440a50f85026
1bc7483ee86d8901582c4b41dbdabe8af1125af127610d68336e7cf94ae10b002996da82f72f10e86e047f91d50539dcf076ac55d84d016ba2915cc9a89c2f67
5a270037dbb5f1f144df85dd6430d2e5d8e823dd4f9868232dfbf6ea632ed68c0eaa3167b40c7522ed26a191327ea64bada734947f86679fc673684ba19e0bc5
e791427aa4901e29a4470ae991427aa4901e29a46716858194d1b9d58914c2228ee813e546fcbf2ea33bfe676698c108f58fe789942fcf90eefe77fc316698c1
682b2c678e985df3d790eed1b9d5791556acb03662ae38e6da9052b194da5058a5f0054e0a2f35aff0daeb62fe5b3e09c7ddb77627fc5a76c28f01a5f0394ee1
918e53782b9f15dec22ca8dd2bbcd6cf0a8fb25778d4a5f029402188f95ef60a41ccf7b277f27ebb143e0215bae01ecaa3dba5f09196c2c7e0cee5a1ed52f848
f811d85108a7dc707950bb147aee0a83c71a0a2e0f6a9742cf935568af4a71ebc45e0d6b97428f8e33ddcc3083a1878a6e6698c1d0a37d3733cc60e807b66e66
98c1d0cfdcddcc3083a13f9bba996106430abb996106e39ffe6b1f70376aff6df73beff943cc30831148199d5b95c277199d5b9d47a1e8460ae991427aa4901e
29a4470ae991427aa4901e29a4470ae991427aa4901e29a4470ae991427aa4901e29a4470ae991427aa4901e29a4470ae991427aa4901e29a4470ae9f9064633
6f6a84d90e180000000049454e44ae426082}}}}}
}{
 }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisqu'un d\u233\'e9calage vers la gauche est l'\u233\'e9quivalent de la multiplication par deux, il ne devrait pas surprendre qu'un d\u233\'e9calage vers la droite soit l'\u233\'e9quivalent d'une division par deux (ou en g\u233\'e9n\u233\'e9ral d'une division par la base du nombre). Si vous ex\u233\'e9cutez }{\rtlch \ltrch\i\loch
n}{\loch
 d\u233\'e9calages \u224\'e0 droite, vous divisez pratiquement ce nombre par 2}{\rtlch \ltrch\super\loch
n}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a pourtant un probl\u232\'e8me avec les d\u233\'e9calages \u224\'e0 droite : comme d\u233\'e9crit ci-dessus, un d\u233\'e9calage vers la droite est \u233\'e9quivalent \u224\'e0 une division }{\rtlch \ltrch\i\loch
non sign\u233\'e9e}{\loch
 par deux. Par exemple, si vous d\u233\'e9calez la repr\u233\'e9sentation non sign\u233\'e9e de 254 (0FEh) d'une position vers la droite, vous obtiendrez 127 (07Fh), exactement ce que vous vous attendiez. Cependant, si vous d\u233\'e9calez la repr\u233\'e9sentation binaire de -2 (0FEh) vers la droite d'une position, vous obtiendrez encore 127 (07Fh), qui }{\rtlch \ltrch\i\loch
n'est pas }{\loch
correct. Ce probl\u232\'e8me se produit parce que cette op\u233\'e9ration comporte l'insertion d'un z\u233\'e9ro dans le bit sept. Si la valeur qu'il contenait \u233\'e9tait le bit du signe valant 1, alors le nombre est devenu positif. Pas un bon r\u233\'e9sultat quand on divise par deux. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour utiliser le d\u233\'e9calage \u224\'e0 droite comme un op\u233\'e9rateur de division, on doit d\u233\'e9finir une troisi\u232\'e8me op\u233\'e9ration de d\u233\'e9calage : }{\rtlch \ltrch\i\loch
le d\u233\'e9calage \u224\'e0 droite arithm\u233\'e9tique}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Nous n'avon}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
s}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 pas besoin d'un d\u233\'e9calage arithm\u233\'e9tique gauche. L'op\u233\'e9ration standard de d\u233\'e9calage \u224\'e0 gauche fonctionne pour les nombres sign\u233\'e9s et non sign\u233\'e9s. }
}}
}{\loch
. Un d\u233\'e9calage arithm\u233\'e9tique fonctionne tout comme un d\u233\'e9calage normal (un }{\rtlch \ltrch\i\loch
d\u233\'e9calage logique \u224\'e0 droite}{\loch
) avec une exception : au lieu de placer z\u233\'e9ro dans le bit sept il le laisse simplement dans son \u233\'e9tat initial sans le changer, comme montr\u233\'e9 \u224\'e0 la figure 1.10.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1080\shpbxcolumn\shpbxignore\shpleft0\shpright6750{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw450\pich72\picwgoal6750\pichgoal1080\pngblip
89504e470d0a1a0a0000000d49484452000001c2000000480803000000529a057d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000032549444154789ced9add79eb20104469
8f62e462548c8a81065c415ef70a49fed30eb164922cfbdd396fde6c80cc89303809429c13ac17405aa142f750a17ba8d03d54e81e2a740f15ba870addd3a9c2
311474fd12c64a37aa4b04d529c609b4a67874881c031ac08c4e15e6942610549c128a2f8c296530ca08ace4905248a03ce538e821c0efccdcd995c34e15ce4c
3ad034af16b9024a0a193e9bb948d0d5b11857e538a821ca22c60b9cd0867e15022f23784ca4a81ae0de1813dc1bf325e219a31693440d310528db8e9ed6f2c2
04721e871880c53c64b4b5cd8f3154982ef837e112d066ac8618a9f020e8eda62437e03d0c843a1bc127141990c3116fc77c0a3f25a347a2f200e484ca6939d4
eaf3246c2e66f01185ef859f92d0c29663a37eb0e61326da48f3bcbdeaa873694607d598127a0c7922fd94092e2ce13bdd54bba9a18d34c1b34fed220a86e0bd
90fc3054e81e2a740f15ba870add4385eea142f774a63038c53433cbc935f0728d23eaaa0caa7f46770aaf9a4a44a5fca531e9fefc276ec78dc2bc678d59357f
9974db66d6153b85525128959805c72c152982a54845a150e1015e152e25a070eb5531dfcb3be1b8fbd6ae846f65257c5d2015565972d82b5cc3d10ab7ba5278
0b33a376ad70abef15ae65ad70ad53618de5b8a71522298fba5608627e94b593f6762abc73bb61a9d0746e2ff5f7fdbfdb4e85779eeec92ab45d6efbfa9bfedf
6dffef1506886c8787972f97d7197c5b797dadd44fb6e793ed54f832ff4e21f02acb7ff7c23a680ffb410fb483e1bf6da742c10a65ddb676455922d3cdb26c75
b07eba5d3d856fdaa95080421e67ced297425e2a3ea02785f27cb517e1d5fe18fd28dc5ede02bb9f4af901db1bba56c88fb98fd0b7c26b4561ae28bcf28f4de6
f353e1797a5318b042b4cc52c67f59fffbeef33ff8cfd19dc2c7ed3938c226bc2d33cbc9f5fccfa998f9f8009bf0b6cc2c27ff6e7eeb85f9c13a292a6cc63a29
2a6cc63a292a6cc63a292a6cc63a292a6cc63a292a6cc63a292a6cc63a292a6cc63a292a6cc63a292a6cc63aa93e3f76740593720f15ba870add4385eea142f7
50a17ba8d03d54e81e2a740f15ba870add4385eef907dac7de1950b0332e0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 1.10 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 droite arithm\u233\'e9tique }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ceci produit g\u233\'e9n\u233\'e9ralement le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
a}{\loch
ttend}{\rtlch \ltrch\lang3084\loch
u}{\loch
. Par exemple, si vous effectuez le d\u233\'e9calage arithm\u233\'e9tique \u224\'e0 droite de \u8211\'962 (0FEh) vous obtiendrez \u8211\'961 (0FFh). Gardez cependant une chose \u224\'e0 l'esprit. Cette op\u233\'e9ration arrondit toujours les nombres \u224\'e0 l'entier le plus proche }{\rtlch \ltrch\i\loch
inf\u233\'e9rieur ou \u233\'e9gal au r\u233\'e9sultat actuel}{\loch
. En se basant sur leur exp\u233\'e9rience avec les langages de haut niveau et les r\u232\'e8gles standard de troncation, beaucoup de gens prennent pour acquis qu'une division arrondit toujours vers z\u233\'e9ro. Mais ce n'est simplement pas le cas. Par exemple, si vous appliquez le d\u233\'e9calage arithm\u233\'e9tique sur \u8211\'961 (0FFh), le r\u233\'e9sultat sera \u8211\'961 et non z\u233\'e9ro. \u8211\'961 est inf\u233\'e9rieur \u224\'e0 0, donc l'op\u233\'e9ration de d\u233\'e9calage arithm\u233\'e9tique arrondit le r\u233\'e9sultat \u224\'e0 \u8211\'961. Ceci n'est pas une bogue dans le d\u233\'e9calage arithm\u233\'e9tique. C'est la mani\u232\'e8re dont les divisions enti\u232\'e8res sont normalement }{\rtlch \ltrch\lang3084\loch
effectu\u233\'e9es sur une machine}{\loch
. Et }{\rtlch \ltrch\lang3084\loch
le }{\loch
80x86 }{\rtlch \ltrch\lang3084\loch
ne fait pas d\u8217\'92exception}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Autres deux op\u233\'e9rations utiles sont la }{\rtlch \ltrch\i\loch
rotation vers la gauche }{\loch
et la }{\rtlch \ltrch\i\loch
rotation vers la droite}{\loch
. Ces op\u233\'e9rations ressemblent aux op\u233\'e9rations de d\u233\'e9calage, mais avec une diff\u233\'e9rence principale : le bit balay\u233\'e9 d'une extr\u233\'e9mit\u233\'e9 revient dans l'autre. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1245\shpbxcolumn\shpbxignore\shpleft0\shpright6750{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw450\pich83\picwgoal6750\pichgoal1245\pngblip
89504e470d0a1a0a0000000d49484452000001c20000005308030000003b8bf72500000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000033c49444154789ced99d195a3300c45dd
1ec54031144331b881ad20bf5e43209948cf7b8678b29276df3d673e467971846e6220498504275937407aa1c2f0506178a8303c54181e2a0c0f1586870ac343
85e1a1c2f0506178a8303c54181e2a0c0f1586870ac34385e1b157b84ed33480369671c8a0384d0b5824c3e3a82beb254a9ea61994cba04bf334a3757d61af70
63d4235d9792f5fc9092bd8e8e635aab2e50ce68e532ea2596656bc33b2e142e60a2dbecb5af46bbeb821e58f01366581e565d1b8f3fdfb850889a48196d6209
6f6d63d32dde083312a397488dde7ce1a1c315ec76551698ffb601828f6cdd1af1718c096fbce02c4b853dcc2b286ec3c7cda9ea26b6f52944ef8e32c2131c15
be0fec61400a7346f1a55e7926e00a862b23de5d792e7c1b7c4330a32bd23cb44e6f608d2d8cae48d1c5135ea25e912ebc22fd0668cc957904f575f8f647a886
47780398eabd253cfb821e785f48fe0254181e2a0c0f1586870ac34385e1a1c2f098294c41b19a571b3b85b8fab97263fc57cbf0154d3154f84bf38779de3426
e9f78ff85338549825f731abf0cd246d35af36544885efbf7053a11cdd3166f98473cc05a665fc21a5c0b4883f151691b69a571b870a8b7cfb3fae2d9014157f
5e8934d2524a55a8e2874219a7c2d717060af707d40e56ceb25408e325c1f82dc17849307e0a17f17bda99474f0af7b23e093dcb3df11b8e171c3fdf1e4ae159
74841b857bedbc7bd642e4908de21eefef7d28dc0be20b90d7093fe7d688976bf1775657451f7850b8ffabc8b89c1af1742d7e7d75504c2e647a54780fa8211f
4f6cc4cbb5f8f5d571f1a7c6d18107857aefd2a7aaf4f56c6514a742f9c2ffc2e50c151ef312830b745341857715495809746b4f8552e1f906170acfb25468ff
051b15428591bee6a642ac50e2f8c7262a840a413679fdd5fe3f57f8b8c94a5f697d0b72a9fc41e451d863a7d050430fe2286c86f7825d0fcfa1180ab98e3808
9bd9bdc01ebaf0d03a7be8c243ebeca10b0fadb3872e3cb4ce1ebaf0d03a7be8c243ebeca10b0fadb3872e3cb4ce1ebaf0d03a7be8c243eb2e7a088cf5ec0a15
f6623dbbe24321e9820ac34385e1a1c2f0506178a8303c54181e2a0c0f1586870ac34385e1a1c2f05061787e03f3ff53196bbb602d0000000049454e44ae4260
82}}}}}
}{\loch
F}{\loch
igure 1.11 Op\u233\'e9ration de rotation \u224\'e0 gauche}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1215\shpbxcolumn\shpbxignore\shpleft0\shpright6750{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw450\pich81\picwgoal6750\pichgoal1215\pngblip
89504e470d0a1a0a0000000d49484452000001c20000005108030000007643562e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000035b49444154789ced9a5176a3300c45bd
3d16038b61312c066f6056d05f0f14270dd6534f82d34a3a7df79cf9188d6a29bac56032a990e024eb06482f54181e2a0c0f1586870ac34385e1a1c2f0506178
a8303c54181e2a0c0f1586870ac34385e1a1c2f07855b84ed334c8e69671c8327919a769018b64f8e9b695c11a799a66102e830ccdd38cd6b5c2abc29d518c74
5d4a06e3434a3ee3e8d34deba60bae81961ec1afd1b2f7e107c70a1739d17df44097f221d605fdc3827f6086e16195b1b1fef1826385a0b594e11e96f0d636aa
6ef146989118b944c2bd99e1a997332bd8edd28cc6bf6f80e892cdcaa71b13de78d16d960a3b985719db67af742cc2bb58ed2a04bf1d9b597883a3c2eba0ce06
a8306794be6c4f9e09b882c91b23de5d792fbc0c3c10ccf089340fdaed0dacb127a32752b0132b4b6c4fa40b9f489f008d797338a2f03a3c7d096dc9233c00a6
ed6c89d6460faf3c1792b74285e1a1c2f0506178a8303c54181e2a0c8f33852926b63333ad2e80ed28337a358c0bfe60f89770a7f09fe41b571f125de12bc9af
661b1246616e39e62c923fd4ec97925fcd369d992ba8f0cacc5cd1282c8ac2a2ccb9e03917acb028528aa2b050e1139c157e8680c29a2be67c0f37c28fb0f05d
c3ad94da8850585ba44295747c1b7e1eda311ca9b0c685c21a6e151ee942611d3db808f7b05478c4a950a31eb0daa1ddc623763a60e52b2e9c002b4ab696aee7
5361e57e4c6e8726e7768a8b218b7c25fd4dab53e19dc7971df73bcff90548bedd069bf8d78deab5f4cbab9f2cfe758509723cc3b4c1b2ff8f1a1c07e949595e
49bfb23a159eeb9f0d8aeba40e4d261f4356e2dfa7f7ae4e85e7fa8ffedabb4f6ab62eb9d5b5f94fa477acce8d14d6afa391cf80cdc4f838d3e0496141e742b7
878afb8f5161f3d776689f518f47fb92a810d50ff4828d0a71fd40afb9a910d70ff4651315e2fa91beb54f8fd9867853f883686f822e86b5d708bfce1f52f866
a810d7b7f271012a7452bf032fad5bf7615dbf032fad5bf7615dbf032fad5bf7615dbf032fad5bf7615dbf032fad5bf7615dbf032fad5bf7615dbf032fad5bf7
615dbf032fad5bf7615dbf032fad5bf7615dbf032fad5bf761f57aec1d188fee86973ec865a8303c54181e2a0c0f1586870ac34385e1a1c2f0506178a8303c54
181e2a0c0f1586870ac3f31f4a1b9a9cc73d07d80000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 1.12 Op\u233\'e9ration de rotation \u224\'e0 droite}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_10}{\*\bkmkend p1_10}\rtlch \ltrch\fs23\b\loch
1.10\tab Champs de bits et compactage de donn\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quoique la technologie 80x86 travaille de fa\u231\'e7on optimale avec des octets, des mots et des doubles-mots, vous aurez occasionnellement besoin de travailler avec un type de donn\u233\'e9es qui se sert d'un nombre d'octets autre que huit, seize ou trente-deux. Par exemple, consid\u233\'e9rez une date dans }{\rtlch \ltrch\lang3084\loch
le format}{\loch
 : "4/2/88". Pour repr\u233\'e9senter cette date, il faut trois valeurs num\u233\'e9riques : une valeur pour le mois, une pour le jour et une pour l'ann\u233\'e9e}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Notez qu'aux Etats-Unis, les dates s'\u233\'e9crivent dans le format mois-jour-ann\u233\'e9e. J'ai voulu garder cette repr\u233\'e9sentation pour ne pas alt\u233\'e9rer les exemples et les exercices, n.d.t.}
}}
}{\loch
. Les mois, sans doute, prennent les valeurs de 1 \u224\'e0 12 et donc demandent au mois quatre bits (pour un maximum de 16 valeurs diff\u233\'e9rentes). Les jours vont de 1 \u224\'e0 31, donc cinq bits pourraient suffire (pour un maximum de 32 valeurs repr\u233\'e9sentables). Et, finalement, les ann\u233\'e9es, en pr\u233\'e9sumant adopter la plage 0...99, demandent sept bits (qu'on peut utiliser pour repr\u233\'e9senter jusqu'\u224\'e0 un maximum de 128 valeurs). Quatre plus cinq plus sept, fait 16 bits, ou deux octets. En d'autres termes, on peut compacter notre date }{\rtlch \ltrch\lang3084\loch
en}{\loch
 deux octets au lieu de trois (comme on aurait d\u251\'fb faire si on utilisait un octet pour chaque valeur de mois, de jour et d'ann\u233\'e9e). Ceci \u233\'e9conomise un octet de m\u233\'e9moire pour chaque date stock\u233\'e9e, ce qui peut repr\u233\'e9senter un gain substantiel d'espace si vous avez \u224\'e0 travailler avec beaucoup de dates. Les bits peuvent \u234\'eatre arrang\u233\'e9s selon la figure 1.13 : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 1.13 Format de donn\u233\'e9es compact}{\rtlch \ltrch\lang3084\loch
\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1095\shpbxcolumn\shpbxignore\shpleft0\shpright6750{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw450\pich73\picwgoal6750\pichgoal1095\pngblip
89504e470d0a1a0a0000000d49484452000001c200000049080300000099c6d6d800000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000053d49444154789ced994d72a330108575
3c7317e02c2ece82b90b7081d978315e78e114c3483260f55fcad458897bd2af2ae3ca53bb91f4498d3471b349b9dc7777c0f4af3284ea6508d5cb10aa972154
2f43a85e8650bd0ca17a1942f53284ea6508d5cb10aa9721542f43a85e8650bd0ca17a1942f53284ea6508d56b17c222fcd354753d10779e479c2afa755d8f5c
8eaa19b1b97d00b7abeb8ee94a5d37d81abd3732a1f3e03b51d0817655c1847715ff4032bca51b359343ec091ee1a2860e6687f620ac62703572ae1f8d63fca6
9bc782ba7e090c0d321f995237843560c544796bc013ed810ce254e05e7b56be6b4c388724fadc4cf9b53cd66c0e2e3519e1a32764303bb403613138e61b8beb
3be1187f405fb8bb1dccb3a458330137cc28334ba1a9623c69381d9dd19094c12564c0c35bd2f25f68843c6884abaa990e66877615d2103cba06159a650b9154
cbef08c01a35d4d444193626b4931c2ebf0bb92dc1658ed6c8962fc757353abc45c2c61f79266c92cfd6de13da8f3054b606bb61b7f0086b3730ae5f0923359f
47180a2976c7a2e65e6e410383d635dcf487e1715b960eefaeca092f3dde7e0b84f45b2b58611772c0fdfc0f4ce8f308475f0ab0eb5f4c9db00b99b7e91ce65e
183db1b9e12de25687272bbcdbde02e1189657815d7f6eac5d4da3e933e22f0d5abb3242e15d1884dd4f66827d31b108e3f088cd0d2f460bb92be958f516efc2
a1c095c6a1cfd40fc7d1814477dc498466f8ec443a86731c543807f233c15e081af6444a3b8cfa8883b9f5c5546239493c9192c1ecd0fe42da55688d7d86305c
b368b4f377affab9e38c702f1c7127e6585c85db18bf8dfd0597718742d842dc4c0d15fbc838bea7937ce5bdd0f4963284ea6508d5cb10aa9721542f43a85e86
50bd0ca17a1942f57a16a1337da5b22014c066b38571ecb5ffbd23efd36d41cf23fc43157af012fb4af5225b0ace399a17d899104e58f71ebcc2befec2babec8
9682738ee605b621348486f0bb6d4368080584cec527b4ae073d58ece9e080ddbb32fe5a421b675910c6877c5ce13cc75f41cb66c3f8d546591e08d38607c2fe
10bb702cd3fe0173b59179b78702996bf4e29447cc0a35c8d1d9101efa3b1384f070bacf074678e0c8e22c2bc2dbe572f998af0cc2b4e58110c46f0861960461
d290ecc2386dbd03fd03e6664373b12b646ed171887d89ed0935c8d1d910b6b1cb6417b6f1e9c716236c03da538b11c22c2bc24b98dd8f994198b63c1082f80d
21cc92204c1ad2421a3a71e841ff8099743b35571b99c9d8973418216c90a3b3218ccf6a7b8cb08fa338f418615c58658f11c22c00e165fe2d205c5a10c2351e
22dcb26084f78614a12f906d09fb074c505f5b5231919954cce3549ea88d1ae4e87c088f7edacb89206cdbb0ad08c2e9c023045900c2f583225c3e10c2f50322
dcb26084f70f709c298f0732cd8909eaebc34cea6b6aa615337d43a6b9d306393a1fc2fee8515184e1655ff61461db4f276ce32cdf8c90543568e2fa4a6c60e2
8ac9214c1be4e87c08a7888520f4fcfcb6a2087d252536ce820ae9592ca467b6909ed9427a960ae9d9109661c35184a7e3e9c4209cc2eb9041986601086fe271
e6c61e676eec71e6261d676ee438f30311f6e1704d114ee10ec8203cfa830e8330cd022f156b1da5978a0b4208e2d1a5e24211260d3f1ce1f68310963cc2f507
0f3ac902aef61b4172b547ac503cbcdaa7eb005ced9365f0431162d97fb065b30da1213484df6d674298f12fd7f6577b64e741e858bdc4ce28adddce81d0f495
ca81f0ff62f8ee9b300f42d3bbca10aa9721542f43a85e8650bd0ca17a1942f53284ea6508d5cb10aa972154afbf3f3bf5b4f419bbc80000000049454e44ae42
6082}}}}}

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
MMMM repr\u233\'e9sente les quatre bits n\u233\'e9cessaires \u224\'e0 repr\u233\'e9senter la valeur du mois, DDDDD repr\u233\'e9sente les cinq bits pour la valeur du jour et YYYYYYY repr\u233\'e9sente les sept bits pour l'ann\u233\'e9e. Chaque groupe de bits repr\u233\'e9sentant un objet est un }{\rtlch \ltrch\i\loch
champ de bits}{\loch
 (}{\rtlch \ltrch\i\loch
bit field}{\loch
). Une date comme "4/2/88" serait donc exprim\u233\'e9e par 4158h :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab 0100 00010 1011000\tab = 0100 0001 0101 1000b ou 4158h}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab  4     2      88}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quoique les donn\u233\'e9es compact\u233\'e9es soient efficaces du point de vue de l'espace (}{\rtlch \ltrch\lang3082\loch
elles occupent moins }{\rtlch \ltrch\lang3084\loch
d\u8217\'92espace en m\u233\'e9moire}{\loch
), elles sont inefficaces du point de vue calcul (lente}{\rtlch \ltrch\lang3082\loch
ur}{\loch
!). La raison ? Des instructions additionnelles sont n\u233\'e9cessaires pour d\u233\'e9compacter (}{\rtlch \ltrch\i\loch
unpack}{\loch
) les donn\u233\'e9es rang\u233\'e9es dans les champs de bits. Ces instructions suppl\u233\'e9mentaires requi\u232\'e8rent plus de temps pour s'ex\u233\'e9cuter (et des octets additionnels pour stocker les instructions elles-m\u234\'eames),}{\rtlch \ltrch\lang3082\loch
 donc }{\loch
vous devez soigneusement consid\u233\'e9rer quelles donn\u233\'e9es compact\u233\'e9es dans des champs peuvent vous faire \u233\'e9conomiser quelque chose. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3082\loch
Les exemples }{\loch
de paquets de donn\u233\'e9es utiles }{\rtlch \ltrch\lang3082\loch
abondent}{\loch
. Vous pourriez compacter huit valeurs bool\u233\'e9ennes dans un seul octet, vous }{\rtlch \ltrch\lang3082\loch
pouvez }{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
galement compacter des codes BCD (binaire cod\u233\'e9 d\u233\'e9cimal), etc. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_11}{\*\bkmkend p1_11}\rtlch \ltrch\fs23\b\loch
1.11\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
j}{\rtlch \ltrch\fs23\b\loch
eu de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
aract\u232\'e8res ASCII}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le jeu de caract\u232\'e8res ASCII (en excluant la version \u233\'e9tendue d\u233\'e9finie par IBM), est divis\u233\'e9 entre quatre groupes de 32 caract\u232\'e8res. Le premier groupe, les codes ASCII allant de 0 \u224\'e0 1Fh (31), constitue un ensemble sp\u233\'e9cial de caract\u232\'e8res non imprimables, qu'on appelle caract\u232\'e8res de contr\u244\'f4le. On les appelle de cette mani\u232\'e8re parce que, au lieu d'afficher des caract\u232\'e8res ou des symboles, ils r\u233\'e9alisent diverses op\u233\'e9rations de contr\u244\'f4le d\u8217\'92affichage. Des exemples comprennent le retour chariot qui positionne le curseur au bord gauche de la ligne courante}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Historiquement, le terme "retour chariot" (emprunt\u233\'e9 de l'anglais }{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
carriage return}{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
) se r\u233\'e9f\u232\'e8re au chariot du papier dans la machine \u224\'e0 \u233\'e9crire. Un retour chariot consistait \u224\'e0 mouvoir physiquement le chariot vers l'extr\u234\'eame droite, de sorte que le prochain caract\u232\'e8re tap\u233\'e9 aurait \u233\'e9t\u233\'e9 imprim\u233\'e9 sur la marge gauche de la feuille. }
}}
}{\loch
, le "saut de ligne" (}{\rtlch \ltrch\i\loch
line feed}{\loch
), qui d\u233\'e9place le curseur vers le bas d'une ligne \u224\'e0 la fois) et l'effacement arri\u232\'e8re (}{\rtlch \ltrch\i\loch
backspace}{\loch
), qui fait retourner le curseur d'une position vers la gauche et efface le caract\u232\'e8re qui s'y trouvait. Malheureusement, diff\u233\'e9rents caract\u232\'e8res de contr\u244\'f4le effectuent diff\u233\'e9rentes op\u233\'e9rations sur diff\u233\'e9rents p\u233\'e9riph\u233\'e9riques de sortie. Il y a pourtant une tr\u232\'e8s petite standardisation. Pour savoir comment un caract\u232\'e8re de contr\u244\'f4le affecte exactement un p\u233\'e9riph\u233\'e9rique particulier, vous aurez besoin de consulter son manuel. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le second groupe de 32 codes de caract\u232\'e8res ASCII comprend divers symboles de ponctuation, de caract\u232\'e8res sp\u233\'e9ciaux et de chiffres num\u233\'e9riques. Les caract\u232\'e8res de ce groupe }{\rtlch \ltrch\lang3084\loch
les plus remarquables }{\loch
sont le caract\u232\'e8re d'espacement (code ASCII 20h) et les valeurs num\u233\'e9riques (codes ASCII de 30h \u224\'e0 39h). Notez que les chiffres diff\u232\'e8rent de leurs valeurs num\u233\'e9riques }{\rtlch \ltrch\lang3084\loch
correspondante }{\loch
seulement dans le quartet fort. En soustrayant 30h du code ASCII de tout nombre vous pouvez obtenir l'\u233\'e9quivalent num\u233\'e9rique de celui-ci. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le troisi\u232\'e8me groupe est r\u233\'e9serv\u233\'e9 aux caract\u232\'e8res alphab\u233\'e9tiques majuscules. Les codes ASCII pour les caract\u232\'e8res de A \u224\'e0 Z se trouvent dans la plage 41h\u8230\'855Ah (65\u8230\'8590). Puisqu'il y a seulement 26 diff\u233\'e9rents caract\u232\'e8res alphab\u233\'e9tiques, les six codes restants hebergent des symboles sp\u233\'e9ciaux.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le quatri\u232\'e8me et dernier groupe de 32 codes ASCII est r\u233\'e9serv\u233\'e9 aux lettres alphab\u233\'e9tiques minuscules, \u224\'e0 cinq symboles sp\u233\'e9ciaux additionnels et \u224\'e0 un autre caract\u232\'e8re de contr\u244\'f4le (delete). Notez que les symboles minuscules utilisent les codes ASCII de 61h \u224\'e0 7Ah. Si vous convertissez les codes des majuscules et des minuscules en binaire, vous remarquerez que les lettres majuscules diff\u232\'e8rent des lettres minuscules exactement par une position binaire. Par exemple, consid\u233\'e9rez les codes des caract\u232\'e8res "E" et "e" dans la figure 1.14 : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 1.14 Les codes ASCII pour les lettres "E" et "e".}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2040\shpbxcolumn\shpbxignore\shpleft0\shpright6780{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw452\pich136\picwgoal6780\pichgoal2040\pngblip
89504e470d0a1a0a0000000d49484452000001c40000008808030000004e6c6b8e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000051c49444154789ced9d4172a330104575
3d0e0387e1303a0cba80375ed80b2f9c85061c1bc9e137202096d2f35f556aaa3a8c24fac54202176d3cf9f398dc0320fba1440550a20228510194a8004a5400
252a80121540890aa0440550a20228510194a8004a5400252aa070895dd334d5748cb6aedcf4605b378d058d3878927dcba00dd7342d08fb0a0eaf6d5a18ff30
854b1ca82749edac77207b48ca238e4eb2e97a61b00dd4740df364ed3094fc942fd14e733a241f0813cea5b3e81716ff871686ab0eb65d3f7f7253be443042e3
e03466f0ec568b76f15ce89017d884917ef1614a18c32c1d98f34c8b040cd320fad83ae1246b83a75f74b9a5c45db4dd3436645f18f8243ca8953e89e0efa377
0baf7294b80734c00a4a740e1d6efb55a801b6e0c13d359e63794ddc01dc1eb47075ea2ae93207da180e46ab53301f4b4d3c56a796abd36550a27b8b350a7755
c2c7a8abe186d0f47b4dd436ce13f789e42828510194a8004a5400252a80121540890ac82cb10bc49b36f347c994c5cc12a304c4f748f1a884241d111604a486
618fbf4f768975fbe4ed93e84f5386d4dda69414ce95c54cfdbeba37e021c59cc449f45652f8d3e91bd395154a3c82e225debdbf0389171f521785c7a3e37068
220a47c1387cf6576c0b36128d831227e13135777fbe3c1316dbba7828311c1d85a32642f8e62fe760710c9fbd201136128f831227e1313543b2ee5f3f25defc
1794188e8ec2511321fc751f5af969ebd2b78b25c246e27150e2241c249e4fa7ab9f48bc5eb1c4f1e838ffa189101e5c9d2712afd793241135128fe3bf965883
1d4690f8c8d1546248e89bc4e8e8108e9b78971884c5b6a044dc483c8eff5a22daeb5362621633f5fbeade58f7cd7b78613a1524ee9e4e4589c2744a898feeb7
2d6c44893b17363312e1c286121fdd6fdc620812776f314489c2168312fd8ecd3e96b87fb32f499436fb94c8db6ec7408994b8bb7b4a3c80ec125f5b0cb7ee79
6221b62831ee3e22b248896959ccd4efabfb5489853cc2e793fd658cf055a943c2bf48b67495c8c7b37f10b9d295a9df0572dbd848ae6c65ea971c08252a8012
1540890aa0440550a20228510194a8004a5400252a80121540890aa0440550a20228510194a8004a5400252a80121540890aa0440550a2020a97c8aa6d6b285c
e200abb62d51be44566d5ba47c89acdab6480963988555db9629610cb3b06adb32258c6116566d5ba67489acdab682e225b26adb32a54b242ba0440550a20228
510194a8004a5400252aa04c89b95f65b2955ce9cad4ef3cacda9644a912f96eb7a4749508dfb29898aedc74b531d58fdbc8054a64c1af19eae79a0057a849ad
da36c6b7bec85daadac6825f3354667838e8fa7fe2e8d6aa6d21beb1a48258b58d05bf64da97bccac433ead6aa6d21beadb8c94cd53616fc92bb7f4da3d6c48f
c8b7566d0bf16d6586c4aa6dac1525d38de7edde32b0b1e0174c340b7efd32d654cfca7b4dd91259f04ba68def59c117b9a7556d83893ea66a1b0b7e49b446fa
52cc28112e6cd224ae5fd8c81259f04bc4a22f13fa155b8c148987546d63c12f11279cf7e6aa6df0ba7548d5b6d39af087d317d29595ea359fba369e580bbced
468922fd1ee37b935f1b4adc4ceedb6eb64f48bfc330d26d374a5c416e89beab1efb8bf7552a2526915d627f39ecba9fdfa7a7c4240a9008e093fdc4749508ab
b625a6ab443e9efd83c895ae4cfd2e90dbc64672652b53bfe44028510194a8004a5400252a80121540890aa0440550a20228510194a8004a5400252a80121540
890aa0440550a202285101ff00dd69bffebbe269920000000049454e44ae426082}}}}}

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seule place o\u249\'f9 ces codes diff\u232\'e8rent est le bit 5. Les caract\u232\'e8res majuscules contiennent toujours un z\u233\'e9ro dans la position du bit 5. Vous pouvez exploiter ce fait pour facilement convertir entre lettres majuscules et minuscules. Si vous avez un caract\u232\'e8re capital, vous pouvez le forcer \u224\'e0 devenir minuscule en mettant le cinqui\u232\'e8me bit \u224\'e0 1. Ou bien, si vous avez un caract\u232\'e8re minuscule et vous voulez le forcer \u224\'e0 devenir capital, vous pouvez le faire en mettant le bit 5 \u224\'e0 z\u233\'e9ro. Vous pouvez faire passer un caract\u232\'e8re d'un \u233\'e9tat \u224\'e0 l'autre en invertissant simplement le cinqui\u232\'e8me bit. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les bits 5 et 6 vous permettent aussi de savoir rapidement dans lequel des quatre groupes des caract\u232\'e8res ASCII vous vous trouvez : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \trowd\trql\trleft547\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2460\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4374\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7928\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Bit 6}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Bit 5}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Groupe}\cell\row\pard\trowd\trql\trleft547\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2460\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4374\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7928\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Caract\u232\'e8res de contr\u244\'f4le}\cell\row\pard\trowd\trql\trleft547\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2460\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4374\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7928\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Chiffres et ponctuation}\cell\row\pard\trowd\trql\trleft547\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2460\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4374\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7928\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Majuscules et sp\u233\'e9ciaux}\cell\row\pard\trowd\trql\trleft547\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2460\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4374\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7928\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
Minuscules et sp\u233\'e9ciaux}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Donc vous pouvez, par exemple, convertir toute minuscule ou majuscule (ou caract\u232\'e8re sp\u233\'e9cial correspondant) en un caract\u232\'e8re de contr\u244\'f4le occupant une position respective en mettant les bits 5 et 6 \u224\'e0 z\u233\'e9ro. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez un moment les codes ASCII des carct\u232\'e8res num\u233\'e9riques : }
\par \trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"0"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
48}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
30h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"1"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
49}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
31h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"2"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
50}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
32h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"3"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
51}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
33h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"4"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
52}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
34h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"5"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
53}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
35h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"6"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
54}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
36h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"7"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
55}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
37h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"8"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
56}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
38h}\cell\row\pard\trowd\trql\trleft1256\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3240\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5225\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7220\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
"9"}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
57}\cell\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
39h}\cell\row\pard\pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La repr\u233\'e9sentation d\u233\'e9cimale de ces codes n'est pas tr\u232\'e8s \u233\'e9claircissante. Cependant leur repr\u233\'e9sentation hexad\u233\'e9cimale r\u233\'e9v\u232\'e8le quelque chose de tr\u232\'e8s important - le quartet faible du code ASCII est l'\u233\'e9quivalent binaire du nombre repr\u233\'e9sent\u233\'e9. En liquidant (c'est-\u224\'e0-dire en mettant \u224\'e0 z\u233\'e9ro) le quartet fort, vous pourrez convertir ce code en sa repr\u233\'e9sentation binaire. Inversement, vous pouvez convertir une valeur binaire de la plage 0\u8230\'859 en sa repr\u233\'e9sentation ASCII simplement en mettant le quartet fort \u224\'e0 trois. Remarquez que vous pouvez utiliser AND pour forcer les bits forts \u224\'e0 valoir z\u233\'e9ro ; de m\u234\'eame, vous pouvez utiliser OR pour mettre le quartet fort \u224\'e0 trois (0011). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que vous ne pouvez pas convertir une cha\u238\'eene de caract\u232\'e8res num\u233\'e9riques en leur repr\u233\'e9sentation binaire \u233\'e9quivalente en modifiant simplement le quartet fort de chaque chiffre de la cha\u238\'eene. Convertir 123 (31h, 32h, 33h) de cette mani\u232\'e8re donne trois octets : 010203h et non le r\u233\'e9sultat correct, qui serait 7Bh. Convertir une cha\u238\'eene de bits en un entier binaire demande plus de travail que cela ; la conversion ci-dessus fonctionne seulement pour des unit\u233\'e9s isol\u233\'e9es. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le septi\u232\'e8me bit dans le standard ASCII vaut toujours z\u233\'e9ro. Ceci veut dire que le jeu de caract\u232\'e8res occupe seulement la moiti\u233\'e9 des possibles codes de caract\u232\'e8res qu'un octet pourrait contenir. IBM utilise les 128 codes restants pour divers caract\u232\'e8res sp\u233\'e9ciaux, incluant les caract\u232\'e8res internationaux (caract\u232\'e8res accentu\u233\'e9s etc.), les symboles math\u233\'e9matiques et les caract\u232\'e8res de tra\u231\'e7age des lignes. Notez que ces caract\u232\'e8res additionnels sont une extension non standard du jeu de caract\u232\'e8res ASCII. Sans aucun doute, le nom IBM a une influence consid\u233\'e9rable, donc au moins tous les ordinateurs personnels modernes bas\u233\'e9s sur 80x86 et sur un affichage supportent le jeu de caract\u232\'e8res ASCII \u233\'e9tendu. Et il en va de m\u234\'eame pour la plupart des imprimantes. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans l'\u233\'e9ventualit\u233\'e9 o\u249\'f9 vous deviez \u233\'e9changer des donn\u233\'e9es avec d'autres machines qui ne sont pas compatibles avec le PC, vous aurez deux alternatives : ou bien vous vous limitez au code ASCII standard ou bien vous vous assurez que la machine cible supporte le code ASCII \u233\'e9tendu. Certaines machines, comme Apple Machintosh ne fournissent pas un support }{\rtlch \ltrch\lang3084\loch
cl\u233\'e9 en main }{\loch
\u224\'e0 l'ensemble du jeu de caract\u232\'e8res \u233\'e9tendu de l'IBM PC ; cependant, vous pouvez toujours obtenir une police vous permettant d'afficher ce jeu. D'autres machines (comme l'Amiga et l'Atari ST) ont des possibilit\u233\'e9s semblables. Mais, en d\u233\'e9finitive, le standard ASCII de 128 caract\u232\'e8res est le seul code sur lequel vous pouvez compter pour un transfert fiable de syst\u232\'e8me \u224\'e0 syst\u232\'e8me.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malgr\u233\'e9 le fait que c'est un }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
standard }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
, encoder vos donn\u233\'e9es en utilisant simplement des caract\u232\'e8res ASCII conventionnels, ne garantit n\u233\'e9anmoins pas la compatibilit\u233\'e9 entre tous les syst\u232\'e8mes. Si en r\u232\'e8gle g\u233\'e9n\u233\'e9rale un "A" dans une machine sera tout probablement un "A" dans une autre, il n'y a }{\rtlch \ltrch\lang3084\loch
pas }{\loch
par contre beaucoup de normalisation pour ce qui concerne les caract\u232\'e8res de contr\u244\'f4le. Des 32 codes de contr\u244\'f4les plus delete, il y en a seulement quatre d'universellement support\u233\'e9s : backspace (BS), tab, carriage return (CR) et line feed (LF). Et comme s'il ne suffisait pas, diff\u233\'e9rentes machines utilisent souvent ces contr\u244\'f4les de diff\u233\'e9rentes mani\u232\'e8res. La fin de ligne est un exemple particuli\u232\'e8rement tracassant. MS-DOS, CP/M et d'autres syst\u232\'e8mes le marquent avec la s\u233\'e9quence des deux caract\u232\'e8res CR/LF. Apple, Machintosh, Apple II et certains autres syst\u232\'e8mes le marquent avec le seul CR. Les syst\u232\'e8mes UNIX le font avec un simple LF. Inutile de dire que chercher d'\u233\'e9changer des fichiers de texte simple entre ces syst\u232\'e8mes peut s'av\u233\'e9rer une exp\u233\'e9rience bien frustrante. M\u234\'eame si vous utilisez des caract\u232\'e8res ASCII standard dans tous vos fichiers, vous aurez encore besoin de convertir des donn\u233\'e9es. Heureusement, de telles conversions sont simples. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malgr\u233\'e9 quelques d\u233\'e9fauts majeurs, les codes ASCII sont le standard pour l'\u233\'e9change des donn\u233\'e9es entre les syst\u232\'e8mes et les programmes. La plupart de ces derniers acceptent des donn\u233\'e9es ASCII ; de la m\u234\'eame fa\u231\'e7on, beaucoup de programmes peuvent \u233\'e9galement en produire. Puisque, en assembleur, vous aurez affaire aux caract\u232\'e8res ASCII, il serait sage d'en \u233\'e9tudier la disposition et d'en m\u233\'e9moriser un petit nombre (comme, "0", "A", "a", etc.). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_12}{\*\bkmkend p1_12}\rtlch \ltrch\fs23\b\loch
1.12\tab R\u233\'e9sum\u233\'e9}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des syst\u232\'e8mes informatiques modernes utilisent le syst\u232\'e8me de num\u233\'e9ration binaire pour repr\u233\'e9senter des valeurs. Puisque les nombres binaires sont quelque peu difficiles \u224\'e0 manier, on utilise souvent la repr\u233\'e9sentation hexad\u233\'e9cimale. Ceci parce qu'il est tr\u232\'e8s facile de convertir entre nombres hexad\u233\'e9cimaux et binaires, ce qui n'est pas le cas entre le syst\u232\'e8me d\u233\'e9cimal }{\rtlch \ltrch\lang3084\loch
(}{\loch
plus familier}{\rtlch \ltrch\lang3084\loch
)}{\loch
 et le syst\u232\'e8me binaire. Un simple chiffre hexad\u233\'e9cimal repr\u233\'e9sente quatre unit\u233\'e9s binaires (bits), et on appelle }{\rtlch \ltrch\i\loch
quartet}{\loch
 un groupe de quatre bits. Voir :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Le Syst\u232\'e8me de }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\i\loch
um\u233\'e9ration binaire}{\loch
, au paragraphe 1.1.2}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Les }{\rtlch \ltrch\lang3084\i\loch
f}{\rtlch \ltrch\i\loch
ormats binaires}{\loch
, au paragraphe 1.1.3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Le }{\rtlch \ltrch\lang3084\i\loch
s}{\rtlch \ltrch\i\loch
yst\u232\'e8me de }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\i\loch
um\u233\'e9ration hexad\u233\'e9cimal}{\loch
, au paragraphe 1.3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80x86 travaillent mieux avec des groupes de huit, seize et trente-deux bits. On appelle les objets de cette taille }{\rtlch \ltrch\i\loch
octets}{\loch
, }{\rtlch \ltrch\i\loch
mots}{\loch
 et }{\rtlch \ltrch\i\loch
doubles-mots}{\loch
 respectivement. Avec un octet, on peut repr\u233\'e9senter 256 valeurs uniques. Avec un mot, on peut repr\u233\'e9senter 65536 valeurs }{\rtlch \ltrch\lang3084\loch
diff\u233\'e9rentes}{\loch
. Avec un double-mot on peut repr\u233\'e9senter plus de quatre milliards de valeurs. Souvent, on repr\u233\'e9sente des valeurs enti\u232\'e8res (sign\u233\'e9es ou non sign\u233\'e9es) avec des octets, des mots ou des doubles-mots ; cependant toute autre quantit\u233\'e9 peut \u234\'eatre repr\u233\'e9sent\u233\'e9e aussi facilement. Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Organisation des }{\rtlch \ltrch\lang3084\i\loch
d}{\rtlch \ltrch\i\loch
onn\u233\'e9es}{\loch
, au pargraphe 1.2}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Octets}{\loch
, au paragraphe 1.2.3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Mots}{\loch
,  au paragraphe 1.2.4}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Doubles-}{\rtlch \ltrch\lang3084\i\loch
m}{\rtlch \ltrch\i\loch
ots}{\loch
, au paragraphe 1.2.5}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour pouvoir nous r\u233\'e9f\u233\'e9rer \u224\'e0 des bits sp\u233\'e9cifiques \u224\'e0 l'int\u233\'e9rieur d'un quartet, d'un octet, d'un mot, d'un double-mot ou d'une autre structure encore, on num\u233\'e9rote les bits \u224\'e0 partir de z\u233\'e9ro (le bit le moins significatif) jusqu'\u224\'e0 n-1 (o\u249\'f9 }{\rtlch \ltrch\i\loch
n}{\loch
 est le nombre de bits dont objet est constitu\u233\'e9). On peut aussi num\u233\'e9roter de fa\u231\'e7on similaire les quartets, les octets et les mots \u224\'e0 l'int\u233\'e9rieur d'une plus grande structure. Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Les }{\rtlch \ltrch\lang3084\i\loch
f}{\rtlch \ltrch\i\loch
ormats binaires}{\loch
, au paragraphe 1.1.3}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a diverses op\u233\'e9rations que l'on peut effectuer sur les valeurs binaires, incluant l'arithm\u233\'e9tique ordinaire (+, -, * et /) et les op\u233\'e9rations logiques (AND, OR, XOR, NOT, d\u233\'e9calages \u224\'e0 gauche et \u224\'e0 droite (shift left, shift right) et les rotations \u224\'e0 gauche et \u224\'e0 droite (rotate left, rotate right)). Les op\u233\'e9rations AND, OR, XOR et NOT sont normalement d\u233\'e9finies pour des op\u233\'e9rations entre deux bits isol\u233\'e9s. On peut les \u233\'e9largir \u224\'e0 }{\rtlch \ltrch\i\loch
n }{\loch
bits en les traitant de bit \u224\'e0 bit (ou bitwise). Les op\u233\'e9rations de d\u233\'e9calage et de rotation sont toujours d\u233\'e9finies pour une longueur fixe de cha\u238\'eenes de bits. Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Op\u233\'e9rations }{\rtlch \ltrch\lang3084\i\loch
a}{\rtlch \ltrch\i\loch
rithm\u233\'e9tiques sur les }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\i\loch
ombres binaires et hexad\u233\'e9cimaux}{\loch
, au paragraphe 1.4}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Op\u233\'e9rations logiques sur les }{\rtlch \ltrch\lang3084\i\loch
b}{\rtlch \ltrch\i\loch
its}{\loch
, au paragraphe 1.5}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Op\u233\'e9rations logiques sur les }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\i\loch
ombres binaires et les }{\rtlch \ltrch\lang3084\i\loch
v}{\rtlch \ltrch\i\loch
ha\u238\'eenes de }{\rtlch \ltrch\lang3084\i\loch
b}{\rtlch \ltrch\i\loch
its}{\loch
, au paragraphe 1.6}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
D\u233\'e9calages et }{\rtlch \ltrch\lang3084\i\loch
r}{\rtlch \ltrch\i\loch
otations}{\loch
, au paragraphe 1.9}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a deux types de valeurs enti\u232\'e8res qu'on peut repr\u233\'e9senter avec des cha\u238\'eenes binaires sur 80x86 : entiers sign\u233\'e9s et non sign\u233\'e9s. Le 80x86 repr\u233\'e9sente les nombres non sign\u233\'e9s \u224\'e0 l'aide du format binaire standard. Mais il repr\u233\'e9sente les entiers sign\u233\'e9s \u224\'e0 l'aide du format de compl\u233\'e9ment \u224\'e0 deux. Alors que les nombres non sign\u233\'e9s peuvent \u234\'eatre d'une longueur arbitraire, les nombres sign\u233\'e9s ont du sens seulement avec des longueurs fixes. \line Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Nombres sign\u233\'e9s et non sign\u233\'e9s}{\loch
, au paragraphe 1.7}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Extensions des valeurs sign\u233\'e9es et non sign\u233\'e9es}{\loch
, au paragraphe 1.8}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Parfois, }{\rtlch \ltrch\lang3084\loch
il peut ne pas }{\loch
\u234\'eatre pratique de stocker des donn\u233\'e9es en groupes de huit, seize ou trente-deux bits. Pour \u233\'e9conomiser de l'espace vous pourriez vouloir compacter diff\u233\'e9rentes pi\u232\'e8ces de donn\u233\'e9es dans le m\u234\'eame octet, mot ou double-mot. Ceci reduit les exigences d'espace, mais aux frais d'avoir \u224\'e0 ex\u233\'e9cuter des op\u233\'e9rations suppl\u233\'e9mentaires pour compacter ou d\u233\'e9compacter. Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Champs de }{\rtlch \ltrch\lang3084\i\loch
b}{\rtlch \ltrch\i\loch
its et }{\rtlch \ltrch\lang3084\i\loch
c}{\rtlch \ltrch\i\loch
ompactage de }{\rtlch \ltrch\lang3084\i\loch
d}{\rtlch \ltrch\i\loch
onn\u233\'e9es}{\loch
, au paragraphe 1.10}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les donn\u233\'e9es caract\u232\'e8re sont probablement le type d'objet le plus commun que l'on trouve en arri\u232\'e8re des valeurs enti\u232\'e8res. L'IBM/PC et compatibles utilisent une variante du jeu de caract\u232\'e8res ASCII - le jeu ASCII/IBM \u233\'e9tendu. Les premiers 128 caract\u232\'e8res de cette cat\u233\'e9gorie sont les caract\u232\'e8res ASCII standard et les 128 codes restants sont des caract\u232\'e8res sp\u233\'e9ciaux cr\u233\'e9\u233\'e9s par IBM pour les langues internationales, les math\u233\'e9matiques et le tra\u231\'e7age des lignes. Puisque l'usage du jeu de caract\u232\'e8res ASCII est aussi commun dans les programmes modernes, une certaine familiarit\u233\'e9 avec cet ensemble est essentielle. Voir : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\i\loch
Le jeu de }{\rtlch \ltrch\lang3084\i\loch
c}{\rtlch \ltrch\i\loch
aract\u232\'e8res ASCII}{\loch
, au paragraphe 1.11}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13}{\*\bkmkend p1_13}\rtlch \ltrch\fs23\b\loch
1.13\tab Exercices de }{\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
aboratoire}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce livre est accompagn\u233\'e9 par un support logiciel significatif. Ce dernier est divis\u233\'e9 en quatre cat\u233\'e9gories de base : le code source des exemples du texte, la biblioth\u232\'e8que standard UCR pour programmer en assembleur 80x86, des \u233\'e9chantillons de code que vous aurez \u224\'e0 modifier pour divers exercices de laboratoire et des applications logicielles servant \u224\'e0 assister ces exercices. Ces applications ont \u233\'e9t\u233\'e9 \u233\'e9crites en assembleur, en C++, Flex/Bison et Dephi (Pascal orient\u233\'e9 objets). Beaucoup de ces applications incluent le code source autant que les fichiers ex\u233\'e9cutables. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des logiciels accompagnant ce }{\rtlch \ltrch\lang3084\loch
livre}{\loch
 fonctionnent sur Windows 3.1, Windows 9x ou Windows NT. Certains autres, cependant, manipulent directement le mat\u233\'e9riel et s'ex\u233\'e9cutent seulement sous DOS ou sous une fen\u234\'eatre DOS dans Windows 3.1. Cet ouvrage pr\u233\'e9sume que vous \u234\'eates }{\rtlch \ltrch\lang3084\loch
familiaris\u233\'e9 }{\loch
avec ces syst\u232\'e8mes d'exploitation ; si ce n'est pas le cas et vous d\u233\'e9sirez plus de d\u233\'e9tails, veuillez vous r\u233\'e9f\u233\'e9rer \u224\'e0 un ouvrage appropri\u233\'e9.  }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13_01}{\*\bkmkend p1_13_01}\rtlch \ltrch\fs23\b\loch
1.13.1\tab Installation des }{\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
ogiciels}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les logiciels qui accompagnent cet ouvrage sont g\u233\'e9n\u233\'e9ralement offerts sur c\u233\'e9d\u233\'e9rom}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Ils sont \u233\'e9galement disponibles via ftp anonyme, quoiqu'il y a divers fichiers associ\u233\'e9s \u224\'e0 ce texte. }
}}
}{\loch
. Vous pouvez donc vous  servir de la plupart directement \u224\'e0 partir du CD. Cependant, pour plus de facilit\u233\'e9, vous voudrez probablement installer tout le paquetage sur votre disque dur}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Si vous \u234\'eates en train de vous servir de ces logiciels dans un laboratoire d'\u233\'e9cole, votre professeur les a probablement d\u233\'e9j\u224\'e0 install\u233\'e9s. Comme r\u232\'e8gle g\u233\'e9n\u233\'e9rale, vous ne devriez jamais installer quoi que ce soit dans un laboratoire. Renseignez-vous aupr\u232\'e8s de votre professeur avant de prendre toute d\u233\'e9cision.  }
}}
}{\loch
. Pour faire ceci, vous aurez besoin de cr\u233\'e9er deux sous-r\u233\'e9pertoires : ARTOFASM et STDLIB. Le premier contiendra les fichiers sp\u233\'e9cifiques pour ce livre, le second sera pour les fichiers associ\u233\'e9s \u224\'e0 la biblioth\u232\'e8que standard UCR pour les machines 80x86. Une fois ces r\u233\'e9pertoires cr\u233\'e9\u233\'e9s, copiez-y tous les fichiers et les sous-r\u233\'e9pertoires \u224\'e0 partir des r\u233\'e9pertoires analogues sur le CD. Ou bien, \u224\'e0 partir du DOS ou d'une fen\u234\'eatre DOS de Windows vous pouvez utiliser la commande XCOPY : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab xcopy r:\\artofasm\\*.*\tab c:\\artofasm\tab /s}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab xcopy r:\\stdlib\\*.*\tab \tab c:\\stdlib\tab /s}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces lignes pr\u233\'e9sument que votre lecteur de CD ait la lettre R: et que vous soyez en train d'installer vos logiciels sur le lecteur C: Elles pr\u233\'e9sument aussi que vous avez d\u233\'e9j\u224\'e0 cr\u233\'e9\u233\'e9 les dossiers ARTOFASM et STDLIB avant d'ex\u233\'e9cuter XCOPY. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour utiliser la biblioth\u232\'e8que standard avec les projets de programmation vous aurez besoin d'ajouter ou de modifier deux lignes dans votre fichier AUTOEXEC.BAT. Si de semblables lignes n'y sont d\u233\'e9j\u224\'e0 pr\u233\'e9sentes, ajoutez ceci : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab set lib=c:\\stdlib\\lib}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab set include=c:\\stdlib\\include}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces commandes indiquent \u224\'e0 MASM (Microsoft Macro Assembler) o\u249\'f9 il peut trouver la biblioth\u232\'e8que standard UCR et les fichiers d'inclusion pour celle-ci. Sans ces lignes, MASM produira une erreur toutes les fois o\u249\'f9, dans vos programmes, vous utiliserez les routines de la biblioth\u232\'e8que. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
S'il y a d\u233\'e9j\u224\'e0 "set include=\u8230\'85" et "set lib=\u8230\'85" dans AUTOEXEC.BAT, vous n'aurez pas \u224\'e0 les remplacer. Mais vous devrez ajouter la cha\u238\'eene ";c:\\stdlib\\lib" \u224\'e0 la fin du "set lib=\u8230\'85" et ";c:\\stdlib\\include" \u224\'e0 la fin du "set include=\u8230\'85". Certains langages (comme le C++) utilisent \u233\'e9galement ces variables d'environnement "set" ; si vous les remplacez arbitrairement par les variables ci-dessus, vos programmes en assembleur fonctionneront bien, mais toute tentative de compiler un programme C++ (ou d'un autre langage) pourrait \u233\'e9chouer. Si vous oubliez d'ins\u233\'e9rer ces lignes dans votre AUTOEXEC.BAT, vous pourrez encore activer ces commandes temporairement (tant que l'ordinateur ne sera pas \u233\'e9teint) en les tapant simplement \u224\'e0 l'invite DOS. En tapant }{\rtlch \ltrch\i\loch
set}{\loch
, vous pourrez voir si ces commandes sont actives ou non. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous n'avez pas un lecteur de CD, vous pouvez obtenir les logiciels associ\u233\'e9s \u224\'e0 ce livre par un site ftp anonyme depuis cs.ucr.edu}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Mais \u233\'e9galement par le site web du livre, http://webster.cs.ucr.edu/index.html, n.d.t.}
}}
}{\loch
. Regardez dans le sous-r\u233\'e9pertoire "pub/pc/ibmpc". Les fichiers dans le serveur ftp sont compress\u233\'e9s. Un fichier "README" vous d\u233\'e9crira comment les d\u233\'e9compresser}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Veuillez noter cependant, que toutes ces informations ne seront pas disponibles en fran\u231\'e7ais, et il en va de m\u234\'eame pour le support logiciel, n.d.t. }
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le dossier STDLIB que vous avez cr\u233\'e9\u233\'e9, }{\rtlch \ltrch\lang3084\loch
contient}{\loch
 le code source et les fichiers pour la biblioth\u232\'e8que UCR standard. Il s'agit d'un ensemble essentiel de sous-routines en assembleur que vous pouvez appeler tout comme on appelle les fonctions de la biblioth\u232\'e8que standard du C. Ces routines simplifient grandement l'\u233\'e9criture des programmes. De plus, elles sont du domaine public, par cons\u233\'e9quent vous pouvez les utiliser \u224\'e0 loisir, sans restrictions de license, dans tout programme que vous \u233\'e9crirez. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le dossier ARTOFASM contient des fichiers sp\u233\'e9cifiques au texte. A l'int\u233\'e9rieur de ce r\u233\'e9pertoire, vous verrez une s\u233\'e9quence de sous-dossiers, nomm\u233\'e9s ch1, ch2, ch3, etc. Ces sous-dossiers contiennent les fichiers associ\u233\'e9s aux chapitres 1, 2, 3, etc. Dans certains de ces sous-r\u233\'e9pertoires, vous trouverez autres deux sous-dossiers nomm\u233\'e9s "DOS" et "WINDOWS". Si ces dossiers sont pr\u233\'e9sents, ils s\u233\'e9parent les fichiers qui doivent s'ex\u233\'e9cuter sous MS-Windows des fichiers qui doivent s'ex\u233\'e9cuter sous DOS. Beaucoup des programmes du r\u233\'e9pertoire DOS }{\rtlch \ltrch\i\loch
demandent un environnement de mode de lecture }{\loch
"read-mode" }{\rtlch \ltrch\i\loch
et n'ex\u233\'e9cutent pas sous le DOS d'une fen\u234\'eatre Windows 95 ou Windows NT}{\loch
. Vous aurez alors besoin d'ex\u233\'e9cuter les logiciels de ce r\u233\'e9pertoire directement en DOS pur. Les applications Windows requi\u232\'e8rent un \u233\'e9cran couleur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a souvent un troisi\u232\'e8me sous-r\u233\'e9pertoire dans chaque r\u233\'e9pertoire des chapitres : SOURCES. Celui-ci contient le listing des codes sources (quand ceci s'applique) pour les logiciels du chapitre. Beaucoup de ces applications sont \u233\'e9crites en assembleur via MASM 6.x, C++ g\u233\'e9n\u233\'e9rique, Turbo Pascal ou Borland Delphi (visual object Pascal). Si vous avez un int\u233\'e9r\u234\'eat \u224\'e0 voir comment ces logiciels fonctionnent, vous pourrez jeter un coup d'oeil \u224\'e0 ce sous-r\u233\'e9pertoire. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cet ouvrage pr\u233\'e9sume que vous connaissez d\u233\'e9j\u224\'e0 comment ex\u233\'e9cuter des programmes en mode DOS et Windows et que vous \u234\'eates }{\rtlch \ltrch\lang3084\loch
familiaris\u233\'e9}{\loch
 avec la terminologie commune de ces syst\u232\'e8mes. Il pr\u233\'e9sume \u233\'e9galement que vous connaissez certaines commandes simples du DOS, comme DIR, COPY, DEL, RENAME et ainsi de suite. Si vous \u234\'eates novice avec Windows ou avec DOS, vous devriez vous procurer un manuel de r\u233\'e9f\u233\'e9rence appropri\u233\'e9. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les fichiers des exercices de laboratoire du chapitre 1 apparaissent dans ARTOFASM\\CH1. Ce sont des programmes sur environnement Windows, donc vous aurez besoin de Windows 3.1, 95 ou NT ou quelques version plus r\u233\'e9cente(et compatible) pour les ex\u233\'e9cuter. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13_02}{\*\bkmkend p1_13_02}\rtlch \ltrch\fs23\b\loch
1.13.2\tab Exercices de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
onversion des }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans ce}{\rtlch \ltrch\lang3084\loch
s}{\loch
 exercice}{\rtlch \ltrch\lang3084\loch
s}{\loch
, vous utiliserez le programme "convert.exe" situ\u233\'e9 dans le sous-r\u233\'e9pertoire ARTOFASM\\CH1. Ce programme affiche et convertit des entiers de 16 bits en utilisant la notation d\u233\'e9cimale, d\u233\'e9cimale non sign\u233\'e9e, hexad\u233\'e9cimale et binaire. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quand vous ex\u233\'e9cutez ce programme, il ouvre une fen\u234\'eatre avec quatre champs de texte (une pour chaque type de donn\u233\'e9es). Changer une valeur dans un champ provoque la mise \u224\'e0 jour imm\u233\'e9diate des autres champs, de sorte qu'ils affichent leur repr\u233\'e9sentation correspondante de la nouvelle valeur. Si vous commettez une erreur en entrant une donn\u233\'e9e, le programme \u233\'e9met un beep et colore le champ en rouge jusqu'\u224\'e0 ce que vous ne l'ayez pas corrig\u233\'e9e. Notez que vous pouvez utiliser la souris, les touches de contr\u244\'f4le du curseur et les touches d'\u233\'e9dition (par exemple, del et backspace) pour changer les valeurs individuelles des champs de texte. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour cet exercice et votre rapport de laboratoire, vous devrez explorer la relation entre les diverses valeurs binaires, hexad\u233\'e9cimales, d\u233\'e9cimales non sign\u233\'e9es et d\u233\'e9cimales sign\u233\'e9es. Par exemple, vous pourriez entrer les valeurs d\u233\'e9cimales 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16 384 et 32 768 et remarquer les valeurs qui apparaissent dans les autres champs. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le premier objectif de cet exercice est de vous familiariser avec les \u233\'e9quivalents d\u233\'e9cimaux de certaines valeurs binaires et hexad\u233\'e9cimales communes. Dans votre rapport, par exemple, vous pourriez expliquer qu'est-ce qu'il y a de sp\u233\'e9cial avec les \u233\'e9quivalents binaires (et hexad\u233\'e9cimaux) des nombres d\u233\'e9cimaux ci-dessus. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre groupe d'exp\u233\'e9riences possibles est d'essayer de choisir divers nombres binaires ayant exactement un ensemble de deux bits, par exemple, 11, 110, 1100, 11000, 110000, etc. Assurez-vous de noter les r\u233\'e9sultats d\u233\'e9cimaux et hexad\u233\'e9cimaux que ces entr\u233\'e9es produisent. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Essayez d'entrer divers nombres binaires dont les huit bits faibles sont \u224\'e0 z\u233\'e9ro. Annotez les r\u233\'e9sultats dans votre rapport de laboratoire. Tentez la m\u234\'eame exp\u233\'e9rience avec les nombres hexad\u233\'e9cimaux, en utilisant z\u233\'e9ro pour le premier ou les deux premiers chiffres faibles. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans le champ des nombres d\u233\'e9cimaux sign\u233\'e9s vous devriez \u233\'e9galement exp\u233\'e9rimenter les nombres n\u233\'e9gatifs ; essayez d'utiliser des valeurs comme -1, -2, -3, -256, -1024, etc. Expliquez les r\u233\'e9sultats que vous obtenez utilisant vos connaissances du mode de compl\u233\'e9ment \u224\'e0 deux. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Essayez d'entrer des nombres pairs et impairs dans le champ des d\u233\'e9cimaux non sign\u233\'e9s. D\u233\'e9couvrez et d\u233\'e9crivez la diff\u233\'e9rence entre nombres pairs et impairs dans leur repr\u233\'e9sentation binaire. Tentez d'entrer des multiples d'autres valeurs (par exemple, de trois : 3, 6, 9, 12, 15, 18, 21, \u8230\'85) et voyez si vous pouvez d\u233\'e9tecter un sch\u233\'e9ma dans les r\u233\'e9sultats binaires. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
V\u233\'e9rifiez les conversions }{\rtlch \ltrch\i\loch
hexad\u233\'e9cimal <-> binaire}{\loch
 que ce chapitre d\u233\'e9crit. En particulier entrez le m\u234\'eame chiffre hexad\u233\'e9cimal dans chacune des quatre positions d'une valeur de 16 bits et prenez note sur la position des bits correspondants de la repr\u233\'e9sentation binaire. Essayez d'entrer diff\u233\'e9rentes valeurs binaires, comme 1111, 11110, 111100, 1111000 et 11110000. Expliquez les r\u233\'e9sultats que vous obtenez et d\u233\'e9crivez pourquoi, avant d'effectuer une conversion,  vous devriez \u233\'e9largir les valeurs binaires de sorte que leur longueur soit toujours un multiple de quatre. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans votre rapport de laboratoire, listez les exp\u233\'e9riences ci-dessus plus d'autres que vous tenterez vous-m\u234\'eames. Expliquez les r\u233\'e9sultats que vous vous attendez en incluant le r\u233\'e9sultat que le programme convert.exe aura produit. Expliquez toute astuce que vous pourriez rencontrer en vous servant de ce programme. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13_03}{\*\bkmkend p1_13_03}\rtlch \ltrch\fs23\b\loch
1.13.3\tab Exercices sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
o}{\rtlch \ltrch\fs23\b\loch
p\u233\'e9rations logiques}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme logical.exe est un simple calculateur qui effectue diverses fonctions logiques. Il accepte des valeurs binaires ou hexad\u233\'e9cimales et puis, il calcule le r\u233\'e9sultat ou bien il ex\u233\'e9cute certaines op\u233\'e9rations logiques sur les entr\u233\'e9es. Le calculateur supporte les op\u233\'e9rations dyadiques AND, OR, XOR ou monadiques NOT, NEG (deux compl\u233\'e9ments), SHL (d\u233\'e9calage \u224\'e0 gauche), SHR (d\u233\'e9calage \u224\'e0 droite), ROL (rotation \u224\'e0 gauche), ROR (rotation \u224\'e0 droite). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quand vous ex\u233\'e9cutez logical.exe, il affiche une s\u233\'e9rie de boutons sur le c\u244\'f4t\u233\'e9 gauche de la fen\u234\'eatre. Ces boutons permettent de s\u233\'e9lectionner le type d'op\u233\'e9ration d\u233\'e9sir\u233\'e9. Par exemple, presser le bouton AND indique au calculateur d'effectuer un AND entre les deux valeurs d'entr\u233\'e9e. Si vous s\u233\'e9lectionnez une op\u233\'e9ration monadique (unaire), comme NOT, SHL, etc., alors vous aurez \u224\'e0 entrer seulement une valeur ; pour les op\u233\'e9rations dyadiques, les deux champs de texte seront actifs. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{{\*\bkmkstart a}{\*\bkmkend a}\loch
logical.exe permet, en outre, d'entrer des valeurs binaires ou hexad\u233\'e9cimales. Notez que ce programme modifie automatiquement le champ des nombres hexad\u233\'e9cimaux quand tout changement au champ des nombres binaires se produit. Et la m\u234\'eame chose arrive dans le champ des binaires, si un changement de la valeur hexad\u233\'e9cimale a lieu. Si vous entrez une valeur incorrecte dans un champ comme dans l'autre, celui-ci devient rouge tant que vous n'aurez pas corrig\u233\'e9 l'erreur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour cet exercice de laboratoire, vous devrez explorer chacune des op\u233\'e9rations logiques. Essayez diverses exp\u233\'e9riences en choisissant soigneusement certaines valeurs, calculez manuellement le r\u233\'e9sultat que vous vous attendez, puis, ex\u233\'e9cutez votre calcul dans le programme logical.exe pour v\u233\'e9rifier vos r\u233\'e9sultats. Vous devriez sp\u233\'e9cialement exp\u233\'e9rimenter les capacit\u233\'e9s de masquage des op\u233\'e9rations AND, OR et XOR. Essayez d'effectuer ces op\u233\'e9rations sur diff\u233\'e9rentes valeurs, comme 000F, 00FF, 00F0, 0FFF, FF00, etc. Notez les r\u233\'e9sultats et mentionnez-les dans votre rapport de laboratoire. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certaines exp\u233\'e9riences que vous pourriez essayer, sont :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Concevez un masque pour convertir les valeurs ASCII de 0 \u224\'e0 9 en leur contrepartie enti\u232\'e8re binaire, en utilisant l'op\u233\'e9ration AND. Pendant que vous utiliserez le masque, essayez d'entrer les codes ASCII de chacune de ces unit\u233\'e9s. D\u233\'e9crivez vos r\u233\'e9sultats. Qu'arrive-t-il si vous entrez des codes ASCII qui ne codifient pas des nombres ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Concevez un masque pour convertir des valeurs enti}{\rtlch \ltrch\lang3084\loch
\u232\'e8res de la plage 0...9 en leurs codes ASCII correspondants, via une op\u233\'e9ration OR. Entrez chacune des valeurs binaires de cette plage et d\u233\'e9crivez les r\u233\'e9sultats. Qu'est-ce qu'il arrive si vous entrez des valeurs en dehors des bornes 0-9 ? En particulier, qu'arrive-t-il si vous entrez des valeurs en dehors de 0h...0Fh ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Concevez un masque }{\rtlch \ltrch\lang3084\loch
qui d\u233\'e9termine }{\loch
quand une valeur enti\u232\'e8re de 16 bits est positive ou n\u233\'e9gative \u224\'e0 l'aide de l'op\u233\'e9ration AND. Le r\u233\'e9sultat devrait \u234\'eatre 0 si l'entier est positif (ou nul) et une valeur diff\u233\'e9rente de z\u233\'e9ro si le nombre est n\u233\'e9gatif. Entrez plusieurs valeurs positives et n\u233\'e9gatives pour tester votre masque. Expliquez comment vous pourriez utiliser AND pour v\u233\'e9rifier le signe de tout bit isol\u233\'e9.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Concevez un masque pour effectuer une op\u233\'e9ration logique XOR qui produise le m\u234\'eame r\u233\'e9sultat qu'on avait appliqu\u233\'e9 un NOT \u224\'e0 la seconde op\u233\'e9rande. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
V\u233\'e9rifiez que les op\u233\'e9rations SHL et SHR correspondent \u224\'e0 une multiplication enti\u232\'e8re par deux et \u224\'e0 une division enti\u232\'e8re par deux, respectivement. Qu'arrive-t-il arrive si vous d\u233\'e9calez les donn\u233\'e9es au-del\u224\'e0 du bit fort ou du bit faible ? }{\rtlch \ltrch\lang3084\loch
E}{\loch
n termes de multiplication et de division enti\u232\'e8res }{\rtlch \ltrch\lang3084\loch
\u224\'e0 quoi cela correspond }{\loch
?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Appliquez l'op\u233\'e9ration ROL sur un ensemble de nombres positifs et n\u233\'e9gatifs. En vous basant sur l'observation du paragraphe 1.13.3, qu'est-ce que vous pourriez dire \u224\'e0 propos du r\u233\'e9sultat quand vous faites la rotation \u224\'e0 gauche d'un nombre positif ou d'un nombre n\u233\'e9gatif ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-142\sb0\sa120{\rtlch\dbch\af10\dbch\af10\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Appliquez les op\u233\'e9rations NEG et NOT sur une valeur. Discutez sur les similarit\u233\'e9s et les diff\u233\'e9rences des r\u233\'e9sultats. D\u233\'e9crivez-les en vous basant sur votre connaissance du mode compl\u233\'e9ment \u224\'e0 deux. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13_04}{\*\bkmkend p1_13_04}\rtlch \ltrch\fs23\b\loch
1.13.4\tab Exercices sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
xtensions }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9es et }{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
on }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ign\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme signext.exe accepte des valeurs binaires ou hexad\u233\'e9cimales de huit bits et les \u233\'e9largit \u224\'e0 des valeurs de 16 bits conform\u233\'e9ment \u224\'e0 leur signe. Comme logical.exe, ce programme accepte une valeur en format soit binaire soit hexad\u233\'e9cimal et il lui applique imm\u233\'e9diatement l'extension appropri\u233\'e9e. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour votre rapport de laboratoire, donnez diverses valeurs d'entr\u233\'e9e de huit bits et d\u233\'e9crivez les r\u233\'e9sultats que vous obtenez. Ex\u233\'e9cutez ces valeurs dans signext.exe et v\u233\'e9rifiez ce qui se produit. Pour chaque valeur que vous testez, assurez-vous de lister tous les r\u233\'e9sultats. Et assurez-vous \u233\'e9galement d'essayer des valeurs comme 0, 7Fh, 80h et 0FFh. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En ex\u233\'e9cutant des valeurs, d\u233\'e9couvrez quelles unit\u233\'e9s hexad\u233\'e9cimales apparaissant dans le quartet fort constituent des nombres n\u233\'e9gatifs de 16 bits et lesquelles constituent des nombres positifs de 16 bits. Documentez l'ensemble dans votre rapport. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Entrez des ensembles de valeurs comme (1, 10), (2, 20), (3, 30), ..., (7, 70), (8, 80), (9, 90), (A, A0), ... (F, F0). Expliquez les r\u233\'e9sultats que vous obtenez. Pourquoi "F" s'\u233\'e9largit avec des 0 et "F0" avec des 1 ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Expliquez dans votre rapport de laboratoire comment l'on pourrait \u233\'e9largir les valeurs de 16 bits \u224\'e0 des valeurs de 32 bits. Expliquez pourquoi les extensions sign\u233\'e9es ou non sign\u233\'e9es sont utiles. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_13_05}{\*\bkmkend p1_13_05}\rtlch \ltrch\fs23\b\loch
1.13.5\tab Exercices sur le }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ompactage des }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme packdata.exe utilise le type de date qu'on a vu dans ce chapitre (regardez le paragraphe 1.10). Il accepte une valeur de date en format binaire ou d\u233\'e9cimal et l'empaquette dans une valeur de 16 bits.  }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quand vous ex\u233\'e9cutez ce programme, vous verrez une fen\u234\'eatre avec six champs de texte pour l'entr\u233\'e9e de la date : trois pour l'entrer en format d\u233\'e9cimal et trois pour l'entrer en format binaire. La valeur du mois doit \u234\'eatre dans la plage 1...12, celle du jour dans la plage 1...31 et celle de l'ann\u233\'e9e dans la plage 0...99. Si vous entrez une valeur en dehors de ces plages (ou toute autre valeur incorrecte), le champ incrimin\u233\'e9 deviendra rouge comme toujours, jusqu'\u224\'e0 ce que vous n'aurez pas corrig\u233\'e9 l'erreur. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Choisissez diverses dates et effectuez d'abord la conversion manuellement (si vous avez des probl\u232\'e8mes avec la conversion d\u233\'e9cimal/binaire, utilisez le programme de conversion utilis\u233\'e9 dans le premier ensemble d'exercices de ce chapitre). Successivement, entrez ces valeurs dans le programme pour v\u233\'e9rifier vos r\u233\'e9ponses. Assurez-vous d'inclure tous les r\u233\'e9sultats dans votre rapport. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il est essentiel que dans vos exp\u233\'e9riences vous incluiez les dates suivantes : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2/4/68 1/1/80, 8/16/64, 7/20/60, 11/2/72, 12/25/99, la date d'aujourd'hui, une date d'anniversaire (non n\u233\'e9cessairement le v\u244\'f4tre), la date du d\u233\'e9but de votre rapport, etc. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p1_14}{\*\bkmkend p1_14}\rtlch \ltrch\fs23\b\loch
1.14\tab Questions}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1.\tab Convertissez en binaire les valeurs hexad\u233\'e9cimales suivantes :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) 128\tab \tab b) 4096\tab \tab c) 256\tab \tab d) 65536\tab \tab e) 254}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab f) 9\tab \tab g) 1024\tab \tab h) 15\tab \tab i) 344\tab \tab j) 998}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab k) 255\tab \tab l) 512\tab \tab m) 1023\tab \tab n) 2048\tab \tab o) 4095}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab p) 8192\tab \tab q) 16384\tab \tab r) 32768\tab \tab s) 6334\tab \tab t) 12334}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab u) 23465\tab \tab v) 5643\tab \tab w) 464\tab \tab x) 67\tab \tab y) 888}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2. \tab Convertisez en d\u233\'e9cimal les valeurs binaires suivantes : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) 1001 1001\tab b) 1001 1101\tab c) 1100 0011\tab d) 0000 1001\tab e) 1111 1111}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab f) 0000 1111\tab g) 0111 1111\tab h) 1010 0101\tab i) 0100 0101\tab j) 0101 1010}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab k) 1111 0000\tab l) 1011 1101\tab m) 1100 0010\tab n) 0111 1110\tab o) 1110 1111}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab p) 0001 1000\tab q) 1001 1111\tab r) 0100 0010\tab s) 1101 1100\tab t) 1111 0001}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab u) 0110 1001\tab v) 0101 1011\tab w) 1011 1001\tab x) 1110 0110\tab y) 1001 0111}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
3. \tab Convertissez les valeurs binaires du probl\u232\'e8me 2 en hexad\u233\'e9cimal. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
4. \tab Convertissez en binaire les valeurs hexad\u233\'e9cimales suivantes : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) 0ABCD\tab b) 1024\tab \tab c) 0DEAD\tab d) 0ADD\tab \tab e) 0BEEF}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab f) 8\tab \tab g) 05AAF\tab h) 0FFFF\tab \tab i) 0ACDB\tab \tab j) 0CDBA}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab k) 0FEBA\tab l) 35\tab \tab m) 0BA\tab \tab n) 0ABA\tab \tab o) 0BAD}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab p) 0DAB\tab \tab q) 4321\tab \tab r) 334\tab \tab s) 45\tab \tab t) 0E65}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab u) 0BEAD\tab v) 0ABE\tab \tab w) 0DEAF\tab x) 0DAD\tab \tab y) 9876}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Effectuez les calculs hexad\u233\'e9cimaux suivants (laissez le r\u233\'e9sultat en hex) :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
5. \tab 1234 + 9876 }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
6. \tab 0FFF - 0F34}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
7.\tab 100 - 1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
8. \tab 0FFE -1}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
9.\tab Quelle est l'importance d'un quartet ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
10.\tab Il y a combien d'unit\u233\'e9s hexad\u233\'e9cimales dans un :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) octet\tab \tab b) mot\tab \tab c) double-mot }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
11. \tab Il y a combien de bits dans un :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) quartet\tab \tab b) octet\tab \tab c) mot\tab \tab d) double-mot}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
12. \tab Quel est le num\u233\'e9ro de bit du bit le plus significatif dans un :}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) quartet\tab \tab b) octet\tab \tab c) mot\tab \tab d) double-mot }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
13. \tab Quel caract\u232\'e8re utilise-t-on comme suffixe dans un nobre hexad\u233\'e9cimal ? Binaire ? D\u233\'e9cimal ?}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
14.\tab En pr\u233\'e9sumant utiliser un format de 16 bits \u224\'e0 deux compl\u233\'e9ments (sign\u233\'e9), d\u233\'e9terminez quelles valeurs de la question 4 sont positives et lesquelles sont n\u233\'e9gatives. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
15.\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
largissez toutes les valeurs de la question 2 \u224\'e0 16 bits (selon le signe). Donnez votre r\u233\'e9ponse en hexad\u233\'e9cimal. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
16. \tab Effectuez une op\u233\'e9ration AND dans les paires de valeurs hexad\u233\'e9cimales suivantes. Donnez votre r\u233\'e9ponse en hexad\u233\'e9cimal (astuce : convertissez les valeurs hex en binaire, effectuez l'op\u233\'e9ration, puis reconvertissez-les en hex). }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) 0FF00, 0FF0\tab b) 0FOOF, 1234\tab c) 4321, 1234\tab \tab d) 2341, 3241\tab e) 0FFFF, 0EDCB}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab f) 1111,  5789\tab f) 0FABA, 4322\tab h) 5523, 0F572\tab \tab i) 2355, 7466\tab j) 4765, 6543}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab k) 0ABCD, 0EFDC\tab l) 0DDDD, 1234\tab m) 0CCCC, 0ABCD  \tab n) 0BBBB, 1234\tab o) 0AAAA, 1234}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab p) 0EEEE, 1248\tab q) 8888, 1248\tab r) 8086, 124F\tab \tab s) 8086, 0CFA7\tab t) 8765, 3456}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab u) 7089, 0FEDC\tab v) 2435, 0BCDE\tab w) 6355, 0EFDC\tab \tab x) 0CBA, 6884\tab y) 0AC7, 365}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
17. \tab Effectuez une op\u233\'e9ration OR dans les paires de nombres ci-dessus. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
18.\tab Effectuez une op\u233\'e9ration XOR dans les paires de nombres ci-dessus. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
19.\tab Effectuez une op\u233\'e9ration NOT dans toutes les valeurs de la question 4. Consid\u233\'e9rez-les toutes comme \u233\'e9tant de 16 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
20.\tab Effectuez l'op\u233\'e9ration de compl\u233\'e9mentation \u224\'e0 deux dans toutes les valeurs de la question 4. Pr\u233\'e9sumez encore que toutes ces valeurs soient de 16 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
21.\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
largissez les valeurs hexad\u233\'e9cimales suivantes de huit \u224\'e0 seize bits (en tenant compte du signe, naturellement). Pr\u233\'e9sentez votre r\u233\'e9ponse en hex. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) FF\tab \tab b) 82\tab \tab c) 12\tab \tab d) 56\tab \tab e) 98}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab f) BF\tab \tab g) 0F\tab \tab h) 78\tab \tab i) 7F\tab \tab j) F7}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab k) 0E\tab \tab l) AE\tab \tab m) 45\tab \tab n) 93\tab \tab o) C0}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab p) 8F\tab \tab q) DA\tab \tab r) 1D\tab \tab s) 0D\tab \tab t) DE}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab u) 54\tab \tab v) 45\tab \tab w) F0\tab \tab x) AD\tab \tab y) DD}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
22.\tab Faites une contraction de 16 \u224\'e0 8 bits des valeurs suivantes (en tenant compte du signe). Si vous ne pouvez pas le faire, expliquez pourquoi. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) FF00\tab \tab b) FF12\tab \tab c) FFF0\tab \tab d) 12\tab \tab e) 80}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab f) FFFF\tab \tab g) FF88\tab \tab h) FF7F\tab \tab i) 7F\tab \tab j) 2}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab k) 8080\tab \tab l) 80FF\tab \tab m) FF80\tab \tab n) FF\tab \tab o) 8}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab \tab p) F\tab \tab q) 1\tab \tab r) 834\tab \tab s) 34\tab \tab t) 23}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab u) 67\tab \tab v) 89\tab \tab w) 98\tab \tab x) FF98\tab \tab y) F98}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
23. \tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
largissez les valeurs sign\u233\'e9es dans les questions 22 \u224\'e0 des valeurs de 32 bits. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
24. \tab En pr\u233\'e9sumant que les valeurs de la question 22 sont de 16 bits, effectuez un d\u233\'e9calage \u224\'e0 gauche. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
25.\tab En pr\u233\'e9sumant que les valeurs de la question 22 sont de 16 bits, effectuez un d\u233\'e9calage \u224\'e0 droite.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
26. \tab En pr\u233\'e9sumant que les valeurs de la question 22 sont de 16 bits, effectuez une rotation \u224\'e0 gauche. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
27.\tab En pr\u233\'e9sumant que les valeurs de la question 22 sont de 16 bits, effectuez une rotation \u224\'e0 droite. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
28.\tab Convertissez les dates suivantes en un format compact\u233\'e9 comme d\u233\'e9crit dans ce chapitre (voir le paragraphe 1.10). Pr\u233\'e9sentez vos r\u233\'e9sultats comme des valeurs hexad\u233\'e9cimales de 16 bits : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) 1/1/92\tab \tab b) 2/4/56\tab \tab c) 6/19/60\tab d) 6/16/86\tab e) 1/1/99}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
29. \tab D\u233\'e9crivez comment utiliser le d\u233\'e9calage et les op\u233\'e9rations logiques pour }{\rtlch \ltrch\i\loch
extraire}{\loch
 le champ }{\rtlch \ltrch\i\loch
jour}{\loch
 de l'enregistrement de donn\u233\'e9e compact\u233\'e9e de la question 28. Cela fait, exprimez ce jour par une valeur enti\u232\'e8re de 16 bits dans la plage 1\u8230\'8531}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af11\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Il y avait une erreur dans l'original. La plage \u233\'e9tait indiqu\u233\'e9e comme 0\u8230\'8531, mais puisque le jour 0 n'a jamais \u233\'e9t\u233\'e9 utilis\u233\'e9 ni dans ce chapitre, ni dans la r\u233\'e9alit\u233\'e9 j'ai pr\u233\'e9f\u233\'e9r\u233\'e9 m'en tenir \u224\'e0 une majeure exactitude. De plus, n'oubilez pas que, dans ce livre, les dates sont pr\u233\'e9sent\u233\'e9e en format am\u233\'e9ricain (mm-jj-aa), n.d.t.}
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
30. \tab Supposez avoir une valeur de la plage 0\u8230\'859. Expliquez comment vous pourriez la convertir en un code de caract\u232\'e8res ASCII en n'utilisant que des op\u233\'e9rations logiques. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
31. \tab La fonction C++ suivante localise le premier bit activ\u233\'e9 dans un param\u232\'e8tre BitMap et le fait \u224\'e0 partir de la premi\u232\'e8re position jusqu'au bit fort. Si un tel bit n'existe pas, elle retourne -1. Expliquez en d\u233\'e9tail comment cette fonction travaille : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
int FindFirstSet(unsigned BitMap, unsigned start)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \{}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab unsigned Mask = (1 << start);}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab while(Mask)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \{}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab if(BitMap & Mask) return start;}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab ++start;}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab Mask <<= 1;}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \}}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab return -1;}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \}}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
32. \tab Le langage de programmation C++ ne sp\u233\'e9cifie pas combien de bits on peut trouver dans un entier non sign}{\rtlch \ltrch\lang3084\loch
\u233\'e9.}{\loch
 Expliquez pourquoi le code ci-dessus fonctionnera ind\u233\'e9pendamment du nombre de bits trouv\u233\'e9s dans le nombre. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
33. \tab La fonction C++ suivante est le compl\u233\'e9ment de la fonction ci-dessus. Elle localise le premier bit d\u233\'e9sactiv\u233\'e9 dans un param\u232\'e8tre BitMap. Expliquez, en d\u233\'e9tail, comment elle accomplit cette t\u226\'e2che : }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab \tab }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
int FindFirstClr(unsigned BitMap, unsigned start)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \{}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab return FindFirstSet(~BitMap, start);}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \}}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
34. \tab Les deux fonctions suivantes activent ou d\u233\'e9sactivent (respectivement) un bit particulier et renvoient le nouveau r\u233\'e9sultat. Expliquez, en d\u233\'e9tail, comment ces fonctions fonctionnent. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
unsigned SetBit(unsigned BitMap, unsigned position)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \{}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab return BitMap | (1 << position);}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \}}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab \tab }{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
unsigned ClrBit(unsigned BitMap, unsigned position)}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \{}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab return BitMap & ~(1 << position);}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af13\dbch\af13\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \}}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
35. \tab Dans le code de la question pr\u233\'e9c\u233\'e9dente, expliquez ce qui arriverait si les param\u232\'e8tres }{\rtlch \ltrch\i\loch
start}{\loch
 et }{\rtlch \ltrch\i\loch
position}{\loch
 contenaient une valeur plus grande ou \u233\'e9gale au nombre de bits dans un entier non sign\u233\'e9.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
1.15\tab P}{\rtlch \ltrch\fs23\lang3084\b\loch
ro}{{\*\bkmkstart p1_15}{\*\bkmkend p1_15}\rtlch \ltrch\fs23\b\loch
jets de programmation}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les projets de programmation suivants prennent pour acquis que vous utilisez C, C++, Turbo Pascal, Borland Pascal, Delphi ou quelque autre langage qui supporte les op\u233\'e9rations logiques binaires. Notez que le C++ utilise les op\u233\'e9rateurs "&", "|" et "^" pour AND, OR et XOR respectivement. Les produits Borland Pascal permettent d'utiliser les op\u233\'e9rateurs "and", "or", et "xor" sur les entiers pour effectuer des op\u233\'e9rations logiques sur les bits. Les projets suivants requi\u232\'e8rent l'usage de ces op\u233\'e9rateurs. Il y a d'autres solutions \u224\'e0 ces probl\u232\'e8mes o\u249\'f9 ces op\u233\'e9rateurs ne sont pas n\u233\'e9cessaires, mais }{\rtlch \ltrch\b\loch
n'employez pas de telles solutions}{\loch
. Le but de ces exercices et de vous pr\u233\'e9senter les op\u233\'e9rations logiques disponibles dans les langages de haut niveau (}{\rtlch \ltrch\b\loch
voyez avec votre professeur, quel langage vous devez utiliser}{\loch
). }{\rtlch \ltrch\b\loch
 }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les descriptions suivantes d\u233\'e9crivent les fonctions que vous \u233\'e9crirez. Cependant, vous aurez besoin d'un programme principal pour appeler et tester chacune d'elles. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1) Ecrivez deux fonctions }{\rtlch \ltrch\i\loch
toupper}{\loch
 et }{\rtlch \ltrch\i\loch
tolower}{\loch
 qui prennent un caract\u232\'e8re comme argument et convertissent ce caract\u232\'e8re en majuscule (s'il \u233\'e9tait en minuscule) ou en minuscule (s'il \u233\'e9tait en majuscule), respectivement. Utilisez les op\u233\'e9rations logiques pour effectuer cette conversion. Les utilisateurs de Pascal pourraient avoir besoin des fonctions chr() et ord() pour r\u233\'e9soudre ce probl\u232\'e8me. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2) Ecrivez une fonction "CharToInt" qui re\u231\'e7oit une cha\u238\'eene de caract\u232\'e8res et retourne la valeur enti\u232\'e8re correspondante. }{\rtlch \ltrch\i\loch
N'utilisez pas une routine pr\u233\'e9d\u233\'e9finie de biblioth\u232\'e8que comme atoi (c) ou strtoint (Pascal)}{\loch
. Vous devez traiter chaque caract\u232\'e8re pass\u233\'e9, le convertir en entier \u224\'e0 l'aide des op\u233\'e9rations logiques et accumuler les r\u233\'e9sultats jusqu'\u224\'e0 ce que vous ne soyez arriv\u233\'e9 \u224\'e0 la fin de la cha\u238\'eene. Un algorithme facile pour cette t\u226\'e2che est de multiplier le r\u233\'e9sultat accumul\u233\'e9 par 10 et lui ajouter la prochaine unit\u233\'e9 convertie. R\u233\'e9p\u233\'e9tez ceci jusqu'\u224\'e0 la fin de la cha\u238\'eene. Les utilisateurs de Pascal auront probablement besoin d'utiliser la fonction ord().}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
3) }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez une fonction "ToDate" qui accepte trois param\u232\'e8tres, un mois, un jour et une ann\u233\'e9e. Cette fonction doit retourner une valeur compact\u233\'e9e de 16 bits en utilisant le format donn\u233\'e9 dans ce chapitre (au paragraphe 1.10). }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez trois fonctions correspondantes, ExtractMonth, ExtractDay et ExtractYear qui attendent une valeur de 16 bits et retournent le mois, le jour ou l'ann\u233\'e9e correspondante. La fonction ToDate devrait convertir automatiquement les dates de la plage 1900-19999 en des dates de la plage 00-99.}
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
4) }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crire une fonction "CntBits" qui compte le nombre de bits ayant la valeur 1 dans un entier de 16 bits. }{\rtlch \ltrch\i\loch
N'utilisez pas une fonction de biblioth\u232\'e8que pr\u233\'e9d\u233\'e9finie}{\loch
. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
5) }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crire une fonction "TestBit" qui prend deux arguments. Le premier est une valeur de 16 bits \u224\'e0 tester ; le second est une valeur dans la plage 0\u8230\'8515 d\u233\'e9crivant quel bit tester. La fonction }{\rtlch \ltrch\lang3084\loch
doit}{\loch
 retourner vrai si le bit correspondant contient 1 et faux dans le cas contraire. La fonction }{\rtlch \ltrch\lang3084\loch
retourne}{\loch
 faux \u233\'e9galement si le second param\u232\'e8tre }{\rtlch \ltrch\lang3084\loch
contient}{\loch
 une valeur en dehors de la plage pr\u233\'e9vue. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
6) Pascal et C/C++ fournissent les op\u233\'e9rations de d\u233\'e9calage (SHL/SHR en Pascal, "<<" et ">>" en C/C++). Cependant, ils n'offrent pas les op\u233\'e9rations de rotation. Ecrivez une paire de fonctions, ROL et ROR pour effectuer ces t\u226\'e2ches. Astuce : utilisez la fonction de l'exercice 5 pour tester le bit fort. Puis utilisez l'op\u233\'e9ration de d\u233\'e9calage correspondante et un OR pour r\u233\'e9aliser la rotation. }
\par \pard\plain \s29\dbch\af9\langfe1033\dbch\af9\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par }