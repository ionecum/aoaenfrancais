{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq0\fcharset128 Arial narrow;}{\f5\froman\fprq2\fcharset0 Footlight MT Light;}{\f6\froman\fprq2\fcharset0 Arial;}{\f7\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f8\froman\fprq2\fcharset0 Courier New;}{\f9\froman\fprq2\fcharset0 Arial Narrow;}{\f10\froman\fprq2\fcharset0 Arial Unicode MS;}{\f11\froman\fprq2\fcharset0 Garamond;}{\f12\froman\fprq2\fcharset0 Symbol;}{\f13\froman\fprq2\fcharset0 Courier{\*\falt Courier New};}{\f14\froman\fprq2\fcharset0 Lucida Console;}{\f15\fmodern\fprq1\fcharset128 Courier New;}{\f16\fnil\fprq2\fcharset0 Symbol;}{\f17\fnil\fprq2\fcharset0 Footlight MT Light;}{\f18\fnil\fprq2\fcharset0 Arial;}{\f19\fnil\fprq2\fcharset0 Arial Narrow;}{\f20\fnil\fprq2\fcharset0 Courier New;}{\f21\fnil\fprq2\fcharset0 Arial Unicode MS;}{\f22\fnil\fprq2\fcharset0 Times New Roman;}{\f23\fnil\fprq2\fcharset0 Garamond;}{\f24\fnil\fprq2\fcharset0 Courier{\*\falt Courier New};}{\f25\fnil\fprq2\fcharset0 Lucida Console;}{\f26\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Normal;}
{\s1\sbasedon0\snext1\dbch\af18\langfe1033\dbch\af26\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f6\fs23\lang1033\b Heading 1;}
{\s2\sbasedon0\snext2\dbch\af18\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\sb240\sa60\keepn\ltrpar\cf0\loch\f6\fs24\lang1033\i\b Heading 2;}
{\s3\sbasedon0\snext3\dbch\af18\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\sb240\sa60\keepn\ltrpar\cf0\loch\f6\fs24\lang1033 Heading 3;}
{\*\cs15\snext15 WW8Num3z0;}
{\*\cs16\snext16 Default Paragraph Font;}
{\*\cs17\sbasedon16\snext17\super Footnote Characters;}
{\*\cs18\sbasedon16\snext18 Page Number;}
{\*\cs19\sbasedon16\snext19\super Endnote Characters;}
{\*\cs20\sbasedon16\snext20\dbch\af18\loch\f6\fs20 instruction;}
{\*\cs21\sbasedon16\snext21\dbch\af18\loch\f6\fs20\lang3084 Arial;}
{\*\cs22\snext22\super Footnote Anchor;}
{\*\cs23\snext23\super Endnote Anchor;}
{\*\cs24\snext24\dbch\af16 ListLabel 1;}
{\s25\sbasedon0\snext26\dbch\af18\langfe1033\dbch\af26\afs28\qj\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f7\fs28\lang1033 Heading;}
{\s26\sbasedon0\snext26\dbch\af18\langfe1033\dbch\af26\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b Text Body;}
{\s27\sbasedon26\snext27\dbch\af18\langfe1033\dbch\af26\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b List;}
{\s28\sbasedon0\snext28\dbch\af18\langfe1033\dbch\af26\afs24\ai\qj\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f5\fs24\lang1033\i Caption;}
{\s29\sbasedon0\snext29\dbch\af18\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Index;}
{\s30\sbasedon0\snext30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084 Code;}
{\s31\sbasedon0\snext31\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f9\fs21\lang1033 Body Text Indent 3;}
{\s32\sbasedon0\snext32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033 Text Body Indent;}
{\s33\sbasedon0\snext33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033 Footnote;}
{\s34\sbasedon0\snext34\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Header and Footer;}
{\s35\sbasedon0\snext35\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Footer;}
{\s36\sbasedon0\snext36\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f9\fs21\lang1033 Body Text Indent 2;}
{\s37\sbasedon0\snext37\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Header;}
{\s38\sbasedon0\snext38\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\li360\ri0\lin360\rin0\fi-360\ltrpar\cf0\loch\f5\fs22\lang1033 List Bullet;}
{\s39\sbasedon0\snext39\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs20\lang1033 Endnote;}
{\s40\sbasedon0\snext40\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Table Contents;}
{\s41\sbasedon40\snext41\dbch\af17\langfe1033\dbch\af26\afs20\ab\qc\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\b Table Heading;}
{\s42\sbasedon0\snext42\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Frame Contents;}
}{\*\generator LibreOffice/6.4.4.2$Windows_X86_64 LibreOffice_project/3d775be2011f3886db32dfd395a6a6d1ca2630ff}{\info{\title Organisation Syst\u232\'e8me                           Chapitre trois}{\author Ionenet}{\creatim\yr2003\mo12\dy27\hr21\min19}{\author Danilo Renzi}{\revtim\yr2021\mo5\dy26\hr18\min54}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops{\propname VarBarreEtat}\proptype30{\staticval VarBarreEtat}{\propname VarEtat}\proptype30{\staticval VarEtat}}\deftab851
\hyphauto1\viewscale160
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1417\margrsxn1417\margtsxn1417\headery720\margbsxn1417\footery720{\header\pard\plain \s37\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi360\ltrpar\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft0\shpright331\shpz119{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 1}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s37\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 39}}}
\par \pard}}}

\par }{\footer\pard\plain \s35\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft9075\shpright9406\shpz59{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s35\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 38}}}
\par \pard}}}

\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1417\margr1417\margt720\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1417\margrsxn1417\margtsxn1417\headery720\margbsxn1417\footery720{\header\pard\plain \s37\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri0\lin0\rin0\fi360\ltrpar\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft0\shpright331\shpz119{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 1}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s37\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 39}}}
\par \pard}}}

\par }{\footer\pard\plain \s35\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft9075\shpright9406\shpz59{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s35\dbch\af17\langfe1033\dbch\af26\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af17\langfe1033\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 38}}}
\par \pard}}}

\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s26\dbch\af18\langfe1033\dbch\af26\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs33\loch
Op\u233\'e9rations arithm\u233\'e9tiques et logiques\tab \tab         Chapitre 9}
\par \pard\plain \s36\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour programmer en assembleur, }{\loch
juste }{\rtlch \ltrch\lang3084\loch
conna\u238\'eetre la fonction de chaque instruction ne suffit pas }{\loch
; il faut savoir aussi comment les utiliser et les combiner pour produire quelque chose de concret. Beaucoup }{\rtlch \ltrch\lang3084\loch
d'instructions sont utilies pour des op\u233\'e9rations qui n'ont rien \u224\'e0 voir avec leurs fonctions math\u233\'e9matiques \u233\'e9videntes. }{\loch
Ce chapitre aborde principalement les techniques \u224\'e0 utiliser pour convertir les instructions complexes des langages de haut niveau en leurs simples \u233\'e9quivalents d'instructions en assembleur. On verra \u233\'e9galement la fa\u231\'e7on de produire des op\u233\'e9rations math\u233\'e9matiques ou logiques avanc\u233\'e9es, en incluant les op\u233\'e9rations \u224\'e0 pr\u233\'e9cision multiple, et les astuces avec diverses instructions. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch

\par \pard\plain \s1\dbch\af18\langfe1033\dbch\af26\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f6\fs23\lang1033\b{\listtext\pard\plain }\ilvl0\ls1 \li0\ri0\lin0\rin0\fi0\li0\ri0\lin0\rin0\fi0\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p9_0}{\*\bkmkend p9_0}\loch
9.0\tab Vue }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
nsemble}{\loch
 du }{\rtlch \ltrch\lang3084\loch
c}{\loch
hapitre}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb60\sa60{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Ce chapitre fera l'objet de six sujets principaux : conversion en assembleur d'expressions arithm\u233\'e9tiques de haut niveau, les expressions logiques, les expressions arithm\u233\'e9tiques et logiques en pr\u233\'e9cision \u233\'e9tendue, les op\u233\'e9rations logiques, le travail avec des op\u233\'e9randes de diff\u233\'e9rentes tailles, les idiomes machine et arithm\u233\'e9tique et, finalement, les op\u233\'e9rations de masquage. }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
Tout comme }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
les chapitres pr\u233\'e9c\u233\'e9dents, }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
il couvre }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
une mati\u232\'e8re consid\u233\'e9rable que vous pourriez ne pas avoir besoin d'assimiler int\u233\'e9gralement si vous \u234\'eates d\u233\'e9butant. Les \u233\'e9l\u233\'e9ments de la liste suivante marqu\u233\'e9s par le pr}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
\u233\'e9}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
fixe "\u8226\'95" sont essentiels. Les sections avec un "}{\rtlch\dbch\af22\dbch\af22\hich\af0 \ltrch\fs21\loch\f0\loch
\u10063\'3f}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
" discutent de sujets avanc\u233\'e9s que vous pouvez mettre de c\u244\'f4t\u233\'e9 }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
pour l\u8217\'92instant}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
.  }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Expressions arithm\u233\'e9tiques}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Affectations simples}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Expressions simples}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Expressions complexes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Op\u233\'e9rateurs commutatifs}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Expressions logiques}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Op\u233\'e9rations en pr\u233\'e9cision multiple}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Op\u233\'e9rations d'addition en pr\u233\'e9cision multiple}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Op\u233\'e9rations de soustraction en pr\u233\'e9cision multiple}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{
\u8226\'95 }{\loch
Comparaisons en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Multiplicatons en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Divisions en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
N\u233\'e9gations en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{
\u8226\'95 }{\loch
AND, OR, XOR et NOT en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Op\u233\'e9rations de rotation et de d\u233\'e9calage en pr\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Travailler avec des op\u233\'e9rands de diff\u233\'e9rentes tailles}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{
\u8226\'95 }{\loch
Multiplication sans MUL ni IMUL}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Division sans DIV ni IDIV}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Utiliser AND pour calculer des restes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Compteurs modulo-n avec AND}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Tester pour 0FFFFF\u8230\'85FFFh}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{
\u8226\'95 }{\loch
Op\u233\'e9rations de test}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Tester le signe avec des instructions XOR}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Op\u233\'e9rations de masquage}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Masquer avec AND}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Masquer avec OR}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Compacter et d\u233\'e9compacter des types de donn\u233\'e9es}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af21\dbch\af21\hich\af10 \ltrch\loch\f10
\u10063\'3f }{\loch
Tables de correspondance}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Aucun de ces sujets est particuli\u232\'e8rement difficile \u224\'e0 comprendre. Il y a cependant }{\rtlch \ltrch\lang3084\loch
beaucoup de sujets nouveax }{\rtlch \ltrch\lang3084\loch
et s'y attarder un }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
peu}{\rtlch \ltrch\lang3084\loch
 pourra certainement vous aider \u224\'e0 les assimiler mieux. }{\rtlch \ltrch\lang3084\loch
Ce qui est marqu\u233\'e9 par }{\loch
"\u8226\'95" d\u233\'e9crivent les op\u233\'e9rations }{\rtlch \ltrch\lang3084\loch
que vous effectuerez }{\loch
fr\u233\'e9quemment ; c'est donc une bonne id\u233\'e9e }{\rtlch \ltrch\lang3084\loch
de commencer par elles}{\loch
.  }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p9_01}{\*\bkmkend p9_01}\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs23\b\loch\f9\loch
9.1\tab Expressions arithm\u233\'e9tiques}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Probablement, le premier choc qu'ont les d\u233\'e9butants en assembleur est le manque d'intuitivit\u233\'e9 }{\rtlch \ltrch\lang3084\loch
dans les }{\loch
expressions arithm\u233\'e9tiques. Dans la plupart des langages de haut niveau, celles-ci ressemblent beaucoup plus \u224\'e0 leur \u233\'e9quivalent math\u233\'e9matique :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
x:=y*z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Mais, en assembleur, on aura besoin de plusieurs instructions pour r\u233\'e9aliser la m\u234\'eame t\u226\'e2che :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certainement, }{\rtlch \ltrch\lang3084\loch
la premi\u232\'e8re }{\loch
version est beaucoup plus facile \u224\'e0 taper, \u224\'e0 lire et \u224\'e0 comprendre. C'est l'une des raisons principales - plus que d'autres - pour lesquelles }{\rtlch \ltrch\lang3084\loch
les gens pr\u233\'e9f\u232\'e8rent les langages de haut niveau}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Malgr\u233\'e9 le fait que cela comporte plus de frappes}{\loch
, convertir une expression arithm\u233\'e9tique en son \u233\'e9quivalent en assembleur n'est pas difficile du tout. En consid\u233\'e9rant le probl\u232\'e8me par \u233\'e9tapes, comme si on devait le r\u233\'e9soudre manuellement, on peut parfaitement arriver \u224\'e0 la s\u233\'e9quence appropri\u233\'e9e d'instructions avec toute expression math\u233\'e9matique. En apprenant \u224\'e0 convertir ces expressions en assembleur en trois \u233\'e9tapes, vous d\u233\'e9couvrirez que ce n'est pas }{\rtlch \ltrch\lang3084\loch
aussi }{\loch
difficile. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p9_01_01}{\*\bkmkend p9_01_01}\rtlch \ltrch\fs23\b\loch
9.1.1\tab Affectations simples}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les expressions les plus faciles \u224\'e0 convertir en assembleur sont les affectations. Elles copient une valeur individuelle dans une variable et prennent l'une des deux formes suivantes :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
variable := constante}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
ou}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
variable := variable}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si la variable se trouve dans le m\u234\'eame segment de donn\u233\'e9es (par exemple DSEG), convertir le premier des deux exemples est tr\u232\'e8s facile, vous n'auriez \u224\'e0 utiliser que cette instruction :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab variable, constante}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
qui copie la constante dans la variable. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le second exemple, est un peu plus compliqu\u233\'e9, car l'architecture 80x86 ne fournit pas une instruction mov de type "m\u233\'e9moire \u224\'e0 m\u233\'e9moire". Par cons\u233\'e9quent, pour produire cet effet, il vous faudra passer la valeur de la variable par un registre.  Si vous observez l'encodage de l'instruction mov dans le glossaire, vous remarquerez que }{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs20\loch\f6\loch
mov ax, memory}{\rtlch \ltrch\fs18\loch
 }{\loch
et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
mov memory}{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs20\loch\f6\loch
, ax}{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs18\loch\f6\loch
 }{\loch
sont plus courtes que les instructions impliquant d'autres registres. Par cons\u233\'e9quent, si le registre }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
ax}{\loch
 est disponible, il vous faudra le pr\u233\'e9f\u233\'e9rer aux autres pour toute op\u233\'e9ration de ce genre. Par exemple :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var1 := var2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
devient :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, var2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab var1, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Bien s\u251\'fbr, si vous \u234\'eates en train d'utiliser le registre }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
ax}{\loch
 pour autre chose, un autre registre }{\rtlch \ltrch\lang3084\loch
s}{\rtlch \ltrch\lang3084\loch
uffirait}{\loch
. En tout cas, il vous faudra utiliser un registre pour passer la valeur d'une variable. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Cette discussion, bien s\u251\'fbr, suppose que les deux }{\rtlch \ltrch\lang3084\loch
v}{\loch
ariables sont }{\rtlch \ltrch\lang3084\loch
d\u233\'e9j\u224\'e0 }{\loch
en m\u233\'e9moire. }{\rtlch \ltrch\lang3084\loch
Vous devriez essayer d\u8217\'92utiliser un registre pour garder la valeur d\u8217\'92une variable toutes les fois qu\u8217\'92il vous sera possible}{\loch
.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p9_01_02}{\*\bkmkend p9_01_02}\rtlch \ltrch\fs23\b\loch
9.1.2\tab Expressions simples}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le niveau suivant de complexit\u233\'e9 est repr\u233\'e9sent\u233\'e9 par les expressions simples. Elles prennent la forme :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var := term}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 op term}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
o\u249\'f9 }{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs18\lang3084\loch\f6\loch
var}{\rtlch \ltrch\lang3084\loch
 est une variable, }{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs18\lang3084\loch\f6\loch
term}{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\sub\fs18\lang3084\loch\f6\loch
1}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs18\lang3084\loch\f6\loch
term}{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\sub\fs18\lang3084\loch\f6\loch
2}{\rtlch \ltrch\lang3084\loch
 sont des variables ou des constantes et op est un op\u233\'e9rateur arithm\u233\'e9tique quelconque (addition, soustraction, multiplication et ainsi de suite). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La plupart des expressions simples prennent cette forme. Et }{\rtlch \ltrch\lang3084\loch
le fait que }{\rtlch \ltrch\lang3084\loch
l'architecture 80x86 ait \u233\'e9t\u233\'e9 optimis\u233\'e9e sp\u233\'e9cifiquement pour ce type d'expression }{\rtlch \ltrch\lang3084\loch
ne devrait pas surprendre}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une conversion typique de ces expressions prend la forme suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, term}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
op\tab ax, term}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab var, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch \ltrch\lang3084\loch
o\u249\'f9 }{\rtlch\dbch\af18\dbch\af18\hich\af6 \ltrch\fs20\lang3084\loch\f6\loch
op}{\rtlch \ltrch\lang3084\loch
 est le mn\u233\'e9monique de n'importe quelle instruction correspondant \u224\'e0 une expression arithm\u233\'e9tique (par exemple, "+" = add, "-" = sub, etc.). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
N\u233\'e9anmoins, vous devriez \u234\'eatre conscient de certaines exceptions. Avant tout, l'instruction \{i\}mul n'admet pas d'op\u233\'e9randes imm\u233\'e9diates sur des processeurs ant\u233\'e9rieurs au 80286. De plus, aucun processeur n'admet d'op\u233\'e9rande imm\u233\'e9diate avec \{i}{\loch
\}}{\rtlch \ltrch\lang3084\loch
div. Par cons\u233\'e9quent si vous travaillez avec des multiplications ou des divisions et une des deux op\u233\'e9randes est une valeur constante, il vous faudra charger cette constante dans un registre ou dans un emplacement de m\u233\'e9moire avant de multiplier ou de diviser }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
ax}{\rtlch \ltrch\lang3084\loch
 par cette valeur. Il va sans dire que si vous utilisez des instructions de multiplication ou de division sur des processeurs comme le 8088 ou le 8086, il vous faudra utiliser les registres }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
ax}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
dx}{\rtlch \ltrch\lang3084\loch
. Vous ne pouvez pas utiliser des registres arbitraires comme vous feriez avec d'autres instructions. N'oubliez non plus d'utiliser des instructions d'extension sign\u233\'e9e si vous divisez un nombre de 16/32 bits par un autre de la m\u234\'eame taille. Et, finalement, n'oubliez pas que certaines instructions peuvent provoquer un d\u233\'e9passement de capacit\u233\'e9. Il vous faudra donc tester \u233\'e9galement de tels cas apr\u232\'e8s une expression arithm\u233\'e9tique. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Voici des exemples d'expressions simples :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y + Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y - Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y * Z; \{non sign\u233\'e9e\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab z\tab ; Pour l'arithm\u233\'e9tique sign\u233\'e9e, on utilise plut\u244\'f4t imul}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax\tab ; N'oubliez pas que ceci affecte DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y div Z; \{div non sign\u233\'e9e\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dx, 0\tab ; Extension de z\u233\'e9ros AX --> DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y div Z; \{div sign\u233\'e9e\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cwd\tab \tab ; Extension sign\u233\'e9e AX --> DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y mod Z; \{reste non sign\u233\'e9\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dx, 0\tab ; Extension de z\u233\'e9ros AX --> DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, dx\tab ; Le reste \u233\'e9tait dans DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;X := Y mod Z; \{reste sign\u233\'e9\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cwd\tab \tab ; Extension sign\u233\'e9e AX --> DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, dx\tab ; Le reste \u233\'e9tait dans DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisqu'il peut se produire une erreur arithm\u233\'e9tique, il faudrait g\u233\'e9n\u233\'e9ralement tester le r\u233\'e9sultat de chaque expression avant ou apr\u232\'e8s avoir compl\u233\'e9t\u233\'e9 l'op\u233\'e9ration. Par exemple, l'addition non sign\u233\'e9e, la soustraction et la multiplication affectent le drapeau carry si un d\u233\'e9passement de capacit\u233\'e9 se produit. Vous pouvez utiliser les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jc}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jnc}{\loch
 pour tester un d\u233\'e9passement imm\u233\'e9diatement apr\u232\'e8s l'instruction correspondante. De m\u234\'eame, vous pouvez utiliser les insstructions }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
jo}{\loch
 ou }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
jno}{\loch
 apr\u232\'e8s ces s\u233\'e9quences pour tester un d\u233\'e9passement arithm\u233\'e9tique. Les deux exemples suivants montrent comment le faire pour l'instruction }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
add}{\loch
: }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
X := Y + Z; \{non sign\u233\'e9\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jc\tab uOverflow}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
X := Y + Z; \{sign\u233\'e9\}}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jc\tab sOverflow}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certains op\u233\'e9rateurs unaires rentrent dans la cat\u233\'e9gorie des simples expressions. Un bon exemple de ce genre est la n\u233\'e9gation unaire. Dans un langage de haut niveau, la n\u233\'e9gation peut prendre l'une des formes suivantes :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var := -var\tab \tab ou\tab \tab var}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := -var}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch \ltrch\lang3084\loch
Notez que }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var := -constante}{\rtlch \ltrch\lang3084\loch
 est en fait une affectation simple et non une expression simple. Vous pouvez sp\u233\'e9cifier une constante n\u233\'e9gative comme op\u233\'e9rande de l'instruction mov :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
\tab mov \tab var, -14}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour obtenir le m\u234\'eame r\u233\'e9sultat qu'on obtient avec l'instruction ci-dessus, utilisez cette instruction unique :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
\tab neg\tab var}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si deux variables diff\u233\'e9rentes sont concern\u233\'e9es, utilisez :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, var}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
neg\tab ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab var}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un d\u233\'e9passement de capacit\u233\'e9 se produira seulement si vous niez la valeur la plus n\u233\'e9gative (\u224\'e0 savoir, -128 pour une valeur de 8 bits, -32768 pour une valeur de seize bits, etc.). Dans cette \u233\'e9ventualit\u233\'e9, le 80x86 active le drapeau overflow, de fa\u231\'e7on \u224\'e0 vous permettre de tester ce cas en utilisant }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jo}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jno}{\rtlch \ltrch\lang3084\loch
. Dans tous les autres cas, le 80x86 met \u224\'e0 z\u233\'e9ro le drapeau overflow. Le drapeau carry n'a pas de signification apr\u232\'e8s une instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
neg}{\rtlch \ltrch\lang3084\loch
, car }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
neg}{\rtlch \ltrch\lang3084\loch
 (logiquement) ne s'applique pas \u224\'e0 des op\u233\'e9randes non sign\u233\'e9es. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_01_03}{\*\bkmkend p9_01_03}\rtlch \ltrch\fs23\b\loch
9.1.3\tab Expressions complexes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une expression complexe est toute expression arithm\u233\'e9tique impliquant plus de deux termes et un op\u233\'e9rateur. De telles expressions }{\rtlch \ltrch\lang3084\loch
se voient }{\loch
souvent dans des programmes \u233\'e9crits avec des langages de haut niveau. Ces expressions peuvent inclure des parenth\u232\'e8ses pour modifier la pr\u233\'e9c\u233\'e9dence des op\u233\'e9rateurs, des appels de fonctions, des acc\u232\'e8s \u224\'e0 des tableaux, etc. Si certaines d}{\rtlch \ltrch\lang3084\loch
'elles}{\loch
 sont tout \u224\'e0 fait simples \u224\'e0 convertir, d'autres requi\u232\'e8rent un certain effort. Cette section d\u233\'e9crit dans les grandes lignes, les r\u232\'e8gles \u224\'e0 utiliser. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Des expressions complexes faciles \u224\'e0 convertir sont celles qui impliquent trois termes et deux op\u233\'e9randes, par exemple : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\caps\fs18\loch\f8\loch
w := w - y - z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
en toute \u233\'e9vidence, la conversion dans ce cas requiert deux instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sub}{\loch
. Cependant, m\u234\'eame avec une expression aussi simple, la conversion n'est pas toujours \u233\'e9vidente. Il y a en effet deux mani\u232\'e8res de convertir ceci en assembleur :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, w}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af4 \ltrch\fs18\loch\f4\loch
et}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde conversion, }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
\u233\'e9tant elle}{\loch
 plus courte, para\u238\'eet plus \u233\'e9l\u233\'e9gante. Cependant, elle produit un r\u233\'e9sultat incorrect (en supposant que l'original a une syntaxe de type Pascal). Le probl\u232\'e8me est l'associativit\u233\'e9. La s\u233\'e9conde s\u233\'e9quence convertie produit en fait : W := W - (Y - Z), ce qui n'est pas la m\u234\'eame chose que W := (W - Y) - Z. La fa\u231\'e7on dont on place les parenth\u232\'e8ses autour de la sous-expression influit sur le r\u233\'e9sultat. Notez que si vous }{\rtlch \ltrch\lang3084\loch
voulez }{\loch
une s\u233\'e9quence plus courte, vous pouvez plut\u244\'f4t utiliser ce qui suit :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Ce qui produit W := W - (Y + Z) qui \u233\'e9quivaut \u224\'e0 W := (W - Y) - Z.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La pr\u233\'e9c\u233\'e9dence constitue un autre probl\u232\'e8me. Consid\u233\'e9rez l'expression Pascal suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\caps\fs18\loch\f8\loch
X := W * Y + Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Encore une fois, il y a deux mani\u232\'e8re}{\rtlch \ltrch\lang3084\loch
s}{\loch
 d'\u233\'e9valuer cette expression :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\caps\fs18\loch\f8\loch
X := (W * Y) + Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
et}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab X := W * (Y + Z);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant vous }{\rtlch \ltrch\lang3084\loch
commence}{\rtlch \ltrch\lang3084\loch
re}{\rtlch \ltrch\lang3084\loch
z}{\loch
 peut-\u234\'eatre \u224\'e0 penser que ce }{\rtlch \ltrch\lang3084\loch
texte}{\loch
 est fou. Chacun sait que la mani\u232\'e8re correcte d'\u233\'e9valuer l'expression est la seconde dans les deux exemples. Cependant, vous avez tort de penser de cette fa\u231\'e7on. Le langage APL, par exemple, \u233\'e9value les expressions uniquement de droite \u224\'e0 gauche et ne d\u233\'e9finit aucune esp\u232\'e8ce de pr\u233\'e9cedence des op\u233\'e9rateurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des langages de haut niveau utilisent un jeu pr\u233\'e9d\u233\'e9fini de r\u232\'e8gles de pr\u233\'e9c\u233\'e9dence afin de d\u233\'e9crire l'ordre d'\u233\'e9valuation dans une expression ayant deux op\u233\'e9rateurs diff\u233\'e9rents ou plus. }{\rtlch \ltrch\lang3084\loch
Ils effectuent, par exemple, }{\loch
la multiplication et la division avant l'addition et la soustraction. Ceux qui offrent l'\u233\'e9l\u233\'e9vation \u224\'e0 la puissance (FORTRAN et BASIC), effectuent cette op\u233\'e9ration en premier avant la multiplication et la division. Ces r\u232\'e8gles sont intuitives, car presque tout le monde les apprend avant d'entrer \u224\'e0 l'\u233\'e9cole secondaire. Consid\u233\'e9rez l'expression :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab X op}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 Y op}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2 }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si op}{\rtlch \ltrch\sub\loch
1}{\loch
 pr\u233\'e9vaut sur op}{\rtlch \ltrch\sub\loch
2}{\loch
, alors l'\u233\'e9valuation sera (X op}{\rtlch \ltrch\sub\loch
1}{\loch
 Y) op}{\rtlch \ltrch\sub\loch
2}{\loch
 Z, sinon, si op}{\rtlch \ltrch\sub\loch
2 }{\loch
est prioritaire par rapport \u224\'e0 op}{\rtlch \ltrch\sub\loch
1}{\loch
, l'expression sera \u233\'e9valu\u233\'e9e X op}{\rtlch \ltrch\sub\loch
1}{\loch
 (Y op}{\rtlch \ltrch\sub\loch
2}{\loch
 Z). Selon les op\u233\'e9rateurs et les op\u233\'e9rands impliqu\u233\'e9s, ces deux calculs pourraient produire des r\u233\'e9sultats diff\u233\'e9rents. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En convertissant une expression de cette forme en langage assembleur, vous devez vous assurer d'\u233\'e9valuer d'abord la sous-expression avec la plus haute pr\u233\'e9c\u233\'e9dence. L'exemple suivant, montre cette technique :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X + Y * Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y\tab ; Doit calculer d'abord Y * Z, car * pr\u233\'e9vaut sur +}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab bx, ax\tab ; C'est maintenant qu'on additionne le produit avec la }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, bx\tab ; valeur de X}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque l'addition est une op\u233\'e9ration }{\rtlch \ltrch\i\loch
commutative}{\loch
, on pourrait optimiser le code ci-dessus pour produire :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X + Y * Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab mov \tab ax, y \tab ; Doit calculer d'abord Y * Z, car * pr\u233\'e9vaut sur +}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, x\tab ; C'est maintenant qu'on additionne le produit avec la }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab ; valeur de X}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si deux op\u233\'e9rateurs \u224\'e0 l'int\u233\'e9rieur d'une m\u234\'eame expression ont la m\u234\'eame priorit\u233\'e9, alors vous d\u233\'e9terminerez l'ordre d'\u233\'e9valuation en suivant les r\u232\'e8gles de l'}{\rtlch \ltrch\i\loch
associativit\u233\'e9}{\loch
. La plupart des op\u233\'e9rateurs ont une }{\rtlch \ltrch\i\loch
associativit\u233\'e9 par la gauche}{\loch
, }{\rtlch \ltrch\lang3084\loch
c\u8217\'92est-\u224\'e0-dire qu\u8217\'92}{\loch
il \u233\'e9valuent une expression en proc\u233\'e9dant de gauche \u224\'e0 droite. L'addition, la soustraction, la multiplication et la division sont toutes des op\u233\'e9rations ayant une associativit\u233\'e9 de gauche. Alors qu'un op\u233\'e9rateur ayant une }{\rtlch \ltrch\i\loch
associativit\u233\'e9 de droite}{\loch
 \u233\'e9value de droite \u224\'e0 gauche. L'exponentation en FORTRAN et BASIC est un bon exemple d'associativit\u233\'e9 par la droite :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
2^2^3 est \u233\'e9gal \u224\'e0 2^(2^3) et non \u224\'e0 (2^2)^3}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les r\u232\'e8gles de la pr\u233\'e9c\u233\'e9dence et de l'associativit\u233\'e9 d\u233\'e9terminent l'ordre d'\u233\'e9valuation des expressions. Indirectement, ces r\u232\'e8gles vous indiquent o\u249\'f9 placer les parenth\u232\'e8ses dans une expression pour d\u233\'e9terminer l'ordre d'\u233\'e9valuation. Vous pouvez certainement utiliser les parenth\u232\'e8ses pour imposer un certain ordre d'\u233\'e9valuation. Cependant, le concept cl\u233\'e9 est que l'assembleur doit compl\u233\'e9ter certaines op\u233\'e9rations avant d'autres pour calculer correctement la valeur d'une expression donn\u233\'e9e. Les exemples suivants montrent ce principe :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X - Y - Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, x\tab ; Tous les termes ont le m\u234\'eame op\u233\'e9rateur, donc la m\u234\'eame }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; pr\u233\'e9c\u233\'e9dence.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, y\tab ; Ce qu'il faut donc faire est de les \u233\'e9valuer de gauche }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab ax, z\tab ; \u224\'e0 droite. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X + Y * Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y\tab ; Il faut calculer d'abord Y * Z, car la multiplication}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab z\tab ; pr\u233\'e9vaut sur l'addition et ensuite, \u233\'e9valuer l'expression }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, x\tab ; r\u233\'e9sultante de gauche \u224\'e0 droite. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X / Y - Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, x\tab ; De m\u234\'eame, il faut effectuer d'abord la division.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cwd}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv\tab y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab ax, z\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; W := X * Y * Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y\tab ; L'addition et la multiplication sont commutatives, et}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab z\tab ; l'ordre d'\u233\'e9valuation n'a pas d'importance. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a une exception \u224\'e0 la r\u232\'e8gle de l'associativit\u233\'e9. Si une expression contient la multiplication et la division, c'est mieux d'effectuer d'abord la multiplication. Par exemple supposez une expression comme :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
W := X/Z * Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il vaut mieux }{\loch
calculer X*Z et ensuite diviser le r\u233\'e9sultat par Y plut\u244\'f4t que diviser X par Y et multiplier le quotient par Z. Il y a deux raisons \u224\'e0 cela. Avant tout, rappelez-vous que l'instruction imul produit toujours un r\u233\'e9sultat de 32 bits (en supposant des op\u233\'e9randes de 16 bits). En effectuant la multiplication en premier, vous }{\rtlch \ltrch\i\loch
effectuez automatiquement}{\loch
 une extension sign\u233\'e9e du produit dans le registre }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
dx}{\loch
 sans avoir besoin d'utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cwd}{\loch
. La seconde raison est obtenir une meilleure pr\u233\'e9cision de calcul. Rappelez-vous que les divisions enti\u232\'e8res produisent souvent des r\u233\'e9sultats incorrects. Par exemple, si vous effectuez 5/2, vous obtiendrez 2 et non 2.5. Calculer (5/2)*3 produirait 6. Cependant, calculer (5*3)/2 vous donnera la valeur 7, qui est plus }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
pr\u232\'e8s}{\loch
 de 7.5, le v\u233\'e9ritable quotient. Par cons\u233\'e9quent, si vous avez affaire \u224\'e0 une expression de la forme }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
W := X/Z * Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
vous pouvez l}{\rtlch \ltrch\lang3084\loch
a}{\loch
 convertir en :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv\tab y}{{\super \rtlch\dbch\af20\dbch\af20 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033{
 }{\rtlch \ltrch\lang3084\loch
Le texte original mentionne }{\rtlch\hich\af15 \ltrch\lang3084\loch\f15\loch
idiv z}{\rtlch \ltrch\lang3084\loch
 ici, mais c\uc2 \u8217\'81\'66est \uc1 \u233\'3fvidemment incorrect, ndt.}
}}\rtlch\hich\af8 \ltrch\loch\f8\loch
}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certes, si l'algorithme que vous voulez r\u233\'e9aliser en assembleur d\u233\'e9pend de l'effet de l'arrondissement, vous ne pouvez pas vous servir de cette astuce. Morale de l'histoire : assurez-vous toujours de comprendre pleinement toute expression que vous convertissez. Bien s\u251\'fbr, si votre algorithme exige la division en premier, allez-y. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Consid\u233\'e9rez l'instruction Pascal suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
W := X - Y * Z;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Ceci est semblable \u224\'e0 un exemple pr\u233\'e9c\u233\'e9dent, mais on utilise la soustraction au lieu de l'addition. Puisque la soustraction n'est pas commutative, on ne peut pas calculer Y * Z et ensuite soustraire X. Ce qui complique un peu la conversion. Au lieu d'une simple s\u233\'e9quence de multiplication et d'addition, il faut charger X dans un registre, multiplier Y et Z, en laissant le r\u233\'e9sultat dans un registre diff\u233\'e9rent et finalement soustraire ce produit de X, par exemple :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab bx, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, bx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Ceci est un exemple banal qui montre la n\u233\'e9cessit\u233\'e9 des }{\rtlch \ltrch\i\loch
variables temporaires}{\loch
 dans une expression. Ce code utilise le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
bx}{\loch
 pour garder temporairement une copie de X pendant qu'on calcule la multiplication entre Y et Z. Au fur et \u224\'e0 mesure que votre expression devient plus complexe, le besoin des variables temporaires grandit. Consid\u233\'e9rez l'exemple suivant :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
W := (A + B) * (Y + Z);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En suivant les r\u232\'e8gles normales de l'\u233\'e9valuation alg\u233\'e9brique, vous effectuerez en premier les expressions qui se trouvent \u224\'e0 l'int\u233\'e9rieur des parenth\u232\'e8ses (autrement dit, les deux expressions avec la plus haute pr\u233\'e9c\u233\'e9dence) et vous mettrez leurs r\u233\'e9sultats \u224\'e0 part. Une fois calcul\u233\'e9s les r\u233\'e9sultats des deux sous-expressions, on pourra finalement les multiplier. Une mani\u232\'e8re de travailler avec des expressions complexes est de les r\u233\'e9duire en s\u233\'e9quences d'expressions simples et stocker les r\u233\'e9sultats dans des variables temporaires. Par exemple, on peut convertir l'expression ci-dessus en la s\u233\'e9quence qui suit :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := A + B;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Y + Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
W := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 * Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque convertir des expressions simples est toujours facile, on peut utiliser cette technique avec n'importe quelle expression, aussi complexe soit-elle. Le code correspondant \u224\'e0 ce qu'on vient de voir est :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, a}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, b}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab Temp1, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab Temp2, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, Temp1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab Temp2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certes, ce code n'est pas tr\u232\'e8s efficace, car il requiert la d\u233\'e9claration de deux variables temporaires dans votre segment de donn\u233\'e9es, }{\rtlch \ltrch\lang3084\loch
m}{\loch
ais, on peut l'optimiser tr\u232\'e8s facilement, en utilisant des registres comme variables temporaires, autant que possible. Avec les registres, le code ci-dessus devient :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, a}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, b}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab bx, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul\tab bx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab w, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Encore un autre exemple :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
X := (Y + Z) * (A - B) / 10;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ceci peut \u234\'eatre converti en un ensemble d'expressions simples :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := (Y + Z);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := (A - B);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 * Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
X := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 / 10}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce qui devient en assembleur :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, y\tab ; AX := Y+Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, a\tab ; BX := A-B }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab bx, b}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab bx\tab ; AX := AX * BX, qui produit l'extension sign\u233\'e9e de AX dans DX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, 10}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv\tab bx\tab ; AX := AX / 10}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab x, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La chose la plus importante \u224\'e0 garder \u224\'e0 l'esprit est que les variables temporaires devraient, autant que possible, \u234\'eatre des registres, car l'acc\u232\'e8s aux registres est plus efficace que l'acc\u232\'e8s aux variables en m\u233\'e9moire. Utilisez les variables seulement si vous \u234\'eates \u224\'e0 court de registres. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En dernier, convertir une expression complexe en assembleur est un peu diff\u233\'e9rent que r\u233\'e9soudre une expression \u224\'e0 la main. Au lieu de calculer le r\u233\'e9sultat de chaque \u233\'e9tape, vous \u233\'e9crivez simplement les instructions assembleur qui calculent ces r\u233\'e9sultats. Puisque vous avez appris \u224\'e0 effectuer une op\u233\'e9ration \u224\'e0 la fois, vous savez que le calcul manuel fonctionne avec des "expressions simples" qui composent des expressions complexes. Certainement, convertir ces expressions en assembleur est un jeu d'enfant. Par cons\u233\'e9quent, n'importe qui capable de r\u233\'e9soudre une expression complexe en \u224\'e0 la main peut aussi la convertir en assembleur en suivant les r\u232\'e8gles des expressions simples. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart a}{\*\bkmkstart p9_01_04}{\*\bkmkend a}{\*\bkmkend p9_01_04}\rtlch \ltrch\fs23\b\loch
9.1.4\tab Op\u233\'e9rateurs commutatifs}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le symbole "@" repr\u233\'e9sente un op\u233\'e9rateur quelconque, cet op\u233\'e9rateur est commutatif si la relation suivante est toujours vraie :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
(A @ B) = (B @ A)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous avez vu dans la section pr\u233\'e9c\u233\'e9dente, les op\u233\'e9rateurs commutatifs sont commodes parce que l'ordre d'\u233\'e9valuation de leurs op\u233\'e9rands est immat\u233\'e9riel, ce qui vous permet d'arranger un calcul selon vos commodit\u233\'e9s et utiliser ainsi moins de variables temporaires. Quand vous avez un op\u233\'e9rateur commutatif dans une expression donn\u233\'e9e, vous devez toujours observer s'il existe une }{\rtlch \ltrch\lang3084\loch
meilleure }{\loch
s\u233\'e9quence pour am\u233\'e9liorer la taille ou la vitesse de votre code. Les tables suivantes montrent une liste des op\u233\'e9rateurs commutatifs et non commutatifs que vous trouvez le plus souvent dans les langages de haut niveau :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\b\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tableau 46: Les op\u233\'e9rateurs commutatifs les plus communs}
\par \trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Pascal}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
C/C++}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Description}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
+}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
+}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Addition}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
*}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
*}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Multiplication}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
AND}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
&& ou &}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
AND logique ou de bit \u224\'e0 bit}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
OR}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
|| ou |}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
OR logique ou de bit \u224\'e0 bit}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
XOR}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
^}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
OR exclusif logique en Pascal et bit \u224\'e0 bit seulement en C/C++}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
==}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
galit\u233\'e9}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx815\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
<>}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
!=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
In}{\rtlch \ltrch\lang3084\loch
\u233\'e9galit\u233\'e9}\cell\row\pard\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\pagebb\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tableau 47: Les op\u233\'e9rateurs non commutatifs les plus communs}
\par \trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Pascal}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
C/C++}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Description}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
-}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
-}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Soustraction}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
/ ou DIV}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
/}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Division }\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
MOD}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
%}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Modulo (reste de division)}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
<}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
<}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Inf\u233\'e9rieur \u224\'e0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
<=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
<=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Inf\u233\'e9rieur ou \u233\'e9gal \u224\'e0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
>}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
>}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Sup\u233\'e9rieur \u224\'e0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx933\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1783\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5050\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
>=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl\qc{\loch
>=}\cell\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\intbl{\loch
Sup\u233\'e9rieur ou \u233\'e9gal \u224\'e0}\cell\row\pard\pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_02}{\*\bkmkend p9_02}\rtlch \ltrch\fs23\b\loch
9.2\tab Expressions logiques (bool\u233\'e9ennes)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez l'expression suivante dans un programme Pascal :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := ((X=Y) and (A <= C)) or ((Z-A) <> 5);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 B est une variable bool\u233\'e9enne et toutes les autres variables sont des entiers. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comment repr\u233\'e9sente-t-on les variables bool\u233\'e9ennes en assembleur ? }{\rtlch \ltrch\lang3084\loch
Malgr\u233\'e9 qu\u8217\'92il suffit un }{\loch
bit pour repr\u233\'e9senter une telle valeur, la plupart des programmeurs allouent un octet ou un mot pour cette t\u226\'e2che. Avec un octet, il y 256 valeurs diff\u233\'e9rentes qu'on peut utiliser pour repr\u233\'e9senter les deux valeurs bool\u233\'e9ennes }{\rtlch \ltrch\i\loch
true }{\loch
et }{\rtlch \ltrch\i\loch
false}{\loch
. Alors, quelle paire de valeurs (ou d'ensemble de valeurs) pourra-t-on utiliser ?}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\rtlch \ltrch\lang3084\loch
 }{\loch
cause de l'architecture }{\rtlch \ltrch\lang3084\loch
elle-}{\loch
m\u234\'eame, c'est naturel de penser \u224\'e0 des valeurs comme z\u233\'e9ro ou non-z\u233\'e9ro, positif ou n\u233\'e9gatif, et non deux valeurs bool\u233\'e9ennes quelconques. La plupart des programmeurs (et m\u234\'eame certains langages de programmation, comme le C) choisissent z\u233\'e9ro pour repr\u233\'e9senter faux et toute autre valeur pour repr\u233\'e9senter vrai. Certains pr\u233\'e9f\u232\'e8rent repr\u233\'e9senter "vrai" et "faux" avec 1 et 0 (respectivement) sans permettre aucune autre valeur. D'autres s\u233\'e9lectionnent 0FFFFh pour vrai et 0 pour faux. Vous pourriez aussi utiliser une valeur positive pour repr\u233\'e9senter le vrai et une valeur n\u233\'e9gative pour repr\u233\'e9senter le faux}{\rtlch \ltrch\lang3084\loch
. Toutes ces conventions ont leurs avantages et leurs d\u233\'e9savantages. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
N'utiliser que 0 et 1 peut offrir un grand avantage : les instruction logiques 80x86 (}{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xor}{\rtlch \ltrch\lang3084\loch
 et moins particuli\u232\'e8rement }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\rtlch \ltrch\lang3084\loch
) d\u233\'e9pendent exactement de ces valeurs. C'est-\u224\'e0-dire, si vous avez deux variables bool\u233\'e9ennes A et B, alors les instructions suivantes effectuent sur ces variables les op\u233\'e9rations logiques suivantes :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and\tab ax, B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab C, ax\tab \tab ; C := A and B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab ax, B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab C, ax\tab \tab ; C := A or B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab ax, B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab C, ax\tab \tab ; C := A xor B}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, A\tab \tab ; Notez que l'instruction NOT ne calcule pas}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
not\tab ax\tab \tab ; correctement B := not A. Autrement dit, }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and\tab ax, 1\tab \tab ; NOT 0 n'est pas \u233\'e9gal \u224\'e0 1.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, ax\tab \tab ; B := not A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, A\tab \tab ; Une autre fa\u231\'e7on d'effectuer B := NOT A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab ax, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, ax\tab \tab ; B := not A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme not\u233\'e9 dans le commentaire ci-dessus, l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 n'effectuera pas correctement une n\u233\'e9gation logique. En effet, NOT 0 c'est 0FFh et NOT 1 c'est 0FEh. Aucun des deux r\u233\'e9sultats ne donne 0 ou 1. N\u233\'e9anmoins, en faisant un AND logique sur le r\u233\'e9sultat, on obtient la valeur attendue. Notez que vous pouvez impl\u233\'e9menter l'op\u233\'e9ration }{\rtlch \ltrch\i\loch
not}{\loch
 }{\rtlch \ltrch\lang3084\loch
de fa\u231\'e7on plus efficace }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
en }{\loch
utilisant }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xor ax, 1}{\loch
, car elle n'affecte que le bit le moins significatif. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il r\u233\'e9sulte \u233\'e9vident qu'utiliser 0 pour faux et toute autre valeur pour vrai a beaucoup d'avantage subtils, pr\u233\'e9cisement parce que le test de v\u233\'e9rit\u233\'e9 est souvent implicit dans l'ex\u233\'e9cution de n'importe quelle instruction logique. Cependant, ce m\u233\'e9canisme a aussi un grand d\u233\'e9savantage : vous ne pouvez pas utiliser les instructions 80x86 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xor}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 pour impl\u233\'e9menter les op\u233\'e9rations logiques ayant le m\u234\'eame nom. Consid\u233\'e9rez les deux valeurs 55h et 0AAh. Elles sont}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
toutes les deux }{\loch
diff\u233\'e9rentes de z\u233\'e9ro et devraient les deux repr\u233\'e9senter la valeur }{\rtlch \ltrch\i\loch
vrai}{\loch
. Cependant, si vous faites un AND logique entre 55h et 0AAh }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
en utilisant}{\loch
 le }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 du 80x86, le r\u233\'e9sultat sera z\u233\'e9ro,}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
cependant}{\rtlch \ltrch\lang3084\loch
 }{\loch
[}{\rtlch \ltrch\i\loch
vrai }{\loch
AND }{\rtlch \ltrch\i\loch
vrai}{\loch
] devrait produire }{\rtlch \ltrch\i\loch
vrai}{\loch
 et pas }{\rtlch \ltrch\i\loch
faux}{\loch
. Un syst\u232\'e8me qui utilise 0 pour repr\u233\'e9senter faux et toute autre valeur pour repr\u233\'e9senter vrai est un }{\rtlch \ltrch\i\loch
syst\u232\'e8me logique arithm\u233\'e9tique}{\loch
. Un syst\u232\'e8me qui utilise deux valeurs distinctes comme }{\rtlch \ltrch\i\loch
z\u233\'e9ro}{\loch
 et }{\rtlch \ltrch\i\loch
un}{\loch
 pour repr\u233\'e9senter faux et vrai est un }{\rtlch \ltrch\i\loch
syst\u232\'e8me logique}{\loch
, ou simplement un }{\rtlch \ltrch\i\loch
syst\u232\'e8me bool\u233\'e9en}{\loch
. Vous pouvez utiliser les deux syst\u232\'e8mes, selon votre conv\u233\'e9}{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
nan}{\loch
ce. Consid\u233\'e9rez encore l'expression bool\u233\'e9enne :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := ((X = Y) and (A <= C)) or ((Z - A) <> 5);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Cette expression complexe pourrait \u234\'eatre traduite en expressions simples, comme les suivantes :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := X = Y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := A <= D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 and Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Z - A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 <> 5}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 or Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Et le code assembleur r\u233\'e9sultant serait :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, x\tab \tab ; Tester si X = Y et charger 0 ou 1 dans AX }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, y\tab \tab ; pour indiquer le r\u233\'e9sultat de cette }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; comparaison.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz\tab L1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab al, 1\tab \tab ; X = Y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp\tab L2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L1:\tab \tab mov\tab al, 0\tab \tab ; X <> Y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L2:\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab mov\tab bx, A\tab \tab ; Tester si A <= D et charger 0 ou 1 dans BX }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; pour cmp\tab bx, D indiquer le r\u233\'e9sultat de }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; cette comparaison.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jle\tab ST1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bl, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp\tab L3}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ST1:\tab \tab mov\tab bl, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L3:\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and\tab bl, al\tab \tab ; Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 and Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, Z\tab \tab ; Tester si (Z-A) <> 5.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, A\tab \tab ; Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Z-A;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, 5\tab \tab ; Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 <> 5;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz\tab ST2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp\tab short L4}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ST2:\tab \tab mov\tab al, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L4:\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or\tab al, bl\tab \tab ; Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 or Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, al\tab \tab ; B := Temp}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
1}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Come vous pouvez voir, cette s\u233\'e9quence d'instructions est plut\u244\'f4t complexe. On pourrait l'optiomiser en faisant des hypoth\u232\'e8ses sur les r\u233\'e9sultats de ces comparaisons et en d\u233\'e9finissant des valeurs par d\u233\'e9faut, comme suit :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bl, 0\tab \tab ; En supposant que (X <> Y)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne \tab L1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bl, 1\tab \tab ; X = Y, donc c'est vrai}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L1:\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab mov \tab bh, 0\tab \tab ; En supposant que (A <= D)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab mov\tab ax, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnle\tab L2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bh, 1\tab \tab ; A <= D, donc c'est vrai}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L2:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and\tab bl, bh\tab \tab ; AND logoque sur les r\u233\'e9sultats}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bh, 0\tab \tab ; En supposant que (Z-A) = 5}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, 5}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
je\tab L3}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bh, 1\tab \tab ; (Z-A) <> 5}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
L3:\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or\tab bl, bh\tab \tab ; OR logique sur les r\u233\'e9sultats}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, bl\tab \tab ; Enregistrer le r\u233\'e9sultat}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Naturellement, si vous pouvez programmer sur un processeur 80386 ou sup\u233\'e9rieur, vous pourriez simplifier le code encore plus via les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
set}{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\i\loch
cc }{\loch
:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, x}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sete \tab al\tab \tab ; Temp2 := X = Y}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, A}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab bx, D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
setle\tab bl\tab \tab ; Temp := A <= D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab and\tab bl, al\tab \tab ; Temp := TEMP AND TEMP2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab mov\tab ax, Z}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab sub\tab ax, A\tab \tab ; Temp2 := Z-A;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, 5\tab \tab ; Temp2 := Temp2 <> 5;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
setne\tab al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or\tab bl, al\tab \tab ; Temp := Temp or Temp2;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, bl\tab \tab ; B := Temp;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Cette derni\u232\'e8re s\u233\'e9quence est \u233\'e9videmment beaucoup mieux que la pr\u233\'e9c\u233\'e9dente, mais}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
elle}{\rtlch \ltrch\lang3084\loch
 }{\loch
ne s'ex\u233\'e9cutera que sur les processeurs 80386 ou sup\u233\'e9rieurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre mani\u232\'e8re de coder des expressions bool\u233\'e9ennes est de repr\u233\'e9senter les valeurs bool\u233\'e9ennes par des \u233\'e9tats \u224\'e0 l'int\u233\'e9rieur de votre code. L'id\u233\'e9e de base est de ne pas stocker l'\u233\'e9tat de l'expression dans des variables temporaires, c'est la construction m\u234\'eame du code qui nous sugg\u232\'e8re cet \u233\'e9tat ou mieux, la position \u224\'e0 l'int\u233\'e9rieur du code. Consid\u233\'e9rez l'impl\u233\'e9mentation suivante de l'expression ci-dessus. D'abord, arrengeons-la pour qu'elle soit :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := ((Z - A) <> 5) or ((X = Y) and (A <= d));}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce qui est parfaitement correct, car l'op\u233\'e9ration }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
or}{\loch
 est commutative. Maintenant, consid\u233\'e9rez l'impl\u233\'e9mentation suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab B, 1\tab \tab ; En supposant que le r\u233\'e9sultat est vrai}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, Z\tab \tab ; (Z-A) <> 5 ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, A\tab \tab ; Si cette condition est vraie, le r\u233\'e9sultat}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, 5\tab \tab ; est toujours vrai et il n'y a pas besoin }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne\tab Done\tab \tab ; de passer le reste du programme.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, X\tab \tab ; Si X <> Y, le r\u233\'e9sultat est faux, peu importe}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, Y\tab \tab ; le contenu de A et D.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne\tab SetBtoFalse}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, A\tab \tab ; Maintenant, tester si A <= D.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jle\tab Done\tab \tab ; Si c'est le cas, quitter.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
SetBtoFalse:\tab mov\tab B, 0\tab \tab ; Si B est faux, traiter le cas ici}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Done:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que cette section de code est beaucoup plus courte que la premi\u232\'e8re version (et qu}{\rtlch \ltrch\lang3084\loch
i}{\loch
 ex\u233\'e9cute sur tous les processeurs). Les impl\u233\'e9mentations pr\u233\'e9c\u233\'e9dentes sont toutes en mesure de calculer l'expression, mais cette derni\u232\'e8re exploite la logique du flux du programme pour am\u233\'e9liorer le code. Ce code commence par supposer un r\u233\'e9sultat vrai et par initialiser la variable B \u224\'e0 vrai. Ensuite, il teste si (Z-A) <> 5. Si c'est vrai, le contr\u244\'f4le saute \u224\'e0 l'\u233\'e9tiquette }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Done}{\loch
, car B est vrai et la condition OR est accomplie et peu importe le r\u233\'e9sultat du reste de l'expression. Si contr\u244\'f4le passe \u224\'e0 l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov ax, X}{\loch
, on sait que le r\u233\'e9sultat de la comparaison pr\u233\'e9c\u233\'e9dente donne FALSE. }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
Aucun}{\loch
 besoin d'enregistrer ce r\u233\'e9sultat dans une variable temporaire, puisqu'on conna\u238\'eet implicitement cette valeur par le fait m\u234\'eame qu'on est en train d'ex\u233\'e9cuter la ligne }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov ax, X}{\loch
. De m\u234\'eame, le deuxi\u232\'e8me groupe d'instructions teste si X est \u233\'e9gal \u224\'e0 Y. Si non, on sait d\u233\'e9j\u224\'e0 que le r\u233\'e9sultat est FALSE, car le contr\u244\'f4le saute sur l'\u233\'e9tiquette }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
SetBtoFalse}{\loch
. Si le programme commence \u224\'e0 ex\u233\'e9cuter le troisi\u232\'e8me et dernier groupe d'instructions, on sait que le premier r\u233\'e9sultat a donn\u233\'e9 FALSE et que le second a donn\u233\'e9 TRUE. La position m\u234\'eame du code le garantit. Par cons\u233\'e9quent, il n'y a pas besoin de d\u233\'e9clarer des variables temporaires pour garder l'\u233\'e9tat de l'expression. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez un autre exemple :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := ((A = E) or (F <> D)) and ((A <> B) or (F = D));}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'allure de l'expression sugg\u232\'e8re une quantit\u233\'e9 consid\u233\'e9rable de code. Cependant, en exploitant l'id\u233\'e9e du flux de contr\u244\'f4le, ce code se r\u233\'e9duit \u224\'e0 ceci :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab b, 0\tab \tab ; Supposer que le r\u233\'e9sultat est faux.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, a\tab \tab ; Tester si A = E.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab ax, e}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
je \tab Test2\tab \tab ; Si c'est le cas, le premier terme est vrai. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, f\tab \tab ; Sinon, tester la deuxi\u232\'e8me expression}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, d\tab \tab ; pour voir si F <> D.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
je\tab Done\tab \tab ; Si oui, sauter \u224\'e0 Done, sinon continuer.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Test2\tab \tab mov\tab ax, a\tab \tab ; A <> B ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab cmp \tab ax, b}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab jne\tab SetBto1\tab \tab ; Si oui, notre r\u233\'e9sultat final est TRUE.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab mov\tab ax, f\tab \tab ; Si non, tester F = D}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab cmp\tab ax, d}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab jne\tab Done}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
SetBto1:\tab mov\tab b, 1\tab \tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Done:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Voici une autre diff\u233\'e9rence entre l'utilisation du flux de contr\u244\'f4le et l'utilisation de la simple logique de calcul : en utilisant la premi\u232\'e8re m\u233\'e9thode, vous pouvez sauter la plupart des instructions impl\u233\'e9ment\u233\'e9es dans la formule bool\u233\'e9enne. Ceci est connu sous le terme d'}{\rtlch \ltrch\i\loch
\u233\'e9valuation de court circuit}{\loch
. En utilisant le mod\u232\'e8le de calcul logique, m\u234\'eame avec les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
setcc}{\loch
, il faut passer par toutes les \u233\'e9tapes. Gardez \u224\'e0 l'esprit que ceci n'est pas n\u233\'e9cessairement un d\u233\'e9savantage. Sur un processeur \u224\'e0 pipelines, le fait d'ex\u233\'e9cuter plusieurs instructions suppl\u233\'e9mentaires et ainsi ne pas vider le pipeline et la queue de pr\u233\'e9chargement peut se r\u233\'e9v\u233\'e9ler beaucoup plus rapide. La meilleure solution d\u233\'e9pend toujours des exigences de votre code. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En travaillant avec des expressions bool\u233\'e9ennes, n'oubliez pas que vous pouvez am\u233\'e9liorer votre code en simplifiant }{\rtlch \ltrch\lang3084\loch
ces derni\u232\'e8res }{\loch
(voir le chapitre 2). Vous pouvez utiliser des transformations alg\u233\'e9briques (sp\u233\'e9cialement les th\u233\'e9or\u232\'e8mes de DeMorgan) et la m\u233\'e9thode du mapping pour r\u233\'e9duire consid\u233\'e9rablement la complexit\u233\'e9 d'une expression. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03}{\*\bkmkend p9_03}\rtlch \ltrch\fs23\b\loch
9.3\tab Op\u233\'e9rations en }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ultipr\u233\'e9cision}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un grand avantage de l'assembleur sur les langages de haut niveau est qu'il ne limite pas la taille des entiers. Par exemple, le langage C d\u233\'e9finit un maximum de trois diff\u233\'e9rentes tailles d'entiers : }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
short int}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
int}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
long int}{\loch
. Sur le PC, ces derniers sont souvent des entiers de 16 ou de 32 bits. Bien qu'une machine 80x86 vous limite \u224\'e0 des entiers de 8, de 16 ou de 32 bits avec une seule instruction, vous pouvez toujours utiliser plus d'une instruction pour travailler avec des entiers de toute taille d\u233\'e9sir\u233\'e9e. Si vous voulez des enti\u232\'e8res de taille de 256 bits, pas de probl\u232\'e8me. La section suivante d\u233\'e9crit comment \u233\'e9largir diverses op\u233\'e9rations logiques et arithm\u233\'e9tiques au-del\u224\'e0 des plages de 16, de 32 et de 64 bits. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_01}{\*\bkmkend p9_03_01}\rtlch \ltrch\fs23\b\loch
9.3.1\tab Op\u233\'e9rations }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\lang3084\b\loch
ddition}{\rtlch \ltrch\fs23\b\loch
 en }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ultipr\u233\'e9cision}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
add}{\loch
 additionne deux nombres de 8, de 16 ou de 32 bits}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033{\rtlch\dbch\af19\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Comme toujours, l'arithm\u233\'e9tique de 32 bits n'est disponible qu'\u224\'e0 partir du processeur 80386.}
}}
}{\loch
. Apr\u232\'e8s l'ex\u233\'e9cution de }{\loch
cette }{\loch
instruction, le drapeau de retenue est activ\u233\'e9 s'il se produit un d\u233\'e9passement de capacit\u233\'e9 en dehors du bit }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang1033\loch
le plus significatif}{\loch
 de la somme. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi0\sb0\sa120\ltrpar{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop27\shpbottom6672\shpbxcolumn\shpbxignore\shpleft98\shpright8438{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw556\pich443\picwgoal8340\pichgoal6645\jpegblip
ffd8ffe000104a46494600010101006000600000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720
222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232
323232323232323232323232323232323232323232323232323232323232ffc000110801bb022c03012200021101031101ffc4001f0000010501010101010100
000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a10823
42b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a
838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1
f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b5110002010204040304070504040001027700
0102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a43444546474849
4a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4
c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f47f09f86ed353f06e877f797dae497575
a7dbcd33ff006e5e0dced1a963812e06493d2b63fe10dd2ffe7eb5cffc1edeff00f1ea3c09ff0024f3c35ff60ab5ff00d14b5d050073ff00f086e97ff3f5ae7f
e0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073
ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0
f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f5
1ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff
003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f574
1450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff00
3f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff
008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086
e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff00
8f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e9
7ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7
fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073f
ff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe
0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff
00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5
ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae7fe0f6f7ff008f574145
0073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7ff8f51ff086e97ff3f5ae
7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e97ff003f5ae7fe0f6f7f
f8f51ff086e97ff3f5ae7fe0f6f7ff008f5741450073ff00f086e97ff3f5ae7fe0f6f7ff008f51ff00086e97ff003f5ae7fe0f6f7ff8f5741450073fff00086e
97ff003f5ae7fe0f6f7ff8f57847c6bd4b56f08f8cacec343d7f5cb4b5934f49993fb56e24cb992404e5dc9e8a3f2afa5ebe60fda3bfe4a1e9ff00f60a8fff00
46cb401eff00e04ff9279e1aff00b055affe8a5ae82b9ff027fc93cf0d7fd82ad7ff00452d74140051451401c5dddc5dd83dddd6a1f6c7b659e571aa59de661b
68c12479909703083e56c2b67692719e1b06bda841e27d6f4f33ef06fcf907ec72cc218d2dad998610f76987a73b8f39c0e964d0f4f96792568a4fdeb6e92313
388dcfa940769f7c8e7bd23e83a749753dd792e93cee249248e67462c102641523076aa838c6428cf414018961afeb5aaeaf756b0436d6a96d6514ec2eade40e
f234b71190012a554f9008247439e73c6e41752eb3e1fb6bcb194dab5e411cd1bbc7b8c6ac037dd38e707bf43d41e95453c2560bac5c5ee5c43259c36ab046ee
9808f2bb12c1be6dc65e41feee4e735bcaaa88a88a15546001d00a00c1f09dc5f5f782fc337725c2bc93585bcb74f2a967977439241c8c36f2a7273c64639c8a
7e29d4ee12fa2b4b16ba33da426fdd2d55d8b90711c4e101c2be241cf1f27b71bd6ba559d95969f676d1bc56fa7aaa5b46b2be15550a0079f98053d1b3ce0f50
0d4f1dac315ccd70898967dbe63649ce0607d3f0f7a00e43c53afdcde785b5b7d12e12248f4237e975c82cb224bb0c6e186d61e5939e7aafd6a5d7354d4a7d32
3bab6992ded86b76b68542ba4a556f6389fe6cf4621863182a7a9cd6c5d785b47bdd39ec27b5736cf13c2c8b3c89ba3724b292ac095e4e0741db152dd787f4cb
c984b3c0ec44f1dced133aa79a8c195f6838c82a0e71ce39c8a00e63c7fa86a566d74b677ad6f10f0deab7044790de64621d8e18118605f83db9f5c8d0bbf12d
e6953ea36d7c2079a08ac9e278617c6eb999e1552b925b0c99e31907a0adad5343d3b5942b7f6fe686825b638919098a50048995238381f8807a814f9749b19e
e6e6e258034b730c704ac58fcc88cec83af183239c8e79f618008b46d427bf86e45c43223c1398848d6ef08946d560caafce3e6dbdf9535c8e8de2bbc87c2da3
aaacf79770e83677f723ecd2dc4b706443c065ce18f96fcb67248f7aee2d2ca0b18d9204203b1776672eccdd32598924e001c9ec2a9a78734a8ecad2cd2d4adb
dac0b6d146257c794a0008dcfce30070d9fd68033e4f10cf1788ecac59adda2bbbb92d446884bc65629240cce1b6f3e511b719191e86b1753f136a92f843c45e
732d86a96da44d702216f22344eb1924a393b65504801d71838c8e715d68d074d5bb8ee85b9f36299ee23fde3ed4918306655ce0121db381cee3eb51af873491
6b35a9b5df6f2dbb5ab46f23b288586191413f2a90070b81c0f41400dd6eff0050d334e826820fb436f02e5e381a4289b18975894ee7f9828da0e70d9e718383
69e26b8b9d7fecd0490c8f756968b14a165f295cb5e17263246dc0808c7cad9c2927031d55c6996b756f04332c8c2021a27f39c48a402b90e0eece0904e7904e
7ad67dc7866c8c729b345b7b8916346949762423bb8e8c086dd2c877021896e49a00c5b3f116bf77e2dbad041d310c0d723cef25db2238ecd94e37f526e5b233
d87a1ce65df89351d5ace3b9b397ec7f6cb3d0a63f33b6d5baba747500380bc606e5c311df852bd5e8de16b1d22f66bf1996fa6795da62cfff002d0441800cc7
af911724939079e4d4b1785b468208a18ecf6c7145690a0f35ce12d9cc900ebfc2c49f7ef914018fa3eb37b3c7069b6cf12ddcb73a9b092e3cc9808edeecc5dd
f764ef4fe2c019c0c0004b71e25bfb2fb1b5e45690c8f2da413da2132babcce88487070aaad20c647214fa8ad91a0e9c215892178c2cb34c1a399d183cae5e42
181070ccc4e338e9c702a1ff00845b45e02d90441243288e391d537c5b7cb6da0e32bb10671d140e8280336cfc47a85c4f64645b6586f754bdd363558d8b2184
dc6d72777208b739181f7bad1e1fd52fd3e1cf87f529e45b9b892d2d1ee246072c8e137375fbc03124f7c1e0678da8f44d3a2fb36cb7c7d9aee5bd8be76f9669
7ccdedd79cf9d270781bb803030e8348b1b7d18691142458084c0212ec711e31b4127206381cf03a500733ff000995e796a3ecf0f9af725130adb4c4ef12c2c4
e7bfda2324f4f95f1d322dea7e22bed35aeecb6dacd7d0c96011c2324656eae3c8048dc4e54ab9ebcf15acbe1ed25659e51649be7b78ed64393cc51ee28bd78c
6e3c8e7a73c0c38e85a7342d13c2f2069a29d9a499d98bc4eaf192c4e4e1941c671f99a00e7355d4f579745b7b95b986245d66d2d24f2a2789d82dec71484658
e158861b79cab7539ad3d075db9d42f64b3be5582e962f30dbb5bc9132f23255892b2a8dc06e53d7a819e2f5d787f4cbc984b3c0ec44f1dced133aa79a8c195f
6838c82a0e71ce39c8a92cb46b0d3e5592da164648cc518691984684825501242af0bc0c0f947a0a00e720d6b51835fd56c8cd1c86e35b4b1b4df192b02fd852
76cfcdc8c2b7031f31cf43c5bb4d7752bfd5b54d26016c975a5edf3e59217f2e6debb9027cdc71d4e5b07b56bc9a269f2cb712b404497122cd232c8ca4c8aa14
38c1e1b68032307000ed546f7c3314db45aca205dac242de6333eeea5996452dee1b70e940189a5f8d6fb50d0a0d4becacce9676f3dc410584f2195de1495846
cb90a0070003bb9e0e2a19afb596f1635bc57ea1078905bc68cadb447fd96642ac037ccbb886c71f30cfa63a6b4f0be9569a75a592c2ed0db4115b8065602458
d42aef00e1f81dc1ab0742d38ea4350fb39fb4fda05d6ef31b1e6888c3bf6e719f2d8af4e98f41800c0b5f165e5e978228952e2dfce1330b39a5491927961017
6676e4c2c7924804706ac689ac6b1aede6a0f18b5b4b4b69e08d619eda4f3b0f0dbccc1b2e36b01248bf77825491f290da83c3da62c6c8903c619e57631cee85
8c92191f2436482ecc707819e062a58746b0b759d6084c2279e3b8904523265e358d57a1e06d8906d1c103041c9c805fa28a2800a28a2800a28a2800a28a2800
a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800af983f68eff9287a7ffd82a3ff00d1b2
d7d3f5f307ed1dff00250f4fff00b0547ffa365a00f7ff00027fc93cf0d7fd82ad7ff452d7415cff00813fe49e786bfec156bffa296ba0a0028a28a0028a85ee
eda272925c448c3aab3804537edf67ff003f707fdfc1401628aaff006fb3ff009fb83fefe0a3edf67ff3f707fdfc1401628aaff6fb3ff9fb83fefe0a3edf67ff
003f707fdfc1401628aaff006fb3ff009fb83fefe0a3edf67ff3f707fdfc1401628aa17bade99a7d85c5edd5f4296f6f134b2b06dc5554649c0c93c0e80668b2
d6f4cd42c2def6d6fa17b7b88965898b6d2cac320e0e08e0f42334017e8aaff6fb3ff9fb83fefe0a3edf67ff003f707fdfc1401628aaff006fb3ff009fb83fef
e0a3edf67ff3f707fdfc1401628aaff6fb3ff9fb83fefe0a3edf67ff003f707fdfc1401628aaff006fb3ff009fb83fefe0a64baa69f6f0b4b35fdac7129019de
650012428e49ee4803dc814016e8acff00eddd1ffe82b63ff8109fe347f6ee8fff00415b1ffc084ff1a00d0a2b3ffb7747ff00a0ad8ffe0427f8d1fdbba3ff00
d056c7ff000213fc6803428acffeddd1ff00e82b63ff008109fe347f6ee8ff00f415b1ff00c084ff001a00d0a2b3ff00b7747ffa0ad8ff00e0427f8d1fdbba3f
fd056c7ff0213fc6803428acdb6d7f4bbcd54e9b6b76b3dc883cf3e52b3204ddb7fd601b3393f7739ef8c5695001451450014514500145145001451555352b09
036cbdb66daec8db655386525581e7a820823b106802d5155fedf67ff3f707fdfc147dbecffe7ee0ff00bf82802c5155fedf67ff003f707fdfc147dbecff00e7
ee0ffbf82802c5155fedf67ff3f707fdfc147dbecffe7ee0ff00bf82802c5155fedf67ff003f707fdfc1505eeb7a669f61717b757d0a5bdbc4d2cac1b7155519
270324f03a019a00bf4557fb7d9ffcfdc1ff007f051f6fb3ff009fb83fefe0a00b14557fb7d9ff00cfdc1ff7f051f6fb3ff9fb83fefe0a00b14557fb7d9ffcfd
c1ff007f051f6fb3ff009fb83fefe0a00b14557fb7d9ff00cfdc1ff7f051f6fb3ff9fb83fefe0a00b145566d46c923691ef2dd5106598caa0019c7273ea47e75
07f6ee8fff00415b1ffc084ff1a00d0a2b3ffb7747ff00a0ad8ffe0427f8d1fdbba3ff00d056c7ff000213fc6803428acffeddd1ff00e82b63ff008109fe347f
6ee8ff00f415b1ff00c084ff001a00d0a2b3ff00b7747ffa0ad8ff00e0427f8d1fdbba3ffd056c7ff0213fc6803428acff00eddd1ffe82b63ff8109fe3525a6a
b637f7134169731cef0a23b98fe65018b01f30e09f94f19c8e338c8c805ca28a2800af983f68eff9287a7ffd82a3ff00d1b2d7d3f5f307ed1dff00250f4fff00
b0547ffa365a00f7ff00027fc93cf0d7fd82ad7ff452d7415cff00813fe49e786bfec156bffa296ba0a0028a28a00e0f5d8219fc5179e6c51c988a2c6f5071c3
553fb059ff00cfa41ff7ec55fbff0006f892ef54babc8fc53668b2bb1457d27732a6e6288489403b41db9c0ce3279a83fe107f14ff00d0dd63ff008263ff00c7
e802bfd82cff00e7d20ffbf628fb059ffcfa41ff007ec558ff00841fc53ff43758ff00e098ff00f1fa3fe107f14ffd0dd63ff8263ffc7e802bfd82cffe7d20ff
00bf628fb059ff00cfa41ff7ec558ff841fc53ff0043758ffe098fff001fa3fe107f14ff00d0dd63ff008263ff00c7e802bfd82cff00e7d20ffbf628fb059ffc
fa41ff007ec558ff00841fc53ff43758ff00e098ff00f1fa3fe107f14ffd0dd63ff8263ffc7e8039af185b410f85b5268a08d18da5c8caa0071e44949e0ab4b6
97c13a33c96f13b1b44cb32024f15bb7ff000e7c43a958cf6773e2bb268a689e26c690410190a923f7fd70c6934df871e21d2b4db6b0b6f16d9882de311a6ed2
093803b9f3e801df60b3ff009f483fefd8a3ec167ff3e907fdfb1563fe107f14ff00d0dd63ff008263ff00c7e8ff00841fc53ff43758ff00e098ff00f1fa00af
f60b3ff9f483fefd8a3ec167ff003e907fdfb1563fe107f14ffd0dd63ff8263ffc7e8ff841fc53ff0043758ffe098fff001fa00aff0060b3ff009f483fefd8a3
ec167ff3e907fdfb1563fe107f14ff00d0dd63ff008263ff00c7e8ff00841fc53ff43758ff00e098ff00f1fa00aff60b3ff9f483fefd8ac3f15410c1a1dcf951
471e7ecf9d8a067fd36daba4ff00841fc53ff43758ff00e098ff00f1faa7a8fc36f11ea700867f185a08f7a3304d1f1bc2bac814fefba6e443c60f1d704e4038
ca2bb0ff008559ac7fd0cb63ff008297ff00e3f47fc2acd63fe865b1ff00c14bff00f1fa00e3e8aec3fe1566b1ff00432d8ffe0a5fff008fd1ff000ab358ff00
a196c7ff00052fff00c7e8038fa2bb0ff8559ac7fd0cb63ff8297ffe3f47fc2acd63fe865b1ffc14bfff001fa00e3e8aec3fe1566b1ff432d8ff00e0a5ff00f8
fd1ff0ab358ffa196c7ff052ff00fc7e800f871ff230dc7fd7a37fe8695e9f5c6f84fc177fe1cd565bcbad5edaf11e03108e2b268482594e77195bd3a63bf5ae
ca800a28a2800a28a2800a28a2800af22d16da09a5d69a5823761ad5f8cb20271f687af5daf3dff857fae41777d258789ed2082eaf27ba11c9a599194c923390
5bce19c6ec6703a50043f60b3ff9f483fefd8a3ec167ff003e907fdfb1563fe107f14ffd0dd63ff8263ffc7e8ff841fc53ff0043758ffe098fff001fa00aff00
60b3ff009f483fefd8a3ec167ff3e907fdfb1563fe107f14ff00d0dd63ff008263ff00c7e8ff00841fc53ff43758ff00e098ff00f1fa00aff60b3ff9f483fefd
8a3ec167ff003e907fdfb1563fe107f14ffd0dd63ff8263ffc7e8ff841fc53ff0043758ffe098fff001fa00aff0060b3ff009f483fefd8ac2f185b410f85b526
8a08d18da5c8caa0071e4495d2ff00c20fe29ffa1bac7ff04c7ff8fd56bff873e21d4ac67b3b9f15d9345344f1363482080c85491fbfeb86340115b5a5b4b1bb
c96f13b1964cb32024fce6a6fb059ffcfa41ff007ec54e3c0be264ddb3c57608a58b6d1a39c024e4f59fde97fe107f14ff00d0dd63ff008263ff00c7e802bfd8
2cff00e7d20ffbf628fb059ffcfa41ff007ec558ff00841fc53ff43758ff00e098ff00f1fa3fe107f14ffd0dd63ff8263ffc7e802bfd82cffe7d20ff00bf628f
b059ff00cfa41ff7ec558ff841fc53ff0043758ffe098fff001fa3fe107f14ff00d0dd63ff008263ff00c7e802bfd82cff00e7d20ffbf628fb059ffcfa41ff00
7ec558ff00841fc53ff43758ff00e098ff00f1fa3fe107f14ffd0dd63ff8263ffc7e80332ee28e1d3f5958a344536b09c2a8033e70ae4ebba9bc01e259a3911b
c5b65b650ab201a39f9d549214feff0081920f183c0e71906aff00c2acd63fe865b1ff00c14bff00f1fa00e3e8aec3fe1566b1ff00432d8ffe0a5fff008fd1ff
000ab358ff00a196c7ff00052fff00c7e8038fa2bb0ff8559ac7fd0cb63ff8297ffe3f47fc2acd63fe865b1ffc14bfff001fa00e3e8aec3fe1566b1ff432d8ff
00e0a5ff00f8fd1ff0ab358ffa196c7ff052ff00fc7e8038faf40f865ff314ff00b65ffb3d67ff00c2acd63fe865b1ff00c14bff00f1fae9fc1fe16bcf0d7db7
ed7a9c17bf68d9b7cab4306cdbbb39cc8f9cee1e98c77cd00751451450015f307ed1dff250f4ff00fb0547ff00a365afa7ebe60fda3bfe4a1e9fff0060a8ff00
f46cb401effe04ff009279e1affb055aff00e8a5ae82b9ff00027fc93cf0d7fd82ad7ff452d741400514514019d77af697617060babd8e194004ab67383507fc
255a17fd04e0fccd73fac7fc8d17bff5ca1fe4d55e803a8ff84ab42ffa09c1f99a3fe12ad0bfe82707e66b97a2803a8ff84ab42ffa09c1f99a3fe12ad0bfe827
07e66b97a2803a8ff84ab42ffa09c1f99a3fe12ad0bfe82707e66b97a2803a0bff001ae8361a6dddeb5eaccb6d03ced1c232ec114b10a0e06703b9149a778db4
0d474cb4be4be4892e6149963978740c01c30191919e704d701e34ff00915351ff00af4b8ffd11251e06ff00911b45ff00af44fe5401e91ff095685ff41383f3
347fc255a17fd04e0fccd72f4500751ff095685ff41383f3347fc255a17fd04e0fccd72f4500751ff095685ff41383f3347fc255a17fd04e0fccd72f4500751f
f095685ff41383f334c9fc5fa05bdb497126a51f951940e555988dcea8bc004f2cea3f1ae6ab9ff17ffc80ee3feddfff004b6d6803d03fe136f0effd043ff20c
9ffc4d1ff09b7877fe821ff9064ffe26bc828a00f5ff00f84dbc3bff00410ffc8327ff001347fc26de1dff00a087fe4193ff0089af20a2803d7ffe136f0eff00
d043ff0020c9ff00c4d1ff0009b7877fe821ff009064ff00e26bc828a00f5fff0084dbc3bff410ff00c8327ff1347fc26de1dffa087fe4193ff89af20a2803d8
f4df1569fabeb2da758acf285b7339b9d8163fbc17672436ee41fbb8c77cf15b95e61f0e3fe461b8ff00af46ff00d0d2bd3e800a28a2800a28a2800a28a2800a
c55f16e82ed2a8d4a20d14b242e181055d1ca30e4766523dfb715b55e4fa07dfd6ff00ec377fff00a50f401e81ff00095685ff0041383f3347fc255a17fd04e0
fccd72f4500751ff00095685ff0041383f3347fc255a17fd04e0fccd72f4500751ff00095685ff0041383f3347fc255a17fd04e0fccd72f4500751ff00095685
ff0041383f3355effc6ba0d869b777ad7ab32db40f3b4708cbb0452c4283819c0ee4573f5cff008d3fe454d47febd2e3ff004449401e92de28d1118ab6a30860
7041ce41a4ff0084ab42ff00a09c1f99ae3ecffd437fd7593ff436ab1401d47fc255a17fd04e0fccd1ff00095685ff0041383f335cbd1401d47fc255a17fd04e
0fccd1ff00095685ff0041383f335cbd1401d47fc255a17fd04e0fccd1ff00095685ff0041383f335cbd1401d57fc24da31b79a75bf8da38406919159b682401
d07a91557fe136f0effd043ff20c9ffc4d71fa87fc78eb1ff5e90ffe8e15c85007afff00c26de1dffa087fe4193ff89a3fe136f0effd043ff20c9ffc4d790514
01ebff00f09b7877fe821ff9064ffe268ff84dbc3bff00410ffc8327ff00135e4145007aff00fc26de1dff00a087fe4193ff0089a3fe136f0eff00d043ff0020
c9ff00c4d79051401ebfff0009b7877fe821ff009064ff00e26ae695afd8eb57171158349224088cd295daa4b16f94679c8db93c63e618279c78a57a07c32ff9
8a7fdb2ffd9e803bfa28a2800af983f68eff009287a7ff00d82a3ffd1b2d7d3f5f307ed1dff250f4ff00fb0547ff00a365a00f7ff027fc93cf0d7fd82ad7ff00
452d7415cff813fe49e786bfec156bff00a296ba0a0028a28a00e36f3e1eade5fdc5d9f147882269a467d892c0420662db416889da371001270303a0a87fe15b
2ffd0dbe23ff00bfb6ff00fc66abff00c2acff00a9f7c73ff838ff00ec28ff008559ff0053ef8e7ff071ff00d850058ff856cbff00436f88ff00efedbfff0019
a3fe15b2ff00d0dbe23ffbfb6fff00c66abffc2acffa9f7c73ff00838ffec28ff8559ff53ef8e7ff00071ffd850058ff00856cbff436f88ffefedbff00f19a3f
e15b2ffd0dbe23ff00bfb6ff00fc66abff00c2acff00a9f7c73ff838ff00ec28ff008559ff0053ef8e7ff071ff00d850058ff856cbff00436f88ff00efedbfff
0019a3fe15b2ff00d0dbe23ffbfb6fff00c66abffc2acffa9f7c73ff00838ffec28ff8559ff53ef8e7ff00071ffd85003ee7e16db5e5b4b6f71e28f10cb0ca8d
1bab3db905594a9ff963e848cfbd25a7c2bb6b1b486d2d7c51e228a08502468b25be140e83fd4d37fe1567fd4fbe39ff00c1c7ff006147fc2acffa9f7c73ff00
838ffec2802c7fc2b65ffa1b7c47ff007f6dff00f8cd1ff0ad97fe86df11ff00dfdb7ffe3355ff00e1567fd4fbe39ffc1c7ff6147fc2acff00a9f7c73ff838ff
00ec2802c7fc2b65ff00a1b7c47ff7f6dfff008cd1ff000ad97fe86df11ffdfdb7ff00e3355ffe1567fd4fbe39ff00c1c7ff006147fc2acffa9f7c73ff00838f
fec2802c7fc2b65ffa1b7c47ff007f6dff00f8cd1ff0ad97fe86df11ff00dfdb7ffe3355ff00e1567fd4fbe39ffc1c7ff6147fc2acff00a9f7c73ff838ff00ec
2802c7fc2b65ff00a1b7c47ff7f6dfff008cd57bbf8516b7c8a973e29f11c88aeafb7ce800255830ce21e46e55383c6403d851ff000ab3fea7df1cff00e0e3ff
00b0a3fe1567fd4fbe39ff00c1c7ff00614007fc2a7b1ffa18b5cfcedbff008c51ff000a9ec7fe862d73f3b6ff00e3147fc2acff00a9f7c73ff838ff00ec28ff
008559ff0053ef8e7ff071ff00d85001ff000a9ec7fe862d73f3b6ff00e3147fc2a7b1ff00a18b5cfcedbff8c51ff0ab3fea7df1cffe0e3ffb0a3fe1567fd4fb
e39ffc1c7ff614007fc2a7b1ff00a18b5cfcedbff8c51ff0a9ec7fe862d73f3b6ffe3147fc2acffa9f7c73ff00838ffec28ff8559ff53ef8e7ff00071ffd8500
1ff0a9ec7fe862d73f3b6ffe3147fc2a7b1ffa18b5cfcedbff008c51ff000ab3fea7df1cff00e0e3ff00b0a3fe1567fd4fbe39ff00c1c7ff0061401b1e1bf045
b786b5192f21d5752bb6788c5e5dd793b40241c8d91a9cfcbeb8e4f15d4579ff00fc2acffa9f7c73ff00838ffec2bb8b0b5fb0e9d6d67f689ee3c88922f3ae1f
7c926d006e76eec71927b9a00b14514500145145001451450015c449f0d6d8ddddcf6fe22d76d56e6e65b968a192008af23976c662271963d49aebefed7edda7
5cd9fda27b7f3e278bceb77d9247b811b91bb30ce41ec6b87ff8559ff53ef8e7ff00071ffd850058ff00856cbff436f88ffefedbff00f19a3fe15b2ffd0dbe23
ff00bfb6ff00fc66abff00c2acff00a9f7c73ff838ff00ec28ff008559ff0053ef8e7ff071ff00d850058ff856cbff00436f88ff00efedbfff0019a3fe15b2ff
00d0dbe23ffbfb6fff00c66abffc2acffa9f7c73ff00838ffec28ff8559ff53ef8e7ff00071ffd850058ff00856cbff436f88ffefedbff00f19a3fe15b2ffd0d
be23ff00bfb6ff00fc66abff00c2acff00a9f7c73ff838ff00ec28ff008559ff0053ef8e7ff071ff00d850058ff856cbff00436f88ff00efedbfff0019a8ae7e
16db5e5b4b6f71e28f10cb0ca8d1bab3db905594a9ff00963e848cfbd33fe1567fd4fbe39ffc1c7ff6147fc2acff00a9f7c73ff838ff00ec2802c7fc2b64c923
c57e225c92c42bdb0192727810d1ff000ad97fe86df11ffdfdb7ff00e3355ffe1567fd4fbe39ff00c1c7ff006147fc2acffa9f7c73ff00838ffec2802c7fc2b6
5ffa1b7c47ff007f6dff00f8cd1ff0ad97fe86df11ff00dfdb7ffe3355ff00e1567fd4fbe39ffc1c7ff6147fc2acff00a9f7c73ff838ff00ec2802c7fc2b65ff
00a1b7c47ff7f6dfff008cd1ff000ad97fe86df11ffdfdb7ff00e3355ffe1567fd4fbe39ff00c1c7ff006147fc2acffa9f7c73ff00838ffec2802c7fc2b65ffa
1b7c47ff007f6dff00f8cd1ff0ad97fe86df11ff00dfdb7ffe3355ff00e1567fd4fbe39ffc1c7ff6147fc2acff00a9f7c73ff838ff00ec2802593e18c32a957f
15788cab11b879b6ff003633807f73c8e7383c6707a81517fc2a7b1ffa18b5cfcedbff008c51ff000ab3fea7df1cff00e0e3ff00b0a3fe1567fd4fbe39ff00c1
c7ff00614007fc2a7b1ffa18b5cfcedbff008c51ff000a9ec7fe862d73f3b6ff00e3147fc2acff00a9f7c73ff838ff00ec28ff008559ff0053ef8e7ff071ff00
d85001ff000a9ec7fe862d73f3b6ff00e3147fc2a7b1ff00a18b5cfcedbff8c51ff0ab3fea7df1cffe0e3ffb0a3fe1567fd4fbe39ffc1c7ff614007fc2a7b1ff
00a18b5cfcedbff8c51ff0a9ec7fe862d73f3b6ffe3147fc2acffa9f7c73ff00838ffec28ff8559ff53ef8e7ff00071ffd85001ff0a9ec7fe862d73f3b6ffe31
5d07867c270785fed5e4ea37d79f68d99fb5f95f26dcf4d88bd7777cf41d2b9fff008559ff0053ef8e7ff071ff00d856c786fc17ff0008e6a325e7fc24de23d5
37c462f2753bff003e35c907705da30dc633e84fad00751451450015f307ed1dff00250f4fff00b0547ffa365afa7ebe60fda3bfe4a1e9ff00f60a8fff0046cb
401eff00e04ff9279e1aff00b055affe8a5ae82b9ff027fc93cf0d7fd82ad7ff00452d7414005145140051451400514514005145140051451400514514005145
14005145140051451400514514005145140051451400514514005145140051451400514514005145140051451400514514005145140051451400514514005145
1400514514005145140051451400514514011cf3c36d0b4d712c7144bf79e460aa3b724d53feddd1ff00e82b63ff008109fe359fe36ff9142fbfed9ffe8c5af2
0a00f6ff00eddd1ffe82b63ff8109fe347f6ee8fff00415b1ffc084ff1af10a2803dbffb7747ff00a0ad8ffe0427f8d1fdbba3ff00d056c7ff000213fc6bc428
a00f6ffeddd1ff00e82b63ff008109fe347f6ee8ff00f415b1ff00c084ff001af10a2803dbff00b7747ffa0ad8ff00e0427f8d4969aad8dfdc4d05a5cc73bc28
8ee63f994062c07cc3827e53c67238ce3233e195e81f0cbfe629ff006cbff67a00efe8a28a002be60fda3bfe4a1e9fff0060a8ff00f46cb5f4fd7cc1fb477fc9
43d3ff00ec151ffe8d96803dff00c09ff24f3c35ff0060ab5ffd14b5d0573fe04ff9279e1aff00b055affe8a5ae82800a28a2800a28a2800a28a2800a28a2800
a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800
a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28031fc4da35c6bda2bd8daea1f62919d5b79844aac01fbacb9048efc329c81c9190788ff855
9ac7fd0cb63ff8297ffe3f5e9f45007987fc2acd63fe865b1ffc14bfff001fa3fe1566b1ff00432d8ffe0a5fff008fd7a7d1401e61ff000ab358ff00a196c7ff
00052fff00c7e8ff008559ac7fd0cb63ff008297ff00e3f5e9f45007987fc2acd63fe865b1ff00c14bff00f1fa3fe1566b1ff432d8ff00e0a5ff00f8fd7a7d14
01e61ff0ab358ffa196c7ff052ff00fc7eba7f07f85af3c35f6dfb5ea705efda366df2ad0c1b36eece7323e73b87a631df35d4514005145140057cc1fb477fc9
43d3ff00ec151ffe8d96be9faf983f68eff9287a7ffd82a3ff00d1b2d007bff813fe49e786bfec156bff00a296ba0ae7fc09ff0024f3c35ff60ab5ff00d14b5d
05001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451
45001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451
45001451450015f307ed1dff00250f4fff00b0547ffa365afa7ebe60fda3bfe4a1e9ff00f60a8fff0046cb401eff00e04ff9279e1aff00b055affe8a5ae82b9f
f027fc93cf0d7fd82ad7ff00452d7414005145140051451400514514005145140051451400514514005145140051451400514514005145140051451400514514
00514514005145140051451400514514005145140051451400514514005145140051451400514514005145140051451400514514005145140051451400514514
00514514005145140051451400514514005145140057cc1fb477fc943d3ffec151ff00e8d96be9faf983f68eff009287a7ff00d82a3ffd1b2d007bff00813fe4
9e786bfec156bffa296ba0ae7fc09ff24f3c35ff0060ab5ffd14b5d05001451450014570b796e6c46a1a8bdbd96a5651dc4d24d740b477d6c3713b53e53bca9e
1402a4aedc64f565b5eea1178bf5db2824bd749f512c5a1f2729b2d2d0855f33039f30faf09d89248077b45711a66adab6a9ad5ec13ea7f618ed74e8a608a217
dcfe7dca19188dc3695890900f19c641cd6ccf796979e17b1d43588248d258a299ed0a962cecbc44506779c9fbbcf205006f51583a058dd4168b2cdbf4f59ae9
a75d3d761114663da2224023a8f30ed3c3640257839fe28377a8ea6b65636935c496107db14a1550b704e21c9665047cb2640c9c119c646403aea2b80f166ad2
6b5e0fd78c13bda599f0f35da9641994c89286460c370da10038c1cbfe153f882e2eaf34a8ee26bb68957c416700b42a98da97d12af38dd92007ebd0f4a00ee2
8af3df89025cde01712ac7ff0008b6b0cd10c6d620400678cff17e9ee73a37facea7a4ddeab66669af1a182c248dc4718743713c90b9030176a840df374e7271
401d8d1595a15d5e5c47791de2b86b7b93146d2b445dd7623658464a820b118e0e0038e6b98f0fea1adea50f8612e35a9b76aba1b5fcf22c1082b22fd9f1b7e4
c007cf39c83f74631401de515e77e0dd7aff005e9999dc5a7db9a3ba9268238c1ddf60b27f2f91c9265639209da98c80054fe10b8bb9ad2ead05f9823867beb8
fb42a2113b35f5c827041c05da09c63ef8e6803bda2bc9fc077f7365e15b686d639d9af2eec6067802168c7f64db3e7e7f9464a05e7bb0ef8aef2daeb54bbf0a
4f32623d49567488928fb991d950b6d2572db412074c91c11401b94570173e2fd407db65b46f3d6546bcb18955771862493cc503ab02f1a8cffd3618c706ae6b
badea3a1e9d7ed05e9bd75d0eef518e678d36c7244136fdd03e56de48073f70f3401d9d15c078b1afdbc17e3186e3549b1676134637c710f3c341bcb1c2e4025
8a0c60fc9dfad6bd96ad7a3c442deee499adae2e268ade58c44f6ee5779f2f23f789228439dd9048383d80075145711ab5edde9de2ed6ae2de690e6c74a84290
0a4425ba9e369318fe1525bd3ae78c62e0d43513e2e6f0f7db27fb3fd985cfdbb645bf7671e4fddc671f3fdde9401d5d15c068bafeb3a8c1244d71713340d74d
f6ab74b755942ddcf12e4391f2aac4b9c72770f9aa834d797fa3eb77134f24534de21d2088cb248b0330b06214ae41c16f520e01ee4900f4ea2b8b4d6b546d6e
ef4557bb985bddc91fda6158048cab05bca14efc2e733b740784fc6934bbfd675ad6af2de5d4e6b086df4f89f6c2b6ef97696ee2f30b61c74891f683804007f8
8100ed68a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028
a28a0028a28a0028a28a0028a28a002be60fda3bfe4a1e9fff0060a8ff00f46cb5f4fd7cc1fb477fc943d3ff00ec151ffe8d96803dff00c09ff24f3c35ff0060
ab5ffd14b5d0573fe04ff9279e1aff00b055affe8a5ae82800a28a2802abe996125dfdadec6d9ae78fdf344a5f8e9f3633c524da5e9f70d2b4d636d234c4190b
c2a4be06067239c0240ab74500651f0e696daac9a8496b148ef6f0dbac7246a523589a4652a31c1ccad9fa0e9dee5de9f65a824697b676f72b1bef8d66895c23
608c8c8e0e0919f426acd1401562d32c2011086c6da31148658f644a363952a586070769233d7048a9d218a392491234579082ec1402c40c0c9efc714fa28028
cfa3695756df66b8d32ce6806efdd4902b2fcc72dc118e4939f5a7cda569d71702e27b0b59670cac24785598152194e48ce41008f42055ba2802bdde9f657e9b
2f2d2dee576b26268c38dac30c391d08e0fa8a735a5b3c92c8d6f134934622958a025d06e2149ee06e6c03fde3ea6a6a28022b7b682d2110db431c310e891a85
51f80a64361676ff0067f22d208becd11820d9185f2a33b728b8fbabf22f038f947a0ab14500514d174a4b536a9a659adb92a4c42050995508a718c70aaaa3d0
281d052ff63e99e4c70ff675a7951bb4889e42ed566259980c70492493dc935768a00a71693a6c168f69169f691db3eddd0a42a11b6aaaae463070a8a07a0503
b0ab31451c312c5122c71a0c2a20c003d00a7d14015a2d3eca1789e2b3b78de18da28992200a231059578e012aa481d703d298ba4e9cb6f7102e9f6a21b85293
c6215db2a90410c3182304f07d6ae5140152f34ad3b51cfdb6c2d6e728633e742af953d4723a1f4a7a69f651ddb5da5a40b72df7a658c073f56c67b0ab145004
12595acd334d25b42f2b47e533b460b14ce7693e99edd2a95df87ec2e6d52d9218ede157dfe5c50c6558fbab295f4e719f7ad4a280332dbc3fa55b69f1590b18
25862677512c4adf3331763d3009624f1569f4fb291dddecedd99d91999a25258a10c84f1c952011e840c559a2802acba6d84e2512d95b48267f3250f129defb
42ee6e393b540c9ec00ed4369960f1cd1b58db324d08b7954c4a44910dd84618e546f6e0f1f31f5356a8a0028a28a0028a28a0028a28a0028a28a0028a28a002
8a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002b36fefe68f51b3d36d0c42e6e5249b74a0b048e3da18ed0464ee9106323ae7b60e9550bf
d3e5b9b9b5bbb6b8582e6df72ab3c7bd591b1b948c838caa9e08e545004b626fbcb912fd61f311f0b24390b22e01ddb49254e723193d3af356aaa585a4d6c267
b9bb7b89a67dec70551380308b93b4719ea7924d5ba0028a28a0028a28a0028a28a0028a28a0028a28a002be60fda3bfe4a1e9ff00f60a8fff0046cb5f4fd7cc
1fb477fc943d3ffec151ff00e8d96803dffc09ff0024f3c35ff60ab5ff00d14b5d0573fe04ff009279e1affb055aff00e8a5ae82800a28a28039cd57c75a0689
a8c9617f3de477118058269f7122e08c8c324654f5ec7dba8aa5ff000b3fc29ff3f77dff0082abbffe3555f58ff91a2f7feb943fc9aabd00687fc2cff0a7fcfd
df7fe0aaefff008d51ff000b3fc29ff3f77dff0082abbffe3559f4500687fc2cff000a7fcfddf7fe0aaeff00f8d51ff0b3fc29ff003f77dff82abbff00e3559f
4500687fc2cff0a7fcfddf7fe0aaefff008d51ff000b3fc29ff3f77dff0082abbffe3559f45005bbaf8abe15b6b39ee04da8cbe4c4d2144d2ee4160a09201640
a3a75240f520525a7c57f09ddd941722e3508c4d1ac9b1b4cb962b919c12a854fd4123d09ae57c69ff0022a6a3ff005e971ffa224ae4341ff917b4cffaf48bff
00401401ebff00f0b3fc29ff003f77dff82abbff00e3547fc2cff0a7fcfddf7fe0aaefff008d579851401e9fff000b3fc29ff3f77dff0082abbffe3547fc2cff
000a7fcfddf7fe0aaeff00f8d579851401e9ff00f0b3fc29ff003f77dff82abbff00e3547fc2cff0a7fcfddf7fe0aaefff008d579851401e9fff000b3fc29ff3
f77dff0082abbffe3548ff00143c2c904930b9bd658c296ff8975c29f99820c6e419259946064f3d3835e6355f51ff009054ff00f5d6d7ff004aa1a00f4fff00
85b1e19f4d57ff000573ff00f1147fc2d8f0cfa6abff0082b9ff00f88aaf450058ff0085b1e19f4d57ff000573ff00f1147fc2d8f0cfa6abff0082b9ff00f88a
af450058ff0085b1e19f4d57ff000573ff00f1147fc2d8f0cfa6abff0082b9ff00f88aaf450058ff0085b1e19f4d57ff000573ff00f1147fc2d8f0cfa6abff00
82b9ff00f88aaf45006de83e38d2bc49a9b58e9d06a25921699e59ecde18d402a02e5c0f98eec8033c2b74efd2d71fe18ff9186ebfebd13ff4335d8500145145
00145145001451450015c9dc7c49f0b5b5ddc5b497b7665b795e193cbd3ae5d43a31560196320e082383dabacaf27d03efeb7ff61bbfff00d287a00ea3fe167f
853fe7eefbff0005577ffc6a8ff859fe14ff009fbbeffc155dff00f1aacfa280343fe167f853fe7eefbff05577ff00c6a8ff00859fe14ff9fbbeff00c155dfff
001aacfa280343fe167f853fe7eefbff0005577ffc6a8ff859fe14ff009fbbeffc155dff00f1aacfa280343fe167f853fe7eefbff05577ff00c6aa2baf8abe15
b6b39ee04da8cbe4c4d2144d2ee4160a09201640a3a75240f520554ae7fc69ff0022a6a3ff005e971ffa224a00ec3fe167f853fe7eefbff05577ff00c6a8ff00
859fe14ff9fbbeff00c155dfff001aaf30a2803d3ffe167f853fe7eefbff0005577ffc6a8ff859fe14ff009fbbeffc155dff00f1aaf30a2803d3ff00e167f853
fe7eefbff05577ff00c6a8ff00859fe14ff9fbbeff00c155dfff001aaf30a2803d3ffe167f853fe7eefbff0005577ffc6a8ff859fe14ff009fbbeffc155dff00
f1aaf30a2803d447c4af0d4914af0cba84de526f755d32e010b90320320cf2470327193d0122affc2d8f0cfa6abff82b9fff0088ae234aff0097dffaf493fa57
5f40163fe16c7867d355ff00c15cff00fc451ff0b63c33e9aaff00e0ae7ffe22abd140163fe16c7867d355ff00c15cff00fc451ff0b63c33e9aaff00e0ae7ffe
22abd140163fe16c7867d355ff00c15cff00fc451ff0b63c33e9aaff00e0ae7ffe22abd140163fe16c7867d355ff00c15cff00fc456cf873c5fa778a66bb8f4e
8af556d5632f25cdb342ac5f770bbb0491b39e31f30e7ae39ead8f0aff00c84350ff00ae50ff00392803a8a28a2800af983f68eff9287a7ffd82a3ff00d1b2d7
d3f5f307ed1dff00250f4fff00b0547ffa365a00f7ff00027fc93cf0d7fd82ad7ff452d7415cff00813fe49e786bfec156bffa296ba0a0028a28a00e7dbc2165
24d2cd2ddea12cb2c8ee5dae0e4067660a31fc2bbb6a8ec001da8ff843f4eff9ef7dff00812d55758f1bae8fab4da79f0feb378d1056f36d56064604678dd283
ea3903a1edcd51ff008592bff429788ffefd5bff00f1ea00d8ff00843f4eff009ef7dff812d47fc21fa77fcf7beffc096ac7ff008592bff429788ffefd5bff00
f1ea3fe164affd0a5e23ff00bf56ff00fc7a80363fe10fd3bfe7bdf7fe04b51ff087e9dff3defbff00025ab1ff00e164affd0a5e23ff00bf56ff00fc7a8ff859
2bff00429788ff00efd5bfff001ea00d8ff843f4eff9ef7dff00812d47fc21fa77fcf7beff00c096ac7ff8592bff00429788ff00efd5bfff001ea3fe164aff00
d0a5e23ffbf56fff00c7a80342fbc07a4ea161716734f7db2789e26227c950ca54919046704f6aa369f0bf44b3b282d63bad40a431ac6a5a44c9006067e4f6aa
9a87c534b1d3ae6ebfe114d74186179409becf1a1daa5b9612920601e809f407a54161f182cef34eb6b96f0deb2ad34492111b5bb282403c132a923dc807d874
a00d8ff8571a3ffcfcdf7fdf69ff00c4d1ff000ae347ff009f9beffbed3ff89acfff0085b163ff0042eeb9f95b7ff1fa3fe16c58ff00d0bbae7e56dffc7e8034
3fe15c68ff00f3f37dff007da7ff001347fc2b8d1ffe7e6fbfefb4ff00e26b3ffe16c58ffd0bbae7e56dff00c7e8ff0085b163ff0042eeb9f95b7ff1fa00d0ff
008571a3ff00cfcdf7fdf69ffc4d1ff0ae347ff9f9beff00bed3ff0089acff00f85b163ff42eeb9f95b7ff001fa3fe16c58ffd0bbae7e56dff00c7e80343fe15
c68fff003f37dff7da7ff1355ef3e1869773124697f7d1a896391d4946120460e14fcb90372a9e083c75aaff00f0b62c7fe85dd73f2b6ffe3f4d9be2cd9476b2
cffd81abaf97b3890c03716754006d94f3971d70319e7b100daff84322ff009fe9ff00efb7ff00e2e8ff0084322ff9fe9ffefb7ffe2eb1ff00e1665d7fd097ae
7fdf507ff1ca3fe1665d7fd097ae7fdf507ff1ca00d8ff0084322ff9fe9ffefb7ffe2e8ff84322ff009fe9ff00efb7ff00e2eb1ffe1665d7fd097ae7fdf507ff
001ca3fe1665d7fd097ae7fdf507ff001ca00d8ff84322ff009fe9ff00efb7ff00e2e8ff0084322ff9fe9ffefb7ffe2eb1ff00e1665d7fd097ae7fdf507ff1ca
3fe1665d7fd097ae7fdf507ff1ca00d8ff0084322ff9fe9ffefb7ffe2e8ff84322ff009fe9ff00efb7ff00e2eb1ffe1665d7fd097ae7fdf507ff001ca3fe1665
d7fd097ae7fdf507ff001ca00e9f48f0fc7a4dd493a4ef233a6c3bb24e3391c927dff3ad9ae53c39e31baf106aef66de1dbdd3e18e0695e6ba963ceedca1542a
b12720b1cf18dbdf3c75740051451400514514005145140057350f81f4b81ae1926bd06e2e66b97c4e57e791d9db8007196c0f603ad74b5c449f12ad85dddc16
fe1dd76e96dae65b669618e028cf1b946c665071953d40a00d7ff843f4eff9ef7dff00812d47fc21fa77fcf7beff00c096ac7ff8592bff00429788ff00efd5bf
ff001ea3fe164aff00d0a5e23ffbf56fff00c7a80363fe10fd3bfe7bdf7fe04b51ff00087e9dff003defbff025ab1ffe164aff00d0a5e23ffbf56fff00c7a8ff
008592bff429788ffefd5bff00f1ea00d8ff00843f4eff009ef7dff812d47fc21fa77fcf7beffc096ac7ff008592bff429788ffefd5bff00f1ea3fe164affd0a
5e23ff00bf56ff00fc7a80363fe10fd3bfe7bdf7fe04b557bef01e93a8585c59cd3df6c9e2789889f25432952464119c13dab3ff00e164affd0a5e23ff00bf56
ff00fc7aab6a1f14d2c74eb9baff0084535d06185e5026fb3c6876a96e584a481807a027d01e9401a3ff000ae347ff009f9beffbed3ff89a3fe15c68ff00f3f3
7dff007da7ff001359ff00f0b62c7fe85dd73f2b6ffe3f47fc2d8b1ffa1775cfcadbff008fd00687fc2b8d1ffe7e6fbfefb4ff00e268ff008571a3ff00cfcdf7
fdf69ffc4d67ff00c2d8b1ff00a1775cfcadbff8fd1ff0b62c7fe85dd73f2b6ffe3f401a1ff0ae347ff9f9beff00bed3ff0089a3fe15c68fff003f37dff7da7f
f1359fff000b62c7fe85dd73f2b6ff00e3f47fc2d8b1ff00a1775cfcadbff8fd00687fc2b8d1ff00e7e6fbfefb4ffe268ff8571a3ffcfcdf7fdf69ff00c4d67f
fc2d8b1ffa1775cfcadbff008fd1ff000b62c7fe85dd73f2b6ff00e3f40178fc39d39258a482fef90a16dc85c15914ab2956000c8f9b3d7a807b55aff84322ff
009fe9ff00efb7ff00e2eb2e3f89f05c453b5bf877572f0c7e61591add770040382253cf39e71c03ce700c7ff0b32ebfe84bd73fefa83ff8e5006c7fc21917fc
ff004fff007dbfff001747fc21917fcff4ff00f7dbff00f1758fff000b32ebfe84bd73fefa83ff008e51ff000b32ebfe84bd73fefa83ff008e5006c7fc21917f
cff4ff00f7dbff00f1747fc21917fcff004fff007dbfff001758ff00f0b32ebfe84bd73fefa83ff8e51ff0b32ebfe84bd73fefa83ff8e5006c7fc21917fcff00
4fff007dbfff001747fc21917fcff4ff00f7dbff00f1758fff000b32ebfe84bd73fefa83ff008e51ff000b32ebfe84bd73fefa83ff008e5006c7fc21917fcff4
ff00f7dbff00f175a7a3e891e8ed3b24cf2b4c1412c49202e71d49fef1ae53fe1665d7fd097ae7fdf507ff001cadcf0bf8a6e3c47717a92e8977a625b24454dd
4885a42c5f385527006d1ce79c9e38e403a4a28a2800af983f68eff9287a7ffd82a3ff00d1b2d7d3f5f307ed1dff00250f4fff00b0547ffa365a00f7ff00027f
c93cf0d7fd82ad7ff452d7415cff00813fe49e786bfec156bffa296ba0a0028a28a00e1f58ff0091a2f7feb943fc9aabd74e3c29a18321fece8d8c92c92b162c
c4b3bb3b1e4f766638e9cf14bff08ae85ff40c83f23401cbd15d47fc22ba17fd0320fc8d1ff08ae85ff40c83f23401cbd15d47fc22ba17fd0320fc8d1ff08ae8
5ff40c83f23401cbd15d47fc22ba17fd0320fc8d1ff08ae85ff40c83f23401e6fe34ff00915351ff00af4b8ffd1125721a0ffc8bda67fd7a45ff00a00af73b8f
07f87ee6d66b6974c88c5346d14814b292ac082320e46413d2abc1e02f0cdb5bc56f0e9bb62890222f9f21c0030072d401e49457afff00c213e1dffa07ff00e4
693ff8aa3fe109f0effd03ff00f2349ffc5500790515ebff00f084f877fe81ff00f91a4ffe2a8ff8427c3bff0040ff00fc8d27ff0015401e41457aff00fc213e
1dff00a07ffe4693ff008aa3fe109f0eff00d03fff002349ff00c5500790557d47fe4153ff00d75b5ffd2a86bd9ffe109f0eff00d03fff002349ff00c554175f
0ffc397491ab59c882395251b2e24018a9c8dc33861900e0e4640a00c6a2ba0ff843747ff9e3ff008ea7ff001347fc21ba3ffcf1ff00c753ff0089a00e7e8ae8
3fe10dd1ff00e78ffe3a9ffc4d1ff086e8ff00f3c7ff001d4ffe268039fa2ba0ff00843747ff009e3ff8ea7ff1347fc21ba3ff00cf1ffc753ff89a00e7e8ae83
fe10dd1ffe78ff00e3a9ff00c4d1ff00086e8fff003c7ff1d4ff00e268033fc31ff230dd7fd7a27fe866bb0accd3741b2d266796d50ab3aed6e140233ec0569d
0014514500145145001451450015e4fa07dfd6ff00ec377fff00a50f5eb158abe12d051a561a6c45a596499cb124b3bb9763c9eecc4fb76e280399a2ba8ff845
742ffa0641f91a3fe115d0bfe81907e4680397a2ba8ff845742ffa0641f91a3fe115d0bfe81907e4680397a2ba8ff845742ffa0641f91a3fe115d0bfe81907e4
680397ae7fc69ff22a6a3ff5e971ff00a224af48ff00845742ff00a0641f91a8ee3c1fe1fb9b59ada5d322314d1b452052ca4ab0208c8391904f4a00f1ca2bd7
ff00e109f0effd03ff00f2349ffc551ff084f877fe81ff00f91a4ffe2a803c828af5ff00f8427c3bff0040ff00fc8d27ff001547fc213e1dff00a07ffe4693ff
008aa00f20a2bd7ffe109f0eff00d03fff002349ff00c551ff00084f877fe81fff0091a4ff00e2a803c828af5fff008427c3bff40fff00c8d27ff1547fc213e1
dffa07ff00e4693ff8aa00f30d2bfe5f7febd24fe95d7d6e49e04f0f3cb04ab64c9240e5d184ac704ab21e0920fcacc391dea4ff00843747ff009e3ff8ea7ff1
3401cfd15d07fc21ba3ffcf1ff00c753ff0089a3fe10dd1ffe78ff00e3a9ff00c4d0073f45741ff086e8ff00f3c7ff001d4ffe268ff843747ff9e3ff008ea7ff
0013401cfd15d07fc21ba3ff00cf1ffc753ff89a3fe10dd1ff00e78ffe3a9ffc4d0073f5b1e15ff9086a1ff5ca1fe72558ff00843747ff009e3ff8ea7ff135a1
a668d67a479bf644dbe6e3770074ce3a01ea6803428a28a002be60fda3bfe4a1e9ff00f60a8fff0046cb5f4fd7cc1fb477fc943d3ffec151ff00e8d96803dffc
09ff0024f3c35ff60ab5ff00d14b5d0573fe04ff009279e1affb055aff00e8a5ae82800a28a2803cff00fe1497c3cffa17bff276e3ff008e51ff000a4be1e7fd
0bdff93b71ff00c72bd028a00f3fff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1caf40a2803cfff00e1497c3cff00a17bff00276e
3ff8e51ff0a4be1e7fd0bdff0093b71ffc72bd028a00f3ff00f8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001caf40a2803cff00fe1497
c3cffa17bff276e3ff008e51ff000a4be1e7fd0bdff93b71ff00c72bd028a00f3fff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1ca
f40a2803cfff00e1497c3cff00a17bff00276e3ff8e51ff0a4be1e7fd0bdff0093b71ffc72bd028a00f3ff00f8525f0f3fe85eff00c9db8ffe3947fc292f879f
f42f7fe4edc7ff001caf40a2803cff00fe1497c3cffa17bff276e3ff008e51ff000a4be1e7fd0bdff93b71ff00c72bd02abdfdf5be99a75cdfde49e5dadac4f3
4cfb49da8a096381c9c007a50070ff00f0a4be1e7fd0bdff0093b71ffc728ff8525f0f3fe85eff00c9db8ffe395d4b78a344462ada8c2181c107390693fe12ad
0bfe82707e6680397ff8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001caea3fe12ad0bfe82707e668ff84ab42ffa09c1f99a00e5ff00e1
497c3cff00a17bff00276e3ff8e51ff0a4be1e7fd0bdff0093b71ffc72ba8ff84ab42ffa09c1f99a3fe12ad0bfe82707e6680397ff008525f0f3fe85effc9db8
ff00e3947fc292f879ff0042f7fe4edc7ff1caea3fe12ad0bfe82707e668ff0084ab42ff00a09c1f99a00e5ffe1497c3cffa17bff276e3ff008e577161636fa6
69d6d61671f976b6b12430a6e276a2801464f27000eb59a3c55a4c97f63676f71f6896f27302794321488de4cb67a0c46c3bf247b91b54005145140051451400
514514015efec6df53d3ae6c2f23f32d6ea278664dc46e460430c8e46413d2b87ff8525f0f3fe85eff00c9db8ffe395e81450079ff00fc292f879ff42f7fe4ed
c7ff001ca3fe1497c3cffa17bff276e3ff008e57a051401e7fff000a4be1e7fd0bdff93b71ff00c728ff008525f0f3fe85effc9db8ff00e395e81450079fff00
c292f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3ff8e57a051401e7ff00f0a4be1e7fd0bdff0093b71ffc728ff8525f0f3fe85eff00c9db8f
fe395e8155efefadf4cd3ae6fef24f2ed6d6279a67da4ed4504b1c0e4e003d280387ff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1
cae83fe136f0effd043ff20c9ffc4d1ff09b7877fe821ff9064ffe268039ff00f8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001cae83fe
136f0eff00d043ff0020c9ff00c4d1ff0009b7877fe821ff009064ff00e268039fff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1ca
e83fe136f0effd043ff20c9ffc4d1ff09b7877fe821ff9064ffe268039ff00f8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001cae83fe13
6f0eff00d043ff0020c9ff00c4d1ff0009b7877fe821ff009064ff00e268039fff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1cae9
edbc57a25df9be45f06f293cc7263750ab9033c8f52297fe12ad0bfe82707e6680397ff8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001c
aea3fe12ad0bfe82707e668ff84ab42ffa09c1f99a00e5ff00e1497c3cff00a17bff00276e3ff8e51ff0a4be1e7fd0bdff0093b71ffc72ba8ff84ab42ffa09c1
f99a3fe12ad0bfe82707e6680397ff008525f0f3fe85effc9db8ff00e3947fc292f879ff0042f7fe4edc7ff1caea3fe12ad0bfe82707e668ff0084ab42ff00a0
9c1f99a00e5ffe1497c3cffa17bff276e3ff008e56c786fe1df857c23a8c97fa1e95f64ba92230b3fda259328482461d88eaa3f2ad0ff84ab42ffa09c1f99ab1
a7eb367aa5c4f159bf9a90a2334aa46d258b7ca39ce46dc9c803e618279c00685145140057cc1fb477fc943d3ffec151ff00e8d96be9faf983f68eff009287a7
ff00d82a3ffd1b2d007bff00813fe49e786bfec156bffa296ba0ae7fc09ff24f3c35ff0060ab5ffd14b5d0500145145001451450014514500145145001451450
01451450014514500145145001451450015cff008eff00e49e7897fec1575ffa29aba0aa7ab69b0eb3a35f69770d22c17b6f25bc8d190182ba952464119c1f43
401c1d9ffa86ff00aeb27fe86d562ac7fc2b64c923c57e225c92c42bdb0192727810d1ff000ad97fe86df11ffdfdb7ff00e334015e8ab1ff000ad97fe86df11f
fdfdb7ff00e3347fc2b65ffa1b7c47ff007f6dff00f8cd0057a2ac7fc2b65ffa1b7c47ff007f6dff00f8cd1ff0ad97fe86df11ff00dfdb7ffe334015e8ab1ff0
ad97fe86df11ff00dfdb7ffe3347fc2b65ff00a1b7c47ff7f6dfff008cd0063c5ff23ef877febecffe92ddd7a85729a4780ed34ad561d465d5b54d4658096856
f1e22b1b9564dc3646a49daee30491f3138c80475740051451400514514005145140051451400514514005145140051451400573fe3bff009279e25ffb055d7f
e8a6ae82a9eada6c3ace8d7da5dc348b05edbc96f23464060aea54919046707d0d00786515dfff00c2a7b1ff00a18b5cfcedbff8c51ff0a9ec7fe862d73f3b6f
fe31401c0515dfff00c2a7b1ff00a18b5cfcedbff8c51ff0a9ec7fe862d73f3b6ffe31401c0515dfff00c2a7b1ff00a18b5cfcedbff8c51ff0a9ec7fe862d73f
3b6ffe31401c0515dfff00c2a7b1ff00a18b5cfcedbff8c51ff0a9ec7fe862d73f3b6ffe31401cc685fea358ff00b07bff00e8695d3d4d07c2fb3b75982f8835
c2648cc79f3205db923270b100dc0230c18739c6e0a43bfe15b2ff00d0dbe23ffbfb6fff00c66802bd1563fe15b2ff00d0dbe23ffbfb6fff00c668ff00856cbf
f436f88ffefedbff00f19a00af4558ff00856cbff436f88ffefedbff00f19a3fe15b2ffd0dbe23ff00bfb6ff00fc66802bd1563fe15b2ffd0dbe23ff00bfb6ff
00fc668ff856cbff00436f88ff00efedbfff0019a00af5b1e15ff9086a1ff5ca1fe72567ff00c2b65ffa1b7c47ff007f6dff00f8cd6df877c329e1d6ba61aaea
3a835c0404deb464a05ddf77622f5dc7ae7f0a00dda28a2800af983f68eff9287a7ffd82a3ff00d1b2d7d3f5f307ed1dff00250f4fff00b0547ffa365a00f7ff
00027fc93cf0d7fd82ad7ff452d7415cff00813fe49e786bfec156bffa296ba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28
a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002a0bebc874eb0
b9bdb970905bc4d348c4f4550493f90a9eaa6a9a7c3ab6917ba6dc64c37703c1260e3e5752a7f43401967c4cb6970f697d6b30b8b7b38af2ee48947950a48ceb
c92d9f97cb6cf1d39f5c269fe24fb4f8ab52d0e68f12432bfd9dd17831a436aedb893f7b75d71818c0f51cd09341d4b56d63517be096f657fa45ad9dca90afe6
10f71e6aa90df2fcb20e48e8fd3238b8be17920f115deb76d7c8973712c8c03c058223c56f1b2fde1939b54607dc8c77a0092cfc5b65a84562f6b6b7921bbb28
2f820450c914b9da48ddc918390bbb18f719d2bfd496c5e1885bcd733cdb8a430eddc428cb1f98818191dfb8ac193c1313e8da6e94d731490585a456d13cd6aa
d2c4d1aedf36270414723bf2381c75ceddf69af717f6d7f6d3470dddbc7242af24664528e54b0c023bc68739ed40149bc57622c0dfa4174f649025c4d3ec08b0
a32eecb862186179200240eb559bc6b065445a46a937997d369f09458bf7d345e76f0b99071fb86e4e07ccbfed6d8f58f085c6b1a75fd8dc6ae648ef2d4db992
6877bc64a6c2ca030419fbdf7739279e98b56de18fb38d37379b8d96ab77a97faac6ff003fed1f275e36fda3af39d9d067800ba9ae5abccb06c944e6ecda7944
0dc1c217c9c1e9b06efa11f4a76b5a89d32c62b8040df776d6fcc7bffd6ce91f4dc3fbfd73c75c36306ac1a5c8fe2db9d51e378e1581628d59948924cfcd2003
247ca1579c1ebc0ea64bcd2ee756d0ecad6f2e112ea39ad2e6678e3f959e196395805ddc062847538cf7c72011681adcfa9e9b7ba85e41f65861bab885508048
586578c92431c9f909e831d391c98af3c5f6960919bab1be8de6f28c311542f2879638b2a03766963c8382030e0f4ab961a33d868d77611de3879e7bb99678d4
2b46669a4938073caf998cf7c671dab0ee7c0ef79a8595e4ba8c6b25b796088eddbf79b6e6de7e4b48cd93f670bd4e3767b7201b56de21b6b8b916cd0cf0cff6
a6b474902fc928884a012ac47284118cfe069d6dad2dd49a7cb1a62d2fd5c42cdf78b0cb29e0905590330fa0f5e33753f0ecd25beae96f2ca66d52fe2b959630
aa6d4ac51479249f987ee49e073bb18c735a92e9a1eff4b548556d74fdd2c678e1f618d401feebbf3f4fc0034e8a28a0028a28a0028a28a0028a28a002be60fd
a3bfe4a1e9ff00f60a8fff0046cb5f4fd7cc1fb477fc943d3ffec151ff00e8d96803dffc09ff0024f3c35ff60ab5ff00d14b5d0573fe04ff009279e1affb055a
ff00e8a5ae82800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a
28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a
28a2800a28a2800a28a2800af983f68eff009287a7ff00d82a3ffd1b2d7d3f5f307ed1dff250f4ff00fb0547ff00a365a00f7ff027fc93cf0d7fd82ad7ff0045
2d7415cff813fe49e786bfec156bff00a296ba0a0028a28a0028ae5bfe1259cea52d9c9736369762e1e2834fbb46492e0293829216da772e18614e3383c838b1
6be25925d5f56b07d3e7792d2f05bc0b16ccc8be4452331cb003064ef8e19475c8001d0d1582be2ab69afa4b4b6b1beb8922b64b994c68b84567913072c0ee0d
1382073e99e717eeaee57d3e2bab092dc47201219e63f22458dc5f1919e31dc75cf6a00bf4564e8dac49a9e976777e41916e259104b01531ec52e166e5bee384
523193f3af6c910f8835b9b4a6b75b748dc80d73721c13b6d931e630c7f17cc319eb83f8006e515cf78a7c4a744d1354b8b280dd5dda69f25e00006440158a17
f9812a4a9e9ce01a4d67c4b259408f6769248a751b6b269dd418be7b8489fa306c80cc01c6370efd2803a2a2b95f16f8a2f34069d2d6d16529a35fea0b249ca8
78047b411b812a77f38e7918ee4692f88edb376935bdcc135b245218640bb9d656658f6e188f9995940241c8e71401b14555b1bf8ef925db1c91490c86296293
1ba36c038382472194f07a1158b61e32b7d4a1d3dedb4bd48b6a167f6db58cac61a4886cdc7efe063cc41c919dc319a00e928ac28bc5ba75c5ab5e5b2cd3d947
1c724d73185d912ba2baeec9cfdc75638070181aabab78bd6d742d6afec6ca79ce9d05cb6f60a10c9086cab7cdb80ca9e48190323391900e9e8aa17fab45a75b
5b4b3c32efb89044910281b7952d824b051c03dfb606722a85e788e3b2d42ca29a39634b8b49a6f25e2fde1749208d573bb009698003041c83b863e600dea2b9
d1e2fb633fd9ff00b3b50173fda3fd9be4ec4dde6fd9fed19fbf8dbb3be7afb7354757f1b0b3d366beb3b6797cad3750bb36ee8037996af1a32b3efc0c333020
06ce320f18600ec28ae6ecbc49299ef2d2e2de5b8bd82e4402082158db8822958f32b02079a39c8ea060e32676f15d88b037e905d3d924097134fb022c28cbbb
2e1886185e4800903ad006ed15856be2ab6bb9e38d2cef1165bbb8b28a47540b24d0990328f9b3cf94e41200c0e7078a348f109bcf05e9bafde5b3446e6d21b8
9634c1d9bc292473f74673d738ed9e2803768ac36f1569c8f72b209a316f74d6cccca304ac664671cfdc015c67ae508c7ab6f7c576da740b25d595ec6ee62114
2510bca24952205406ecd2a641c119e9401bd45735aa78a25b5b684dbd84cb31bcb2b6b81304616e669625646daff7c2499e32b92bc9ad2b1d720d46ee586ded
ee0a472c90b4c557607462ac08cee1c838240071904823201a74573f37891adbc5375a4c96723a25b5b49018f69696495a6057961da1279c7dd6c9e99b6baf42
e7ca8adae24bb12346d6abb3cc42a149ce5b6e30e8739fe218eb401ab4560d978aadb51b513da58df48434c248bcb50f188e57889605bbb23600c938e9d6b2cf
8d2e64d5920b7b1335b36aeb628e982d2c6d626e432fcc003bb6f278da7d73800eca8ac78fc476f3da4335bdb5d4d2cad32fd9d02f98a626292672d8f9586de0
9e48c669a7c4b6f2dd1b7b1b4bbbf7fb125f66dc26d31b87f2f976519631b003dc670324006d5145140051451400514514005145140051451400514514005145
140051451400514514005145140051451400514514005145140051451400514514005145140057cc1fb477fc943d3ffec151ff00e8d96be9faf983f68eff0092
87a7ff00d82a3ffd1b2d007bff00813fe49e786bfec156bffa296ba0ae7fc09ff24f3c35ff0060ab5ffd14b5d050014514500625fe8773a85bddd8cda82b585c
93b91a126640c724249b863afca7195ec7818a93f83e2975abcd4cc96b2c93cc6544bab412ac7ba28a361f78641f2233c63041eb9e3a6a280391d3fc39a8e9be
20bd7b19aded6d24d3ede1122daa057904d72f26d452bb48f354e4820eee77106b7934cfb268f6ba7e9b39b44b548e384840c02a0002907a82060e083e845685
14019961a5cd60cee973197b8ba37175fba215f31edda8377c9caa1cf39c3776c86cbe1fb2bbd52e6fafe186f0c91a431c7344196245c92003919258924019c2
839c0ad5a280393baf074f268373a75b6a82192e74dfecd92e2480c8c625de233f7c1dca246e4939273c55abdf0d4d7108b582fa382c86a316a06216f962eb70
b3b2eedc0619813d320b679e95d151401cff00897c307c429285bcfb3349a6de69c498b78d970132d8c8e418d4fb8c8f70ba9f85e0d56fb50b8b894325ddbda4
62268f211ede6925563cfcc0b38cafa2f7cf1bf450067e93a5c7a5413222db2b4d2995fecf6eb0a67685fba3af0a39249f7c600cfd1fc31fd95fd81fe99e6ff6
4694da6ffaadbe6eef23e7ea76ff00a8e9cfdeebc73d051401c969de08fecef0fb68897eaf67716d0dbdeee83e69b64090315f9b09b923518c3629daaf8262d5
def5ae2e6257ba827b737115aaa4e63951d763b838755df90081caae4f5cf57450066ea5a649a9e9a96b3c96cfc8f3925b5124330c1055a363f779cfdece40e4
8c838571e0c11db5898a632b69f04cb0c4a800def710ce8572d80a8d000149e981b86327afa280392d33c377cfa89d4efe711cbfdb075211f963257ec5f65087
0c42f76eadc003be432ebc0bf69b1bbb6fed1dbf68b4d56db77919dbf6d984bbb1bb9d98c63f8bafcbd2bb0a28039f4f0d3c1aedeeb16d791adddc4ecea6480b
2a2343046c980c33936c8d9c8f4c77aabac7842e358d3afec6e3573247796a6dcc9343bde3253616501820cfdefbb9c93cf4c755450073f6de18fb38d37379b8
d96ab77a97faac6ff3fed1f275e36fda3af39d9d0678b1a7e8115a78461f0edc48b736d1598b22c63c6f8826c1b864e4edebd8f3c0e95b1450072f178322788c
77f78d74b369ef6974047b04cee58bcb8c9da4ef718e7af5e29fa8785a6d567b5b8bdd415ee2d1a1f25d202a36a5c433b861b8e4b1810678c75c76ae968a00c0
d47c392ddcf2b5b5ea5b45717d6d7d70be46e67785a3380db86032c28bc83d3f0a745e1b55f1026af24b034e8ce44a96c126746dd88ddc1f9d17770303a29ce7
39dda280302fbc346ebc4635a8eed639d238563568b70578fce01bef0c82b712291f4208c735e5d0ee74fbdfed4b302e3539e691e7996252b874890808d22e06
d822e8d9ca83ce4d74f4500717a4f82e482c84d746c9f5095a7333dcd9acdc3dc4b32e391823ce61d48c9abb69e0e8ecb52b6b8b7ba54b782f92f1601005e56c
8da6d1b480abb76b00178c11d08c74f450072e3c1b08485cc96f35cc33dec88f716de6204b99ccccbb0b7507600d9fe13c72455cb5f0fb69d7375716373144ef
a6dbd840a6dc6c88c2662adb54a823f7a3e51b40dbc1e78dca2800a28a2800a28a2800a28a2800a28a2800a28a280239e78ada09279e458e28d4b3bb1c0503a9
26ab5aeab677972d6f13c8b305dfe5cb0bc4c5781b806032391c8c8e6abf88ada6bad19d6dd1de48e5867f2d31990472abb20cf1f3052bf8d3edf50fb6ea1188
6c67f296362f713c4d11424ae1543a8273c92470368a00d2a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800
af983f68eff9287a7ffd82a3ff00d1b2d7d3f5f307ed1dff00250f4fff00b0547ffa365a00f7ff00027fc93cf0d7fd82ad7ff452d7415cff00813fe49e786bfe
c156bffa296ba0a0028a28a0028af2cf17eada95b78a6f61b7d42ee289766d48e66551f229e003587fdbbac7fd056fbff021ff00c6803dbe8af10feddd63fe82
b7dff810ff00e347f6eeb1ff00415beffc087ff1a00f6fa2bc43fb7758ff00a0adf7fe043ff8d1fdbbac7fd056fbff00021ffc6803dbe8af10feddd63fe82b7d
ff00810ffe347f6eeb1ff415beff00c087ff001a00f6fa2be7ef10eb5aacbe19d5639353bc747b399595a76208287208cd749e0bbad424f04e8846a9771a8b28
95511970a028000e3d05007aed15e7fe7ea3ff00417beffbed7ff89a3cfd47fe82f7dff7daff00f13401e814579ff9fa8ffd05efbfefb5ff00e268f3f51ffa0b
df7fdf6bff00c4d007a0515e7fe7ea3ff417beff00bed7ff0089a3cfd47fe82f7dff007dafff0013401e814579ff009fa8ff00d05efbfefb5ffe26b9ff00176a
3a9dae9698d4eedff7f011b9c71fe910a9e80750cc08ee0d007b0515e6ff006797fe7f27fc93ff0089a3ecf2ff00cfe4ff00927ff13401e914579bfd9e5ff9fc
9ff24ffe268fb3cbff003f93fe49ff00c4d007a4515e6ff6797fe7f27fc93ff89a3ecf2ffcfe4ff927ff0013401e914579bfd9e5ff009fc9ff0024ff00e268fb
3cbff3f93fe49ffc4d007a4515c47856d224f145cceea925c8b25413b469e6042e495dc003b7201c7ad76f400514514005145140051451400514578849aeeb03
51d5146ab7db5353bc441f687c2aadc48140e78000000ec05007b7d15e21fdbbac7fd056fbff00021ffc68feddd63fe82b7dff00810ffe3401edf457887f6eeb
1ff415beff00c087ff001a3fb7758ffa0adf7fe043ff008d007b7d15e21fdbbac7fd056fbff021ff00c68feddd63fe82b7dff810ff00e3401edf457887f6eeb1
ff00415beffc087ff1ac9f146a57f7de16d52deeef6e6e2136cec639656752546e0704e382011ee05007d0b4579dc379a94eaee755bc5fde3a80ae3000620751
ed5279fa8ffd05efbfefb5ff00e26803d028af3ff3f51ffa0bdf7fdf6bff00c4d1e7ea3ff417beff00bed7ff0089a00f40a2bcff00cfd47fe82f7dff007dafff
0013479fa8ff00d05efbfefb5ffe26803d028af3ff003f51ff00a0bdf7fdf6bffc4d1e7ea3ff00417beffbed7ff89a00f40a2bcc6ea6b8325c4b35c497135bdb
130cb3052d1eecee00e3a128848efb47a54df6797fe7f27fc93ff89a00f48a2bcdfecf2ffcfe4ff927ff001347d9e5ff009fc9ff0024ff00e26803d228af37fb
3cbff3f93fe49ffc4d1f6797fe7f27fc93ff0089a00f48a2bcdfecf2ff00cfe4ff00927ff1347d9e5ff9fc9ff24ffe26803d228af37fb3cbff003f93fe49ff00
c4d6e7846211ea3a912dbdcc50032322862332e01200c81ce076c9f5a00eb28a28a002be60fda3bfe4a1e9ff00f60a8fff0046cb5f4fd7cc1fb477fc943d3ffe
c151ff00e8d96803dffc09ff0024f3c35ff60ab5ff00d14b5d0573fe04ff009279e1affb055aff00e8a5ae82800a28a2803ca3c53a2789efbc4d7d710787279e
167023960ba836ba85001f9dd181c0e415e0e402c30c71ff00e11af15ffd0ab7dff81369ff00c7abd5efbc59e1bd32f24b3bff001069569751e37c33dec71bae
40232a4e464107f1aaff00f09df83ffe86bd0fff000630ff00f15401e61ff08d78affe855beffc09b4ff00e3d47fc235e2bffa156fbff026d3ff008f57a7ff00
c277e0ff00fa1af43ffc18c3ff00c551ff0009df83ff00e86bd0ff00f0630fff0015401e61ff0008d78aff00e855beff00c09b4ffe3d47fc235e2bff00a156fb
ff00026d3ff8f57a7ffc277e0fff00a1af43ff00c18c3ffc551ff09df83ffe86bd0fff000630ff00f15401e61ff08d78affe855beffc09b4ff00e3d47fc235e2
bffa156fbff026d3ff008f57a7ff00c277e0ff00fa1af43ffc18c3ff00c551ff0009df83ff00e86bd0ff00f0630fff0015401e4da9f847c5d79a55e5ac7e16bc
0f340f1a96bab5c0254819fdf7bd6c683a478b748f0fe9fa737866f4bdbc091b10f6a46e039c1fb48c8cfb0af41ff84efc1fff00435e87ff0083187ff8aa3fe1
3bf07ffd0d7a1ffe0c61ff00e2a8038ff2bc57ff0042c5f7e769ff00c954795e2bff00a162fbf3b4ff00e4aaec3fe13bf07ffd0d7a1ffe0c61ff00e2a8ff0084
efc1ff00f435e87ff83187ff008aa00e3fcaf15ffd0b17df9da7ff002551e578affe858befced3ff0092abb0ff0084efc1ff00f435e87ff83187ff008aa3fe13
bf07ff00d0d7a1ff00e0c61ffe2a8038ff002bc57ff42c5f7e769ffc954795e2bffa162fbf3b4ffe4aaec3fe13bf07ff00d0d7a1ff00e0c61ffe2a8ff84efc1f
ff00435e87ff0083187ff8aa00e3fcaf15ff00d0b17df9da7ff255666b7a178b758b2112f86ee94a4b0bb6f9ad909559a376db89db2df274254633f36700fa1f
fc277e0fff00a1af43ff00c18c3ffc553d3c6be14912478fc4fa2b2c4bbe42b7f1108b90327e6e06481f5228038cf2bc57ff0042c5f7e769ff00c954795e2bff
00a162fbf3b4ff00e4aaec3fe13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00f435e87ff83187ff008aa00e3fcaf15ffd0b17df9da7ff002551e578affe
858befced3ff0092abb0ff0084efc1ff00f435e87ff83187ff008aa3fe13bf07ff00d0d7a1ff00e0c61ffe2a8038ff002bc57ff42c5f7e769ffc954795e2bffa
162fbf3b4ffe4aaec3fe13bf07ff00d0d7a1ff00e0c61ffe2a8ff84efc1fff00435e87ff0083187ff8aa00e3fcaf15ff00d0b17df9da7ff2551e578aff00e858
befced3ff92abb0ff84efc1fff00435e87ff0083187ff8aa3fe13bf07ffd0d7a1ffe0c61ff00e2a8033bc216bab26a77573a9e9771640c2b1af9a61c3724f1e5
caff00ae3b75aec6b2f4df12e83acdc35be97ade9b7d3aa1768ed6e92560b903242927192067dc56a50014514500145145001451450015e2975e15f14c7aa6a6
63f0e5dcf14ba85d4d1cb1dcdb0574799dd480d2823861d40af6bac39fc69e15b5b896dee3c4ba3433c4e5248e4bf8959181c10416c820f18a00f2cff846bc57
ff0042adf7fe04da7ff1ea3fe11af15ffd0ab7dff81369ff00c7abd3ff00e13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00f435e87ff83187ff008aa00f
30ff00846bc57ff42adf7fe04da7ff001ea3fe11af15ff00d0ab7dff0081369ffc7abd3ffe13bf07ff00d0d7a1ff00e0c61ffe2a8ff84efc1fff00435e87ff00
83187ff8aa00f30ff846bc57ff0042adf7fe04da7ff1ea3fe11af15ffd0ab7dff81369ff00c7abd3ff00e13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00
f435e87ff83187ff008aa00f30ff00846bc57ff42adf7fe04da7ff001ea86efc19e2cd4aca7b01e1db9b73731b43e74d736db23dc31b9b6ca5b03393804fa03d
2bd57fe13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00f435e87ff83187ff008aa00e352dbc5110658fc31a86d2ecc0335a123249ff009f9f7a7795e2bf
fa162fbf3b4ffe4aaec3fe13bf07ff00d0d7a1ff00e0c61ffe2a8ff84efc1fff00435e87ff0083187ff8aa00e3fcaf15ff00d0b17df9da7ff2551e578aff00e8
58befced3ff92abb0ff84efc1fff00435e87ff0083187ff8aa3fe13bf07ffd0d7a1ffe0c61ff00e2a8038ff2bc57ff0042c5f7e769ff00c954795e2bff00a162
fbf3b4ff00e4aaec3fe13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00f435e87ff83187ff008aa00e3fcaf15ffd0b17df9da7ff002551e578affe858bef
ced3ff0092abb0ff0084efc1ff00f435e87ff83187ff008aa3fe13bf07ff00d0d7a1ff00e0c61ffe2a8038c361e27996e0bf862f7f7916c6ccd6aa71f30f9409
db2d960704a8c03ce700bfcaf15ffd0b17df9da7ff002557669e35f0a48923c7e27d159625df215bf88845c8193f3703240fa914cff84efc1fff00435e87ff00
83187ff8aa00e3fcaf15ff00d0b17df9da7ff2551e578aff00e858befced3ff92abb0ff84efc1fff00435e87ff0083187ff8aa3fe13bf07ffd0d7a1ffe0c61ff
00e2a8038ff2bc57ff0042c5f7e769ff00c954795e2bff00a162fbf3b4ff00e4aaec3fe13bf07ffd0d7a1ffe0c61ff00e2a8ff0084efc1ff00f435e87ff83187
ff008aa00e3fcaf15ffd0b17df9da7ff002551e578affe858befced3ff0092abb0ff0084efc1ff00f435e87ff83187ff008aa3fe13bf07ff00d0d7a1ff00e0c6
1ffe2a8038ff002bc57ff42c5f7e769ffc955d2f83a0d5239afe5d4f4cb8b16758953cd3161c0df9c7972bf4cf7c7518cf356ffe13bf07ff00d0d7a1ff00e0c6
1ffe2ab434cd7747d6fcdfec9d56c6ff00c9c799f64b849766738ced2719c1ebe86803428a28a002be60fda3bfe4a1e9ff00f60a8fff0046cb5f4fd7cc1fb477
fc943d3ffec151ff00e8d96803dffc09ff0024f3c35ff60ab5ff00d14b5d0573fe04ff009279e1affb055aff00e8a5ae82800a28a2803c83c6dff237df7fdb3f
fd16b5cfd767e23f06f8ab53f105e5e5b8d1a58257063692e6585b6800005446e3200c677738ce173b4667fc2bef187fcf1d0fff0006137ff18a00e7e8ae83fe
15f78c3fe78e87ff008309bff8c51ff0afbc61ff003c743ffc184dff00c628039fa2ba0ff857de30ff009e3a1ffe0c26ff00e3147fc2bef187fcf1d0ff00f061
37ff0018a00e7e8ae83fe15f78c3fe78e87ff8309bff008c51ff000afbc61ff3c743ff00c184dffc628038fd7bfe45ed4ffebd25ff00d00d755e0b8166f0568c
eef31636918e267030060700d36ffe1a78c2f74eb9b4d9a1a79f13c7bbedf31dbb8119c791cf5ad2d23c17e32d2346b3d39134965b68562dc35270188182706d
4e33e99340177ec717f7a7ff00bfeffe347d8e2fef4fff007fdffc68ff008473c69ff3cb4aff00c19b7ff2251ff08e78d3fe79695ff8336ffe44a003ec717f7a
7ffbfeff00e347d8e2fef4ff00f7fdff00c68ff8473c69ff003cb4affc19b7ff002251ff0008e78d3fe79695ff008336ff00e44a003ec717f7a7ff00bfeffe34
7d8e2fef4fff007fdffc68ff008473c69ff3cb4aff00c19b7ff2251ff08e78d3fe79695ff8336ffe44a003ec717f7a7ffbfeff00e35cef8c10db6949e54928cc
f6edccacdc8ba830793c7535d17fc239e34ff9e5a57fe0cdbff912a8eabe07f17ead6a2197fb223db2452737d23ef0b2a395c8b75d99d83e6c374c6de72002f7
d8e2fef4ff00f7fdff00c68fb1c5fde9ff00effbff008d1ff08e78d3fe79695ff8336ffe44a3fe11cf1a7fcf2d2bff00066dff00c894007d8e2fef4fff007fdf
fc68fb1c5fde9ffeff00bff8d1ff0008e78d3fe79695ff008336ff00e44a3fe11cf1a7fcf2d2bff066dffc894007d8e2fef4ff00f7fdff00c68fb1c5fde9ff00
effbff008d1ff08e78d3fe79695ff8336ffe44a3fe11cf1a7fcf2d2bff00066dff00c894007d8e2fef4fff007fdffc68fb1c5fde9ffeff00bff8d1ff0008e78d
3fe79695ff008336ff00e44a3fe11cf1a7fcf2d2bff066dffc89401ade144f2b5dba8d5a42bf665601dcb60963ea7d857655ca785746d6b4fbfb9b9d5d2cd4bc
4b1a7d9ee9a627049e731478fd739ed8aeae800a28a2800a28a2800a28a2800af0093fe427abff00d856fbff004a64af7faf24baf879e2afed2d425b75d19e09
ef6e2e23692f6546db24ace0102120101b1d4d0073745741ff000afbc61ff3c743ff00c184dffc628ff857de30ff009e3a1ffe0c26ff00e31401cfd15d07fc2b
ef187fcf1d0fff0006137ff18a3fe15f78c3fe78e87ff8309bff008c50073f45741ff0afbc61ff003c743ffc184dff00c628ff00857de30ff9e3a1ff00e0c26f
fe31401cfd67ebdff22f6a7ff5e92ffe806bb0ff00857de30ff9e3a1ff00e0c26ffe3151cff0cfc557f6f2d9dc1d1a082e10c524b1de4b2346ac305829854310
0e71b867d475a00d68205991ddde62c659071338180e40e01a97ec717f7a7ffbfeff00e3483c33e324ddb20d2514b16da3547c024e4f5b5f7a5ff8473c69ff00
3cb4affc19b7ff00225001f638bfbd3ffdff007ff1a3ec717f7a7ffbfeff00e347fc239e34ff009e5a57fe0cdbff009128ff008473c69ff3cb4aff00c19b7ff2
25001f638bfbd3ff00dff7ff001a3ec717f7a7ff00bfeffe347fc239e34ff9e5a57fe0cdbff9128ff8473c69ff003cb4affc19b7ff00225001f638bfbd3ffdff
007ff1a3ec717f7a7ffbfeff00e347fc239e34ff009e5a57fe0cdbff009128ff008473c69ff3cb4aff00c19b7ff2250056981816f963924c2db065dd233107e7
e41278e82acfd8e2fef4ff00f7fdff00c693fe116f173acde643a3e644d8c1b50918b8e46d045baecfbc4eec374c639dcabff08e78d3fe79695ff8336ffe44a0
03ec717f7a7ffbfeff00e347d8e2fef4ff00f7fdff00c68ff8473c69ff003cb4affc19b7ff002251ff0008e78d3fe79695ff008336ff00e44a003ec717f7a7ff
00bfeffe347d8e2fef4fff007fdffc68ff008473c69ff3cb4aff00c19b7ff2251ff08e78d3fe79695ff8336ffe44a003ec717f7a7ffbfeff00e347d8e2fef4ff
00f7fdff00c68ff8473c69ff003cb4affc19b7ff002251ff0008e78d3fe79695ff008336ff00e44a003ec717f7a7ff00bfeffe35bde114f2af3508d5a42be5c2
c03b96c1264f53ec2b07fe11cf1a7fcf2d2bff00066dff00c895d1784f4ad634e92f64d5d2d15a511ac66dee8cd90bbb39cc51e3ef7be7db1c8074d451450015
f307ed1dff00250f4fff00b0547ffa365afa7ebe60fda3bfe4a1e9ff00f60a8fff0046cb401eff00e04ff9279e1aff00b055affe8a5ae82b9ff027fc93cf0d7f
d82ad7ff00452d74140051451401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f887ff453ff00f2816ffe35e81450079fff00c225f10ffe8a7ffe502dff
00c68ff844be21ff00d14fff00ca05bff8d7a051401e7fff000897c43ffa29ff00f940b7ff001a3fe112f887ff00453fff002816ff00e35e81450079ff00fc22
5f10ff00e8a7ff00e502dffc68ff00844be21ffd14ff00fca05bff008d7a051401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f887ff453ff00f2816ffe
35e81450079fff00c225f10ffe8a7ffe502dff00c68ff844be21ff00d14fff00ca05bff8d7a051401e7fff000897c43ffa29ff00f940b7ff001a3fe112f887ff
00453fff002816ff00e35e81450079ff00fc225f10ff00e8a7ff00e502dffc68ff00844be21ffd14ff00fca05bff008d7a051401e7ff00f0897c43ff00a29fff
00940b7ff1a3fe112f887ff453ff00f2816ffe35e81450079fff00c225f10ffe8a7ffe502dff00c68ff844be21ff00d14fff00ca05bff8d7a051401e7fff0008
97c43ffa29ff00f940b7ff001a3fe112f887ff00453fff002816ff00e35e81450079ff00fc225f10ff00e8a7ff00e502dffc68ff00844be21ffd14ff00fca05b
ff008d7a051401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f887ff453ff00f2816ffe35e81450079fff00c225f10ffe8a7ffe502dff00c6bb8b086e2d
f4eb686f2ebed7751c48935c79623f35c0019f68e17272703a66ac514005145140051451400514514015efe1b8b8d3ae61b3bafb25d4913a4371e5893ca72085
7da786c1c1c1eb8ae1ff00e112f887ff00453fff002816ff00e35e81450079ff00fc225f10ff00e8a7ff00e502dffc68ff00844be21ffd14ff00fca05bff008d
7a051401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f887ff453ff00f2816ffe35e81450079fff00c225f10ffe8a7ffe502dff00c68ff844be21ff00d1
4fff00ca05bff8d7a051401e7fff000897c43ffa29ff00f940b7ff001a3fe112f887ff00453fff002816ff00e35e81450079ff00fc225f10ff00e8a7ff00e502
dffc68ff00844be21ffd14ff00fca05bff008d7a051401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f887ff453ff00f2816ffe35e81450079fff00c225
f10ffe8a7ffe502dff00c68ff844be21ff00d14fff00ca05bff8d7a051401e7fff000897c43ffa29ff00f940b7ff001a3fe112f887ff00453fff002816ff00e3
5e81450079ff00fc225f10ff00e8a7ff00e502dffc68ff00844be21ffd14ff00fca05bff008d7a051401e7ff00f0897c43ff00a29fff00940b7ff1a3fe112f88
7ff453ff00f2816ffe35e81450079fff00c225f10ffe8a7ffe502dff00c68ff844be21ff00d14fff00ca05bff8d7a051401e7fff000897c43ffa29ff00f940b7
ff001a3fe112f887ff00453fff002816ff00e35e81450079ff00fc225f10ff00e8a7ff00e502dffc6b63c37a1f8ab4cd4649b5cf18ff006d5ab44516dffb322b
6daf9043ee43938008c7bfb575145001451450015f307ed1dff250f4ff00fb0547ff00a365afa7ebe60fda3bfe4a1e9fff0060a8ff00f46cb401effe04ff0092
79e1affb055aff00e8a5ae82b9ff00027fc93cf0d7fd82ad7ff452d74140051451400514514005145140051451400514514005782f847c23e1ebef086937373a
359cb3c96c8ceed10cb1c7535eed39996de56b78e3927084c692394566c700b004819ef838f435c1683e07d6748f0fe9fa735ed817b781236211c8dc07383c64
67d8500607fc20de16ff00a00d8ffdfa147fc20de16ffa00d8ff00dfa15d87fc231ac7fcfe58ff00dfb7ff001a3fe118d63fe7f2c7fefdbff8d0071fff000837
85bfe80363ff007e851ff083785bfe80363ff7e85761ff0008c6b1ff003f963ff7edff00c68ff846358ff9fcb1ff00bf6ffe3401c7ff00c20de16ffa00d8ff00
dfa147fc20de16ff00a00d8ffdfa15d87fc231ac7fcfe58ffdfb7ff1a3fe118d63fe7f2c7fefdbff008d0071ff00f083785bfe80363ff7e8579f7c5bf0fe91a3
68563269ba75b5abc973b59a28c0246d3c66bdc7fe118d63fe7f2c7fefdbff008d725e3ff85baff8b748b6b5b5bed3165867f33f7be622edda41e406e791dbd6
802bc1e0bf0ccc8eefa1581632c838800180e40e054bff00083785bfe80363ff007e8575c9e14d5620cb1ddd9ed2ecc0323123249f5f7a77fc231ac7fcfe58ff
00dfb7ff001a00e3ff00e106f0b7fd006c7fefd0a3fe106f0b7fd006c7fefd0aec3fe118d63fe7f2c7fefdbff8d1ff0008c6b1ff003f963ff7edff00c68038ff
00f841bc2dff00401b1ffbf428ff00841bc2dff401b1ff00bf42bb0ff846358ff9fcb1ff00bf6ffe347fc231ac7fcfe58ffdfb7ff1a00e3ffe106f0b7fd006c7
fefd0a3fe106f0b7fd006c7fefd0aec3fe118d63fe7f2c7fefdbff008d1ff08c6b1ff3f963ff007edffc68038ed2341d2348f1ff00879b4ed36d6d9cdd302d14
40360dadd6467ae3e51c7b0af61ae2e0f08ea51f88b49d4a5b9b474b4b83248a819495f2268c63ae4ee94771c035da50014514500145145001451450015f3168
ba2e952e85a7c9269966eef6d1b33340a4925464938afa667332dbcad6f1c724e1098d24728acd8e016009033df071e86bcab4df85fadd9e95676b25d69e5e18
12362b23e090a01c7c9ed401c4ff0060e8ff00f409b1ff00c074ff000a3fb0747ffa04d8ff00e03a7f857a07fc2b8d63fe7e6c7fefb7ff00e268ff008571ac7f
cfcd8ffdf6ff00fc4d0079ff00f60e8fff00409b1ffc074ff0a3fb0747ff00a04d8ffe03a7f857a07fc2b8d63fe7e6c7fefb7ffe268ff8571ac7fcfcd8ff00df
6fff00c4d0079fff0060e8ff00f409b1ff00c074ff000a3fb0747ffa04d8ff00e03a7f857a07fc2b8d63fe7e6c7fefb7ff00e268ff008571ac7fcfcd8ffdf6ff
00fc4d0079ff00f60e8fff00409b1ffc074ff0ae57c7fa65859e850496b656d039b9552d144aa48dadc640f6af6aff008571ac7fcfcd8ffdf6ff00fc4d60f8b7
e0ef8875ed2a2b5b5bcd311d2712132cb20180ac3b21f5a00b10782fc33323bbe856058cb20e20006039038152ff00c20de16ffa00d8ff00dfa15d7278535588
32c77767b4bb300c8c48c927d7de9dff0008c6b1ff003f963ff7edff00c68038ff00f841bc2dff00401b1ffbf428ff00841bc2dff401b1ff00bf42bb0ff84635
8ff9fcb1ff00bf6ffe347fc231ac7fcfe58ffdfb7ff1a00e3ffe106f0b7fd006c7fefd0a3fe106f0b7fd006c7fefd0aec3fe118d63fe7f2c7fefdbff008d1ff0
8c6b1ff3f963ff007edffc68038fff00841bc2dff401b1ff00bf428ff841bc2dff00401b1ffbf42bb0ff00846358ff009fcb1ffbf6ff00e347fc231ac7fcfe58
ff00dfb7ff001a00e461f0be836767aec7068d6288fa7aee1e429cfef01ee3d554fd541ed4dff841bc2dff00401b1ffbf42baa97c2bad9322a5ce9e52e53c9b8
2cae0ac6031053afcdbca75e31bbbe2a6ff846358ff9fcb1ff00bf6ffe3401c7ff00c20de16ffa00d8ff00dfa147fc20de16ff00a00d8ffdfa15d87fc231ac7f
cfe58ffdfb7ff1a3fe118d63fe7f2c7fefdbff008d0071ff00f083785bfe80363ff7e851ff00083785bfe80363ff007e85761ff08c6b1ff3f963ff007edffc68
ff00846358ff009fcb1ffbf6ff00e3401c7ffc20de16ff00a00d8ffdfa147fc20de16ffa00d8ff00dfa15d87fc231ac7fcfe58ff00dfb7ff001a3fe118d63fe7
f2c7fefdbff8d0071fff00083785bfe80363ff007e85755e03d1b4dd1af3548f4db182d5648e06711205dc73275a9bfe118d63fe7f2c7fefdbff008d6ae83a3d
d69935d4b75343234ca8abe5290005ddd73fef5006dd145140057cc1fb477fc943d3ff00ec151ffe8d96be9faf983f68eff9287a7ffd82a3ff00d1b2d007bff8
13fe49e786bfec156bff00a296ba0ae7fc09ff0024f3c35ff60ab5ff00d14b5d0500145145001451450014514500145145001451450014514500145145001451
45001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500148cca88ceec
15546493d00a5aced7ec66d4fc37aa585bca619eead2586390754664201fc09a005875ad3e5f255eea282699124482691564dae4843b739e769c7d08ea0d169a
cd9de6a77ba723ecbab494c4d1b900be238a42ca3392a04f1827b13f4cf2376b26b7e20d6e1b0b76dd7fe1fb389270541b52d25d80c41e7e53ce00ce57a55bb7
d1f53b2f1d6a1ad8b279a0965992354910165920b101f961801ada4523af438c50074ffdada6ecb67fed0b4d972aaf0379cb8955bee95e7e6072318eb9a96eaf
2d6c6212dddcc36f1938df2c81067d326b87b7f0d6ad63a268f05bc3245a8db6936b692cb14913c32b44a47973238fb819890c9f3727a6067a8d4edae3fb5ec2
fe381eea18229a37b74280ee7d9b5fe620701597aff19a00bb2ea56104b1c735edb4724b8f2d5e5505f3c0c0279cd5597c49a1406512eb5a7466262b207ba41b
08df9079e08f2e4ffbe1bd0d72baae89ac9f0deaba5699a5a5a99b4f105b2db4a8541116d552eec1976b7030bd81ce49c5bb3f0fdec6346f36cd4791e21bfbf9
f2ca71149f6bf2dcf3ce7cd8b81c8cf38c1c0075ab776ce8196e22652fe5821c105f38dbf5cf6a65edec76102cd28255a68a118655e647541cb103ab0e3a9e80
1380702ded7cff001b5c089d24b2b6c5db6d7cecba6431edc741f202d8f57071ce4d9d662b9d73c3960f6f6ae92c9776174d0c8ca1a344b88a4704e7195556e8
4e71c678a00bda46b765ae4571358bf9904333c0650ca43323156c60938c83d40cf519041a7ff6d695e5c927f69d9ec8d955dbcf5c2966daa09cf04b1007a9e2
b3749d3af6cfc33a85ac96e86e64bad4258e27930ae24b895e3cb2f405594fa8cfa8ae7355d075cd4f51d2a4162ff6581614962730a280b7b692636abb6408e2
94f24f703af201dd41a8595d2a35bde5bcc1cb2a18e556dc47503079c77a44d42da4b98e08e40fe62bb23a9055b69c30c8ee09e9f5f438e5351b3bdb17d66f63
58d6f24d5e3b8d3164907efb36d0c4c00193ce2518c76ce31cd6b0d3c5add787f4fb791f161ba591baef411347f31f52d206f5254fa1a00dfa28a2800a28a280
0a28a2800a28a2800af983f68eff009287a7ff00d82a3ffd1b2d7d3f5f307ed1dff250f4ff00fb0547ff00a365a00f7ff027fc93cf0d7fd82ad7ff00452d7415
f1c587c5ff001de99a75b5859ebbe5dadac490c29f6480ed450028c94c9c003ad58ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430f
fe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5
fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00
e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9
256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c8
1ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187
ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bf
ff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207f
c2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc
92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc
6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f457c81ff00
0bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff
008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3f
e176fc43ff00a187ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf88
7ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe
37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff00
85dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc43ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0
c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430ffe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd
007d7f457c81ff000bb7e21ffd0c3ff9256fff00c6e8ff0085dbf10ffe861ffc92b7ff00e37401f5fd15f207fc2edf887ff430ff00e495bfff001ba3fe176fc4
3ffa187ff24adfff008dd007d7f457c81ff0bb7e21ff00d0c3ff009256ff00fc6e8ff85dbf10ff00e861ff00c92b7ffe37401f5fd15f207fc2edf887ff00430f
fe495bff00f1ba3fe176fc43ff00a187ff0024adff00f8dd007d7f5f307ed1dff250f4ff00fb0547ff00a365ae7ffe176fc43ffa187ff24adfff008dd72fe24f
14eb3e2ed463bfd72f3ed7751c42157f2923c20248184007563f9d007fffd9106e1ef0421200004998396eca5673680e}}}}}
}{
 }{\loch
Figure 8.1 - Multipr\u233\'e9cision (addition de 48 bits)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez la mani\u232\'e8re habituelle d'effectuer une telle op\u233\'e9ration :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi0{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
tape 1 : additionner d'abord les chiffres moins significatifs :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
289 \tab \tab \tab 289}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
+456 \tab produit        +456}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
---- \tab \tab        ----}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{\loch
5 avec reste de 1.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi0{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
tape 2: Additionner les prochains chiffres les plus significatifs, plus la retenue :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
1 (retenue pr\u233\'e9c\u233\'e9dente)}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
289 \tab \tab \tab 289}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
+456 \tab produit \tab +456}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
---- \tab \tab \tab ----}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{
   }{\loch
5 \tab \tab \tab   45 avec reste de 1.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi0{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
tape 3: Additionner les chiffres les plus significatifs, plus la retenue :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
1 (retenue pr\u233\'e9c\u233\'e9dente)}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
289 \tab \tab \tab 289}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
+456 \tab produit \tab +456}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
---- \tab \tab \tab ----}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{\loch
45 \tab \tab \tab 745}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les machines 80x86 g\u232\'e8rent les op\u233\'e9rations arithm\u233\'e9tiques en multipr\u233\'e9cision de fa\u231\'e7on identique, mais au lieu d'additionner les nombres un chiffre \u224\'e0 la fois, elles additionnent les nombres un octet ou un mot \u224\'e0 la fois. Consid\u233\'e9rez l'addition de 48 bits de la figure 8.1. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
add}{\loch
 additionne d'abord les mots les moins significatifs. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
adc}{\loch
 (add with carry) additionne toutes les autres paires de mots, car cette instruction additionne deux op\u233\'e9randes plus le drapeau de retenue en produisant une valeur d'un mot et une (possible) retenue. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Par exemple, supposez avoir deux valeurs de 32 bits \u224\'e0 additionner que vous d\u233\'e9finissez comme suit :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
X\tab \tab dword\tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{\loch
Y\tab \tab dword\tab ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Supposez aussi vouloir stocker le r\u233\'e9sultat dans une troisi\u232\'e8me variable, Z, d\u233\'e9finie avec la directive }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
dword}{\loch
. Le code suivant fait cette besogne :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
mov\tab ax, word ptr X}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
add\tab ax, word ptr Y}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
mov\tab word ptr Z, ax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
mov\tab ax, word ptr X+2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
adc\tab ax, word ptr Y+2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851\sb0\sa120{\loch
mov\tab word ptr Z+2, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
Rappellez}{\loch
-vous que ces variables sont d\u233\'e9clar\u233\'e9es avec la directive dword, par cons\u233\'e9quent l'assembleur n'accepterait pas une instruction de la forme }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov ax, X}{\loch
 parce que ce serait une tentative de charger une valeur de 32 bits dans un registre de 16. Ce code utilise donc la coercition }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
word ptr}{\loch
 pour forcer les symboles X, Y et Z \u224\'e0 \u234\'eatre de 16 bits. Les premi\u232\'e8res trois instructions additionnent les mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
les moins significatifs}{\loch
 de X et de Y et gardent les r\u233\'e9sultats dans le mot }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
le moins significatif}{\loch
 de Z. Les derni\u232\'e8res trois instructions additionnent les mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
les plus significatifs}{\loch
 de X et de Y, en incluant la retenue et stockent le r\u233\'e9sultat dans le mot }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
le plus significatif}{\loch
 de Z. Souvenez-vous : les expressions d'adresse de l'allure "X+2" acc\u232\'e8dent au mot }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
le plus significatif}{\loch
 d'une entit\u233\'e9 de 32 bits. Ceci est d\u251\'fb au fait que l'espace d'adressage compte par octets et qu'il faut deux octets cons\u233\'e9cutifs pour former un mot. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certes, si vous avez un processeur 80386 ou sup\u233\'e9rieur, vous n'avez pas besoin de passer par tout ceci juste pour additionner deux valeurs de 32 bits. Cependant, si vous additionnez deux valeurs de }{\rtlch \ltrch\i\loch
64 bits}{\loch
 avec le 80386, vous aurez encore besoin de cette m\u233\'e9thode. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez \u233\'e9largir cette technique \u224\'e0 tout nombre de bits en utilisant l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
adc}{\loch
 et en additionnant ainsi les mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
les plus significatifs}{\loch
 des valeurs. Par exemple, pour additionner deux valeurs de 128 bits, vous pourriez utiliser un code comme le suivant : }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal1 \tab dword 0,0,0,0 \tab \tab ; }{\rtlch \ltrch\lang3082\loch
Quatre double-mots en 128 bits}{\loch
 !}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal2 \tab dword 0,0,0,0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal3 \tab dword 0,0,0,0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1 \tab ; Pas besoin de dword ptr car il s'agit de}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
add \tab eax, BigVal2 \tab ; variables de type dword.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3, eax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+4 \tab ; Additionner sur les valeurs de l'entit\u233\'e9 }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
adc \tab eax, BigVal2+4 \tab ; \u224\'e0 l'entit\u233\'e9 forte, en utilisant }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+8\tab ; l'instruction ADC.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
adc \tab eax, BigVal2+8}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3+8, eax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+12}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
adc \tab eax, BigVal2+12}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab 1BigVal3+12, eax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_02}{\*\bkmkend p9_03_02}\rtlch \ltrch\fs23\b\loch
9.3.2\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
oustraction en }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ultipr\u233\'e9cision}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme l'addition, les machines 80x86 effectuent des soustractions multi-octets de la m\u234\'eame fa\u231\'e7on qu'on les }{\rtlch \ltrch\lang3082\loch
effectu}{\rtlch \ltrch\lang3082\loch
e}{\loch
 manuellement, sauf qu'elles soustraient par octets, par mots ou par doubles-mots \u224\'e0 la fois, au lieu que par chiffres d\u233\'e9cimaux \u224\'e0 la fois. Le m\u233\'e9canisme est semblable \u224\'e0 celui qu'on a vu avec l'op\u233\'e9ration }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
add}{\loch
. Vous utilisez simplement l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sub}{\loch
 avec les octets / mots / doubles-mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
les moins significatifs}{\loch
 et l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sbb}{\loch
 avec les octets / mots / doubles-mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
les plus significatifs}{\loch
. L'exemple suivant montre une soustraction de 32 bits avec des registres de 16 bits du 8086 :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
var1 \tab \tab dword \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
var2 \tab \tab dword \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{\loch
diff \tab \tab dword \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab ax, word ptr var1}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sub \tab ax, word ptr var2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab word ptr diff, ax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab ax, word ptr var1+2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sbb \tab ax, word ptr var2+2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851\sb0\sa120{\loch
mov \tab word ptr diff+2, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'exemple qui suit montre une soustraction de 128 bits en utilisant des registres de 32 bits du 80386 :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal1 \tab dword \tab 0,0,0,0 \tab ; Pour des doubles-mots en 128 bits !}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal2 \tab dword \tab 0,0,0,0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
BigVal3 \tab dword \tab 0,0,0,0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\fs12\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1 \tab ; Pas besoin de dword ptr car il s'agit de}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sub \tab eax, BigVal2 \tab ; variables dword.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3, eax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+4 \tab ; Soustraire sur les valeurs de l'entit\u233\'e9}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sbb \tab eax, BigVal2+4  ; \u224\'e0 l'entit\u233\'e9 }{\rtlch\dbch\af20\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs18\lang3082\loch
la plus significative}{\loch
, }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3+4, eax \tab ; en utilisant les instructions SUB et SBB.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+8}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sbb \tab eax, BigVal2+8}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3+8, eax}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab eax, BigVal1+12}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
sbb \tab eax, BigVal2+12}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li851\ri0\lin851\rin0\fi851{\loch
mov \tab BigVal3+12, eax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_03}{\*\bkmkend p9_03_03}\rtlch \ltrch\fs23\b\loch
9.3.3\tab Comparaisons de }{\rtlch \ltrch\fs23\lang3084\b\loch
v}{\rtlch \ltrch\fs23\b\loch
aleurs en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malheureusement, il n'y a pas d'instruction "comparer avec reste" }{\rtlch \ltrch\lang3082\loch
dans le cas des }{\loch
valeurs en pr\u233\'e9cision \u233\'e9tendue. Pusque les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cmp}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sub}{\loch
 font le m\u234\'eame travail, au moins tant que les flags seront concern\u233\'e9s, vous pourriez probablement }{\rtlch \ltrch\lang3082\loch
songer }{\rtlch \ltrch\lang3084\loch
\u224\'e0 }{\loch
l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sbb}{\loch
 pour synth\u233\'e9tiser ce type de comparaison ; n\u233\'e9anmoins, vous n'auriez raison que partiellement. Il y a une meilleure fa\u231\'e7on de le faire. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez les deux valeurs non sign\u233\'e9es 2157h et 1293h. L'octet }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
le moins significatif}{\loch
 de ces deux valeurs n'affecte pas le r\u233\'e9sultat de la comparaison. Comparer simplement 21h et 12h suffit \u224\'e0 nous faire r\u233\'e9aliser que 21h est plus grand que 12h. En effet, la seule occasion o\u249\'f9 vous aurez besoin de comparer tous les octets de chaque nombre sera quand les deux octets }{\rtlch \ltrch\lang3084\loch
les plus significatifs seront }{\loch
\u233\'e9gaux. Dans tous les autres cas, ne comparer que les bits }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
les plus significatifs}{\loch
 nous indique tout ce dont on a besoin }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
pour }{\loch
conna\u238\'eetre les relations metriques entre ces valeurs. Sans doute, ceci reste vrai pour tout nombre d'octets et pas juste deux. Le code suivant compare deux nombres sign\u233\'e9s de 64 bits sur un processeur 80386 ou ult\u233\'e9rieur. }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
; Cette s\u233\'e9quence transf\u232\'e8re le contr\u244\'f4le \u224\'e0 l'emplacement \u8220\'93IsGreater\u8221\'94 si }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
; QwordValue > QwordValue2. Elle transf\u232\'e8re le contr\u244\'f4le \u224\'e0 l'emplacement \u8220\'93IsLess\u8221\'94 si}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
; QwordValue < QwordValue2. Et le contr\u244\'f4le tombe sur la s\u233\'e9quence suivante si  }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084{\loch
; QwordValue = QwordValue2. Le test pour l'in\u233\'e9galit\u233\'e9 change les op\u233\'e9randes \u8220\'93IsGreater\u8221\'94 }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\sb0\sa120{\loch
; et \u8220\'93IsLess\u8221\'94 \u224\'e0 \u8220\'93NotEqual\u8221\'94.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
mov \tab eax, dword ptr QWordValue+4 \tab ; Obtenir le mot }{\rtlch\dbch\af20\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs18\lang3084\loch
le plus significatif}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
cmp \tab eax, dword ptr QWordValue2+4}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
jg \tab IsGreater}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
jl \tab IsLess}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
mov \tab eax, dword ptr QWordValue}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
cmp \tab eax, dword ptr QWordValue2}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851{\loch
jg \tab IsGreater}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\li0\ri0\lin0\rin0\fi851\sb0\sa120{\loch
jl \tab IsLess}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Pour comparer des valeurs non sign\u233\'e9es, utilisez simplement les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ja}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jb}{\loch
 au lieu de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jg}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jl}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez facilement synth\u233\'e9tiser toute comparaison possible en vous inspirant de la s\u233\'e9quence ci-dessus, les exemples suivants montrent comment le faire. Ces exemples font des comparaisons sign\u233\'e9es, pour effectuer des comparaisons non sign\u233\'e9es, substituez simplement }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ja}{\loch
,}{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
 jae}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jb }{\loch
et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jbe }{\loch
par }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jg}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jge}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jl }{\loch
et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jle }{\loch
(respectivement). }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
QW1 \tab qword \tab ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
QW2 \tab qword \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
dp \tab textequ <dword ptr>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Test de 64 bits pour voir si QW1 < QW2 (sign\u233\'e9).}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Le contr\u244\'f4le tombe sur \u8220\'93IsLess\u8221\'94 si QW1 < QW2. Sinon, il tombe sur}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; la procha\u238\'eene instruction dans le cas contraire.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 \tab ; Obtenir le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jg \tab NotLess}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jl \tab IsLess}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1 \tab ; Tomber ici si les doubes-mots }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
les plus significatifs}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2 \tab ; sont \u233\'e9gaux}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jl \tab IsLess}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotLess:}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Test de 64 bits pour voir si QW1 <= QW2 (sign\u233\'e9).}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 \tab ; Obtenir le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jg \tab NotLessEq}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jl \tab IsLessEq}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dword ptr QW2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jle \tab IsLessEq}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotLessEQ:}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Test de 64 bits pour voir si QW1 >QW2 (sign\u233\'e9).}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 ;Get H.O. dword}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jg \tab IsGtr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jl \tab NotGtr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1   ; Le contr\u244\'f4le tombe ici si les doubles-mots sont \u233\'e9gaux}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2 }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jg \tab IsGtr}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotGtr:}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Test de 64 bits pour voir si QW1 >= QW2 (sign\u233\'e9).}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 ;Get H.O. dword}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jg \tab IsGtrEq}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jl \tab NotGtrEq}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dword ptr QW2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jge \tab IsGtrEq}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotGtrEq:}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Test de 64 bits pour voir si QW1 = QW2 (sign\u233\'e9 ou non sign\u233\'e9). Ce code branche}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; sur l'\u233\'e9tiquette \u8220\'93IsEqual\u8221\'94 si QW1 = QW2. Sinon, le contr\u244\'f4le tombe sur la prochaine }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; instruction.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 \tab ; Obtenir le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne \tab NotEqual}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dword ptr QW2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
je \tab IsEqual}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotEqual:}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Test de 64 bits pour voir si QW1 <> QW2 (sign\u233\'e9 ou non sign\u233\'e9). Ce code branche sur }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; l'\u233\'e9tiquette \u8220\'93NotEqual\u8221\'94 si QW1 <> QW2. Sinon, le contr\u244\'f4le tombe sur la prochaine }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; instruction.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1+4 \tab ; Obtenir le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dp QW2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne \tab NotEqual}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp QW1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab eax, dword ptr QW2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne \tab NotEqual}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_04}{\*\bkmkend p9_03_04}\rtlch \ltrch\fs23\b\loch
9.3.4\tab Multiplication en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que les multiplications 16x16 ou 32x32 soient normalement suffisantes, il y a des fois }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on }{\loch
peut avoir besoin de multiplier des valeurs sup\u233\'e9rieures. Pour ceci, on peut utiliser les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mul}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
imul}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il ne doit pas surprendre que les techniques emploi}{\rtlch \ltrch\lang3084\loch
\u233\'e9es}{\loch
 pour ce type d'op\u233\'e9ration soient les m\u234\'eames qu'on utiliserait en multipliant manuellement deux valeurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez ces multiplication multichiffres simples effectu\u233\'e9es \u224\'e0 la main : }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
1) Multiplier les premiers deux chiffres : \tab 2) Multiplier 5*2 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
123 \tab \tab \tab \tab \tab \tab 123}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
45 \tab \tab \tab \tab \tab \tab 45}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
--- \tab \tab \tab \tab \tab \tab ---}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
15 \tab \tab \tab \tab \tab \tab 15}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li5109\ri0\lin5109\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
3) Multiplier 5*1 : \tab \tab \tab \tab 4) 4*3 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
123 \tab \tab \tab \tab \tab \tab 123}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
45 \tab \tab \tab \tab \tab \tab 45}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
--- \tab \tab \tab \tab \tab \tab ---}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
15 \tab \tab \tab \tab \tab \tab 15}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
10 \tab \tab \tab \tab \tab        10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
5 \tab \tab \tab \tab \tab        5}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li4253\ri0\lin4253\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
12}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
5) Multiplier 4*2 : \tab \tab \tab \tab 6) 4*1 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
123 \tab \tab \tab \tab \tab \tab 123}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
45 \tab \tab \tab \tab \tab \tab 45}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
--- \tab \tab \tab \tab \tab \tab ---}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
15 \tab \tab \tab \tab \tab \tab 15}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
10 \tab \tab \tab \tab \tab        10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
5 \tab \tab \tab \tab \tab        5}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
12 \tab \tab \tab \tab \tab        12}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
       }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
8 \tab \tab \tab \tab \tab        8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li5109\ri0\lin5109\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8
      }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
7) Additionner les produits partiels :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
123}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
45}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
---}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
15}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
5}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
12}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
------}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
5535}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les machines 80x86 effectuent les multiplications de la m\u234\'eame fa\u231\'e7on, sauf qu'elles travaillent avec des octets, des mots ou des doubles-mots \u224\'e0 la fois. La figure 8.2 montre comment ceci fonctionne. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\pagebb\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom9390\shpbxcolumn\shpbxignore\shpleft0\shpright8370{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw558\pich626\picwgoal8370\pichgoal9390\jpegblip
ffd8ffe000104a46494600010101006000600000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720
222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232
323232323232323232323232323232323232323232323232323232323232ffc00011080272022e03012200021101031101ffc4001f0000010501010101010100
000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a10823
42b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a
838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1
f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b5110002010204040304070504040001027700
0102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a43444546474849
4a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4
c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f4bd0741b6d66ceeef6f6f75969db53bf4
fddeb17712854ba9514054902801540c003a56a7fc21ba5ffcfd6b9ff83dbdff00e3d47837fe40773ff615d4bff4b66ae828039fff0084374bff009fad73ff00
07b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039f
ff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73
ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00
c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f8
4374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b
7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc
7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff008437
4bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7
bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff00
84374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9
fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7
aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff843
74bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009f
ad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba
0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff
009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff0
7b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a280
39ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff0007b7bffc7a8ff84374bff9fa
d73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7a8ff0084374bff009fad73ff0007b7bffc7aba0a28039fff0084374bff009fad73ff00
07b7bffc7a8ff84374bff9fad73ff07b7bff00c7aba0a28039ff00f84374bff9fad73ff07b7bff00c7aa9db69b1e8de3ad3aded2eb52682e34cbc7963bad467b
952c92db05204aec0101dc6463a9aeb2b9fbcff9287a37fd82afff00f46da5001e0dff00901dcffd85752ffd2d9aba0ae7fc1bff00203b9ffb0aea5ffa5b3574
140051451400514514005145140051451400514514005733e2dd5357d37fb34e9e91476f26a1670dc5c3b02db64b84428ab83d431cb1e83a73c8e9ab23c47a54
fabd85ac16ef1ab457f6974c642402b14e923018079c29c7bfa5003d6fa487c4cda6cd2064b8b63736c08008d855641d391f3c679e7e63db1587e23d76ff004b
f1b6856f14e574c96095ef221186df9960850e719015a604e38c6735a6d6e2f7c6f0dda93b74db2961623a179da36c7d42c40e3fdb1516b5e1c9757d6d6e4ca8
96dfd957562d82438795e16561c638f2cf39ce71f80054975dbeff008591169c930feca5b0b832441065a78cc2d9ddd785980c038ce73ed7edbc53677f0e926d
e3b856d5b4e7d42dcbaafc88a23386e4e1bf7cbc0c8e0f3eb474ff000d6a29a8e917d7d3dbb4f15a5e25e98d89dd34ef137c99032a3cb61ce0e36f1d710e89e1
6d52c9b455bb96ccc7a46972e9b1185d899830880918151b4e221f282719ea7b0062e9fe39d4e4d1267d423bb8e283c2f6baa49a8411c05ccb223977552d8e4a
e154a81956cf0549eaae3c61676d7fa95b3d95ef93a648a97b77b504300689640e49604ae18670091ce401cd73afe05d5d7c392e991cd62d25c78621d1a46691
c08e689640187c87721321f42368e0e701eda76a3aceabe39d26dcdaad95fdda5b5ccaeec24891aca00c514290c4838192b8ebcf4a00d9d3fc44e3c53ab69b78
eed1ff0068a5ad9908a153fd12298a93d792642339f4f415b7a7ea70ea515c4b6cae5219e4b7dc7187643b5b6f3d0302bce39535c7f8834d7d26cf5db813c2b7
97fa85bdc69112c843bcf14312a467a75689b20646d273debafd1f4f1a4e8d6961e634ad044aaf2b7591bf898fb93927eb401c5d9f8cf57bbb7d0ae65d3ee613
73acde59cb6c8b1169e38d6e3628f9c8043468092cbca373b4e4f48be2cb49b4fb7b8b6b4bdb89ee2696dd2ce38d44be6465848a72c117694604960bd304e467
36c3c2fa8dadc692b23da9834ed62f2f83ac8dba48a759f036edc060d3818c9185ce72715565f04de1823984a1eea0bebf9d228b50b8b45923b898c801922c30
6036f661d7af06803aed33528754b433c292c655da29229936bc6ea70548fea3208c104820d67f85b50bad4b4ebc96ee5f31e3d4af6053b40c247712220e0765
5033d78e69fe1ad14e89613a3ffaeb99ccf2ff00a4cd71f3155503cc958b3602819e071d056568d63e29d1a6b9b54b3d1a6b09b51b8b9131be956511cb3b49f7
3c923700dd376323ad006b6bda94f66da7595a155bbd4aebecd148cbb846046f23311919c2c6d81ea476aaad737ba16afa65b5dea136a16ba94ef6eaf3c71abc
5288de45e5154152b1b0e84e71cf5ab17fa5de6a715bcf2fd9e0bfb1bc6b8b3746674c61906fe01f9a376040e84f19c0a6269ba8ea5aa58deeaf1da42960ef2d
bc16d33cbba42ac81d99957a2330db83cb75e05006cdc4df67b6966d8f279685f6201b9b033819ef5910f8ab4bb8bbb7b78e47613d80d45250014f28f4e73d48
c91eca6b52d0dd35b837a90a4fb9b22172cbb771da724039db824638391cf5ae224f036a4fa6bdafdb2d78be2b1840c8069e51a3311ea7704762318190bd0668
0377fe12d80c29245a5ea5285812e2e424684daabaee01c6fe5b1d55371e9ea2a693c5364ba8fd8e28ae270b047732cf10531c50b862b2312c0e3e43d013ed8c
915ae348d56cf50d4e5d1c5898b542ad29b87753048b188f72a8521c6d44f972bd0f3cd56b4f05456eba9d83ba9d2eeb45b5d251431f302c4b32b13f55957073
d8f4ee011c9e2e93fe123b0f321bbb2d2ce99797b30b8897f78b1980a38c12c3019fe5383cf23a56ee9bac9d466689f4dbeb33b4bc6d70a85654c8f98323301d
470d86f6ac75d17c4173abd95dddc9a6462d34fb9b4568f7485de4316d72a54607eece5327b727b2786fc3171a46adf695b5b1d2ed16178bec7a74eef14eccca
44850aaac6461b8507ef9e4d0075b451450014514500145145001451450014514500145145001451450057be376ba7dc1b0589ef044de42ccc550be3e5dc4024
0ce335836cfa9c7ad5d68ffdb125db35934cd70f1441ad252d84002a80548dc40604fc9c939adcd4c5f9d2ee86966dc5f98985b9b827cb1263e52d804e33d715
cff87a0d5b42b4b83acdae9905aa46d3cf790dfc93cb2c831967dd120e80f39e300018e801b9a35fb6a7a45b5dc9188e574c4a80e423838619f66045721e09f1
4ea53f801f50d6656bbd461b74b8dfb110ceb2461d30ab803e6631f41929f8d74de18b17d3fc3f6f14913452caf25cc91b1c94796469594fd0b915cf693e0abd
b187c371493da79767650db6a4abb8f9ed061e128703857dc791d0d004fe09f10ddddd858e9baccef77abc82fddee16254465b7baf27a0e87e64c0c7407273d7
3b5df1d5e409717fa4c32c9041a46a937d9e444e66b69e38839f987c83f78701b257b16c0abba7f85f58d22eacafad9ac679e16d42378a595d14c7737427560c
149dca1402b8c124f23ad534f016a52584d6971796a0cda76af66f2a06e1aeee0488c148e8141c8cf5e067ad006a5cf8c21d3259a7d423d457cbb2b2964b3114
4fb0cf3bc4a4146259b70f980246146dc9245375cf14dc45a732436f77a6dfaddd98d9729192f0c9751c4c54a965c10c475dc323807158fe2cd27548ace7d567
fb2432cc9a3da048e469424b1dfee2725572bfbc5f43c1e077d5d63c33aaebf325edd8b1b7ba81a048238a677511add433484b151cb085401b7823af39a00d99
3c4b6315b5ecaeb286b3bb5b2922c2ef6958a0400671f37988472386ed553c5d71a8249a0d9e9fa8cba7b5f6a5f679678638ddb608267c0122b0ea8bdaa8b5aa
ea5f1237da5d092ced62596fe1439097280ac40fb9491891ff004ce33c77d2f1469baa5f368f73a4a59c971a7dff00da8c77733448ebe4cb191b9518e73203d3
b500456171a9695e258345d43527d4a2bbb496e209e585125568dd03ab6c0aa4112a630a31839cd5ad6a4d79351d34695146f6be6e6ecb63ee60ae39e4f2ead8
183fbb3cff0009669fa66a73eb89aceb3f6349e1b66b6b7b7b567758c3b2b48c5d82ee276463ee8c6d3d735bd4019bafea7fd8da0de5faa19248a33e54631992
43c228cf72c40fc6a97856fef2e2d2eec354b8fb46a7a75c182e25f2c2798080e8f8181ca32e71c641e9d29de24d01bc4474fb59a529a7c5702e2e56395a391c
a02630acb82b87c364107e41eb55f4df0bb689e296bfd3e799acaead7cabc4bbbc9a790c88c0c4ca642dc61a404647f0e3bd0074b45145001451450014514500
15cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97
fe96cd5d0500145145001451450014514500145145001451450015c2e95e2af166afa4d9ea56fa168ab0dd4093a0935594305750c01fdc63383eb5dd5709e0bf
f910740ffb075aff00e8a140173fb6bc63ff00404d07ff0006f2ff00f23d1fdb5e31ff00a02683ff0083797ff91eaed14018bab78c3c47a1e993ea5a9699e1fb
7b4800324875598e32401c0b724f240c0a4d1fc67e21d7f4b8b52d2f4dd02e2d25cec906ab32e70483c35b82391dc5719f14276d735cf0ef82607ff8ff00b813
dd80d82215ff00eb073f5414cf8692ff00c239e2bf11782252424131bbb2dc49fddb632067d8a1fae6803d13fb6bc63ff404d07ff06f2fff0023d1fdb5e31ffa
02683ff83797ff0091eaed1401cb78bbc77e2ef0b786ee75697c3da4491c5852d0ea6f279458ed56653126e5dc54100e79edc91b5a5f89bc49aae9165a943a1e
8b1c3796f1dc46b2eb12860aea18038b6233823a135ccfc5cff9257ae7d20ffd1f1d741e13ff009113c39ff60bb5ff00d111d0068ff6bf8a3fe80fa0ff00e0e6
6ffe45a3fb5fc51ff407d07ff07337ff0022d4945007137bf1b2cf4ebfb8b1ba3a147736d2b432a7dbaf1b6ba9208c8b2c1e41e95bba1f8eeffc496cd3e8f6fe
1cbb44c6fd9accc1973d32a6d411f88af1bf0feb3fd91e3af1b7fc52b79af79ba93ffc7b5bf9be4e2597af0719cffe3b5bdf0d66b5bbf893e22be6b67d16e678
9563d19d0c676fcb9908da067233edbdbeb401eb7fdafe28ff00a03e83ff008399bff9168fed7f147fd01f41ff00c1ccdffc8b5251401c37c44f899e30f06e9f
05c278774958a49553ed62fdae63dc439f2f66d89c37cb9ddcae38ea78f5baf0cf8f7ff220d9ff00d8522ffd15357b9d00145145001451450014514500145145
00145145001451450014514500145145001451450062f8a359b8d07461796b6d15ccef7305ba452c8635265916304b004800b67a1e958ffdbde30ffa02687ff8
349bff0091eacf8fff00e45eb5ff00b0ae9fff00a55154b40147fb7bc61ff404d0ff00f06937ff0023d1fdbde30ffa02687ff8349bff0091eaf523bac68ceec1
5546493d00a00e62f3e25ea7a7f882db42bab3d063d4ae4298a13a8dc1dd9240f985b6d19c1e09fe75b5fdbde30ffa02687ff8349bff0091ebc12ff4ebbf16e9
7e26f881099567b5be47b0232b8862ea70783852a7ea87d48af75f0deb517887c3961ab438db7308665073b5ba32fe0411f85004dfdbde30ff00a02687ff0083
49bff91e8fedef187fd01343ff00c1a4dffc8f57a8a00e7ac7c75e289b5f9b49baf0dd84174d3430daa36a27648192e9da5322c6c76916d80a501e727ae06e7f
6df89bfe80fa1ffe0de7ff00e45ae6dbfe4aae9dfefda7fe93ea95d4d0045fdb7e26ff00a03e87ff008379ff00f916b2f5ff001f6a1e18b14bdd62cb43b6b779
444aff00da772f97209030b684f453f956cd796fc7aff911acbfec251ffe8a968036a0f8e7a75c4cb124be1f0cdd0c9a85e22fe2cd6400fc4d76117883c453c2
9343a5e812452286474d6662181e841fb2f22bc73c53e2b8eefc337f6d2fc38beb159a231fdaeeac8a47013c0724267e5ebf857a5f81ad20b1f046916f6d7cb7
d0a5b8db70b9c3e493c6790067183e9401b7fdb7e26ffa03e87ff8379fff009168fedbf137fd01f43ffc1bcfff00c8b52d140189e1ef1b6bfaa7c49b9f0deaba
2da69d6f169ad77198ee0ced3113040e1f0b84209f94a86e32719c577f5e65a5ff00c97c6ffb15cffe950af4da0028a28a002b9fbcff009287a37fd82aff00ff
0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff00901dcffd85752ffd2d9aba0a0028a28a0028a28a0028
a28a0028a28a0028a28a002b84f0502de01d00004ffc4bad7a7fd7215ddd782691e13b16d320b9d29fe25c767731472c662d52ca30c9b1421c7983f8028191c0
0076a00f5bf2dffb8df951e5bff71bf2af32ff0084564ff9f9f8a3ff00839b2ffe3b47fc22b27fcfcfc51ffc1cd97ff1da00ac7e1a5df8bfc6badeafe2db2b88
2cf72c5a7c51dc292c838dc76e71c007071cb1a8eebe17ddf84fc53a1eb5e0db2b89d2198adec324eb9319e090588ec5b8f5c5599bc36b6d134b3df7c4e8a35e
aefadd8a81f8996a1b1d22cf548bcdd3f57f891771ff007edf5fb0907e6253401eafe5bff71bf2a3cb7fee37e55e65ff0008ac9ff3f3f147ff0007365ffc768f
f84564ff009f9f8a3ff839b2ff00e3b401aff175597e15eb84a91c41d47fd378eba0f092b37813c39804ff00c4aed7a0ff00a611d798789f45d234dd1259bc43
37c4e7d3199565126a1693a67395dca1db03207246338ee4569e9be148ee749b29f4fb9f8982c64b78ded82eb56280445414c29946d1b7181818a00f52f2dffb
8df951e5bff71bf2af37ff0084367ff9faf89bff0083eb0ffe3d47fc21b3ff00cfd7c4dffc1f587ff1ea00c6d2f49f883e15f15f8a2f74bf0b457b6faadf34a8
f2ddc69f20790a9037e790fdeb67c3de15f146a7f1013c5fe26b4b7b0782d8c16f696efbcf208f988241e19bbf71e958f345a15b4f2413f8afc7114d1b149237
f15698ac8c0e0820cfc107b569c1e16fb542b35bea1f126689ba3c7e20d3d81fc44d401e9be5bff71bf2a3cb7fee37e55e6fff00086cff00f3f5f137ff0007d6
1ffc7a8ff84367ff009faf89bff83eb0ff00e3d40157e3e2b2f806cf208ff89a45d47fd3296bdcabe76f15e95e1bd0e1b297c5e3e235d5834e1922bad42d6e21
775fe16d921da4824755246ec1e0e3e89a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a00e5bc7fff0022f5affd85
74ff00fd2a8aa5aaff00126cf4dd43c157365ab477f25adc4f6f16cb0318999da540814c9f28f98ae73db35e7dff0008a49ff3f3f147ff0007365ffc76803d26
b9bf1e41ac5df83afecf42b53717d749e481e62a6d46e1ce5881f7723af522b9aff84524ff009f9f8a3ff839b2ff00e3b47fc22927fcfcfc51ff00c1cd97ff00
1da00874df823e1a5d32d46a0b74f78225f3d927c297c7cd81e99ad3f867a16b9e17b6d5345d4adcfd821b92f6171e6a3798849c8c0395e80f23f88d625c69ba
75a5da5a5ceb7f1161b97fb90c9e20b0576fa299b26af7fc22ae4645cfc51ffc1cd97ff1da00f49a2bcdbfe11493fe7e7e28ff00e0e6cbff008ed1ff0008a49f
f3f3f147ff0007365ffc7680372e6786d7e2659dc5c4b1c3045f6579249182aa28b6d549249e00039cd75b5e487c3de1dd6e2bcd0ef20f883737d25f5b2f977f
35b79cc523bb64f2dddb618f0b392738276edcf35adff086cdff003f5f137ff07b61ff00c7a803d16b81f8b9e1cd5bc4fe14b5b2d1ed3ed37097c92b27988984
0920272c40eac3f3a83fe10d9bfe7ebe26ff00e0f6c3ff008f555bfd02db4a8167d4758f889670b36c125c788f4e8d4b609c65a61ce01e3da801354bbf89baf6
9575a4bf8574fb28ef2268249def11c22b020f0189ce3d8d765e0cf0f1f0b784ec3477984d240ac6471d0b331638f6c9c0ae1acb4fd27519bc9b1f11f8f2ea5f
ee41e27d35cfe427ad2ff84366ff009faf89bff83db0ff00e3d401e8b4579d7fc21b37fcfd7c4dff00c1ed87ff001ea3fe10d9bfe7ebe26ffe0f6c3ff8f5006e
697ff25f1bfec573ff00a542bd36bc83e1d43a2db7c49bd814f8c8eb91e9ae8c7c41244e86013203b19492c37f420953f362bd7e800a28a2800ae7ef3fe4a1e8
dff60abfff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00b0aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82
800a28a2800a28a2800a28a2800a28a2800a28a2800ae03c19ff00223787ff00ec1b6dff00a296bbfae03c19ff00223787ff00ec1b6dff00a2968036e8a28a00
f25d5608fc75f1925f0f6a4d23691a3daf9ff660e556593e4e4e39ff0096807d17dcd7431fc33d3b4df16d86b9a04eda508322e6de252cb70a71f2f2df28eb9e
0f63d79aa3e23d135bd07c7c9e32f0fe9c3524b883ecf7d66adb1c80061949ebf757b7f0fbf0961a9f8d7c57e29d3ee63d3aefc3da15a92d3adce04973fec956
19ea31d38049cf22803d228a28a00e23e2f7fc92ed67fed87fe8e8eba0f09ffc895e1eff00b055a7fe894ae7fe2f7fc92ed67fed87fe8e8eba0f09ff00c895e1
effb055a7fe894a00d7a28a2803c63c0de1bd1bc43e39f1e7f6be9f0ddf91a91f2bcc07e5dd2cd9c7d703f2abba0dac3e08f8ca7c39a6c92a695aa59f9c96cce
5963900639c9e7a46dcfbfb0acfd0753d6bc1de32f184ede11d6efe1d4750678a4b7b57dbb56494e41dbc821c608ae8fc31a2eb7adf8fe6f196bda68d3522b7f
b3d95a3b079003d589edc16f4fbdedc807a3d1451401e5bf1ebfe446b2ff00b0947ffa2a5af76af09f8f5ff223597fd84a3ffd152d7bb5001451450014514500
1451450014514500145145001451450014514500145145001451450072de3fff00917ad7fec2ba7ffe954552d45e3fff00917ad7fec2ba7ffe954552d0015cd7
c40d727f0ef81f53d4ad495b948c244c3f859d8286fc339fc2ba5ac8f146851f897c357fa3c8e13ed31ed57233b181ca9c7b100d0070fe15f861e1bd4bc15677
3a9dabdddfea56e97535dbcade606701b839e319fc7be6bb1f07787ee7c2fe1c8349b9d4df503093b2564d9b57b20193c0edcd70fa6788bc6de19d020f0f4be0
db9bbbeb68fecf6d7703ee8195785662071818ea467dabb4f0558ebd63e1b893c497cd75a93b177c907cb1d93200cf4c93cf24f3401d151451401cb37fc955d3
bfdfb4ff00d27d52ba9ae59bfe4aae9dfefda7fe93ea95d4d0015e5bf1ebfe446b2ffb0947ff00a2a5af52af37f8d7a65feabe0db3834eb1b9bc997504731dbc
4d2305f2e419c283c648e7de801be35f86be188bc27a95fe9fa72d8ded8db49730cd6eeca4141bb0467073b71eddb15d17c3bd6ae35ff01e97a85db16b96468e
4627258a315dc7eb8cfe35c9eb5e2bf14f8ab45bbd174af04ea9692de218249ef94c4888dc31e40c9c67bf1efd2bbaf096809e18f0b5868eac1dade3fde38e8c
e49663f4c93401b5451450072da5ff00c97c6ffb15cffe950af4daf32d2ffe4be37fd8ae7ff4a857a6d001451450015cfde7fc943d1bfec157ff00fa36d2ba0a
e7ef3fe4a1e8dff60abfff00d1b694007837fe40773ff615d4bff4b66ae82b9ff06ffc80ee7fec2ba97fe96cd5d0500145145001451450014514500145145001
451450015e216bf0f3e2de9319b3d33c5fa4fd8a2c4700957911aa845e0c2db7e551900919c9c92493edf5e17ab68f0ea3acdf5edbfc798ece0b8b89258eda3b
f1b615662420c5c01800e3a0e9d05005bff843be34ff00d0dda1ff00dfb1ff00c8f5b9ff000827c41ffa28d1ff00e0961ff1ae33fe11bffab84ffc9fff00ee9a
3fe11bff00ab84ff00c9ff00fee9a00ecffe104f883ff451a3ff00c12c3fe347fc209f107fe8a347ff0082587fc6b8cff846ff00eae13ff27fff00ba68ff0084
6ffeae13ff0027ff00fba6803b3ff8413e20ff00d1468fff0004b0ff008d1ff0827c41ff00a28d1ffe0961ff001ae33fe11bff00ab84ff00c9ff00fee9a3fe11
bffab84ffc9fff00ee9a00e9757f85be32d7b4b9b4cd4fc7f1cf6736df323fec88d73860c39520f503bd508fc07f1774f8a3b1d3bc5fa31b0b54582dbcc842b7
94836a64792d83b40fe23f53d6b27fe11bff00ab84ff00c9ff00fee9a3fe11bffab84ffc9fff00ee9a00d7ff00843be34ffd0dda1ffdfb1ffc8f5d07fc205e3a
ff00a297ff0094283ff8aae23fe11bff00ab84ff00c9ff00fee9a3fe11bffab84ffc9fff00ee9a00edff00e102f1d7fd14bffca141ff00c551ff0008178ebfe8
a5ff00e50a0ffe2ab88ff846ff00eae13ff27fff00ba68ff00846ffeae13ff0027ff00fba6803b7ff840bc75ff00452fff0028507ff1547fc205e3affa297ff9
4283ff008aae23fe11bffab84ffc9fff00ee9a3fe11bff00ab84ff00c9ff00fee9a00e8f5ff83fe24f13d8a596b1f103ed36e9289553fb1a34c38040395707a3
1fcebd76be7fff00846ffeae13ff0027ff00fba6bd83c136df63f0858c1ff090ff00c243b7ccff00899f99bfcfcc8c7ef6e6cedfbbf78fddfc2803a0a28a2800
a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28039ff1ae877fe21f0c4f61a5ddc5697e248a7b79a55dcab246eb22e460f19503a1
ebd0f43e6dff000877c69ffa1bb43ffbf63ff91ebbdf887a54daaf869562f1649e17482e1259750590a0db865d8cdbd300b3af53d40e2bcaff00e11bff00ab84
ff00c9ff00fee9a00e8ac3c15f16a49d86a3e37d32de1db90f6f6693316c8e36b449c633ce7f0f4d1ff8413e20ff00d1468fff0004b0ff008d719ff08dff00d5
c27fe4ff00ff0074d1ff0008dffd5c27fe4fff00f74d00767ff0827c41ff00a28d1ffe0961ff001a3fe104f883ff00451a3ffc12c3fe35c67fc237ff005709ff
0093ff00fdd347fc237ff5709ff93fff00dd3401d9ff00c209f107fe8a347ff82587fc68ff008413e20ffd1468ff00f04b0ff8d719ff0008dffd5c27fe4fff00
f74d1ff08dff00d5c27fe4ff00ff0074d00747aa7c35f1cbd9cb7169e30b6b9d69e687cbbb92dfecbe4c4915ca3053186f98fda4e0e011d41c8154ff00e10ef8
d3ff00437687ff007ec7ff0023d647fc237ff5709ff93fff00dd347fc237ff005709ff0093ff00fdd3401d3e99e08f8a52f9bfdade3cb1b5c63cbfb269d1dc6e
eb9cee44c76e99ce4f4c73a1ff0008178ebfe8a5ff00e50a0ffe2ab88ff846ff00eae13ff27fff00ba68ff00846ffeae13ff0027ff00fba6803b7ff840bc75ff
00452fff0028507ff1547fc205e3affa297ff94283ff008aae23fe11bffab84ffc9fff00ee9a3fe11bff00ab84ff00c9ff00fee9a00edffe102f1d7fd14bff00
ca141ffc551ff08178ebfe8a5ffe50a0ff00e2ab88ff00846ffeae13ff0027ff00fba68ff846ff00eae13ff27fff00ba6803d17c2de02d5b46f1849e23d63c51
fdb170d606c557ec096fb50c8ae0e55883c83dbbf5e2bbbaf0fd0bc3fe4f8874c97fe17a7f696cbb89bec3f6dddf69c38fdde3ed073bbeee307af435ee140051
451400573f79ff00250f46ff00b055ff00fe8db4ae82b9fbcff9287a37fd82afff00f46da5001e0dff00901dcffd85752ffd2d9aba0ae7fc1bff00203b9ffb0a
ea5ffa5b3574140051451400514514005145140051451400514514005717e169644f02f860248ea3fb1ed38071ff002c96bb4ae27c31ff00223785ff00ec0f69
ff00a285006bfda27ff9ed27fdf468fb44ff00f3da4ffbe8d4545004bf689ffe7b49ff007d1a3ed13ffcf693fefa35151401e79f1af5bd5b4af06d9cfa76a97b
67336a08864b7b878d8af9721c6548e32071ed5475cf0e78c7c2ba3dceb5a578f357bb7b38ccf25bdf48d2ac88bc9c649c719edcfa8a4f8f5ff223597fd84a3f
fd152d5af1a7c48f0c4de11d4ecac3524bebcbdb77b5861814b316752b9e9c019cd00767e13f1349e26f0bd86b0b23a1b88f2e81ce15c12ac067fda06b94f881
e26f11695aad92d94a65b58185fca914f2c4c914790e652a0868be60768e7e5e8ddb5fe1d68b71a0780f4bb0bb52b7211a49108c142ec5b6fd4671f85750541e
a01e31c8ed4011e9d797f2e9d6f25ddc234ee819da066d873dd73ce3eb5e43aadc6adad7c63d734793c67ab68d6305b4734621be78d036c8be50370033b98d7b
1d784eb36fe17b9f8e3e204f16b462c05ac463f325741e6f970e39420f4dd401d3f85756d774af8943c391f8a2e7c43a5b5919e49659bcc6b76c9c02d9273903
8cf471c715ea9f689ffe7b49ff007d1af09b09343d37e276856ff0f2e1de0b9c8d4a18e491e23183d496cf206e3ec71d335ee34012fda27ff9ed27fdf468fb44
ff00f3da4ffbe8d4545006078fa08750f02eb42f628ee441653cd109943f9722c4d875cf461938239e69ff0004bfe490e85ff6f1ff00a51252f8cffe446f107f
d836e7ff00453527c12ff9243a17fdbc7fe9449401e814514500145145001451450014514500145145001451450014514500145145001451450073fe32ff0090
1db7fd8574dffd2d8697ed13ff00cf693fefa349e32ff901db7fd8574dff00d2d86a3a0097ed13ff00cf693fefa347da27ff009ed27fdf46a2a28025fb44ff00
f3da4ffbe8d1f689ff00e7b49ff7d1a8a8a00f22bd5d7bc4bf19f5dd0e2f166b7a6da5bdac73a25addbaa83b210405dc00c9727eb5a161abf89fc11e3cd3340d
5b5fb8d634ad5432dbcf704896271d013924f5507279dd9e2b2a2d6f4cd03e3ff88eeb55bc8ed207b08e35793a162901c7e40fe5526a9a8d9fc41f8a3e1b8f43
77bab3d19cdcdd5d22908a77060327af2807be78e87001eb1a95dea11e9972f677491dc2c6591e72c63523bb007247d2b86f00789fc47ab6a57897a7cab6998d
f279b732c8cf14830861dc0058f2a78383cf41dfbfa40a07400718a00e57e296aba8e9ff000e356bab2bfbab6b84f2764b0ccc8eb99901c107238247e35e7ff6
7d52cfc109e238fe286aab7c2c16e85b4d7c5d4c8503797b4bf2493b46475c5769f17bfe4976b3ff006c3ff47475c069da77c223e14b297519a24d44d946d706
3b898c825d83761738ceecf18c5007ae782b5cd5759f06695a8ea4d247773c219fe6fbdc901b8e9b800d8f7adffb44ff00f3da4ffbe8d79d7c1dbed5affc0a92
6aaf24816764b692524b3c400c727a80db80fa57a05004bf689ffe7b49ff007d1a3ed13ffcf693fefa35151401e59f11ad2da3f89df0fef12de25bab9d553cf9
95007976c9005dcdd5b03819e95eef5e1bf127fe4a1fc37ffb0a8ffd1b057b95001451450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060
abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97fe96cd5d0500145145001451450014514500145145001451450015
f3fe8567f1af42d352c53c3d67791461122377751318d151515176cca028083b724927249afa028a00f12fb6fc6cff00a13f47ff00bfe9ff00c9147db7e367fd
09fa3ffdff004ffe48af6da2803c4bedbf1b3fe84fd1ff00effa7ff2451f6df8d9ff00427e8fff007fd3ff00922bdb68a00f08bf87e2eeab02c1a8f807c3d790
ab6f11dc18a450d8233869cf38279f7aad65a57c51d365f36c7e1b785ad64fefc090a1fcc4f5f4051401e25f6df8d9ff00427e8fff007fd3ff009228fb6fc6cf
fa13f47ffbfe9ffc915edb45007897db7e367fd09fa3ff00dff4ff00e48acabcd1be276a174f757bf0cfc297370f8df2cd1c0eed81819266c9e001f857d05450
0783585b7c5ad2d4ae9df0fbc3966a7a8b7f2a307f29c55cfb6fc6cffa13f47ffbfe9ffc915edb45007897db7e367fd09fa3ff00dff4ff00e48a3edbf1b3fe84
fd1ffeff00a7ff002457b6d1401e11a9afc67d574abcd3a7f08e94b0ddc0f048c9711860aca549199cf3835e8ff0b744d47c39f0e349d2756b7fb3df41e77991
6f57dbba6761ca920f041e0d7614500145145001451450014514500145145001451450014561f8d279ad7c0be21b8b79648678b4cb978e48d8ab2308988208e4
1079cd624de1ab449e455bed7000c40ff89e5e7aff00d75a00ede8ae13fe11cb5ff9ff00d73ff07979ff00c768ff008472d7fe7ff5cffc1e5e7ff1da00eee8ae
13fe11cb5ff9ff00d73ff07979ff00c768ff008472d7fe7ff5cffc1e5e7ff1da00eee8af00f17dfeb9a778f74ff0cf879eea792f2d3cf5377ad5fe7703264645
c018db1fa536d359d5f46d7ec74af19da6a96897efe55bded9ebf7ad19738c020cc48e481d7df18e6803d47e25d8f89750f08187c291c126a4b7704c04aca180
8e412029bbe5dc1d50fcdc150ddf15c17db7e367fd09fa3ffdff004ffe48aec24f0fdac713b8bdd79b6a93b575bbc24fb0fded717a26b967ab78a2f74a27c50a
63f28242750bf592dc9077999bce2a0671823f5eb40127db7e367fd09fa3ff00dff4ff00e48a3edbf1b3fe84fd1ffeff00a7ff00245765ff0008e5affcff00eb
9ff83cbcff00e3b5e5fe33f187fc237e328b4bb493559f4fb7111d4666d66fd9a2dcdc8044d807691d41c93401bdf6df8d9ff427e8ff00f7fd3ff9228fb6fc6c
ff00a13f47ff00bfe9ff00c915d8af87ecdd15d750d70ab0c8235cbce47fdfda5ff8472d7fe7ff005cff00c1e5e7ff001da00f38bcd1be276a174f757bf0cfc2
97370f8df2cd1c0eed81819266c9e001f855eb4ff85c3610082cfc0ba05b443811c2f1a28fc04f5dcffc2396bff3ff00ae7fe0f2f3ff008ed1ff0008e5affcff
00eb9ff83cbcff00e3b401c6fdb7e367fd09fa3ffdff004ffe48a3edbf1b3fe84fd1ff00effa7ff245647c6dd261b1f0659cb1dcea5293a822edbad46e2e17fd
5c9d1647600f1d719ebea6be84a00f0bbc3f18b50b57b5bdf03683736ef8df14cf1ba360e46419f07900fe15989e1df88d1baba7c2cf082ba9055960b7041f51
fbeafa1e8a00f115bbf8d488113c1ba2aaa8c00264000ffc08a5fb6fc6cffa13f47ffbfe9ffc915edb45007897db7e367fd09fa3ff00dff4ff00e48a3edbf1b3
fe84fd1ffeff00a7ff002457b6d1401e032f877e27f893c65e16bfd7bc37676b6ba56a11cccf6d711f09e6465c9065627013b7bf5af7ea28a0028a28a002b9fb
cff9287a37fd82afff00f46da57415cfde7fc943d1bfec157fff00a36d2800f06ffc80ee7fec2ba97fe96cd5d0573fe0dff901dcff00d85752ff00d2d9aba0a0
028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0
028a28a0028a28a0028a28a00e7fc77ff24f3c4bff0060abaffd14d4b71ff1f32ffbe7f9d45f101e65f87dafa5bd95ddecf3d9496f1c1691192466907960851c
900b64fa004d79827c4bf1b346a6e3e17eb2f3900c8d1c7322b377214c44819ed938f53401e9f45798ff00c2c9f187fd12cd73f29bff008cd1ff000b27c61ff4
4b35cfca6ffe33401e9d45798ffc2c9f187fd12cd73f29bff8cd1ff0b27c61ff0044b35cfca6ff00e334011ebbff002715e19ffb06bffe837149f1b18dc69fa0
69d6b2a8d467d490c0b9f9ba15cfae3732d729e287d6fc57ad43ab5dfc3af175b5d4300810da48e80282c73cdb139f9cf7a5d03fb43c3fa8a6a51fc2bf13dedf
a0212e6f659a465fa7ee00ce38ce2803df6b26cbc33a469d7515d5ad988e788cc5640cc58f9adb9f249e727d738ed5c3ff00c2c9f187fd12cd73f29bff008cd1
ff000b27c61ff44b35cfca6ffe33401e8d7f7b0e9ba75cdf5cb0582de2696463d95464d7ce7a6ebf67a8787bc52daa693ab5cea3aeca648e782dfcd8a3da4941
b8b03c312381d00fa5765e22f16f8a7c49a1dc69373f0d3c4b041718123db1915c8041c64c07838e78e95674bf1c789f47d2ad74eb4f857af0b7b689628f779a
4e00c727c8eb401d07c26d7db5cf035b473b137560c6d25ce73f2fdd273fec91f8835dcd788e89acebde1fd7754d56c3e18f8955f5260f3c0c64f283649ca816
f91c96ee7a9ae83fe164f8c3fe8966b9f94dff00c66803d3a8af31ff008593e30ffa259ae7e537ff0019a3fe164f8c3fe8966b9f94dffc668023f8f5ff002235
97fd84a3ff00d152d7bb57cc9e3dd63c61e37d0a0d33fe15deb965e55cadc799e44d2670acb8c7943fbdd73dabe9ba0028a28a0028a28a0028a28a0028a28a00
28a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff00901dcffd
85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a
0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a
0028a28a0028a28a0028a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d05
73fe0dff00901dcffd85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a2
8a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a2
8a0028a28a0028a28a0028a28a0028a28a0028a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7
fec2ba97fe96cd5d0573fe0dff00901dcffd85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a2aac3a9585c5d4d6b05edb4b7107fad
85255678ff00de00e47e34016a8a6452c73c29343224913a86474395607a104751515a6a1657e67167776f706de5686610c81fcb907546c1e1877079a00b1454
16d7b697a6616b750ce6094c33795206f2e418ca363a30c8e0f3cd3a5b9820785269a38da67f2e257600c8d82db573d4e158e07607d28025a2a13756e2e23b73
71179f22b3247bc6e60a40620752016507d323d6a52428249000e493400b454704f0dd5bc5716f2c73412a078e48d832ba9190411c104739a909c0c9e9400515
4acf58d2f519e586c752b3ba9613891209d5d90fb8078fc6ae16008048058e064f53400b454505cc175179b6f347347b9937c6c186e562ac323b820823b10454
b400514514005159da9ebfa368a621aaead616065c98c5d5ca45bf18ce37119c647e757a29639e2496191248dc6e574390c3d411d6801f451450014514500145
1450014514500145145001451450014514500145145001451450014504e064f4a822bcb59d61686e61904e86488a383e628c7ccb8ea391c8f514013d1505e5f5
a69f6c6e2f6ea1b68010a659a408a093803278e4903f1a5b9bbb6b2447bab886047758d5a570a19d8e15467a927803bd004d45150c7756f34924715c44ef149e
548aae0947da1b691d8ed20e3d08340135151417305d45e6dbcd1cd1ee64df1b061b958ab0c8ee08208ec411435cc09731db34d1acf22b3a445806755c6e2075
206e5c9ed91eb4012d14554bfd534fd2a259751beb6b38d8ed0f7132c609f4cb114016e8a6c7224d1ac913aba30cab29c823d8d3639e199e648a58dde17d92aa
b0251b686c37a1daca707b107bd0049454371776d69e57da6e2287cd90451f98e177b9e8a33d49ec2a6a0028a28a0028a28a0028a28a002b9fbcff009287a37f
d82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff00901dcffd85752ffd2d9aba0a0028a28a00
28a28a0028a28a0028a28a0028a28a0042428249000e4935c73476fa7ebde188ada2817472648ecae61b86964964685db0e48e50aab36edcc5982938ea7b0774
45cbb2a83c7cc7159165a2e89a6dc8b8b4444750446ad70cc91646088d0b158c1efb40a006786a4c7f6bd8aab88ecb509228cb74daca92e17d879a547a6dc76a
e37c3b7c3c3b73acdef96ef1df5d6a6c10630d3c3772ed51df73abe3fed9f6efdde910a58d9159ee217b99a479e7657046f639201e381c28e3a01503685a03c5
0c4f6f032417cda8461a5276dc3333971cff0079d8e3a73d31401c57873ed3e1ed45b4e82603ed1e28f22ed822fefb3a6ac8e7a704c8a1b2307f33576ef50bab
ff0013da433cdb92d3c566de0c281b13fb319f1c0e7e6763ce7ad7533e8ba25c47768eaa3ed7702ea574b8647f3422a075656050ed451f291d3dcd360d0741b6
95258a28c48977f6e0c67627cff2bc9de72dc9d9c1cf5ebd79a00e33c1d3df69f71a7d99d426b88673ae4cde747164347788aa4154046773b11d32c7b05035f4
cd5755361e1fbabdbe378badda932449126c81bc8328656500edf94a9ce7259718e95b71683a25add3dddaa2477244fb09b872a8662ad26d52db5433229381d7
27a939a7e16f0de9fa0e87a65bced1497d6d631dacb20b8774042287f2c31f94315cf0067bd00737a06bd7da3f8374ab51246f25d787ec9f4a47c0fdfec48994
e064aee92139e4fcc7b0ae9fc61e7c5e158e1691a457bab482ee4da3e685a78d65240e00285b3c7009e9510d16cdb5cd0aca3fb0c761a34264b085672f3b154f
2b953fc08aebce49259738efd2dd5ac17b6b2dadd431cd6f321492291432ba9182083d450067dfdb6911dee952dd7970dc45394b2dac509728d9418ea36ee3b4
f1c67b563f8b2da59fc55e0c68efae2dc2ea52e56258c86ff4598f3b949e8a578ecc7be08d8b1f0e699a75c8b882299a55cf96d71732cde567a84dec760ed85c
0ab37fa5da6a46d9aea3667b5984f0ba48c8c8e011905483c82411d08241c83401c568dab6b3ab6a165a72ea46d5261aac924b0c11effdc5e88a3032a57eeb60
e41ce3d79a9344d7f5796d7c21aa5edf19975c8f13daac48b1c47ecf24c193037e7e4c10588e78c575767e1fd334fba8ae6d6dbcb9a259d51bcc638134a25978
27bb807dba0c0e28b7f0fe996b6fa55bc36db62d27fe3c97cc63e57eeda3ee7e6f9198739eb9eb401c9787bc6177aa4ba3dd0fed29935452d3432e972c56f68a
6369159663180c010149dcdbb70238ab5e1dd63551a959daebb737915e5da3030cd6f11b692455c9fb3cb1ff000e033057258ae4f1835d0db787b4bb3bc1750d
bb09173e5ab4ced1c59041f2e324aa64120ed0334dd3fc35a4e9570b359dbc885176c51b4f23c708c6311c6cc56318e3e50280303c42fa827c42d1ce9ba7da5f
4dfd9579ba2bab930285f36db90c11f273818c773cf1ce878203c3a2dc5a4e863bab7be9c5c421b7244eee65d887ba059171d38ea01e04dabe91e1fd735ab782
f676fed5b7b7778e2b7d424b79842cca18e2375628595464f1915aba7e9d6ba5da8b6b38bcb8812dcb162c4f52589249f72734016a8a28a0028a28a0028a28a0
028a28a0028a28a0028a28a0028a28a0028a28a0028a28a00e6fc55a9881ed34e96df516b5badc6e66b4b19ae311ae331fee95882f9c738f94377c5735a0ea0b
17c28f08ea3024be65a3e9f0fef2378f3e63a40f8dc06e1b646c1190782335e8eee8832ecaa3d49c5627f64d9436ba469b68d045a5e9ec8c22326e3fbb1fbb5e
73900e1b24e72a3ae4d0051f8856b15ef86edad275dd0cfaad846ebeaad751023f235ccebd752eada0e9115d3ac971a5ddd91bb2011fe922f63832076ced9bf0
22bd0efa0d3f528638aecc722473473a8f331878dc3a1e0f665071d38e6aa49a2e8720bb0f14445ddcc5773fef986f96328c8dd78c18d4e0601c1c8393900c07
f106a6be11b9befb562e53c406c95fcb5e21fed110edc631feafe5cf5ef9cf358ad6d2cff106268efae2dc2f8aa4cac4b190dff12a43cee527a295e3b31ef823
b79341d065bb92e5d01792459993ed2fe5f980ee0e23ddb43647de0327bd3a4d134396769d9144cd782f8c8970cac261188f70218119450a40e08c820e4e4039
ad1b53d6358b8b4b05d57ec6b29d4dde48618bcdc4379e5a6d0c85785201241f7e4e6a9b6a5aaeadabe9735b3a26a90596b36f1c8101595e1b98230d8f46d9c8
ed938e95b9378534e6d7ecae22748b4f82daed5923bb9125134f34729656520804ac99f987de0318e9ad2d8585b2c173a7c169f6db2b6960b3579cc71a87da4a
9c678251327048c71d4e402ae81aeb788b519aeace5ff896456b08d98f98cf22f9843646415468f8cff19c8e052e94826f17f8824b958da785a18adfbb2db989
5bf006432fd768f4a9bc33636ba4d8369d1dc5bc977b9aeae5627070d2bb3671d42e432ae7b263b559d4341d3b53b85b8b88a55b85509e7dbcf241215ce76968
d9495cf6271cd003b488b4d82dee21d3368852e64f3151895490b65c0cf4e49e0702abe93e1cb5d1efef6ee092567bb6dccae41543fecf1c0c0418e9f203d492
746cecadb4fb54b6b48521853384418192724fd492493dea7a00f3af1adea6a3afcba515d40259583cb1cb69a74d75b6ee4ff54731a300502938206778f7aec7
c39ac26bfe1db1d5150c6d3c40c91b758e41c3a1f42ac0823d455ab5d3ed6ca6bb9ade20925dcbe74ed924bbed55cf3fecaa8c74e28b1d3ad34d4992ce1112cd
33ceea0920c8e72c79e993cf1dc9f5a00b5451450014557fb7d9ff0068ff00677dae0fb7795e7fd9bcc1e67979dbbf6f5db9e33d33562800a28a2800ae7ef3fe
4a1e8dff0060abff00fd1b695d0573f79ff250f46ffb055fff00e8db4a003c1bff00203b9ffb0aea5ffa5b357415cff837fe40773ff615d4bff4b66ae82800a2
8a2800a28a2800a28a2800a28a2800a28a280393f88b0c573e178609e249619353b04923750caea6ea204107a823b5667fc219e16ffa16b47ffc018bff0089ad
6f1fff00c8bd6bff00615d3fff004aa2a9680313fe10cf0b7fd0b5a3ff00e00c5ffc4d1ff086785bfe85ad1fff000062ff00e26b6ea1bbba86cace7bbb870904
11b492393c2a81927f21401e1df12aead348f12269fe1bf0fe8fb74fb6175a8aae9b6eff002965001ca123008ce31c3e7b66bd474bf0ef83f56d2ad351b6f0e6
8e61b989654ff418ba30cff76bc8fc39a8eb9a89f11eb03c1d77ac43e20df11956e046238fe61b07ca49c640ce7f845765f05f55b81a35f786b50478afb4a988
f29c10ca8c49c7e0dbbf022803b5ff008433c2dff42d68ff00f80317ff001347fc219e16ff00a16b47ff00c018bff89adba2803ce75af0a681a6f8a6cfec5a4d
ac29a8a429770aa7eea555d474f503cbfba0618e40033939cd75ff00f089f867fe859d0fff0005907ff13591e28ff919f43ffb67ff00a72d3abaea00c8ff0084
4fc33ff42ce87ff82c83ff0089acbf13787f40d3fc29ac5edaf873438ee2dec669627fecb80ed754241c14c1e40eb5d5d6278cff00e446f107fd836e7ff45350
0792f867c2de25f11f866db5eb79bc2ca930765b79b40b419d8ecb8661170095ea3d6bb3f8751e87e2df08c3a95ef84b418ae448d1394d2e10ae57f880dbeff9
835c4f82fc0de1dd6fc0f6777a8f89afece69965125ba5f4691a81230fb8cb9c10013cf7aebbe0eea97173a46a7a5168e7b1d2ee7c8b4ba8d0289539f4ea7807
3df777a00ecffe113f0cff00d0b3a1ff00e0b20ffe268ff844fc33ff0042ce87ff0082c83ff89ad7a280385f0a685a6681f1daea1d2ace3b48ae3c3ef712471e
76ef6b950481d14600e0600c702bd7abccb4bff92f8dff0062b9ff00d2a15e9b4005145140051451400514514005145140051451400514514005145140051451
40051451401c9fc45862b9f0bc304f124b0c9a9d82491ba86575375102083d411dab33fe10cf0b7fd0b5a3ff00e00c5ffc4d6b78ff00fe45eb5ffb0ae9ff00fa
55154b40189ff086785bfe85ad1fff000062ff00e268ff008433c2dff42d68ff00f80317ff00135b7597e24d662f0f7872ff00569b1b6da12ea09c6e6e8abf8b
103f1a00f13f146b1a7e9de3e97ec1e1fd21bc39a64f0db6a0174cb760598b6e3bb61607861c1ea9efcfb1a783fc29222ba787346656190458c5823fef9af12d
1e0f115c780752d34f836f7503ad3fda8ea3e785cb1c1460bb79008cf5e727d6bd47e136badacf81ede09c9fb5e9cc6d26560411b7eee73fece07d41a00deff8
433c2dff0042d68fff0080317ff1347fc219e16ffa16b47ffc018bff0089adba2803cf6dbc27a0597c42874c8749b5fb05ddd5adc4f6b227991339b7d4f9d8d9
007cab8006060600aeaffe113f0cff00d0b3a1ff00e0b20ffe26b35bfe4aae9dfefda7fe93ea95d4d00647fc227e19ff00a16743ff00c1641ffc4d705f172db4
ff000c7852d6f747d0f43b6b87be4899ff00b22d9f285242461a323aa8fcabd52bcb7e3d7fc88d65ff006128ff00f454b40193aaf827c4da069377abc92f84ef
23b389a6781f41b540eaa32464440e71d391935dcf8534df0ef887c2da76ad3784b43825b9843ba7f664380738247cbd0e323d88ae0fc51e04f0c69de1abfbd8
7c5f7d34d044658a1b9be8a6495d795529b46724015e8df0ff0056bad6fc0ba5dfde42b0cef1952a881548562a1801d01001c0e39e2802f7fc227e19ff00a167
43ff00c1641ffc4d1ff089f867fe859d0fff0005907ff135af450070be14d0b4cd03e3b5d43a559c76915c787dee248e3cedded72a0903a28c01c0c018e057af
5799697ff25f1bfec573ff00a542bd36800a28a2800ae7ef3fe4a1e8dff60abfff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00
b0aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a28a2800a28a2800a28a2800a28a2800a28a280391f8946f53c1b24fa7e9f71a8dcdb
5e5a5c2dadba16793cb9d1c81804f453ce0e2b90b2f1fea3f61b7fb77817c5ff006cf297cff23486f2fccc7cdb72d9db9ce33ce2bb6f1ec932786e2586e2e203
2ea1650bbdbccd13ec7b88d58065208c824707bd65ff00c2396bff003ffae7fe0f2f3ff8ed00627fc27f3ffd08be35ff00c141ff00e2aaaea5e2e4d5f4e9f4fb
df00f8da4b59d7648834b64dcbe995707f5ae97fe11cb5ff009ffd73ff0007979ffc7691fc3f671a33bea3adaa28cb336b978001ea7f7b401cd69be2d8b48d3a
0d3ec3e1ff008d21b581764718d298ed1f52f93f8d54835ad3adbc453ebf0fc39f1a26a7711f972ceba63fcebc70577edfe11dbb573b1f883c45e26babb7f056
99a9dce9d6ae6337379afde8f34ffb23cf5c1c738e71919c66ba3f026a96fe2c8af6daf7fb7ec354b093cbb980eb97a5739232332fa8208edf8d006aff00c27f
3ffd08be35ff00c141ff00e2a8ff0084fe7ffa117c6bff008283ff00c556dffc2396bff3ff00ae7fe0f2f3ff008ed1ff0008e5affcff00eb9ff83cbcff00e3b4
01c5eb1aeeababdcaea563e0cf12abe996eb2882eec1a2370c2faca408846ee76c4e4f1c019c1c1ad9ff0084fe7ffa117c6bff008283ff00c5555d574fb9d27c
496f0dbebdafb5aea290a496f2ea9332c405f58c67cb62dbd4b2cb2027767e638c0e2baafec1b2ff009f8d63ff0007b7dffc7a8039ff00f84fe7ff00a117c6bf
f8283ffc55417be341a858dc595d7807c6b25bdc44d14a9fd94c37230c1190d91c13d2ba7fec1b2ff9f8d63ff07b7dff00c7ab3bc41616fa5786f54d4609b556
9ad2d259e357d72fca96542c01c4e38c8a00f3a1a178315811f0a7c699073cd9ce7ff6ad755a678aedf46b25b3d37e1d78bed6dd492238b46c0c9ea7ef727deb
8dd2b57f885ac68916b563a29b9b190332f97aeea01d82b153853779ce41ed5dc781f53d27c69a19be89b5ab7b889fcab880ebd7c763633c1f3b9047f5f4a009
bfe13f9ffe845f1aff00e0a0ff00f1547fc27f3ffd08be35ff00c141ff00e2aba0fec1b2ff009f8d63ff0007b7dffc7a8fec1b2ff9f8d63ff07b7dff00c7a803
9df07dcdf6b7f17a5d65fc3fade9964ba09b5dfa959343ba413ab601e41e0fae7835eb15e57e168af34af8cd75a50d6b57bcb097447bc5b7bebd79d227370aa0
2ee3d001804e4f2724e6bd52800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a280391f8946f53c1b24fa7e9f71a8dcdb
5e5a5c2dadba16793cb9d1c81804f453ce0e2b97ff0084fe7ffa117c6bff008283ff00c5575fe3d9264f0dc4b0dc5c4065d42ca177b799a27d8f711ab00ca411
9048e0f7acbff8472d7fe7ff005cff00c1e5e7ff001da00c4ff84fe7ff00a117c6bff8283ffc55676b7e22b4f1169cda7eabf0f7c6d3dab307318d35d32474c9
5706bacff8472d7fe7ff005cff00c1e5e7ff001daa9aa69fa5e8fa5dcea37ba96b896d6d199246fedbbcce0761fbde49e8050065c3e397b7823821f0178d1228
d42228d20e0003007deacdd2b5ad3b44bfbfbed3be1cf8d2dee2fdf7dcb2e98e448d9273b4be072c7a01d6b99835bf1a6b36526b5a2685a9368ea58a09b5fbd3
348a3a95fdf8cfe0a7d06715db782ee74df19787a3d521b8d7e06de629626d76f0ec718ce0f9bc8e47340137fc27f3ff00d08be35ffc141ffe2a8ff84fe7ff00
a117c6bff8283ffc556dff00c2396bff003ffae7fe0f2f3ff8ed1ff08e5aff00cffeb9ff0083cbcffe3b401c36a7aff881b5093c4da3f8335e6b8b596d638ad6
f6c244676f26fd4bed5c928a674ce08eb8c8c835bdff0009fcff00f422f8d7ff000507ff008aa82db4d9edbc6f1e8afaf6bf716177736d2b24daacdba30d06a0
db11d58304cc319c6493b4649ae9ff00b06cbfe7e358ff00c1edf7ff001ea00e7ffe13f9ff00e845f1affe0a0fff0015595afeb961e27b14b2d63e1d78d6e6dd
2512aa7f663a61c0201cab83d18fe75daff60d97fcfc6b1ff83dbeff00e3d5c5fc4cd41bc19e1bb7d474e6bf96692ed602b71ad6a0cbb4a3b67e5b81ce545006
041a3f83ade65953e1478c4b2f412584cebf8ab4a41fc457610f8e9ade14861f00f8ca38a350a889a3e0281d001bb815c66a1ab78f3c396dfda3ae68133e9d19
1e735af886ff00728ce3fe7e9b1f5c62bd2347b6d235cd1ed753b2b9d69adee631226ed72f811ea0fefba8391f850066ff00c27f3ffd08be35ff00c141ff00e2
a8ff0084fe7ffa117c6bff008283ff00c55741fd8365ff003f1ac7fe0f6fbff8f51fd8365ff3f1ac7fe0f6fbff008f50073be0fb9bed6fe2f4bacbf87f5bd32c
974136bbf52b26877482756c03c83c1f5cf06bd62bcafc2d15e695f19aeb4a1ad6af79612e88f78b6f7d7af3a44e6e15405dc7a003009c9e4e49cd7aa5001451
450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2
ba97fe96cd5d0500145145001451450014514500145145001451450072de3fff00917ad7fec2ba7ffe954552d53f89979069fe105bdba93cbb7b7d46c6595f04
ed45b98c9381c9e076ae461f8c3e079608e47d5de16750c627b594b2123a1daa46474e091ee6803baacbf125bcf77e16d5eded813712d94c9101d7714207eb5c
e7fc2def02ff00d073ff002527ff00e228ff0085bde05ffa0e7fe4a4ff00fc450066fc12bcb597c02b6d1ba79f6f71209933c8c9c8247d3bfb7b5753e1ef1868
de25bed42cf4a92491ac5f6cade5e11b248cab0e08241faf5af2cd6bfe14eeb3a8cb7dfdb577652cc499459c3322c84f5c8311c67db15d2f873c6ff0c3c2ba77
d8749d4fca8c9dcecd6b3b3c8deac7673401e9d45711ff000b7bc0bff41cff00c949ff00f88a3fe16f7817fe839ff9293fff001140167c51ff00233e87ff006c
ff00f4e5a7575d5e5dab78f3c35ac6ad6b7f61a979d6ba6451cd76fe448be5a7f68d81ce0a827846e99e95b5ff000b7bc0bff41cff00c949ff00f88a00edeb13
c67ff2237883fec1b73ffa29ab0ffe16f7817fe839ff009293ff00f1155753f89de00d574abcd3a7d79d61bb81e09192d660c1594a923319e706802cfc25748f
e15691248caa8a272ccc70001349c935cf7c17ccfa878bafe11fe85717abe4b01c1c1909c7e0cb5ca2695f0810043e2dd69e21d63647da7f286bbed1be21fc35
f0fe97169da66a8b05b47d145a4e4927a924a6493eb401e8d45711ff000b7bc0bff41cff00c949ff00f88a3fe16f7817fe839ff9293fff00114017b4bff92f8d
ff0062b9ff00d2a15e9b5e3be0cf11e93e27f8dd35ee8f77f69b74f0e1899fcb74c38b952461803d187e75ec5400514514005145140051451400514514005145
140051451400514514005145140051451401cb78ff00fe45eb5ffb0ae9ff00fa55154b54fe265e41a7f8416f6ea4f2ededf51b19657c13b516e6324e072781da
b94ff85bde05ff00a0e7fe4a4fff00c450076f5c4fc5ab79ee7e1a6acb0649411c8ea3baac8a4fe4067f0a4ff85bde05ff00a0e7fe4a4fff00c4523fc5af01c9
1b4726b4ac8c08656b398820f62365005df036aba71f86da45e2cf1476d6d62893b960046c8a03e7d3904fe35a1e16f13e99e2bd24df694255b7473115963d84
1001c0edd08e95e3d7765f066e6eda68f5dbfb689db735bc11cc233f81889fd6bb9d2be247c37d134d874fd3b544b7b58461235b49f8ee4925324fb9a00f43a2
b88ff85bde05ff00a0e7fe4a4fff00c451ff000b7bc0bff41cff00c949ff00f88a00bcdff25574eff7ed3ff49f54aea6bca6f3e23f8761f11a78a6da69efb4db
2b8b28a5f2212afbcc1a90c0126dcffac535bfff000b7bc0bff41cff00c949ff00f88a00edebcb7e3d7fc88d65ff006128ff00f454b5b7ff000b7bc0bff41cff
00c949ff00f88ac0f1778c3e1b78cf4a8b4ed47c45731431ce270d6f6d2ab6e0acb8f9a23c618d00765f102eedacfc03ae3dd3a2ac9672c49bb1cbb295503df2
4565fc2282783e19e9427046e32ba03d94c8c47e7d7f1af39b7b1f83d15c24971e25d56f510e7cab849769faed881fd6bd121f8b1e01b7863861d61638a35088
8967300aa0600036702803baa2b88ff85bde05ff00a0e7fe4a4fff00c451ff000b7bc0bff41cff00c949ff00f88a00bda5ff00c97c6ffb15cffe950af4daf1df
06788f49f13fc6e9af747bbfb4dba7870c4cfe5ba61c5ca9230c01e8c3f3af62a0028a28a002b9fbcff9287a37fd82afff00f46da57415cfde7fc943d1bfec15
7fff00a36d2800f06ffc80ee7fec2ba97fe96cd5d0573fe0dff901dcff00d85752ff00d2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a00caf135d
5bd8f85756bdbab28af60b6b29a67b6971b660a8494390460818e87af4af02d3be3c689a4799fd99f0e34fb2f371e67d9ae523df8ce33b6119c64fe66bdebc4f
a85e699a289ec0c0b7525ddadb234f199117cd9e388b150ca4e03938c8e9596f378a924643ad68d95241c68b2fff0025500793ff00c34941ff00425c7ff8301f
fc6a8ff869283fe84b8fff000603ff008d57abfda3c53ff41ad1ff00f04b2fff002551f68f14ff00d06b47ff00c12cbffc95401e51ff000d2507fd0971ff00e0
c07ff1aa3fe1a4a0ff00a12e3ffc180ffe355eaff68f14ff00d06b47ff00c12cbffc9547da3c53ff0041ad1fff0004b2ff00f255007947fc34941ff425c7ff00
8301ff00c6a8ff00869283fe84b8ff00f0603ff8d574fe28f89faa78535a8749bbbc86e6ea6804e82d340670549618e6f41cfc87b53740f8ad71afea8ba626b7
63657eff0072def7c3f2c6cc7ae062ec8ce39c668039897f68db59e096097c110c90cc8639237bf055d48c1523c9e411daab699f1f747d13cdfec9f8776361e7
63ccfb25d245bf19c676c2338c9ebea6bd81aefc4e88cedade8c1546493a2cbc0ffc0bac8b2f17eab7fa84f6907887442231118e6fec9631dc7980902322f096
200e781f8d0070bff0d35ff528ff00e54bff00b551ff000d35ff00528ffe54bffb557a46a7ac78934ad2af3519f58d29a1b481e791534490b15552c40cdd8e70
2b8187e395dcd109834c2dcf267ff84698a281d4922f8f039cfd2802affc34d7fd4a3ff952ff00ed547fc34d7fd4a3ff00952ffed55e85a2788f5af10e950ea5
a6f887469ada5ced6fec4941041c1041bae0d68fda3c53ff0041ad1fff0004b2ff00f255007967fc34d7fd4a3ff952ff00ed547fc34d7fd4a3ff00952ffed55e
a7f68f14ff00d06b47ff00c12cbffc9547da3c53ff0041ad1fff0004b2ff00f255007967fc34d7fd4a3ff952ff00ed55f40578cf89bc61e3ad1bc7de14d366d4
b4c1a66a3a847093676651e64df107122c85f6fdf206c6ee49ed8f66a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28
a00e2be2878c2dfc17e158ef6eb478b5682eae45a3db4b20452191c9272ac08c2e318ef5e45a77c78d1348f33fb33e1c69f65e6e3ccfb35ca47bf19c676c2338
c9fccd7bd789f50bcd334513d81816ea4bbb5b6469e33222f9b3c71162a1949c0727191d2b2bed1e29ff00a0d68fff0082597ff92a803ca3fe1a4a0ffa12e3ff
00c180ff00e3547fc34941ff00425c7ff8301ffc6abd5fed1e29ff00a0d68fff0082597ff92a8fb478a7fe835a3ffe0965ff00e4aa00f28ff869283fe84b8fff
000603ff008d51ff000d2507fd0971ff00e0c07ff1aaf57fb478a7fe835a3ffe0965ff00e4aa3ed1e29ffa0d68ff00f82597ff0092a803ca3fe1a4a0ff00a12e
3ffc180ffe3547fc34941ff425c7ff008301ff00c6ab7b5cf8b7a9685e22bad0e5b85babbb60a5fecbe1e675c32ab023fd341e8c3b75ad1f0c7c47bcf15dc496
b63afe9915ec4373dadce832a480743c7dac8383d7078a00e1afff00680d2b55b716fa8fc3eb2bc8038711dc5dac8a180201c342467048cfb9a7e9bfb4269ba3
5bb5be97e01b4b1819cbb476b78b1296c019216103380067d857acdcea3e22b3b692e6e7c41a1c3046bb9e49347915547a926ef8159fa678a75bd527b8862d77
478e486e1e05593476ccbb4025d00bc395e7af1f4a00e07fe1a6bfea51ff00ca97ff006aa3fe1a6bfea51ffca97ff6aaefbc47e27d7fc31a0dceb17bab69b25b
dbeddeb0e892173b9828c037807561deb8d8fe385d1459669a4b7b6600fda25f0d3f9601e8722f4f5e3a7ad0053ff869affa947ff2a5ff00daa8ff00869aff00
a947ff002a5ffdaabd2ec756f106a56105ed9ebfa2cb6d3a092371a2cb8653d3fe5eaac7da3c53ff0041ad1fff0004b2ff00f255007967fc34d7fd4a3ff952ff
00ed547fc34d7fd4a3ff00952ffed55ea7f68f14ff00d06b47ff00c12cbffc9547da3c53ff0041ad1fff0004b2ff00f2550079e685fb43ff006df8874cd27fe1
16f27edd7715b79bfda1bb66f70bbb1e58ce339c6457b8578cf89bc61e3ad1bc7de14d366d4b4c1a66a3a847093676651e64df107122c85f6fdf206c6ee49ed8
f66a0028a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff0090
1dcffd85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a00e7fc65ff00203b6ffb0ae9bffa5b0d2dc7fc7ccbfef9fe754be22eab63a3785a
2bcd42e63b781353b072cdd484ba89db681cb10a8cd8009c29f4ac883c7de15d42de2bd1af69b00b84128867bc89648f70ced61bb8619c11eb401bf45627fc26
7e16ff00a19747ff00c0e8bff8aa3fe133f0b7fd0cba3ffe0745ff00c55006dd1589ff00099f85bfe865d1ff00f03a2ffe2a8ff84cfc2dff00432e8fff0081d1
7ff15401c46bbff2715e19ff00b06bff00e83714cf8e8a96de1dd2754842a5fdbea28219801b946c76fcb2aa7f0aa9e2f29a8f8f74ff0013787bc61e15824b3b
4f2145dea0b9dc4c9938008c6d93d69b15bc3af6b1617de33f1ff876e60b17f362b1b2bb8d63670782c4919fcbdb8c9a00f5f5fdec23cc41f32fcca47af515c7
e89f0f2cb47f111d683dbcb73234ad30fb222afccd98f60ff966547048fbdd4d6c7fc267e16ffa19747ffc0e8bff008aa3fe133f0b7fd0cba3ff00e0745ffc55
001e33ff00911bc41ff60db9ff00d14d5e59e05d63c7b6de00b2b7d13c2f6b796216610dcc97280b132393942e0f0c48c77c57a17883c47e1bd57c37aa69d078
9f4459aeed2582367bf8c286642a09c13c64d79ce8771e26f0ee8b0693a7f8ebc0c96b06ed9bef8330dcc58f257d58d00753f05dec2dbc2d75a543e6a6a56974
c7508a55da5653f2f03278c263eaa7815e935e6be055f0d7851751babdf19e8d7da9ea5379b7338bc89413927006ef56624f1d7dabafff0084cfc2dff432e8ff
00f81d17ff0015401b745627fc267e16ff00a19747ff00c0e8bff8aa3fe133f0b7fd0cba3ffe0745ff00c5500719f127fe4a1fc37ffb0a8ffd1b057b957cd1f1
97c4f6726a3e17bfd0757b3b9bab1966995eda649bca70622848191d57bf5c1afa5e800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a
28a2800a28a28039ff00197fc80edbfec2ba6ffe96c351d57f88baad8e8de168af350b98ede04d4ec1cb375212ea276da072c42a33600270a7d2b33fe133f0b7
fd0cba3ffe0745ff00c55006dd1589ff00099f85bfe865d1ff00f03a2ffe2a8ff84cfc2dff00432e8fff0081d17ff15401b745627fc267e16ffa19747ffc0e8b
ff008aa3fe133f0b7fd0cba3ff00e0745ffc5500711a17fc9c5789bfec1a9ffa0dbd37c7aab63f15fc117d6908fb5cf318652a3968cb2ae4e3d15deb2b551710
fc44d53c4fe1df19f84211790a4205d6a0a582848c1c8008eb1faf4ad2d0e2d31fc4f0f897c57e3bd0b50bfb78f65b416f771a430120e48e467a9ec3d7d3001e
a57302dcdacb032a10ea461d03afe20f5fa572be12f00d9784eedee6178659258504ac6dd55bcee77ba11f714e7ee0e062b53fe133f0b7fd0cba3ffe0745ff00
c551ff00099f85bfe865d1ff00f03a2ffe2a8030fe2f7fc92ed67fed87fe8e8eb8d4d43e215e7c37874cb5f09db3d84ba5a411dc8b9467684c600609bf392bce
31c1ed5d5f8eb54d03c4fe0cbfd1ecbc53a0c77171e5ec69b508c20db22b1c9049e8a7b572765a978aacb4bb6d2e1f881e0886da0852dd1d2f159d1140504657
9381401dc7c2dbbd2ee3e1fe9d1693248f15b0314a2418612e773e464e325b239e8457655e7de057f08782fc3c34d4f1668f712bc8669a5fb6c4a19c80381bb8
00003ffd75d37fc267e16ffa19747ffc0e8bff008aa00dba2b13fe133f0b7fd0cba3ff00e0745ffc551ff099f85bfe865d1fff0003a2ff00e2a8038cf893ff00
250fe1bffd8547fe8d82bdcabc03c73ace97abfc43f877fd99a959def95aaaf99f669d64d99960c676938ce0fe46bdfe800a28a2800ae7ef3fe4a1e8dff60abf
ff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00b0aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a28a2
8033f5dd4ffb13c3da9eade4f9df61b496e7caddb77ec42db73838ce319c1ac89357f1444e51f46d0c30ea3fb626ff00e45a9fc77ff24f3c4bff0060abaffd14
d52dff00fc7ec9f87f2140147fb6fc4dff00407d0fff0006f3ff00f22d1fdb7e26ff00a03e87ff008379ff00f916a5a28022fedbf137fd01f43ffc1bcfff00c8
b47f6df89bfe80fa1ffe0de7ff00e45a968a00ccd47c69a9691e5ff69c3e16b2f373e5fda75e923df8c671bad867191f98a4b0f1bdfea8c574f8fc2b76c3a8b7
d7e4908fcad8d79e7c5bb686f7c5de02b5b98c4904d7ed1c88dd194c90020fd41a8fe24781f44f0f78624f11e836c74dd4b4f92278e4b7760082e1704138fe2c
e7dbd2803d0b5fb7bff14e96da6eb5e19f0fddda170fb1b58b852ac3a1565b5054f519047048e84d71bff0ae3c33f6d165ff000877877ed463f3441ff093deef
d99c6edbe4e719e33d335dd787f516d5fc39a66a4ebb5eead639994762ca091f99ae23fe115f10ff00c268d7ab7ba8a695e71b7dbf6a432f9447985c395c88f7
fcbb3af1e981400fff00855ba17fd08da1ff00e1497dff00c62aadff00807c25a540b3ea3e14f0cd9c4cdb164b8f14dec6a5b19c02d08e700fe55e9f5e43f106
da6f1df8fad7c1f6b36c86c6d24ba9d94e71295f9011ed94efd1cf4a00d84f861a03a2ba782341656190c3c4b7c411ff007e297fe156e85ff423687ff8525f7f
f18ab7f09b5d9358f04c36d73b85e69ac6ce6570411b7eee73fece07d41aeea803cebfe156e85ff423687ff8525f7ff18a3fe156e85ff423687ff8525f7ff18a
f45a2803c6bc61e1df09f82b488b52d43e1f69b3c52ce200b6be22bc2c18ab364ee894630a7bfa5773a17c25f879adf87b4cd5bfe118f27edd6915cf95f6fb86
d9bd036dcef19c6719c0ae67e3d7fc88d65ff6128fff00454b5eade04ff9279e1aff00b055affe8a5a00e7ff00e1497c3cff00a17bff00276e3ff8e51ff0a4be
1e7fd0bdff0093b71ffc72bd028a00f3ff00f8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001caf40a2803cff00fe1497c3cffa17bff276
e3ff008e51ff000a4be1e7fd0bdff93b71ff00c72bd028a00e0e0f831f0fadae229d3c3b1978dc3a892e6675241cf2ace430f62083debbca28a0028a28a0028a
28a0028a28a0028a28a0028a28a00cfd7753fec4f0f6a7ab793e77d86d25b9f2b76ddfb10b6dce0e338c6706b1db59f13a3156d1b43041c1ff0089bcdffc8b56
3c77ff0024f3c4bff60abaff00d14d4b71ff001f32ff00be7f9d0055fedbf137fd01f43ffc1bcfff00c8b47f6df89bfe80fa1ffe0de7ff00e45a968a008bfb6f
c4dff407d0ff00f06f3fff0022d1fdb7e26ffa03e87ff8379fff00916a5a280326ff00c777ba54eb06a23c2767332ef11dc788248d8ae48ce1ad8719079f6a9a
c7c61aaea919934fb6f0cdda0ead6faecb201f88b535e65e2ed36cf57f8f7e1eb1d42dd2e2d65d35b7c4fd1b02e08fd4035078f743d33e1e6a1a278a3408dac1
85e2c373144c4a4b191923049c70a4607ae7af3401e97afdbdff008a74b6d375af0cf87eeed0b87d8dac5c29561d0ab2da82a7a8c8238247426b8d8fe1c78666
b99ada2f077875ee200a66897c4f7a5a3ddcaee1e4e4670719eb5e932279913c6599772919538233e95e77e1bf0c788acfc506f6faf2ff00ec12b36236b94675
111db1099b6e640ca4918391df279a005ff855ba17fd08da1ffe1497dffc62aa5c780bc23677905a5cf857c3305cdc1c430cbe2abc57939c7caa61c9e7d2bd42
be7cf145bdef8c757f1478b2ca5748fc3ef1c566c3186f2d8963dfa72dff00021401df7fc2add0bfe846d0ff00f0a4beff00e3147fc2add0bfe846d0ff00f0a4
beff00e315d8f8735987c43e1db1d5a0236dcc41c8073b5ba32fe0411f856a50079d7fc2add0bfe846d0ff00f0a4beff00e3147fc2add0bfe846d0ff00f0a4be
ff00e315e8b450078b78cb41f0b7826c6def6ffe1c58dcdbcf2f95bed3c4774763e32010f1a9e406e99fba738e33e9bff0a4be1e7fd0bdff0093b71ffc72b89f
8f5ff223597fd84a3ffd152d7bb50079ff00fc292f879ff42f7fe4edc7ff001ca3fe1497c3cffa17bff276e3ff008e57a051401e7fff000a4be1e7fd0bdff93b
71ff00c728ff008525f0f3fe85effc9db8ff00e395e81450079fff00c292f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3ff8e57a051401c3d8
7c20f02699a8db5fd9e85e5dd5aca9342ff6b9ced7520a9c17c1c103ad77145140051451400573f79ff250f46ffb055fff00e8db4ae82b9fbcff009287a37fd8
2aff00ff0046da5001e0dff901dcff00d85752ff00d2d9aba0ae7fc1bff203b9ff00b0aea5ff00a5b3574140051451401cff008eff00e49e7897fec1575ffa29
aa08f55b1d695aff004db98eead1dd91268f956284a360f71b94f2383d4647353f8e349d2f5bf05ea965addccf6da6795e75ccd07df448c89091f2b7f73d0d78
ff00fc2a3f879ff3f1e39ffc145c7ff22d007ae515e47ff0a8fe1e7fcfc78e7ff05171ff00c8b47fc2a3f879ff003f1e39ff00c145c7ff0022d007ae515e47ff
000a8fe1e7fcfc78e7ff0005171ffc8b47fc2a3f879ff3f1e39ffc145c7ff22d005cf8af6da91f10783b52b0d26fb514d3ee9e7952d20690801e1600e01c6769
c67d2aa788f52f14fc43d2c68165e14bed2ad6e254fb55d6a00a055521b804027900f7e98fa27fc2a3f879ff003f1e39ff00c145c7ff0022d1ff000a8fe1e7fc
fc78e7ff0005171ffc8b401ea5a6d843a5e9769a7db8c436b0a429f45000fe556abc8ffe151fc3cff9f8f1cffe0a2e3ff9168ff8547f0f3fe7e3c73ff828b8ff
00e45a00f599a5104124a55dc2296da8a598e067000ea7dabc6bc2fe02d7bc452ea5e24d4756d5fc3f7d7d72e7c884b44fe5e780dd0e0741ec055cff008547f0
f3fe7e3c73ff00828b8ffe45a3fe151fc3cff9f8f1cffe0a2e3ff916801fe13f0eeade05f8993d904bfd474ad560df25fb42cc1651939918700e770e7fbe2bd6
6bc8ff00e151fc3cff009f8f1cff00e0a2e3ff009168ff008547f0f3fe7e3c73ff00828b8ffe45a00f5ca2bc8ffe151fc3cff9f8f1cffe0a2e3ff9168ff8547f
0f3fe7e3c73ff828b8ff00e45a00b5f1ebfe446b2ffb0947ff00a2a5af56f027fc93cf0d7fd82ad7ff00452d7847887c11f0a7c356627bfd43c64923ff00a981
ec9a179b0406da658114e370279fd700fbff0084fec7ff00086e87fd9de7fd87fb3edfecff0068c799e5f96bb77e38dd8c671c66803628a28a0028a28a0028a2
8a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a00e7fc77ff0024f3c4bff60abaff00d14d4c33c3744dc5bcb1cd04bf3c7246c195d4f208238208
e734ff001c693a5eb7e0bd52cb5bb99edb4cf2bceb99a0fbe891912123e56fee7a1af1ff00f8547f0f3fe7e3c73ff828b8ff00e45a00f5ca2bc8ff00e151fc3c
ff009f8f1cff00e0a2e3ff009168ff008547f0f3fe7e3c73ff00828b8ffe45a00f5ca2bc8ffe151fc3cff9f8f1cffe0a2e3ff9168ff8547f0f3fe7e3c73ff828
b8ff00e45a007f8dff00b574bf8bfa37882d341d4b53b5b5d3ca3fd92dd9c6e6f3971b802011bc1c51a9c1e20f89baa6936d75e1db8d1f43b4b817170f7dc3ca
471b421c1e46474ef9f62cff008547f0f3fe7e3c73ff00828b8ffe45a3fe151fc3cff9f8f1cffe0a2e3ff916803d728af23ff8547f0f3fe7e3c73ff828b8ff00
e45a3fe151fc3cff009f8f1cff00e0a2e3ff00916803d03c637f7ba7784f519f4db4b8babe3118e08ede2323ef6f943607619cfe15e75e1bf8457e9e198126f1
3eafa735dc7e65cd940c510161cab2e7938c039f4a97fe151fc3cff9f8f1cffe0a2e3ff9168ff8547f0f3fe7e3c73ff828b8ff00e45a00d5f85767abf879f58f
0cea369742dad2e0c96776f1308e5427042b631d81c67f88fa57a3d791ff00c2a3f879ff003f1e39ff00c145c7ff0022d1ff000a8fe1e7fcfc78e7ff0005171f
fc8b401eb945791ffc2a3f879ff3f1e39ffc145c7ff22d1ff0a8fe1e7fcfc78e7ff05171ff00c8b4016be3d7fc88d65ff6128fff00454b5eed5f307893c29f09
7c31e5c779a878c9ee9f045afd944326c39f9f134280ae548e0f5edd71f4fd00145145001451450014514500145145001451450015cfde7fc943d1bfec157fff
00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97fe96cd5d05001451450073fe
3bff009279e25ffb055d7fe8a6a96fff00e3f64fc3f90a8bc77ff24f3c4bff0060abaffd14d52dff00fc7ec9f87f214015a8a28a0028a28a00f3ef8a3e20d42c
62d1f41d26e4dadf6b5742dc5c2fde8d32aa483d8e5d79f4cfd6a85ffc2696c2d92f7c2faedfdbeba8c85ae2e6e4ec9f04677e01e83381c8ec41abff0014740d
42f62d1f5fd26d8dd5ee8b742e3c853f3489956200c72728bc7a67af4aced4fe2adcea96cba7784f46d464d75d943c5716d85b7e7277f3dc64761df22803d36d
84e2d6117251ae020f30c7f74b639c7b66bcd8daf8abfe1601b8599cd9863a78bf7d3c79a14fefb006e00c79c2f998f6c77af47b31722ca0178d1b5d08d7ce68
d70a5f1ce01270339a9e800af9a3c07a4f806ff439e5f14ea26daf85cb2c69e714cc7b5707007a96fcabe97af9c7e1df893c0fa3f87e7b7f1369705d5eb5d33a
3c962b3111ec4006e238e4371ef401de7c2d8e68bc41aec7a4de5d5df84e3da9672dc3123cc18c84cf61f30e0765af52af23f8650c975e3cd7758d1f4f9f4ff0
c5c42a218648f62bbfcb8651d3b39e3a0602bd72800a28a2803cb7e3d7fc88d65ff6128fff00454b5eade04ff9279e1aff00b055affe8a5af29f8f5ff223597f
d84a3ffd152d7ab7813fe49e786bfec156bffa296803a0a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28039ff1dffc93
cf12ff00d82aebff0045352dc7fc7ccbfef9fe749e3bff009279e25ffb055d7fe8a6a5b8ff008f997fdf3fce8022a28a2800a28a2803cc3c51737de2df891178
32d7539ec34fb6b6fb45f35abed92427042e7b70cbedc9383c55bb2f8757de18f10e9f77e15d5a5874e0c45ed95e4ace8e9c7dc007de3cf27a75cf634fc4f6d7
be11f8931f8cedf4cb8bed3aead7ecf7ab6abba48c8c00d8fa2a7b707a71535b7c40d57c57e26d36d7c276128d2958b5f5ede5b90857238539ea391ea49e9819
a00f489159e27547d8c5480d8ce0fad79af85edfc50be32b8b8bc91d2d2f0e1ae5ac0249702dcec0251bb11e7712081f30f4e95e9945006278cffe446f107fd8
36e7ff004535787785b49f8732f846daf35bd625b4d602c8d208a660f190edb4aa8079da148af71f19ff00c88de20ffb06dcff00e8a6af1af06f8afe1de9be0f
b3b3d7747b7b8d4a31279d2369e923365d8afce464fca40f6a00f47f84771ab5d7806da6d5e47919a57fb3bc849730f18dc4fbeec7b62bb9af30f83f657f02eb
f74d693d8e8f7577bf4fb59d4a945cb6700f6c1419ef8f6af4fa0028a28a00f2df8f5ff223597fd84a3ffd152d7bb5784fc7aff911acbfec251ffe8a96bdda80
0a28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff60abfff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00b0
aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a28a28030fc63a45f6bfe0ed5748d36f23b4bbbcb76852591372e0fde53e81972b90091
bb20122bc9748f86ff0016f41d2e1d334cf13e87059c3bbcb8f1bb1962c796809ea4f7af76a2803c5bfe10ef8d3ff437687ff7ec7ff23d1ff0877c69ff00a1bb
43ff00bf63ff0091ebda68a00f16ff00843be34ffd0dda1ffdfb1ffc8f47fc21df1a7fe86ed0ff00efd8ff00e47af69a2803c5bfe10ef8d3ff00437687ff007e
c7ff0023d1ff000877c69ffa1bb43ffbf63ff91ebda68a00f16ff843be34ff00d0dda1ff00dfb1ff00c8f47fc21df1a7fe86ed0ffefd8ffe47af69a2803c5bfe
10ef8d3ff437687ff7ec7ff23d1ff0877c69ff00a1bb43ff00bf63ff0091ebda68a00f16ff00843be34ffd0dda1ffdfb1ffc8f47fc21df1a7fe86ed0ff00efd8
ff00e47af69a2803c5bfe10ef8d3ff00437687ff007ec7ff0023d1ff000877c69ffa1bb43ffbf63ff91ebda68a00f02d7fe15fc54f13d8a596b1e23d0ee6dd25
12aa72987008072b003d18fe75edba1699fd89e1ed3349f3bcefb0da456de6eddbbf6205dd8c9c6719c64d685140051451400514514005145140051451400514
51400561cfe34f0adadc4b6f71e25d1a19e272924725fc4ac8c0e0820b641078c56e5717e1f9644d3270923a8fed3d478071ff002fb3d006a7fc277e0fff00a1
af43ff00c18c3ffc551ff09df83ffe86bd0fff000630ff00f154bf689ffe7b49ff007d1a3ed13ffcf693fefa34009ff09df83ffe86bd0fff000630ff00f1547f
c277e0ff00fa1af43ffc18c3ff00c552fda27ff9ed27fdf468fb44ff00f3da4ffbe8d0027fc277e0ff00fa1af43ffc18c3ff00c551ff0009df83ff00e86bd0ff
00f0630fff00155cbfc41f19dc783fc2936a31397ba7710dbabb9c176cf27e80138ef8ae5a5f0c7c444d1ffb5e3f1c6a326b822f30d98c790c719d8149db9cf1
9231dba50076be31f12787b5ff00076aba469be37f0fda5dde5bb4292c97d0b2e0fde53f3701972b90091bb20122bcb2c97c67a7d8dbd95afc55f03476f6f12c
5127dba13b514600c98b27803ad7b06877daccfa259c9ac21b7d44c63ed114726e557ef82091efd4d709e27f15789ec3c696f05b491496d6ac199d6e2648e159
87971fda14021fe6048c74ef8c6480607dabc75ff4567c0dff0081b07ff19a3ed5e3affa2b3e06ff00c0d83ff8cd7b3437177e447e74cde6ed1bf631c6ec738f
6ae0be2a788b56b7d3f4cd0746beb98356d5ee9628a48a6746440464ee5e40c9507db3401cb7dabc75ff004567c0dff81b07ff0019a3ed5e3aff00a2b3e06ffc
0d83ff008cd761f0afc51a8eb3e1892cf53bbb87d534c9dadae4cb2967383c127273dc67fd935dd7da27ff009ed27fdf46803c57ed5e3aff00a2b3e06ffc0d83
ff008cd1f6af1d7fd159f037fe06c1ff00c66bdabed13ffcf693fefa347da27ff9ed27fdf46803c57ed5e3affa2b3e06ff00c0d83ff8cd6a69ba27c58d66ddae
34bf1f7862fa05728d25ab24aa1b00e095808ce0838f715e9d7d0c5a9d9c9677f125ddac98df0cea2446c104654f070403f8570dfb38ff00c93cd43fec2b27fe
8a8a802b7fc21df1a7fe86ed0ffefd8ffe47a3fe10ef8d3ff437687ff7ec7ff23d7b4d1401e2dff0877c69ff00a1bb43ff00bf63ff0091e8ff00843be34ffd0d
da1ffdfb1ffc8f5ed3450078b7fc21df1a7fe86ed0ff00efd8ff00e47a3fe10ef8d3ff00437687ff007ec7ff0023d7b4d1401e05affc2bf8a9e27b14b2d63c47
a1dcdba4a2554e530e0100e56007a31fcebdf68a2800a28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff0060abff00fd1b695d0573f79ff2
50f46ffb055fff00e8db4a003c1bff00203b9ffb0aea5ffa5b357415cff837fe40773ff615d4bff4b66ae82800a28a2800a28a2800a28a2800a28a2800a28a28
00a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800ae2741ff00906cff00f612d47ff4ba7aedabc4e78be2ee
93ab6ad6fa4f876c2f34c7d46ea7b492e2688308e4959c0e25538258b7cc33f363d0000f48a2bcdbedbf1b3fe84fd1ff00effa7ff2451f6df8d9ff00427e8fff
007fd3ff00922803d268af36fb6fc6cffa13f47ffbfe9ffc9147db7e367fd09fa3ff00dff4ff00e48a00b5f183c3f75af781dbec513cb3d9ceb72234192ea015
6c0ef80d9fc2a1b9f8c7e1b5f0c7dbed6e3cdd49e2c476251b7f9a47dd3c6319ef9fa547f6df8d9ff427e8ff00f7fd3ff922a88b3f8b02ff00ede3e1e786bed9
8c7da3f75e663fdef3f3401e89e1ebfbdd5340b3bed46c8595d4f1ef7b7dc4ec07a03900838c6476e95a45413920579bfdb7e367fd09fa3ffdff004ffe48a3ed
bf1b3fe84fd1ff00effa7ff245007a4d7895edc788bc51f15ef756f0d5a59dda685fe8b17db198441b0c188c11939dff00801ed5d27db7e367fd09fa3ffdff00
4ffe48aab630fc5dd31645b0f00f876d1646dee20314619bd4e27e4fbd006378727d6fc25f16b3e22b6b4b31e23520ada1fdd79b9e08c92725bdfac95ed95e57
790fc5cd424864bdf00f876e5e06df0b4c62731b7aa933f0781d3d2adfdb7e367fd09fa3ff00dff4ff00e48a00f49a2bcdbedbf1b3fe84fd1ffeff00a7ff0024
51f6df8d9ff427e8ff00f7fd3ff922803d26b83fd9c7fe49e6a1ff0061593ff454554bedbf1b3fe84fd1ff00effa7ff24574bf053c2dacf847c1b7961ae59fd9
2ea4d41e654f3524ca18e300e5091d54fe5401e914514500145145001451450014514500145145001451450014514500145145001451450015cfde7fc943d1bf
ec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97fe96cd5d05001451
45001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451
45001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451
450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2
ba97fe96cd5d05001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500
14514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001451450014514500
14514500145145001451450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b694007837fe40773ff00615d4bff004b66ae82b9
ff0006ff00c80ee7fec2ba97fe96cd5d050014514500145145001451450014514500145145001451450014514500145145001451450014514500145145001457
1771e27d45fc4d776905ed859d85a5d476acd73a7cd2798c5118fef95c2267cc0a370ea0f5ae860bb9d3c437361336f89e15b8b73c02a33b5d381c80769c9fef
e3b0a00d3a2b9e6b8bdd6b59d46c6cf5292c2df4e68e291e08d1a5795916423322b28508e9d064e4f231539d4ee747d3e15d58adcde4b70d05b2daafcd73f799
783801b629279c0c139028036a8ae7e5f17d8c51db6eb6bc3713de9b036ca8a648a7f29a5daff360655782091f329ce3910c7e35b362de6e9fa8db88aee3b2ba
32c698b699ca045721ce73e62729b80dc32450074d4573b6be31b3ba9dc7d8ef61b64bd92c1aee55458bcf594c417ef6e3b9ba1c639009078a99bc5362ba44ba
918ae3c98f50fecf2bb577799f69fb3e7ae36ef39ce738ed9e2803728ae4ac3c5f3b5d7881750d3ae638ec7524b2b511aa334c5a38c85015c9dd972d93801586
48c363774bd5935313a1b6b9b4b9b760b35bdca80e8480472a4ab020f55247519c83401a14563dbf8862bad41ade1b1bd781676b7378aaa62f35490cb80dbc60
8232542fbd47078a6c6e21d3e448ae02df6a1369f165578922f3b716e7eefee1f0464f2381ce003728ae697c6d62f24212cb5068e7ba96ca09444bb64b88cb86
8c7cd9cfeedcee202f1d6b5748d5e2d5e09d9209ade6b798c1716f3eddf148006da7692a7e56539048c11401a14561c5e29b496489cdb5d476334a2186fe4541
0c92162a147cdbc65b804a8072304e6a9f83356d475c8f53bebf8af2dd45ecd6f15b4c20d91ac723a7ca63258b7186dc48c8f978e4807514573f078beca79508
b4bc4b46b96b4fb6baa0844e2431ecfbdbb258601dbb73c673c5492f8a2d61bd489ad6efecad722d3edd84f244c5b604fbdbf258edcedc678cd006e515c3eb1e
3d9a3d2ee2e348d17509cdbea6960f2ba4423dc2e442e06e90124f214f4cb2e7003635edfc431249a986fb6dc4d16a02d23b631c61bcc3047279719040230c5b
2c7aeee7005007434572771e2792eaeb434b4135a349ac1b1bfb69950ba62d65976360b01d236ca9e98e706b5356f10c5a56a765a70b1bdbcbbbd8a69618ed95
4e447b370259942ffac182481c1e41c6403628ae6e4f1a59addd9d9c7a7ea335ddd79e05bc712ee8cc250387cb003fd629041208e879199dfc5568b24ac2d6ed
ec6199a09afd557c98e456d8c0fcdbf86c8242903072462803768ae3bc45e2d962b36fecb86e82a6a36d686fc246d09637291cb1f24b6705d49db80780722b55
bc5362ba44ba918ae3c98f50fecf2bb577799f69fb3e7ae36ef39ce738ed9e2803728ac33e29b4fb779296d7525bfda0da7db5150c2270db7cbfbdbb3bbe5ced
da08c120d6568be359ee7428aef50d2ee96f6e751b9b2b5b58fcadd318de5c007ccda0848c8259802ca719054900ec68a82cae96f6d12e162962dd9cc7326d65
20e0823ea3e87a8c8a9e800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff60abfff00d1b695d0573f79ff00250f46
ff00b055ff00fe8db4a003c1bff203b9ff00b0aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a28a2800a28a2800a28a2800a28a2800a
28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28039ad5b4ad73538afb4b967b3934bbd2419c9649e08880191554618fdec3ee52323838ab31c
2979e347bc55c8b0b36b5de0f1be564765fa811c67fe063deb728a00c29ec356b1d62eeff495b2b88ef0219adae646876c8a36ef0eaad9ca851b48fe11c8aaf7
1a0ea72c3a7ddbdec571a9d8df3de207ca4443a3c6620792aa124201c13919c76ae968a00e453c2d7cfa9daea734b6e2e5b59fed2ba45662a8a2d1add510e3e6
23e4392067e6e9c0a2efc2d7d716dadc692db86bed6ed3508b2cdc4711b6dc1b8fbdfb87c0191c8e4738eba8a00f3dd0b4bd4359d3aeac9fecc9a58f10dddcbc
a1dbcecc57cd22a05db8c164196ddd38c77abf3785f556b3b8d2a37b316126a835259da56f3493742e1a329b7039e036e391d875a7eb3aa6bede2b9f4cd2af6c
2d20b7b182e18dc5934eced23ccbd4489800443d7ad43e6f8cbfe83ba3ff00e0a24ffe48a005bff075ede5cea8de7208e6d4e3d4ed9a3bb9a072e20585a3631e
19461721958f2795e39d4f0c681269125e5ddca6cb9ba11ab2ff00685c5e6d54dd81e64c727976e8abd7bd6579be32ff00a0ee8fff0082893ff9228f37c65ff4
1dd1ff00f05127ff00245004f2785af24f130d42382c2d9bed2b3bea36b23c7713229e219230bb5c153b77331f50a0e086d9f85b53b7b9d3a1796d0d969fab5c
6a31c8acde64826f3ced2bb70bb7cf23a9ce33c74ae3f47f88fac6b9e2abcf0eda6bba78bbb5de0bbe8ac2390a1c3053f69c9fc40e86babf37c65ff41dd1ff00
f05127ff002450058b4f0b5f5bdb6891bcb6e5ac75bbbd425c33731ca6e7685e3ef7efd320e070793c675f45d2a7d3aff5d9e678d96feffed51042490be4451e
1b23ae636e99e08ac0f37c65ff0041dd1fff0005127ff2454734fe375824306b5a23cc1498d1f4a91559b1c02c273819ef83f434016a1f0bea2347b0f0ebb5a2
e916335bbc73a48c667486559123285703ee202db8e79e066b67c39a54fa4585d4170f1b34b7f7774a632480b2cef22839039c30cfbfad79f78635ff001cadd3
687abeb1a64da8c735c992e9ec4cabb123b3644554687fe7e58927278c5757f68f14ff00d06b47ff00c12cbffc954019ba0d86a5af682b69706d974d4d66e273
2ab9f38f937ceea9b76e31ba35cb6ece32319e6a5bcf096b7797199ae2da729ab437c97335d4a59a24b8593ca1163647b514282a4ee23240249abbf68f14ff00
d06b47ff00c12cbffc955c7f8a3e27ea9e14d6a1d26eef21b9ba9a013a0b4d019c15258639bd073f21ed401d74be16bf3e14bdd3525b6374fab3ea30e598211f
6dfb4a231c646400a4807049eb8e63b8f0d6b79d466b7b8814dd6acb7cf6c975242268c5b471796d2a2ee5f9d377008200078240e4b42f8ab79aeeab1696355b
6b1bd9b3e5437de1e9233271d88bc23b1fc8d767f68f14ff00d06b47ff00c12cbffc9540156c3c1fa8db6a31dc3c966235d7bfb4caa3b9c466c8c1b791cb6fe7
93c8e783c558f101bf5f1ff87db4e8ede49d74ed40f97712322b8dd6dc6e0ac579c73b4f4e94efb478a7fe835a3ffe0965ff00e4aaaf7d77e358ece46b0d4f40
9ee8636473e973448dc8ce585c311c67f84fa71d6802d69de17bbb5f1541adcb2db97916edee950b7fac97ecea817239012dc024e3279c727114de17d45b47bf
f0ea35a36917d35c3c93bc8c26449a4323c6102e0fdf701b70c71c1aa5f09f5ad7b58d0b585f11df25edfd86af35919523545c22a7036aae464b1c919e6bbda0
0e32ebc31abae9afa3d93589b03a9a5facb348de6006ec5c3a6d08475dd86cfa0c7f1513785f556b3b8d2a37b316126a835259da56f3493742e1a329b7039e03
6e391d875aece8a00e734ed2757d258e9f6925a0d34ddcb746e19c998092632b47e5eddbd5d86eddc0c719e6b3c785f514d064d324b6d26fa14d46e2e961ba66
db3c7248f2ae4ec26275671c80fc2f6cf1d9d140195e1dd36eb49d163b4bbb933cab248c0ef6708aceccb1866e582a90a09e4ededd2b568a2800a28a2800a28a
2800a28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff0060abff00fd1b695d0573f79ff250f46ffb055fff00e8db4a003c1bff00203b9ffb
0aea5ffa5b357415cff837fe40773ff615d4bff4b66ae82800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28
00a28a2800a28a2800a28a2800a28a28038dbaff009287a9ff00d82acbff0046ddd5eaa375ff00250f53ff00b05597fe8dbbabd40056078d75e1e1af086a5aa0
60258e22b0e4673237cabfa915bf5c5f8fbc25a8f8c5f48b28e7b68f4986e44d7aaeee24900e005c0c742dd48ea3d2803c8a26d2bc2ba27847c4b63a9595ceaf
0dc349a84314e8d3324993865ce72172bcf76ed5f46c1347730473c4c1e39143a30e8411906b8ed53e16f856f34abab6b5d22dad6e24899629d01cc6d8e0f5f5
ad4f04e93aae85e14b3d2f589ade6b9b5063592dd8953183f28e5472071d3b0a00e868a28a00e374eff92917bfefde7fe88d2ebb2ae374eff92917bfefde7fe8
8d2ebb2a002bc73c7571aa5a7c71d067d1ac52fb505d34f956ef2040f9f3c1f9890061727af6af63af3af17f837c4da8f8f74ff13787aef4d824b3b4f2145db3
e7713264e02918db27ad00731ad6a1ac4fe37f0c6a1e3bd14693616939fb3c96eeb28698952bbd831c282a0fe07ae4e3db2bcc6e7c09e2ef14ddd8af8c359d36
4d3ad67131b6b2889f348ec4951ee3bf04d7a75001451450073ff08ffe3dbc61ff006345eff28ebd12bcefe11ffc7b78c3fec68bdfe51d7a2500145145001451
4500145145001451450014514500145145001451450014514500145145001451450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00
fd1b694007837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97fe96cd5d0500145145001451450014514500145145001451450014514500
1451450014514500145145001451450014514500145145001451450014514500798f8e7c3da4f893c6461baf0ad9ea9756ba7c0e6e2e7569ed708f24c1502c68
c0e0a31c9c7de1e9581ff0acb45ffa27fa3ffe14b7bffc66bbbbaff9287a9ffd82acbff46ddd5ea00f36ff008565a2ff00d13fd1ff00f0a5bdff00e334d7f86b
a1471b49278074554504b33789af00007727caaf4baf33f8e3a9dc58f81e3b7b76645bcba58a561dd02b363f1207e00d0072b9f863f6efb27fc23de1ef3738dd
ff00091dff0097ff007df91b7f1cd7569f0d7429115d3c03a2b230cab2f89af0823d47eeab71fe1af8624f0b8d17fb36dd4794105d244be76fc7facdf8ce73cf
a76e9c56f683a341e1ed12d749b69a7960b652a8f3b067c649c1200e99c74e9401c3ff00c2b2d17fe89fe8ff00f852deff00f19a8e6f86ba3c5049227c3ad2a6
6452c224f12dd86720741ba20327a7240f715e9b4500791699e12f0c6a5742c1fe1bda596a2af3acb05d7886e4aa2c6b6ec0878d5f2585caf18e369e79c56c7f
c2add0bfe846d0ff00f0a4beff00e315a7a77fc948bdff007ef3ff00446975d950079d7fc2add0bfe846d0ff00f0a4beff00e315ceebfa47c3ef0c5f2596b1e1
8d0edae1e212aa7f6eea6f94248072b6c47553f957b3d794789ad6def7f682f0ddbdd4114f0be9adba3950329c0b82320f1d40a00a3a1e8df0f7c49726db49f0
e787679c027ca3e22d46362075c06b704fe15d07fc2add0bfe846d0fff000a4beffe315cf7c5ed2b4ff0c3e85e22d1ece1b2bd86f02936e8230e00dc32071fc3
8fa1af66a00f3aff00855ba17fd08da1ff00e1497dff00c62a39fe18e890dbcb2a7803469dd10b2c51f896f433903ee8dd08193d39207a915e934500637c25bb
d3ee3c317d6ba7f8763d052c3529ad25b45b9fb4132a852ccd21196396dbdf851838c01ded79dfc23ff8f6f187fd8d17bfca3af44a0028a28a0028a28a0028a2
8a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec157ff00fa36d2
800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff00901dcffd85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028
a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a00e36ebfe4a1ea7ff60ab2ff00d1b7757ab94f897e17b7bfd6ad3546f8847c273496ff006765
69c46b70a8c5811fbc4c9532367afde1d3bf3f67e1af0d25aa2defc6cbe9ae0677c90ebb1c4879e30a5988e31dcff4a00f4bae77c6de158bc63e199b4b797ca9
770960948c84906704fb7241f635ce7fc23be0ff00fa2cbaa7fe1450d1ff0008ef83ff00e8b2ea9ff851434018d7167f162ef43ff846a4b3d352068c5bbea4b3
0dcd1e3073f36791c13b338f7af48f0ce8cfe1ff000e5969725d49752409879a4624bb1249ebdb2781e98ae43fe11df07ffd165d53ff000a2868ff008477c1ff
00f459754ffc28a1a00f45a2bcebfe11df07ff00d165d53ff0a2868ff8477c1fff00459754ff00c28a1a00d3d3bfe4a45eff00bf79ff00a234baecabc8ef7c17
a01d43ed5a67c6cfb292a77b4fa9472c8cc76863bd654e088e318c7f00e78006c41e1df07adbc4b71f1975592708048f1f88e14566c72429c9033db271ea6803
d12bcbbc6da278b07c4cd2fc4de1dd222be5b3b1f2bf7b3a22ef2650410594f4706b47fe11ef04ff00d161d63ff0a687fc28ff00847bc13ff458758ffc29a1ff
000a00c797c31e34f1d6b9a64de2eb4b2d334bb093cdfb341207694f1c70cdd718ce46067bd7ac579fff00c23de09ffa2c3ac7fe14d0ff00851ff08f7827fe8b
0eb1ff0085343fe1401e814579ff00fc23de09ff00a2c3ac7fe14d0ff851ff0008f7827fe8b0eb1ff85343fe1401d07c23ff008f6f187fd8d17bfca3af44ae4f
c0365e18d2b4ab9b0f0deb51ead9b86b9bcb8fb6a5ccaf2c9fc5215e012171d0676e793927aca0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002
8a28a0028a28a0028a28a0028a28a002b9fbcff9287a37fd82afff00f46da57415cfde7fc943d1bfec157fff00a36d2800f06ffc80ee7fec2ba97fe96cd5d057
3fe0dff901dcff00d85752ff00d2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a
28a0028a28a0028a28a00f37f895e1ef0af8bb51b1b0d72e35c5bab089a654d2aca59f0929c02e521900c984e3a7435c3ffc2a3f879ff3f1e39ffc145c7ff22d
7a9dc7fc8f3abffd8374ff00fd1b79566803c8ff00e151fc3cff009f8f1cff00e0a2e3ff009168ff008547f0f3fe7e3c73ff00828b8ffe45af5ca2803c8ffe15
1fc3cff9f8f1cffe0a2e3ff9168ff8547f0f3fe7e3c73ff828b8ff00e45af5cac4f19ffc88de20ff00b06dcffe8a6a00f3eff8547f0f3fe7e3c73ff828b8ff00
e45a3fe151fc3cff009f8f1cff00e0a2e3ff00916b3fc05f0bf42f10f8174fd5e69afadb519fcdfdfdbcdb7695919460107b01fad751f0af5cd42e575bf0f6a9
74f7775a25d1805c3f59137328c9c927050fe0475a00c7ff008547f0f3fe7e3c73ff00828b8ffe45a3fe151fc3cff9f8f1cffe0a2e3ff916bb3f1edbea775e1d
7b7d2ddccb704db3c0210e92ac83610e720a28ce7703918efd0bfc0cbaaaf87d17567659a23e4080db792b108fe4c2727729c64377f6e800389ff8547f0f3fe7
e3c73ff828b8ff00e45a3fe151fc3cff009f8f1cff00e0a2e3ff00916a3f8d71d9cdae78322d45fcbb17b9956e1f38db1968771cf6e335837b69e1bd2756d147
c3ad66e65d5e6bd4578126668de3c124bf0381e9e85a803a2ff8547f0f3fe7e3c73ff828b8ff00e45a3fe151fc3cff009f8f1cff00e0a2e3ff00916bd728a00f
23ff008547f0f3fe7e3c73ff00828b8ffe45a3fe151fc3cff9f8f1cffe0a2e3ff916bd728a00e0fe0e4be02b1d735cd27c21a8eab7934914534925f200922264
663c2291832e0ee033918c8c9af60af16f077fc9ca78a3fec14bfcadabda6800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800
a28a2800a28a2800ae7ef3fe4a1e8dff0060abff00fd1b695d0573f79ff250f46ffb055fff00e8db4a003c1bff00203b9ffb0aea5ffa5b357415cff837fe4077
3ff615d4bff4b66ae82800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a2a9ea5ab69ba35badc6a9a85a
58c0ce1164ba996252d82700b1033804e3d8d65ffc277e0fff00a1af43ff00c18c3ffc55007414573fff0009df83ff00e86bd0ff00f0630fff001547fc277e0f
ff00a1af43ff00c18c3ffc55007414573fff0009df83ff00e86bd0ff00f0630fff001547fc277e0fff00a1af43ff00c18c3ffc55007414573fff0009df83ff00
e86bd0ff00f0630fff001547fc277e0fff00a1af43ff00c18c3ffc550052b8ff0091e757ff00b06e9fff00a36f2acd79c78e6f2eb52f1826b3e11f88de14d3e2
6b08ed664b9d4e33bd9649181dbb5d4e03f07a8cb7627383f6af1d7fd159f037fe06c1ff00c66803d968af1afb578ebfe8acf81bff000360ff00e3347dabc75f
f4567c0dff0081b07ff19a00f65ac4f19ffc88de20ff00b06dcffe8a6af35fb578ebfe8acf81bff0360ffe3347dabc75ff004567c0dff81b07ff0019a0087e1f
fc4ed0740f03e9fa3cd1decfa8c025fdcc106ede4c8ec0039f422ba6f857a1ea16dfdb7e22d52d5ed2e75aba33adbbf544dccdc8c0c64b9ebd80e95cff00dabc
75ff004567c0dff81b07ff0019a3ed5e3aff00a2b3e06ffc0d83ff008cd007b2d15e456317c46d4ef23b3b0f89de0dbbba933b2182e2291db00938510e4e0027
f0ad8ff843be34ff00d0dda1ff00dfb1ff00c8f4018df1a27b4b5f10782ae3508c496515d4af708c81c3461e12c0a9ebc678ef581e2bd67c1de25d1c58783bc3
adfdb2d3466192cec04463f9b924afe5faf6aee3fe10ef8d3ff437687ff7ec7ff23d1ff0877c69ff00a1bb43ff00bf63ff0091e803bbd323b98749b38af64125
da408b3b8fe270a371fc4e6ad579d7fc21df1a7fe86ed0ff00efd8ff00e47a3fe10ef8d3ff00437687ff007ec7ff0023d007a2d15e75ff000877c69ffa1bb43f
fbf63ff91e8ff843be34ff00d0dda1ff00dfb1ff00c8f400783bfe4e53c51ff60a5fe56d5ed35e53f0f7e1ef8b341f1f6a1e26f136a5a6decb79646dd9ad59b7
16dd1ed257cb55036c78e3dabd5a800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff6
0abfff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00b0aea5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a
28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a28039ff0010ff00c873c27ff61593ff0048aea97ed13ffcf693fe
fa349e21ff0090e784ff00ec2b27fe915d5474012fda27ff009ed27fdf468fb44fff003da4ff00be8d4545004bf689ff00e7b49ff7d1a3ed13ff00cf693fefa3
5151401e59a8ebfe3ad5fe2b6b1e1bd13c4a34fb6b4b749d0496e920036459192a4f264cf26b4347f17f8bb42f19d9f867c5b710ddadfa13677f6d94cb0cf0c3
81ce3a01c123a83597a55d5bda7ed0de2592e678a143a7228691c28276dbf1934df16dd5b789be2c7842c749ba4b8934f95ae6e5e03bd6350cad82470384c7fc
087ad007aa6a3a85f5ae9d3cf6a0cf3468592379fcb5623b163f747bd71de05f1c6ade22bcbd8278ee5a359e4944b34b1a18e2639895554e5d7008dfd0e3a9ed
da3a2488c8eaac8c30cac3208f435041a7d9dac824b7b58629044b007440088d73b573e832703de802f7da27ff009ed27fdf46bc6a7f8a7e208fe23965bb93fe
1144d4069cdf2281bf6e09dc7e6e0e5bae302bbff1cebdff0008d783751d495b132c5b20ff00ae8df2afe44e7f0af148b4ff00107fc2af6f0e8f03de11249f6c
fb7f9801dd9c86d9b73f730bd7fc2803e91fb44fff003da4ff00be8d1f689ffe7b49ff007d1ae43e1d78847893c116178f26fb9897ecf71c8cf989c1271d3230
df8d7554012fda27ff009ed27fdf468fb44fff003da4ff00be8d4545007984b676d69fb4cf86cdb5bc3099eca69a631a05f32464b9dced8eac7b93c9af73af12
bdff009397f0affd8364ff00d02e6bdb6800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a
2800a28a2800a28a2800ae7ef3fe4a1e8dff0060abff00fd1b695d0573f79ff250f46ffb055fff00e8db4a003c1bff00203b9ffb0aea5ffa5b357415cff837fe
40773ff615d4bff4b66ae82800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2803cdfe2de9fe36d4ad7478bc
1b6dbe48a59a59ae1268e3921262312ed2ec3195965e40c8201041ebcd7db7e367fd09fa3ffdff004ffe48af49f15c46eaf3c3964d71770c175a9b24df65b992
067516b70e0168d95b1b914e33d8566ff60d97fcfc6b1ff83dbeff00e3d401c47db7e367fd09fa3ffdff004ffe48a3edbf1b3fe84fd1ff00effa7ff24576ff00
d8365ff3f1ac7fe0f6fbff008f51fd8365ff003f1ac7fe0f6fbff8f500711f6df8d9ff00427e8fff007fd3ff009228fb6fc6cffa13f47ffbfe9ffc915dbff60d
97fcfc6b1ff83dbeff00e3d47f60d97fcfc6b1ff0083dbeffe3d401e3fabf81be20ebdaa4da9ea7f0eb479ef26dbe649f6f65ce1428e16e80e8076ad2d1345f8
a3e1c8d9348f87ba05a6f015992642cc074cb1b824fe26b53c43adc91f891bc33e16b1d5b52d5523124f24be20be586dc1e9bbf7e33d412323a8032693c3fac5
d9f142786bc51a76ad63a84b119609adb5ebf78650339ff96e76f4ee7af1e990093edbf1b3fe84fd1ffeff00a7ff002451f6df8d9ff427e8ff00f7fd3ff922ba
fbed2ed2cac66b951afdc98d770860d6ef8bbfb28338e7f1ae5fc21ac58f89aeaf6df1af318aea545963d4f5148e38c1f91642f3ff00ac23a81dfb0e320187ae
e93f15bc4b6d0db6b1e04d1aea186412a21bb0a0300464edb919e09ebeb5a82f3e35850a3c1da30006001327ff002456af8e8a7863c197fac5949a949716fe5e
c59b5bbf287748aa7204e0f463deb8d4d43c791787d3c41369893699f66176c22f106a2b2794577679b938c0393c1e86802ce89a47c56f0e8b95d27c09a3db2d
cc9e6caa2ec302dea035c903f0c56afdb7e367fd09fa3ffdff004ffe48ae87c3234bf137872cb58b7975a48ee509d875dbecab025587faee704119ad6fec1b2f
f9f8d63ff07b7dff00c7a80388fb6fc6cffa13f47ffbfe9ffc9147db7e367fd09fa3ff00dff4ff00e48aedff00b06cbfe7e358ff00c1edf7ff001ea3fb06cbfe
7e358ffc1edf7ff1ea00e13c37e1bf885a87c5cd13c4fe27d06dacadece092077b79e32a14c72ed3b7cc66277498e2bdc6bc1ecece6d17f68fd0ade2d5754b98
aeec666717976f31542b3b088331c98c14520313c8ce49e6bde2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a
28a2800a28a2800a28a2800a28a2800a28a2800ae7ef3fe4a1e8dff60abfff00d1b695d0573f79ff00250f46ff00b055ff00fe8db4a003c1bff203b9ff00b0ae
a5ff00a5b357415cff00837fe40773ff00615d4bff004b66ae82800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a28a2800a
28a28039ff0010ff00c873c27ff61593ff0048aeaa3ae4fe3478baf3c1f61e1ed46c2cfceba8b50695249a22d02fee248cab90c08622525477d8de9cf33ff0be
bc2dff003e1ac7fdf98bff008e5007a9515e5bff000bebc2dff3e1ac7fdf98bff8e51ff0bebc2dff003e1ac7fdf98bff008e5007a9515e5bff000bebc2dff3e1
ac7fdf98bff8e51ff0bebc2dff003e1ac7fdf98bff008e5001e066fb0fc5af1a59df4a3ed77122cd006e0b4796200f5c2b27e55dbcde2bd220f1541e1c6998ea
73c7e62a2465801c9f988e9c0279feb5e47e26f881f0ebc572473dfe93ae477910c47776e9124a98e9cf99ce09c8c838a6f867c7bf0e7c293c97361a56bb25e4
a36c97572b1c9230ea79f330327938033401eed34493c2f0c8328ea558671907af4aced33c3ba568f3f9d6168b03fd9e3b62558e0c699da08e99e4f3d6b81ff8
5f5e16ff009f0d63fefcc5ff00c728ff0085f5e16ff9f0d63fefcc5ffc728036fe2f7fc92ed67fed87fe8e8eb91b5f01f89b53f87f6aebe399d2ce7d36390593
dbed4543182232e1fee81c671d3b537c47f173c19e27d06e747bdb4d7a3b7b8dbbda18e10e36b061825c8eaa3b571a9aa7c3a54589ee7c6f2c006d30bcb06c2b
e980471401ecdf0b35c5d77c0b6922d9a5a7d958da98e30421da072b9e70411dfae6bb3af1fd1fe31782341d2e1d374dd275782d61185511467af249264e4935
7bfe17d785bfe7c358ff00bf317ff1ca00f52a2bcb7fe17d785bfe7c358ffbf317ff001ca3fe17d785bfe7c358ff00bf317ff1ca00b37bff00272fe15ffb06c9
ff00a05cd7b6d7ce7e1ef175878cff00682f0d6a3a743731431da4b015b85556dc229db3f2b1e30c2be8ca0028a28a0028a28a0028a28a0028a28a0028a28a00
28a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002b9fbcff009287a37fd82aff00ff0046da57415cfde7fc943d1bfec1
57ff00fa36d2800f06ff00c80ee7fec2ba97fe96cd5d0573fe0dff00901dcffd85752ffd2d9aba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a
00c7f165f5c699e0dd72fece4f2eead74fb89a17da0ed758d8a9c1e0e081d6b2ae34ed5209da3ff84bb5c6c639f2ec876ffaf6abbe3bff009279e25ffb055d7f
e8a6a96fff00e3f64fc3f90a00c8fb1ea9ff004366b9ff007c597ff2351f63d53fe86cd73fef8b2ffe46abd450051fb1ea9ff4366b9ff7c597ff002351f63d53
fe86cd73fef8b2ff00e46abd4500727e2af10b78474e8eeaff00c59e2191e67f2e08218ac99e56f403ecdfaff88ae661f88fab5a5e5b47e239fc5ba25b5d3ed8
6ea74b264e7a6fff00451b4fa8e714be30dc7e35f8385d04fb0f94fe56eff9ebf37f5f2f15ddf882eb41b4b289fc42f64b6a665f2fed814a799824633c678268
02c7d93532323c59ae7fdf165ffc8d5c81f1d5b8f107f669f1b6acb1888ee91bec6241307dbe5f966d327232dbb38c7b735dda1528a531b48e31d31585ff0008
8d8ffc24075c33dd1d43cff304a64e426cdbe48e3fd5ff00163d79cd0068fd8f54ff00a1b35cff00be2cbff91ab87f1ff8f2f3c0b358c075dd7af66ba0cc503d
8c7e5a0c0cff00c7a9ce4938fa1af46af0197c4be19d6fc7de28bdf10ea3e45ab5ab69d603ca771b7952e0a29c7209e7fbf401ed5662fafaca0bbb7f17eb6f04
f1ac91b04b1c152320ff00c7b7a1a9bec7aa7fd0d9ae7fdf165ffc8d5c1fc15f10ff006af841b4c9640f3e9927940e79311e50ff00e843fe022bd2a8028fd8f5
4ffa1b35cffbe2cbff0091a8fb1ea9ff004366b9ff007c597ff2355ea2803ce3e287883c59e0dd0acf53d27c577cfe65cfd9e48eeed6d1f39566041585718d87
820e723a639f6baf09f8f5ff00223597fd84a3ff00d152d7bb500145145001451450014514500145145001451450014514500145145001451450014514500145
14500145145001451450014514500145145001451450014514500145145001451450015cfde7fc943d1bfec157ff00fa36d2ba0ae7ef3fe4a1e8dff60abfff00
d1b694007837fe40773ff615d4bff4b66ae82b9ff06ffc80ee7fec2ba97fe96cd5d050014514500145145001451450014514500145145001451450072ff11efa
df4ff86be239aea4f2e36d3e6841da4e5e4531a0e3d59947b679e2b87b7f8d7e0ed462375757b2584aeec3ecf24123b2a8621492aa5725406c02719c64e335e9
9e25bc874ef0aeaf7b71691de416f6534b25b498db32aa1250e41182063a1ebd0d7ce9ff000b7fc1ff00f449b43fce1ffe31401e89ff000b7bc0bff41cff00c9
49ff00f88a3fe16f7817fe839ff9293fff00115e77ff000b7fc1ff00f449b43fce1ffe3147fc2dff0007ff00d126d0ff00387ff8c5007a27fc2def02ff00d073
ff002527ff00e228ff0085bde05ffa0e7fe4a4ff00fc4579dffc2dff0007ff00d126d0ff00387ff8c51ff0b7fc1fff00449b43fce1ff00e31401d378abc61f0d
3c5d6315bdf6bb2c52c0fe65bdcc36d3ac9137a83b3e9c7b0f4ae6adeefc0d71a8dadcf88be206a3adc368fbadede7b49d5001d377ca771f53c67bf149ff000b
7fc1ff00f449b43fce1ffe3147fc2dff0007ff00d126d0ff00387ff8c5007a27fc2ddf02ff00d073ff002527ff00e228ff0085bde05ffa0e7fe4a4ff00fc4579
dffc2dff0007ff00d126d0ff00387ff8c51ff0b7fc1fff00449b43fce1ff00e31401dd6a7f153c197ba5dd5adb789becb3cd134693fd8667f2c918dd8da338ac
1f0a788fe18f86740874d7d5adef65566792e65d3250d2313e9b0e30303a9e9587ff000b7fc1ff00f449b43fce1ffe3147fc2dff0007ff00d126d0ff00387ff8
c5006be9be25f0168fe3abbf1169fe29105b5dc3e5cda7ae9d3852dc7cc08181c8cfddee7d6badff0085bde05ffa0e7fe4a4ff00fc4579dffc2dff0007ff00d1
26d0ff00387ff8c51ff0b7fc1fff00449b43fce1ff00e31401e89ff0b7bc0bff0041cffc949fff0088a3fe16f7817fe839ff009293ff00f115e77ff0b7fc1fff
00449b43fce1ff00e3147fc2dff07ffd126d0ff387ff008c5004ff00173c75e1bf13f852d6cb47d4bed37097c92b27912261024809cb281d587e75f40784efae
353f06e877f7927997575a7dbcd33ed0373b46a58e0703249e95f3c7fc2dff0007ff00d126d0ff00387ff8c56fff00c34d7fd4a3ff00952ffed5401f40515f3f
ff00c34d7fd4a3ff00952ffed547fc34d7fd4a3ff952ff00ed5401f40515f3ff00fc34d7fd4a3ff952ff00ed547fc34d7fd4a3ff00952ffed5401f40515f3fff
00c34d7fd4a3ff00952ffed547fc34d7fd4a3ff952ff00ed5401f40515f3ff00fc34d7fd4a3ff952ff00ed547fc34d7fd4a3ff00952ffed5401f40515f3fff00
c34d7fd4a3ff00952ffed547fc34d7fd4a3ff952ff00ed5401f40515f3ff00fc34d7fd4a3ff952ff00ed547fc34d7fd4a3ff00952ffed5401f40515f3fff00c3
4d7fd4a3ff00952ffed547fc34d7fd4a3ff952ff00ed5401f40515e7ff000cbe26ff00c2c6fed4ff008947f67fd83caff979f377efdffec2e31b3dfad7a05001
451450014514500145145001451450014514500145145001451450014514500145145001451450015cfde7fc943d1bfec157ff00fa36d2ba0ae7ef3fe4a1e8df
f60abfff00d1b694007837fe40773ff615d4bff4b66ae82b9ff06ffc80ee7fec2ba97fe96cd5d050014514500145145001451450014514500145145001451450
063f8af539f45f08eafaa5a8437167692cf1871952caa48047a71583e6f8cbfe83ba3ffe0a24ff00e48ad2f885ff0024e3c49ff60db8ff00d1668a00cdf37c65
ff0041dd1fff0005127ff2451e6f8cbfe83ba3ff00e0a24ffe48ad2a280337cdf197fd07747ffc1449ff00c91479be32ff00a0ee8fff0082893ff922b4a8a00c
df37c65ff41dd1ff00f05127ff002451e6f8cbfe83ba3ffe0a24ff00e48ad2a28038ef107897c71e1eb886ea6bed1ae74f10dd3911d9bc4ef2c769712aab02ed
f2663524860d9e3a673d4bcde2a49190eb5a36549071a2cbff00c955cafc48ff00900c5fee5f7fe9baeebb7b8ff8f997fdf3fce8028fda3c53ff0041ad1fff00
04b2ff00f2551f68f14ffd06b47ffc12cbff00c955668a00adf68f14ff00d06b47ff00c12cbffc95535baf8b2e776cd6f451b719ce8d2fff002553e9b7dad45e
1df0deafac4dca59db9976ff00788070bf89c0fc68033b4dd7756d5f59d4348b0f15e8335fe9c42dd44343b81e593c7537383c8ec4e2b1759f8911f87f56b8d2
b54f1b6876f7b6e40962ff008472f1f6e4061cace41e08e86bccfc15e25d0744f14784b54b5d552e754bf335b6ba3c8910e667dc8725429dac40241fe11dba77
163abf88b4bf8b5e3dfec0f0c7f6e798f65e77fa7c76de4e213b7ef8f9b396e9d36fbd00753a4ea7e2ef115ab5e691aef85eeb4e795043790da4f929b1bcc0f1
193860fe58037f4dc4f38153cd3f8aedf5086c65f14682b71323ba29d225c6136eec9f3f03efaf048ce78cd65fc21754b7f12dbdd44d69ac9d5e5babfb038c5b
197945520fccbb5783f5f4adfd4fc05a4eabe2a87c41708a6e62f2f08618ca36dcfdecafcc4e5705b25768db8e68007b3f1bc68cefe22d0551412ccda548001e
a7f7f5cbe9be39b9d5f573a55878ff00c3135e6e0aa8349980727b2b1982b1fa135a5f1ae7ba83e14eae6d4ba97f29242bd76191437e04707d8d6d6b5a678462
d0f4c8b588aca1d36da68bec4646f2d23900f936918c500719adfc439fc39ac4fa4eade38d0edefa0dbe645ff08fdd3eddca1872b2907820f06b6346d6f5ff00
11694da968fe2ef0fdedb2b6d668f4894153c7054ce083c8ea2b9d8b56f10697f19bc70741f0cff6e348963e70fb7c76de562018fbe0eece4f4e98f7abfe00ba
33eb3e353a859be9baecb7704b77a76e0e9026c1b0ab03b58b6492463a8f6a00def37c65ff0041dd1fff0005127ff2451e6f8cbfe83ba3ff00e0a24ffe48ad2a
28038bd2fc43e3e87c453699abea1a37da2ea5b6f23c9b57961b78cc376ed81ba372c4db0fbcc40cf1e95d5fda3c53ff0041ad1fff0004b2ff00f25573575ff2
52ecff00eddbff0049b55aeba802b7da3c53ff0041ad1fff0004b2ff00f2551f68f14ffd06b47ffc12cbff00c955668a00adf68f14ff00d06b47ff00c12cbffc
9547da3c53ff0041ad1fff0004b2ff00f25559a2802b7da3c53ff41ad1ff00f04b2fff002551f68f14ff00d06b47ff00c12cbffc955668a00c0f879e20f13eab
e2af15e9be25b8b27934ff00b1f95158a110c7e623b1da586f39c293b89c1ce302bd0ebcdbc05ff2547e20ff00dc3bff0044b57a4d0014514500145145001451
45001451450014514500145145001451450014514500145145001451450015cfde7fc943d1bfec157fff00a36d2ba0ae7ef3fe4a1e8dff0060abff00fd1b6940
07837fe40773ff00615d4bff004b66ae82b9ff0006ff00c80ee7fec2ba97fe96cd5d0500145145001451450014514500145145001451450014514500737f10bf
e49c7893fec1b71ffa2cd41677b6ba85aa5d595cc3736ef9d92c320746c1c1c11c1e411f85745a8e9f6baae9b73a7dec5e6dadcc4d14d1ee2bb918608c8208e3
d2b88ff8525f0f3fe85eff00c9db8ffe39401b94561ffc292f879ff42f7fe4edc7ff001ca3fe1497c3cffa17bff276e3ff008e5006e51587ff000a4be1e7fd0b
dff93b71ff00c728ff008525f0f3fe85effc9db8ff00e39401b94561ff00c292f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3ff8e50064fc48
ff00900c5fee5f7fe9baeebb333c3744dc5bcb1cd04bf3c7246c195d4f208238208e7359567f083c09a7ced35ae85e5c8d149093f6b9ce524468dc72fdd5987b
678e6abffc292f879ff42f7fe4edc7ff001ca00dca2b0ffe1497c3cffa17bff276e3ff008e51ff000a4be1e7fd0bdff93b71ff00c7280372abea7e18b2f1768f
2e97a8cb70968668a59121651e66d24856c83f2e719c60f1d6b2ff00e1497c3cff00a17bff00276e3ff8e51ff0a4be1e7fd0bdff0093b71ffc72803a7f13f863
4ff16f876e343d43cc4b59b6fcd010ae854820a92081d3d2b9bbcf8556773ad5e6ad0789fc4f617578231706c6f961121440aa5b09c9c0279ee4e319a67fc292
f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3ff8e500747e17f0969de13b49e1b17b99e5b993cdb9babb98cb34ef8c6e663fd315bb5c327c1e
f01a58cb64ba162de6952574fb5cfcba060a73bf3c077fcfe9507fc292f879ff0042f7fe4edc7ff1ca00ee2fac6d753b09ec6f6149eda7431cb1bf4653d4571d
a7fc29d02c6fed6e24bad5afadec9d5ecac6f6f5a5b7b561d0a21f4f726a0ff8525f0f3fe85eff00c9db8ffe3947fc292f879ff42f7fe4edc7ff001ca00b1ab7
c31b2d4fc4b7faec3e22f11e99777fe589d74dbd10a36c408bc04c9e07727926af68fe0dd33c29657f2dacb79777978c8d737b7d319679b6f03737b564ff00c2
92f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3ff8e5006e51587ff0a4be1e7fd0bdff0093b71ffc728ff8525f0f3fe85eff00c9db8ffe3940
18bab5f5be9ff116c66ba93cb8da5b1841da4e5e487538d071eacca3db3cf15db561ff00c292f879ff0042f7fe4edc7ff1ca3fe1497c3cff00a17bff00276e3f
f8e5006e51587ff0a4be1e7fd0bdff0093b71ffc728ff8525f0f3fe85eff00c9db8ffe39401b94561ffc292f879ff42f7fe4edc7ff001ca3fe1497c3cffa17bf
f276e3ff008e5006e51587ff000a4be1e7fd0bdff93b71ff00c728ff008525f0f3fe85effc9db8ff00e394015bc05ff2547e20ff00dc3bff0044b57a4d73fe18
f04f877c1df6afec0d3fec7f6ad9e77efa49376dcedfbec718dcdd3d6ba0a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a0028a28a002
8a28a0028a28a002b9fbcff9287a37fd82afff00f46da57415cfde7fc943d1bfec157fff00a36d2803e58f16f8b3c49a678dfc456761e20d56d2d63d56ef6430
5ec91a2e667270a0e064927f1ac7ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff00
8aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb
9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084
efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff
00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d
7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003f
e13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff
008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435
eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff00
84efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66
ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd
0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a00
3fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319b
ff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff4
35eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff
0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c
66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187
fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a
003fe13bf187fd0d7ae7fe0c66ff00e2a8ff0084efc61ff435eb9ff8319bff008aa28a003fe13bf187fd0d7ae7fe0c66ff00e2abd43e026bbac6b7f10eebfb5b
55bebff274a9bcbfb5dc3cbb332c39c6e2719c0e9e828a2803ffd9106e1ef0802400009321d015b98f5c02ec}}}}}
}{\loch
F}{\loch
igure 8.2 Multiplication en multipr\u233\'e9cision}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La chose la plus importante \u224\'e0 se rappeler avec ce genre d'op\u233\'e9rations est que vous devez \u233\'e9galement effectuer une addition en m\u234\'eame temps. Additionner les produits partiels demande diverses additions. Le listing suivant montre la fa\u231\'e7on correcte de multiplier deux valeurs de 32 bits sur un processeur de 16 bits }{\rtlch \ltrch\lang3084\loch
:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Note : }{\rtlch \ltrch\lang3084\i\loch
Multiplier }{\rtlch \ltrch\lang3084\loch
et }{\rtlch \ltrch\lang3084\i\loch
Mutiplicand}{\rtlch \ltrch\lang3084\loch
 sont des variables de 32 bits d\u233\'e9clar\u233\'e9es dans le segment de donn\u233\'e9es avec la directive }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
dword}{\rtlch \ltrch\lang3084\loch
. }{\rtlch \ltrch\lang3084\i\loch
Product}{\rtlch \ltrch\lang3084\loch
 est une variable de 64 bits d\u233\'e9clar\u233\'e9e dans le segment de donn\u233\'e9es avec la directive }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
qword}{\rtlch \ltrch\lang3084\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
Multiply \tab proc \tab near}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab cx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab bx}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Multiplier le mot }{\rtlch\dbch\af20\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs18\lang3084\loch
le moins significatif}{\rtlch \ltrch\lang1033\loch
 }{\rtlch \ltrch\lang3084\loch
(L.O.) }{\rtlch \ltrch\lang1033\loch
de Multiplier Multiplicand fois :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr Multiplier}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax \tab \tab \tab \tab ; Garder la valeur Multiplicand}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul \tab word ptr Multiplicand \tab \tab ; Multiplier les mots }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
L.O.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Product, ax \tab \tab ; Garder le produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab cx, dx \tab \tab \tab \tab ; Garder le mot }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
le plus }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab \tab \tab ; significatif (}{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
H.O.)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, bx \tab \tab \tab \tab ; Obtenir Multiplier dans bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul \tab word ptr Multiplicand+2 \tab ; Multiplier L.O. * H.O.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, cx \tab \tab \tab \tab ; Additionner produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab dx, 0 \tab \tab \tab \tab ; N'oubliez pas la retenue !}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax \tab \tab \tab \tab ; Garder le produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab cx, dx \tab \tab \tab \tab ; pour le moment.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Multiplier le mot }{\rtlch\dbch\af20\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs18\lang3084\loch
H.O.}{\rtlch \ltrch\lang1033\loch
 de Multiplier Multiplicand fois :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr Multiplier+2 ;Get H.O. Multiplier}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul \tab word ptr Multiplicand \tab \tab ; Fois le mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
L.O.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, bx \tab \tab \tab \tab ; Additionner produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr product+2, ax \tab \tab ; Garder le produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab cx, dx \tab \tab \tab \tab ; Sans oublier la retenue}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr Multiplier+2 \tab ; Multiplier les mot fort}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul \tab word ptr Multiplicand+2 \tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, cx \tab \tab \tab \tab ; Additionner produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab dx, 0 \tab \tab \tab \tab ; Sans oublier la retenue}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Product+4, ax \tab \tab ; Garder produit partiel}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Product+6, dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab cx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
Multiply \tab endp}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ce que vous devez garder \u224\'e0 l'esprit \u224\'e0 propos de ce code est qu'il fonctionne seulement avec des op\u233\'e9randes non sign\u233\'e9es. La multiplication d'op\u233\'e9randes sign\u233\'e9es }{\rtlch \ltrch\lang3084\loch
figurera}{\rtlch \ltrch\lang3084\loch
 dans les exercices. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_05}{\*\bkmkend p9_03_05}\rtlch \ltrch\fs23\b\loch
9.3.5\tab Division en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous ne pouvez pas synth\u233\'e9tiser une division g\u233\'e9n\u233\'e9rale n-bit / m-bit avec les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
idiv}{\loch
. Une telle op\u233\'e9ration doit \u234\'eatre effectu\u233\'e9e \u224\'e0 l'aide d'une s\u233\'e9quence d'instructions de d\u233\'e9calage et de soustraction et par cons\u233\'e9quent elle est assez embrouill\u233\'e9e. Une op\u233\'e9ration moins g\u233\'e9n\u233\'e9rale qui consiste \u224\'e0 diviser une quantit\u233\'e9 de n bits pas une quantit\u233\'e9 de 32 bits (sur des processeurs 80386 ou ult\u233\'e9rieurs) ou par une quantit\u233\'e9 de 16 bits est plus facilement g\u233\'e9n\u233\'e9ralisable et peut \u234\'eatre effectu\u233\'e9e \u224\'e0 l'aide de l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\loch
. Le code suivant montre comment diviser une valeur de 64 bits par un diviseur de 16 bits, produisant un quotient de 64 bits et un reste de 16 bits :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
dseg \tab \tab segment\tab para public \u8216\'91DATA\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dividend \tab dword \tab 0FFFFFFFFh, 12345678h}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
divisor \tab word \tab 16}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quotient \tab dword \tab 0,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Modulo \tab \tab word \tab 0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab segment para public \u8216\'91CODE\u8217\'92}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
assume \tab \tab cs:cseg, ds:dseg}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Diviser une quantit\u233\'e9 de 64 bits par une quantit\u233\'e9 de 16 bits :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Divide64 \tab proc \tab near}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr dividend+6}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab dx, dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab divisor}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Quotient+6, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr dividend+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab divisor}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Quotient+4, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr dividend+2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab divisor}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Quotient+2, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr dividend}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab divisor}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr Quotient, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab Modulo, dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Divide64 \tab endp}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
cseg \tab \tab ends}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce code peut \u234\'eatre \u233\'e9tendu \u224\'e0 tout nombre de bits en ajoutant simplement des instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov}{\loch
 / }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\loch
 / }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov}{\loch
 suppl\u233\'e9mentaires au d\u233\'e9but de la s\u233\'e9quence. Certes, sur des processeurs 80386 et sup\u233\'e9rieurs, vous pouvez diviser par une valeur de 32 bits en utilisant les registres }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
edx}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
eax}{\loch
 dans le code }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on a }{\rtlch \ltrch\lang3084\loch
vu}{\loch
 (et quelques autres petits ajustements).}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous avez besoin d'utiliser un diviseur plus grand que 16 bits (par exemple de 32 bits sur un processeur ad\u233\'e9cuat), vous }{\rtlch \ltrch\lang3084\loch
devrez }{\loch
impl\u233\'e9menter la division en utilisant la strat\u233\'e9gie d\u233\'e9calage / soustraction. Malheureusement, un tel algorithme est tr\u232\'e8s lent. Dans cette section, nous allons d\u233\'e9velopper deux algorithmes de division qui fonctionnent sur un nombre arbitraire de bits. Le premier est lent mais facile \u224\'e0 comprendre, alors que le second est d\u233\'e9cid\u233\'e9ment plus rapide (en g\u233\'e9n\u233\'e9ral). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop880\shpbottom5260\shpbxcolumn\shpbxignore\shpleft23\shpright6803{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw452\pich292\picwgoal6780\pichgoal4380\pngblip
89504e470d0a1a0a0000000d49484452000001c400000124080300000086c5b1af0000000373424954080808dbe14fe000000060504c5445ffffff1a1a1a0000
00535353f5f5f5d7d7d7393939686868c0c0c0999999b4b4b47a7a7aa7a7a78b8b8be1e1e1fcfcfcf1f1f1f4f4f4f7f7f7fdfdfdfefefe000000000000000000
000000000000000000000000000000000000000000000000b8c61a2b00000001624b47440088051d480000116049444154789ced9d8bbaaa2a1485414db3ac7d
6eefffac873b1314d3d2cad9f8bfbdbb28ba180e449d100801000000000000000000c097535dd7a74f6702bc467d16a7ead39900af7151ff61e2f1e9af9fce01
78954bdb7c3a0be045fac51e4af54f4af36ebf9b6f0fb749befa2de23e462b17ec7519d563a6b2ebffc77c2ec9514c33d2e896ce6ff692e6751ec6b74c6c9a6e
6617feb08c53273b5fb0b387ac375186acf9433b72b590b1986624614ec9c4017982a66ad533c6a2a4b1c848fabd946e6e37524c98e8772ef3d4cff29c89829a
387a9fcbd89387253b20bb42e5d0ecda1a560ae96a5bfb5ff805f1f3449ecdbad16949ce8297aad689ea721e397acd4cf49244aa92a69121db34ff51a8fd446b
5ffbf29ed23a3651f80ba474fffc7bc8b43fb5681513138d5626d70792ee796deb36786462ae67ac4cc423100f48ba95b57e5461bfd5c4a4b271252898185686
c2e6334e0b9ea4bb91c9fd11398032b9897a52dbba0dca26864a274a1213cadc5b34916c2ee91149eee7e879f114cb754e28cc4d1c9f9ba3f3c9b92bc91d03cd
3e3531fd4b4fb09d89f9974465b271be8e96ebb400d06328e58bd78da529498522d29cc533319330f6917e48b5a57f44a49bada0a9423c5899d8d5ad0e0cdfd5
c27355d737216e6d3b152afe2ff9c3e135513dd2535216cfc409a17252f36aa144a7083a4d04550bbd88be6eeb89e70e5779c4dcbad3293cdd8505e1ea1e16ca
b84972a4a4bb4188fba3cf5b4288b505f4dc56361edc1a136fc63f51ab97a1d7eb879bb87413dbfd1d72152b09ff85e4da65d0ff9b50466f6ce2f9e58592777a
0cc5ea021b746a7941a711da0feac3453d710c1391b871cdf185d45ad5c5165465626354f6837ab99eed7ab56e62bbbffed5af879068f03a8535d1eab442bbb3
703aa784caecfd3bb1d787fe66af89b7eaa26a1dbd50552f4a59d577d32d6fff98d7634834389dfa6c733a9d50fde07faa86baed8edbc468c49978b0b9b151f5
4a7dd70b8746d541a21af42b07a24ee1743aa1bd12da55cadcc9ebc631d0e26e4e9ba96bf485beaa4d255aa96f5c5ade4cf56963a656a7188cd0c64a3f8b230b
ad883625e55cbb85d549155071eddd92c313758aa8d309bd74d7a39f893e1eac4c6c6b7b61d0f7e3eaf35d345d7de04b0525ea1451a7167a515f9ae6da765da1
69a3d4a0927ddcba51e939563fec1f95e7821ae5bb37da76f3e95b3c9858e09189829af8611761e21817acc99a5a9c5b5292f05112990b5b92f4e4c3c7ad66c0
bad8a9f411eef88fb84292e5215249ceced4f82fa8760fcf6a1345b42f379424cb4dcc02c63414fce1bb1f0ebc60a25ffaa2895b2999c287f9efcc2f8ea11bff
a37ee013263e3c1389d13326eee7a36bce30c17dce846efc0f85d29627da87243638a589468d4a217d6c828a0d51bbe09a334c709f33be3983abd0fee682fbcc
d1cd195c85ea30bf0deef3c634673015aa9b335c2b066b4c287ce02934746fe7584009b11b3f3fa1b17b3b3f6d14d28dffb1d0a423a8f44b4649c057337668b4
04267e3b30f1e8b8df8f843e95a40d23fe4ce41b9aa07e90a5bffcf276c500daa869296962026f64858949d43abc929f899005e0ad34a6939ff9a182edc63f4d
d144bf365d00de89e9d5af3b4cdf7adb8dbf4034d1b75004cf46dec2c737637af5b777dda7cf76e32f417e1e2348fb85986a9d808fefa6720ffa95edc6ffe9ec
806788269a6efc9fce0e78065d9d9e74756abbf17f3a3be019e28d8de9c6ffe9ec8067888f18a61bffa7b3030000000000000000000000000000000000000000
00000000000000000000000000000000f8714e3f311a885579aeebc929af0f8f9f5281375665757f382bc63171532a30c7aaac4e4c4d14765c10fe2895e7aa6e
e706043b3097f61746033113470ca2e73714bfe6f6131e1a957672e807f82131e3dc418f8735cd12c4b988c2823cf1b613d9f63fe1a155a96f6f1e9d89f1f0c7
f9d8a60ef4ccc14f2774cb53ef30912d996a60197e86ab7cca81c7f9a1136349b26d5c5ffc8baf965ca7f2b460caeb38c66934b198aebc2a7328ffec937c66a0
4d99e79116ac51d2fc2b19bd777adf534bb72fb933d0ca94ba1806740f839efa194ac3f230319b1fd356c643440d4b0ed8168ae606c69e181f3b5a17ff7cfe9e
27a55f9f2adcaf97dc152afd9125c552c6af7edce130a02d198f389ebdce44f23519f63d2df51bb8b8d6445a0d665522b998485fe9caa440a6855a8a50ac453c
2061f3b4ce7dade4ae347154b7a4535b4a99242493d592c915659a653aecfb1e26ae4a1f9d9a36312f95a3221813d1629d6e954da4fcbae8152a9d2ff9659f9a
383e37c9aa91c46062fa275ed293f19c89696d43dfb25994d3f24992461353a7c8b405e410bed944fa4789052167a982291f479547b1506ee0e17626e65f1299
d926e93a39529aac78b38959410b6530de1d8705e1ba10077ef79bf82d45d805bdcd09fb7be52951c74a5de38592d7d9c8be9e185a4f17a187e66d8bb1fe9289
32799f28ab2513d3b564db574bae09089fdab2caebb44a39f1e90b311344b8c60b25ef6627f6d6f3250fbd5e3fdc66c6568ef5232d5874c26411e71d10b47c92
5b184937cb8a2b79a79bd192bbe4e89ecdc9a723de05957d5f5029b3f7efc44c10e11a2f94bcc644f6cd7cc9d7b35dafd695363e4841b5226755de67541e017b
85d08d17fa6a71ab2e6ebee4dad43e55dfcd34131fa3a08a10242daabccda93c00469f69bc3097fc4bede64b1e1a55d78a6ad0af87c79ac857a51996de8484ed
7d5be52686b6d34554671693461809d7b2cad3c15556a1f142c93b8bb39f5358093b77e2dabb25c7463bd4776595c3329585a700726f90b73bbd892a345e2879
ad8bec57e68ebcbb8b6641acff0054fa816246653da3528e3f972c4a9f623fc2da87fd63b25ae57a133f799f071373d2a0bc8d3bc4e75a1103f524c69db63b91
d42e724143c93b0013334888c9fb9345a1a83779a2186d4a9c0eed39fb9cb1303183b65f845060702d37346c9186059380230d25ee330b314ccc90d96bde0a35
3691c6821f99b8899a097c37fe3b6b3717ab9ca84ec5b42349ec8a9a58de64b71b20df8dbf666de27295be9dc97e96e435def4c4c6a72c69dc3ea48c0d51a439
6a6b5c8cd88486f9c25f657f73a161d6f056693ab8dfd9ca73f056a923e12e34cc18de2a43377ea665d4c25b65ecc6cf529e6395caacb7a2988896bdbbc502ac
66ecd068094cfc7660e2d171bf3c08bdf148bb45fc81418c7f7f094b7f86716c56fcd844a6a1b3ace1225df02dc0440a0d7bd2d82969c1a00bbe061d8f6ad4cd
5be3fb46b364a1caa2897e6dbae05b301dc2af8318aeae6f344b96aa8c26fa5689e0d9c8db2ff2d1f495ae1a5d54af4cc707112b54929fc708d26621a6da25be
c9c7ca8f2b61fb463385b9ca20cff68d660a7395a1a2b17da399c25ca5bee45ff425dff68d660a7395e1e6dbf68d66ca6fa8040000000000e03b38d5f5b5991d
c186034e6561049bc3539fc5e53a3f820d03accae2083647c78586e746b061805379f4116c4ab4aa8c560f46b0393e4ee5d147b029a1ae16b7eaf863bb3c80b9
4a55bddc6b2e23d814712a8f3e824d89eeacaff74c46b029e2542e1cc1e6709cdaf62ab88c6053c4a99c1bc106000000f8097ea3b33b7360221b9887c17f03e6
61f0df807918fc37601e06ff0d9887c17f03e661f0df807918fc3740181c000000000000000000000000000000000000000000000000000000c0c738d57abe96
735db3fdddac55282e757dd6937cd70ce752529a4eada8eee2c4f537425aa199d9444fdc56dd1b863a2f6656baeac4d744a55044131b8e262afa9b9e53b06558
cd78faab68864a9d92eab562f94bfd4bdb887a103ddf5feb69859d51d85d9be63a3fcfa79f94ddcdaa27574c59ba289ddbffb693f6dd94423718c142c2c4824f
e4ab90c86fbccb14af7d546834ce0a95e90b990ff32133a9e2aa30ed629efa15e546a1b9f82f3d13630e42612de46b2a6393792dee600bacc2ce28ecd405727e
e493b1ba2df225c71f3734b1a95a75072e4e2b06c974b3949b4f7f66f3b5d6c45d3c4c14365d5d7773239ff8599ffde798b73845bbf0f3b79349dbfd9ced6e86
779f3c4ce72e93bf40f64ee64b7d56e1cc4059a501b348014d3e27f98a79f7aafcaaf478c878b868ba2d5927d197507242c679bda3b992782bc382a88e4c439c
4f3f9c1c2c9af04d0a4799983231cf3b51419747f5615ff22529db4894d97f72cd90c9925879c8703ac96c29713ffd0b71e76176e26f3171a2e43a4dc9092762
8270e6d123b031db9848bd1899482a5ab274bc61ba3ffaf6ea99b87693a289f9174935914d64a65e900d7631714dea852666e75cf2922c2d9848eba67192d50a
9f35514e7c26efb989a49c92b532d9c53798e84a16f1303cfcc427c6703742a6700f4bfd1eb259dd8524fb4b7745365f8e0e3cb9a8b032b1b3a1efbb5a78aeea
faf670c6a8f06763653099af30297dcca09fa19ebcc7a3120fd8cb1085225168245ed4637f5b17ee51e5c4a77594b6dbb47c9edbcac7bdb58937abae562f43af
d73f9a318acafcb365c6362328344ff854a1e807a11b34849e217a1a99bdafa6b0e1b6754cadb5d9b8b736b1315afb41cf7e7db6eb1f0c22f9b2ccbdf10a6d98
862ad4cffc4ee15ee3646e1d512b61af12fdcd5e136fd545073374e16d750dc461c628a7509f6d8942a11ffc4fd550b7871f13cc48bc9888a2beecabdaa5beeb
8543a3878fe430886454281285a25712bbeafa28f87600b49a9b53686a1c7db9af6a5389562c668c327e1985225568459f050b8941a11264878cd457c8932aa6
2c668c8a0a45a2504bbc74d79dcec470398ccf29fbb4cb682a1f15d626b62ef4adefcad5e7fb6e3346c52b7e227617a2429128d47d6cbaa6b9b6dd6c189cb23c
8fe1e1920460e6b6de4afd130ffb93cce627463e68f4e35dbcaa705d56633c833e496fb1e7329f32f18dac8dd864cd4c2158115a60423519022da41f807d2121
b510e61021fa2142a4679bdaf61913e7f293345e648d6921242cd363b3b3a7ab63a7693313f997463925091c52ab688c35d4ab32ec996eb551a5f45cec74263f
a10531d5edb7247bc8a3a77bb13e009e867c6d411b1ff6e0742281b6c590cf3ebc2a5ca1f77b58d181a7cc3326cee627583c6e4ca3754e3471f7ba750b13fdaa
b189f9d9e423c3c2af8d7b24bba03bdca232f271e2fb52adb3f9995c9c94dc98d8bfed6de32a85921cfb997f42a4d529dddebf4aa279befa7a191709b7e1e125
cce78798385dfd24eade519d8648f83285793393a0176fdf5c6312c606fdf048181f9de2a2b8dbd0ac93de136d808b84dbf0f022e6f293369f91c34004d11b1b
5237ef868b84af50b888ddaf03ebe86f3e3ccc95febabdc2ef32d1f400bf7336710f85ef6a715a868e84bbf03053fa9f5068607b26f25718e2c46c256ea7d077
688aaf827efaa6ea158cc89eeee953fc3b9e91c0162401193132117c1973117c910474c60fbddf76cbfabbcc45f0c5c419f8e6f05381153fc338286b7e6912e3
86533f87c92f8b2233f163e7214c4c20c15f919b2845ea634c41ebe08fa043a78dba0b6f7c377e764485ae1bff0ce5087e7e41fc4834bf80e9f37e1d74bf76db
8d9f1d46e16d1097abebc63fc34c04df45ebd3e7c47747f30bd476a41e5d5caf3c4741310adbbb39213b9e126d8f53f366bbf1332428b4ddf83f9d9d3d08126d
377e8644134d37fe4f67670f42756abbf1332454a70d6789d78bbeb1b1ddf819626fddf48d8de9c6ffe9ecec41b801b7ddf819121f314c37fe4f670700000000
00cc73aaeb6bf370049b23e314ce8c607378eab37e8a7a3482cd91e92e5ae1ec083647c7c54e1f8d6073608842ae125b7526562c46b029d159851c46b029a1ae
18b78ac50836259c420e23d8945035ccbd6631824d89a890ad4455d9f43d8b116c4aa81b1bad90f399786a5b256faf116cbe01fd88a114ae19c1060000c04f82
1ec40cf869855c245af887c1f5fdf7ad611d06b74162d661f0410fa58130f8a171b32a700e8377fcc3e01775265608831f9a53d776ca44cec1b79f0883aba2ca
3b0c7e611f061fb44ade61701b24661c06bf77753d200c0e0000000000c07b402b0603d08ac100b4623000ad180c402b0603d08ac100b4623000ad1800000000
000000000000000000be9fff017db44c352b398e250000000049454e44ae426082}}}}}
}{\loch
C}{\loch
omme pour la multiplication, la meilleure fa\u231\'e7on de comprendre comment un ordinateur effectue la division est d'\u233\'e9tudier le proc\u233\'e9d\u233\'e9 }{\rtlch \ltrch\lang3084\loch
employ\u233\'e9 en effectuant }{\loch
la division \u224\'e0 la main. Consid\u233\'e9rez la division 3456 / 12 et les \u233\'e9tapes }{\rtlch \ltrch\lang3084\loch
n\u233\'e9cessaires pour la r\u233\'e9aliser}{\loch
 :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cet algorithme est en effet facile en binaire, car \u224\'e0 chaque \u233\'e9tape vous n'avez pas \u224\'e0 d\u233\'e9duire combien de fois 12 est contenu dans le reste et vous n'avez non plus \u224\'e0 multiplier 12 par ce nombre de fois afin d'obtenir la quantit\u233\'e9 \u224\'e0 soustraire. }{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\loch
 chaque \u233\'e9tape de l'algorithme binaire, le diviseur finit dans le reste exactement z\u233\'e9ro fois ou une fois. En guise d'exemple, consid\u233\'e9rez la division entre 27 (11011) et 3 (11) :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop167\shpbottom13169\shpbxcolumn\shpbxignore\shpleft23\shpright5047{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex98\picscaley98\piccropl0\piccropr0\piccropt0\piccropb0\picw340\pich880\picwgoal5100\pichgoal13200\pngblip
89504e470d0a1a0a0000000d494844520000015400000370080300000047ee628e0000000373424954080808dbe14fe000000030504c5445ffffff000000f5f5
f55353537a7a7a393939a7a7a7d7d7d7b4b4b4c0c0c08b8b8be1e1e1999999fefefe000000000000dc49dfd600000001624b47440088051d48000011f2494441
54789ceddd897a9b3a10866194a569dc9efbbfdd532324cd486cb267626cbef7691d070b81ff80c12cd2300000000000f06cc2b647cfe2f321540764e6e0fe50
8378b4164caaaee630af7c6ecbd3dda1c60a66aa59aab8638263adab73b85a59ca4ecf61704c334dc26d493508757b49dd136a35873ff079671deab47085bc92
8d3fa787413ccdbf9625292f98f1a5a10a35e4e27a22a2b241571d66e650cdcf60b31d7e0be531875006bebdbfbfbfcd145ba167f9fa2f88752c0d18e43b0fcd
afd39c84f252a955563d96d01329950539be58cb9b2535e839bdd7f767c88ff9ad8881975fc3ef8f99622beae5202f7a65787e13f93d872a135128d471c8aad3
d22816655dd9f5b7fffe93f5ae866af259f0fe15f2e334ab6ae0e79f71f16c8aada897d454eb5aa8e9a536d49938aaaac5d23f535955753b872ad4c128563d85
7aa94acb425d6c6f857acd14039ad5b50db519b709752aa10bea7f6dbdab4beabeb7d8978141a8216f35727d69509940de3a4c1f0ee2d7b45aa795517e8d2b1b
955275fc576dd644ddd5949a39941b2af189729ff550a7d5bf6749b5f293d3b2b61eea47dc50116a9ff550d32ed5cf87fa4a476e5ee8ad1c07a13a2054e0dc3a
0e9f60a79ec327d8a9e7f00976fbf9ef4f2740a80e08d501a13a205400000000000000d88373d3f63837ed8073d32e08d501a13a20540784ea8050010047456b
3f0e08d501993920540784eac022d43d1fbc7581f5cb8c17ea0ba240df7ccb8659a656229a39b25bbc0caa5a6adc61ade6b926c242fb7c31f48deaf7cc4c33e4
e6249a7bfbaeef4b0c9ceef79f0aec3bcfb2f6ce37467a8950bfc765e33ba850e5c08fdfc3af4b2ab0f73c8b6a9c443462929a8a2a6d9fa8c6e1c4fb906da54c
2d22556d720da212196ad3969878529ab78a93ce2da7880a738d7940b7f6debe7fd5c881e16df8f3990aec3ecf923eb1a637251adb51ed7bc9d67554a8a57caa
a76eb74a2626434d935399eb86bff268a2d5a1e66f50cf5e9f7ab513cddd84eaffd03109dd4c927ee7b231aec5a6e2ea50073d8afc2767514ea8f957da11527f
eff258aa9603fafd48a8edb2ab2269e623548f756db7862aa6351b6aa95a0ee8b715eab8faf785dac620c25dcab50e7579499d1b5d86ba5c389442627e54864d
d61e4b6adc507586aa5ad32a070c426e35b21c45289b0e314a9a8bd0bca4dbf2128722ea317399697ba45afb12a3a6d2b95433da2db96e849a9a50ea091535be
a63a205407840a9c1a2d28d96b8fb2e06eb4a0e4a2fe46000384ea80501d10aa034205ce890bd41c102a7076f1ec54eee60316e279d474361526e219ff74de1f
26d4450cb041a80e58fd1db0a172c02e1500000000000000000000e040b87dd51e9dac38e0f6551784ea80501d10aa03427540a80080a3dabc2f983b83fb11aa
03327340a80e08d501a13a3009b5a3ada6a53e69ea16c2c3503d3bf01f7fa59395f147ba35b0ab99d0b96e68a657760d6a6e4b56ad941f38cd68a593957856e5
e3d7f0eb239d61d97d9e657149b508f5f0563a59893fc2dbb878763613aa03903dc3541dd6cc741823526c430d55ff3507cd78a54380aa7b075d6e7fa5b116d5
274f2895b61dc6a451d756ff30dcd1b184bf1f0835a8ae66a6255686550ac8add076a8078d743bd4b769eb74d7923ad4a18a72aa6f93bc911b76843a1c36d68d
50afad2d7ccc95db5f6918aad84aae4da8e758fd736b0b3da1363b9943e90fa66c66a692a50f9a411cae59d84f951baaa9f04173558eba463d35427540a80060
ababe35fecd2d9f12ff6e8edf817bba86fedb041a80e08d501a13a20543c012e507340a80e08154f8516c11dc40b7ea6cb7e60239ef1cfe7fd61a13af50e0b84
ea80d5df41bce0275ff6030bec52010070366cfd1d7040c501dfa81cf0dddf01a13a60f577c0011507ec5201000000000000000000008017365ebb73797fbf3c
7a465ec8d828dadf7f895efe3e7a565ec7d81adae79f61f8fa7cf4acbc12d984368c10aa83ebeaffc5ea6f8b0d950376a9000047b5d9ce1c2dcdf523540764e6
80501d10aa0342756011ea9ead595520e81ee576ce95ec18ef96c36a41f6fc176627744b1e4d77326325a5dfe35b7a425eba437d65e4d95bdbc3d03c5faa22f5
8fd89b405bbe19d21f6adb9dcc7580e8f7f8f26bf8dddb13f2da3b5f79c920d4ee045c426dbb93b9862afa3dfefc73434fc8aa3348d1bfa4e806b9ea12b90e55
f6731ceb298364c7cab903e541871a64e99096e2696557dd304f7bde21a86a4bc7ccf7ac007af56ffa1d154376555ac60c83ecec54bc47f936eb504bf9fc5210
43abac44a0e5dde4da72f2f9ef2826a20ad6f5ea010f0f55cd6a5e1ef33b170905f95299582a52bf14c46b6df2faddc81990fff434e51f20fdfd4235b8fb5be4
46a8d3ea7f67a8edb2ab22995b52d5635ddb7da1aa69ce845a262007f4d808f5236ea8ba426d6310e1cee7da86babca4cefd59da509747d1d39413cd936ab2b6
5d526fe90939a89dce7214a674835c0ecd2cf67c9c6745bd543654b9ffe4b650193f97cc5d2ea72da798b314ac2cd58cd69d6b95c81d23631ea13a2054e0dc7a
0e9f609faec327d8a7eff00976ead8d5c75e84ea80501d10aa034205ce890bd41c102a7072b432ef2076d9734967536121f6d991cffbc342752a1e1608d501ab
bf83a9e31e365496d8a50200e06cd8fa3be0808a03be5139e0bbbf034275c0eaef80032a0ed8a5024e890b541c102a9e8d6e98062654c334b0a11aa6810dd958
048c10aa83aa611a58a81aa68185aa611a00000000000000000000001e47765a071bb2d33a18919dd6c18cecd3094608d501abbf833070b3a53976a900003891
ad1e01b83df80684ea80cc1c10aa03427540a80e4c42edeae47e6170d50f7d18aa6707fee3371dff5ee779fa559eaaeaea2038beefb9b8f60d6a1ad02b0777c3
a1d38cbec777fe1d54a8d3afe3a9aad83a686f07c18b4baa45a887d776fcfb2fd0e9d7f1476c1eb0b783601dc0f56f14c688aeebeef8acacd671707a96d6eea5
504308f9417e281c4cbd0004711e459e55e95a5054e158cb14df209fa9e1316c95e2f2ea1f0651f8787e20d4b864a940d402399402722bb41dea4123dd0ef54d
356371e3923ad4a18a72a1bc14d2f4f7853a1c36d68d5063eba033e5f6571a862ab6926b13ea3956ffaa198b7d6fa2d9c91cf2262a94cdcc54320e2a3f17aa08
e5677a08725e0feda86bd453235407840a9c9a38a00223f2800a8cc8032a30a3be60c206a13a20540784ea80508173e2023507848aa742376b0ee2b529d3152a
b0114f4ee753d4b0509d2586054275c0eaef60eab9f6371b2a43ec52010000dc8d5d2a071ca572c0d754071c507140a80e58fd1d7094ca01bb54c04971898a03
42c573d10dd3c0846a98063654c334b0a11a87800d427550354c030b55c334b050354c0300005e1e27551c709d8a034e543be0920a0784ea80d5df01d7a93860
970a0000000000000000000080c71b2f30b9bcbf5fd223ee3676dbf7f79ae8dff8f8e8197a05e3bda59f7f86e1eb333e3e7a865e43ee8f9cfbf7ec10aa83ebea
ff35aefe5facfe56d8503960970a0070549b3d21d2265a3f427540660e08d501a13a205407847abfe9d6dc7287ee186afcf5faa85befe446de3dbee382291ae7
bc0e88bf8e8f975fc3ef0f35045ba6563945e39c21b7d599ceaabce921d816d40f7db03f340d4d12ea2e84ea6023d469f527d42e1ba17ec40d15a176d908b56a
bd93506fc2cebf03427540a8c0b971f8c41e874f1c70f8c405bbfa0e08d501a13a205407840a9c1317a8392054e0e4680add41ec57e692cea6c242ec58229ff7
87053a427140a80e58fd1d4cbdcbb0a1b2c42ed5b1ecf92e5b1588632c8eb7303cd44f3b3fa94210a388b638b6a7fce396366e2bb337bb550c43f37cb18a301f
c996b67c33e440a1f60c1f0c42bdf1b0faf3849adee0b87285b88e8d3fc7e76940793eb4a1a6714a3d65501abd5422a699e640968eeb787e9297e76906525959
6daab70c78bcf45935bd9dfc53be47f936eb504bf9fc521043abac7231b940e7da72f2f9ef2826a20ad6f5ea0126eedbfa8b59cdcb63ca2c8884827ca9849a8a
d42f05f19a4cbe0d55ff55e53f3d4df907487fbf500db63b867cdf01151d6abbecce44a29754f558d7765fa86a9a33a19609c801266eff46d5c620c29dcfb50d
7579495dfeb3c8509747d1d39413cd936ab2b6cab57a9f3d63aa9dce720e66da5889d33583d8688851a6c17243951fd3ff30944a16c7cf25a7ed51fe378839cb
eb9228d58c6694ebeda1621107541c7040c5010754f004b898c201a102d00dd3c0846a98063654c334b0511d8d8305427550354c030b55c334b050354c030000
807e9ca972108f52713795a9f83595b3ffa6b84ec501a13a60f577108f5271f18f2976a9f014b844c501a13a20543c191a54b64783ca0e6850d985baf90b3608
d501a13a205407840a00000000000000000000c0abba5e63c93d17b6c66b2ce914d0d6788d258d585b0bdc71698f501db0fa3b08b4616f8f5d2a00004e64b5f7
0a6ebbbe0da13a20330784ea80501d10aa0342bd5fd3f0c7355431703aa23215e030e01edfe382f91d54a872e0f508e02515a081905dda863ffec5270786b7e1
cf672a4003213bd537a98b4e8543f57fe0d4ca4e84ea602bd471f527d43e1ba1c60d15a1f6d908359da422d47bb0f3ef80501d102a706a34af6aaf3dca82bbd1
bcaa0b9a027440a80e08d501a13a2054e09cb840cd01a1e2a970cf8f8378ca2f9df8838978723a9da28609eef87540a80e58fd1db0a172c02e155e55c701c3a5
efba61b386fc35f91c9bcff86ee7e2da37288dbc7a70219c25cd647149dd1deaf6927aae44873ad4eb0217c61dddeb1a3b3ecb6bee34383dabd669512a9412d3
b0901fc4682f4c851ad7d329be413e53c363d8fafad730345504517b483f9ef0a3a07f974a871a972715c3b464955f533a415551851a4b8499509f2dd25b76fe
eb2575a84315e5c2a0235f5952d3b76531ac1eed69f47f4d9d5bfdab18c492aa23db0ef52556fffcd6f7ce79087a9b233651a16c5ca6927150f929aa289b9f52
626e43358df654b976878a6d1ca572c0512a071ca502ce892b541c102a9e8c6e98062654c334b0a11aa6818d20fec308a13aa81aa68185aa611a58a81aa60100
002f8f932a0e38fde78013d50eb8a4c201a13a60f577c086ca01bb54c049713585034205407f54f6e88fca01fd51b950f7f1c106a13a20540784ea8050010038
190ea8d8e3808a030ea8b860e7df01a13a20540784ea8050010000000000000000000086c66bfa5453145ce577af78699f6c348546d3ef16afe993cdfb70959f
81d2aa37ed7b9b215407f5ea4fa806ea0d15a11a6876a90815007010ab9dfad16eda6d08d501a13a20340784ea80501d10aa8178a2a49c2e19432d03d377ffba
1856c4e61044a308d750c5c0cbafe1f7472ec652bc4b3c51224e975c4315033fff8c8b67530cab82781cd2676a1e987fa98a6115a13a580f755afd09b5cf7aa8
1f714345a87dd643cd9da510ea1dd8f97740a80e0815008c714cca5e73e80af7e398940bbe3f3920540784ea80501d102a704e5ca0e68050f14cf42d3f30112f
f8b9a4b3a9b010cff8e7f3feb0a06ff885094275c0eaef205ef0f3c186ca12bb54787dd7efb20b9fc48b1fd0e5eb6f6807cd8e3dfb85b9fe1efd32dfaac75d86
ee3713dae7751da1f9b5fe4b84b942afe0c623dc3b426dc7980975a5da27d6acbee3874148ffa601210f0f4d91b40a875c477a7dfa6899c68f05e3ffa9e25c45
9afea142bd7deb1fcacf74657b8ca02c5ae9f7f4eda22e92973b3946280366ffa569e73fd7dca7c163dd7e4025879a169fa179f36a50f9e23613aa5a68cba2ae
460f6da8698483857afb37aa948258626f0f55545a3e4cb69754b5501f877ab7b78cba67f5df136a59523b56ffd70bb56c36d2af69352d9f0879eb923654e917
b992e767735ba45cb019230d38de0920db032a61f55767c709d5f680ca23433d4ea6b607549aef8e077aa3002a5c4de1e0ae50f3ee4dd905f29ddb27714fa8f9
4046d9ab27d4bb35a1b2a44abab59fbd0875956aed6737425da55afbd98d5057e54008d50ea13aa85afbd947eea1aa4787197c46556b3fb050b5f60300005e1e
97fe3ae06e2a07dc4ee1e09eeb54b080501db0fa3be06e2a07ec5201a7c5853f0e0815cf85b67fedd11f9503dafe7511c4238c10aa03427540a80e08150000e0
5e1ca5b2c7512a071ca572c1372a0784ea80501d10aa0342b5445b2a0e08d501a102a7365df47b797fbf3c7a565e47bc8feaefbf442f7f1f3d2f2f23df4e317c
7d3e7a5e5e46b9f187dd7f3384ea605afdbf58fd0d7db0a1b2c72e1500000000000000000000000000000080c3f91f01553914235557020000000049454e44ae
426082}}}}}

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a pourtant une nouvelle fa}{\rtlch \ltrch\lang3084\loch
\u231\'e7on d'impl\u233\'e9menter cet algorithme binaire qui, en m\u234\'eame temps, calcule le quotient et le reste. L'algorithme est le suivant :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
Quotient := Dividend;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Remainder := 0;}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
for i:= 1 to NumberBits do}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Remainder:Quotient := Remainder:Quotient SHL 1;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
if Remainder >= Divisor then}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Remainder := Remainder - Divisor;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quotient := Quotient + 1;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
endif}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
endfor}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\rtlch \ltrch\lang3084\loch
NumberBits est le nombre de bits dans les variables }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Remainder}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Quotient}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Divisor }{\rtlch \ltrch\lang3084\loch
et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Dividend}{\rtlch \ltrch\lang3084\loch
. Notez que l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Quotient := Quotient + 1}{\rtlch \ltrch\lang3084\loch
 met \u224\'e0 1 le bit }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
le moins significatif}{\rtlch \ltrch\lang3084\loch
 de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Quotient}{\rtlch \ltrch\lang3084\loch
 car l'algorithme avait pr\u233\'e9c\u233\'e9demment d\u233\'e9cal\u233\'e9 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Quotient}{\rtlch \ltrch\lang3084\loch
 d'une position vers la gauche. Le code \u233\'e9quivalent 80x86 de cet algorithme est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
Supposer que }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Dividend (}{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
et}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 Quotient) }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
est}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 DX:AX, }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
La variable }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Divisor }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
est}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
dans}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 CX:BX,}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
et }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Remainder }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
dans}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 SI:DI.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bp, 32 \tab \tab ; Compte 32 bits dans BP}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab si, si  \tab ; Met \u224\'e0 z\u233\'e9ro le reste}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab di, di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
BitLoop: \tab shl \tab ax, 1 \tab \tab ; Voir la section des d\u233\'e9calages d\u233\'e9crivant}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab dx, 1 \tab \tab ; le fonctionnement de SHL avec 64 bits}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab di, 1 \tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab si, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab si, cx \tab \tab ; Comparer les mots }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
les plus significatifs}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 de}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab ; Remainder et de Divisor.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab GoesInto}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab TryNext}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab di, bx \tab \tab ; Comparer les mots }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
les moins significatifs}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab TryNext}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
GoesInto: \tab sub \tab di, bx \tab \tab ; Remainder := Remainder -}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab si, cx \tab \tab ; Divisor}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
inc \tab ax \tab \tab ; Mettre \u224\'e0 1 le bit }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
L.O.}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 de AX}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
TryNext: \tab dec bp \tab \tab \tab ; R\u233\'e9p\u233\'e9ter 32 fois.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jne \tab BitLoop}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien que ce code }{\rtlch \ltrch\lang3084\loch
vous para\u238\'eetra }{\rtlch \ltrch\lang3084\loch
court et simple, il a plusieurs inconv\u233\'e9nients. D'abord, il ne teste pas la division par z\u233\'e9ro (si on essaie de diviser par z\u233\'e9ro, le r\u233\'e9sultat est 0FFFFFFFFh), il fonctionne seulement avec des valeurs non sign\u233\'e9es et c'est tr\u232\'e8s lent. Certes, tester la division par z\u233\'e9ro est tr\u232\'e8s simple, il suffit de comparer le diviseur avec z\u233\'e9ro avant d'effectuer la division et de retourner un code appropri\u233\'e9 si cette erreur se produit. Impl\u233\'e9menter l'op\u233\'e9ration avec des valeurs sign\u233\'e9es est \u233\'e9galement simple, on vous expliquera comment le faire sous peu. Malgr\u233\'e9 tout cela, la performance de cet algorithme laisse encore beaucoup \u224\'e0 d\u233\'e9sirer. Seulement un passage dans la boucle du programme consomme \u224\'e0 peu pr\u232\'e8s 30 cycles d'horloge}{{\super \rtlch \ltrch\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033{\rtlch\dbch\af19\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Ceci varie selon le processeur utilis\u233\'e9. }
}}
}{\rtlch \ltrch\lang3084\loch
 et effectuer tout l'algorithme emploierait au moins 1000 cycles ! C'est un ordre de grandeur encore pire que celui des instructions DIV/IDIV (le plus lentes du jeu d'instructions 80x86). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a une technique que vous pouvez utiliser pour am\u233\'e9liorer pour du bon les performances de cette division : v\u233\'e9rifier si r\u233\'e9ellement la variable Divisor a besoin de 32 bits. Souvent, m\u234\'eame quand le diviseur est une variable de 32 bits, la valeur elle-m\u234\'eame peut \u234\'eatre contenue dans 16 bits (c'est-\u224\'e0-dire que le mot }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
le plus significatif}{\loch
 du diviseur est z\u233\'e9ro). Dans ce cas sp\u233\'e9cial - qui }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
se produit}{\loch
 fr\u233\'e9quemment - vous pouvez utiliser l'instruction DIV, qui est beaucoup plus rapide. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp40{{\*\bkmkstart p9_03_06}{\*\bkmkend p9_03_06}\rtlch \ltrch\fs23\b\loch
9.3.6\tab Op\u233\'e9rations NEG en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien qu'il y a diff\u233\'e9rentes mani\u232\'e8res de nier une valeur de pr\u233\'e9cision \u233\'e9tendue, la plus courte est d'utiliser une combinaison d'instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
neg}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sbb}{\loch
. Cette technique exploite le fait que neg soustrait son op\u233\'e9rande de z\u233\'e9ro. Particuli\u232\'e8rement, elle affecte les flags de la m\u234\'eame fa\u231\'e7on que }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sub}{\loch
 les affecterait si on soustrayait de z\u233\'e9ro son op\u233\'e9rande de destination. Ce code prend la forme suivante :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
neg \tab dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
neg \tab ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sbb \tab dx,0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sbb}{\loch
 d\u233\'e9cr\u233\'e9mente dx s'il y a une retenue dans le mot faible de l'op\u233\'e9ration de n\u233\'e9gation (ce qui aura toujours lieu au moins que ax est \u233\'e9gal \u224\'e0 z\u233\'e9ro). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Effectuer cette op\u233\'e9ration avec un nombre suppl\u233\'e9mentaire de bits, de mots ou de doubles-mots est facile. Tout ce que vous avez \u224\'e0 faire et de commencer avec l'emplacement fort de l'objet que vous voulez nier et proc\u233\'e9der jusqu'\u224\'e0 l'emplacement faible de cet objet. Le code suivant calcule une n\u233\'e9gation de 128 bits sur un processeur 80386 :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
Value \tab \tab dword \tab 0,0,0,0 \tab ; Entier de 128 bits.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
neg \tab Value+12 \tab ; Nier le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\lang1033\loch
neg \tab Value+8 \tab ; Nier le double-mot pr\u233\'e9c\u233\'e9dent.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+12, 0 \tab ; Ajuster le double-mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le plus significatif}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
neg \tab Value+4 \tab ; Neg est le second double-mot de l'objet.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+8, 0 \tab ; Ajuster le 3}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
me}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 double-mot de l'objet.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+12, 0 \tab ; Ajuster toutes les retenues jusqu'au mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
H.O.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
neg \tab Value \tab \tab ; Nier le mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
le moins significatif}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+4, 0 \tab ; Ajuster le second double-mot dans l'objet.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+8, 0 \tab ; Ajuster le 3}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\sub\fs18\loch\f8\loch
me }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
double-mot dans l'objet.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sbb \tab Value+12, 0 \tab ; Ajuster toutes les retenues jusqu'au mot }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
H.O.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malheureusement, ce code tend \u224\'e0 \u234\'eatre tr\u232\'e8s grand et lent, \u224\'e0 cause de la n\u233\'e9cessit\u233\'e9 de propager la retenue jusqu'aux mots }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
H.O.}{\loch
 apr\u232\'e8s chaque op\u233\'e9ration de n\u233\'e9gation. Une mani\u232\'e8re plus simple d'effectuer la m\u234\'eame op\u233\'e9ration avec des valeurs plus larges est de simplement soustraire cette valeur de z\u233\'e9ro :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Value \tab \tab dword \tab 0,0,0,0,0 \tab ; Entier de 160 bits.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs12\loch\f13\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs12\loch\f13\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs12\loch\f13\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab eax, 0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\lang1033\loch\f13\loch
sub \tab eax, Value}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Value, eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab eax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sbb \tab eax, Value+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Value+8, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab eax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sbb \tab eax, Value+8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Value+8, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab eax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sbb \tab eax, Value+12}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Value+12, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab eax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sbb \tab eax, Value+16}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Value+16, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_07}{\*\bkmkend p9_03_07}\rtlch \ltrch\fs23\b\loch
9.3.7\tab Op\u233\'e9rations AND en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Effectuer un AND sur un nombre quelconque de mots est tr}{\rtlch \ltrch\lang3084\loch
\u232\'e8s simple : faites simplement un }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
AND}{\rtlch \ltrch\lang3084\loch
 entre les mots correspondants entre les deux op\u233\'e9randes et enregistrez le r\u233\'e9sultat. Par exemple, pour effectuer un AND o\u249\'f9 les trois op\u233\'e9randes sont de 32 bits, vous pourriez utiliser un code comme celui qui suit :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov\tab ax, word ptr source1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
and\tab ax, word ptr source2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov\tab word ptr dest, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov\tab ax, word ptr source1+2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
and\tab ax, word ptr source2+2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab word ptr dest=2, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette technique s'applique aussi facilement \u224\'e0 tout nombre de mots. Tout ce dont vous avez besoin et d'effectuer le AND entre les octets, les mots ou les doubles-mots correspondants. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_08}{\*\bkmkend p9_03_08}\rtlch \ltrch\fs23\b\loch
9.3.8\tab Op\u233\'e9rations OR en }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9cision \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9rations OR entre multiples mots sont effectu\u233\'e9s de la m\u234\'eame fa\u231\'e7on que les op\u233\'e9rations AND entre multiples mots. Il suffit d'effectuer un OR entre les mots correspondants des deux op\u233\'e9randes. Par exemple, voici un exemple d'OR entre deux valeurs de 48 bits :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr operand1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab ax, word ptr operand2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr operand3, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr operand1+2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab ax, word ptr operand2+2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr operand3+2, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr operand1+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab ax, word ptr operand2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab word ptr operand3+4, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
9.3.9\tab Op}{{\*\bkmkstart p9_03_09}{\*\bkmkend p9_03_09}\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9rations XOR de }{\rtlch \ltrch\fs23\lang3084\b\loch
pr\u233\'e9cision}{\rtlch \ltrch\fs23\lang3084\b\loch
 \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9rations de type XOR sont effectu\u233\'e9es de mani\u232\'e8re identique que les op\u233\'e9rations AND/OR. Is suffit d'effectuer un XOR entre les mots correspondants des deux op\u233\'e9randes pour obtenir un r\u233\'e9sultat en pr\u233\'e9cision \u233\'e9tendue. La s\u233\'e9quence de code suivante effectue un XOR entre deux op\u233\'e9randes de 64 bits et garde le r\u233\'e9sultat dans une variable de 64 bits. Cet exemple fait usage des registres de 32 bits disponibles sur les processeurs 80386 et ult\u233\'e9rieurs :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dword ptr operand1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab eax, dword ptr operand2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dword ptr operand3, eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dword ptr operand1+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab eax, dword ptr operand2+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dword ptr operand3+4, eax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_10}{\*\bkmkend p9_03_10}\rtlch \ltrch\fs23\b\loch
9.3.10\tab Op\u233\'e9rations NOT en }{\rtlch \ltrch\fs23\lang3082\b\loch
pr\u233\'e9cision}{\rtlch \ltrch\fs23\b\loch
 \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction NOT inverse tous les bits de l'op\u233\'e9rande sp\u233\'e9cifi\u233\'e9e. Elle n'affecte pas les flags (par cons\u233\'e9quent, utiliser un saut conditionnel apr\u232\'e8s une instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 n'a pas de signification). Un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 en pr\u233\'e9cision \u233\'e9tendue est effectu\u233\'e9 simplement via un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 sur toutes les op\u233\'e9randes affect\u233\'e9es. Par exemple, pour effectuer un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 sur une valeur de 32 bits dans dx:ax, tout ce dont vous avez besoin est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
not \tab ax \tab or \tab \tab not \tab dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
not \tab dx \tab \tab \tab not \tab ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Gardez \u224\'e0 l'esprit que si vous ex\u233\'e9cutez l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
 deux fois, vous retourneriez \u224\'e0 la valeur }{\rtlch \ltrch\lang3082\loch
origin}{\rtlch \ltrch\lang3082\loch
ale}{\loch
. Notez aussi qu'effectuer un OR exclusif d'une valeur avec une autre }{\rtlch \ltrch\lang3082\loch
avec tous }{\loch
les bits \u224\'e0 1 (par exemple, 0FFh, 0FFFFh, 0FF..FFh) produit le m\u234\'eame effet que l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
not}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\i\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_11}{\*\bkmkend p9_03_11}\rtlch \ltrch\fs23\b\loch
9.3.11\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
\u233\'e9calage en }{\rtlch \ltrch\fs23\lang3082\b\loch
pr\u233\'e9cision}{\rtlch \ltrch\fs23\b\loch
 \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces op\u233\'e9rations demandent une instruction de d\u233\'e9calage et une de rotation. Consid\u233\'e9rez ce qu'il faut faire pour impl\u233\'e9menter un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 de 32 bits en utilisant des op\u233\'e9rations de 16 bits :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1) Un z\u233\'e9ro doit \u234\'eatre d\u233\'e9cal\u233\'e9 dans le bit 0.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2) Les bits de 0 \u224\'e0 14 sont d\u233\'e9cal\u233\'e9s d'une position vers la gauche. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
3) Le bit 15 est d\u233\'e9cal\u233\'e9 dans le bit 16.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
4) Les bits de 16 \u224\'e0 30 doivent \u234\'eatre d\u233\'e9cal\u233\'e9s d'une position vers la gauche. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
5) Le bit 31 est d\u233\'e9cal\u233\'e9 dans le carry flag.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2483\shpbxcolumn\shpbxignore\shpleft0\shpright9400{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex86\picscaley86\piccropl0\piccropr0\piccropt0\piccropb0\picw727\pich192\picwgoal10905\pichgoal2880\pngblip
89504e470d0a1a0a0000000d49484452000002d7000000c00803000000f81cbf6500000300504c54450000008000000080008080000000808000800080808080
80c0c0c0ff000000ff00ffff000000ffff00ff00ffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000330000660000990000cc0000ff00330000333300336600339900
33cc0033ff0066000066330066660066990066cc0066ff0099000099330099660099990099cc0099ff00cc0000cc3300cc6600cc9900cccc00ccff00ff0000ff
3300ff6600ff9900ffcc00ffff3300003300333300663300993300cc3300ff3333003333333333663333993333cc3333ff3366003366333366663366993366cc
3366ff3399003399333399663399993399cc3399ff33cc0033cc3333cc6633cc9933cccc33ccff33ff0033ff3333ff6633ff9933ffcc33ffff66000066003366
00666600996600cc6600ff6633006633336633666633996633cc6633ff6666006666336666666666996666cc6666ff6699006699336699666699996699cc6699
ff66cc0066cc3366cc6666cc9966cccc66ccff66ff0066ff3366ff6666ff9966ffcc66ffff9900009900339900669900999900cc9900ff993300993333993366
9933999933cc9933ff9966009966339966669966999966cc9966ff9999009999339999669999999999cc9999ff99cc0099cc3399cc6699cc9999cccc99ccff99
ff0099ff3399ff6699ff9999ffcc99ffffcc0000cc0033cc0066cc0099cc00cccc00ffcc3300cc3333cc3366cc3399cc33cccc33ffcc6600cc6633cc6666cc66
99cc66cccc66ffcc9900cc9933cc9966cc9999cc99cccc99ffcccc00cccc33cccc66cccc99ccccccccccffccff00ccff33ccff66ccff99ccffccccffffff0000
ff0033ff0066ff0099ff00ccff00ffff3300ff3333ff3366ff3399ff33ccff33ffff6600ff6633ff6666ff6699ff66ccff66ffff9900ff9933ff9966ff9999ff
99ccff99ffffcc00ffcc33ffcc66ffcc99ffccccffccffffff00ffff33ffff66ffff99ffffccffffff4462b0500000001174524e53ffffffffffffffffffffff
ffffffffff0025ad996200000001624b47440088051d480000200049444154789ced5dbd62db3a0fede3f07ddce5de1769973a4bfb22374b9ca57990264ba885
daa445faee922c8db8c81f0e40cab2ad3fdbaae3f8e2a4f54f02419479088120407f320ac5f5e193376b85e2ba60dca75a79adb836984aedb5e2fa60d24fa9f2
5a716d205eabbd565c1d4cadf65a717d30fe53a5bc565c1bc85e6b3c447175d0389fe21a417e88fad78aab03f921ea5f2bae0e64afd50f515c1d745d46718d50
3f44718d3089fa218aeb83ae372aae119a1fa2b846e83abae21aa1f110c53582fc6ba7bc565c1bd4bf565c23d40f392f1ee2876da56afae11ddaf0f9fb98845d
9ac5ca8f49552b636edde8e99ea7f08bcef8ed6982dc54d0bc51edf5f9e017f1c37e364ff7cff78fd5f9db7063962312cfe64762bffc550f4b258ba5253ada11
656e31815f0f66553d7cf9312e381564af755de66cb00b133fece5e7776ac3a331ff0c4ba4e6668d1bca88fd5ce152eacf2383e46973c90358e08c3f47c7c874
689eea197167be2fe387fd6d46e37408fc5f0f66e4d4f513f36b8cfef2f77f86d9f3dd2c97e3fcb2e69935ae4625a742eb65ce88c5fdbae9e4316bf8a7b05c8e
125660cdcf296277c3ec593c11b54795dc9b2ab46d2e28afcf887463deac59dd2dbeacd27337e16191ae47fd6b825d2d9623feb5c899bb3191db717ead44e466
3e266a3ce4bc885df7d37c5ed50f5f3e9f99d8ec344fe075628cf939a56de3f3c6f5043f24888cd8fe43a079aae745ec3afb046be8c6adddbcb8816b6d6ea788
3e7ff93c1ae923433b3ed5fb31ceaf2032e2ab1f029d379e173bc66b822d9b130f0b50756cde1830c1c15e4d99e94de0f5dd9fb0d71abf3e23764cd2843e9f13
777113ddc729d2a3767d12ada7b0f5c1b0cf33e7bc51d7d1cf8a181c78bce1a7e5d7b39efde9fee1f9fec17c7b1af61e16ec1dd563ec9f46eb29f3468995d773
c6f9d40f392b6227af38629b4c339c336334ce776be0ae3c8cf8ce4f136938e59eb4f8ce279c6ff555d71bcf8b2698bb583cbafbc5f2ec81bef5847848b2583e
bb316bec17e6fee9e7d3c3e8c89c60af3146ecf3acebe86aafcf8ac6bf4e577f9baf3fc7230e7f00e3eb32f6f62f7333929265a3af3ea66cc2ba0ce73d7d7d98
12309f089d372aae11ba2ea3b84618a7f65a717d207bad75608aab83d61528ae111ae7535c23f47bee14d708537fb2ca6bc5b541eb0a14d708fd7e19c53542fd
6bc53542e3d78a6b84e65f2bae11e487687e88e2ea40f65aeb76cf01330193848ee8add94e3d93a2691fc6691fb7c6f9ce83f10f19fd3d2e7314afc7b54e9119
3db599a868d2c94644c63454caebb3600a656721d7e1e79e42c72936d44c5534e964c32263d0bca733813ee4a2c8b2220b8f391ef0a628f2222be981fbbb7289
ab139758fa71496abdadc36b9b5655722cafadf36e40359f3afbf5f2f8f2f2fafabf9757fce0f5cbcbff1ee997fc20a74eac77b672d6d271555293d62dd5aca8
24252fafbf58cb2fbc7c7c6da92e59c63aba1a97d2d1d641076968ab3e9dd71ae73b0fe843ce7270382f4a7e243267a07411b9cefd9d826cb606e72a6fabd4ba
a4b235f57c4d9d9fd86379cde3a25fb5f0fa258f632ca3367223d14c6975e075cd6a922aad88cea4cef92dd5a2e8b168c66c2623386b54ff92ebc478aa6c523b
4fe30b2aa8592dd573d8eb44797d0680d7e862f43873b9e4ae67ee64205226768c18471c71cc3b3263b06130ad09ecb53bda5e93a26a40359fba7845cb8acd2d
85ff95a1d5d15e571511d8818b36217530b52dd5a2e885399ce5f12289d48dea17b9ceaac6c9ab841b53b19ab6ea39e68d1ae73b07d80f11c294a04b019b9809
d10bb68ae1fe0ce3052b489d5e81ccd4f564d78487d571fd4d344ad27a40b598d957b6a96c594bb999e4197312ad8ebc8612d8665bc187a0375baac50f792d03
89d9e1c263dea80e7e08ee151edc262e33b553db563d871fa271be7380fd908c1d69703bcba24d0ca6ad08f7e77a4dc6957d572133dd9ae98e4f06911e6c722c
af41e5f59abcd76ed562667f5143326a26374df858c285e056075e935becaa358d13f2d089d170ac4935e913d5d15e83ceec78057f0b0facac780df7255865b2
f876bdf6dc2258ec8a3d6da83e9dd7fa3dd2e7c1c65e8bdb5a4673282c22a26fe2047035897698e211798838d6a6e439107b8ee6353fc3a876aa167bfd6fc152
b0d565c3ec62db5e6378a085491d3d10721ce0298beae85f672c5504abcddaa08514477b0d364babd8d8c372d313b441b5c6af3f0ae843ce619b9b7048608cf8
24d4e1c5a62b312123534a660c377b8f095e85b95e72b41f22b0a04e97eaadd05b13a411d721b4fa75dbb5272d96a968e1435469501dec75a30a8797e17a73d6
fb22f725ba4f34ba3c7c9a04e61eca60c667e0b5d6819d07b0d7d1563351d8b9ce655206673688a1339ca7fbb263f735b5ec2e248e036231247b44aff311e42d
74aa6ef4f13326b142c24d2492fd90b6a63a45e00291be445c6456bd1920fc14e60e053c11f8ecf4f251ee4b754baaa636540efe0cc22a1eaae75897d178c839
007b1d425e204a96973148805f4621e94f102e1830220ef90d157ba0d5b6d421270f475469b7ea6d29761bd81991301fb7fa7123c34d049bf9bf858f5d59516d
b6a572b1d361dac88ec8bf9bfb5294223509dd8e52f28812f03b99c30f517b7d1ec8ba0c0743240482a963c95d5e0489cd9a5e9de0d65e2758f6c03a0571a6b2
7b52934fdd1c92201cb7ab7a4b0852d1b50ecb47c5f6b8131972cad39a03191cd9b02954ef496562a76576cc73c8e225df93b2aeb635d663b054633d54cfe15f
eb7ae339c07e48703573e10b1bb24019635ac412835dc3f548c819a6974997d4b4f3b60fc1d2c7b6ea2ea93c049dcbe046941d3215bc066be185c0ce42698714
713a93c866f068f2aef3d1ed83a6b11e2b9634422c549fce6bafeb8d6701e27c592651bea209e986bf6d817e0123489e265696b1ccd82335e1a43b47585edcd9
a8ee9662873893a5c22cef9659c3254e6ab0102be275b714db6819ccf0bdba2e17ad22550813629890736d9363e3f4ed2bf7ea87cc0ad38b75192c2007b18bdd
9b7b1763c90afa71a9894d69fd0581e22e2a6e4b159d44dc3937d1301d95ca36be4cbf54c50305919a79fc10e5f59c18e0b52c36c2f7c85af18f7db90d6ca7a9
de9692d7edc79e430ed43b7045edbf5653a4e21462508ad7d553cb692b9d0d39049acf37333aa8127b50ecb4b8aea3d2ed4e1f91eae2f5f0013db6baf3ec7308
f50fe216b0964eb61a71c819fc6b8d87cc8bbe1e91f87530d7f8d7880fc07679c09ddc32bbf67af098c44e10323d9ec3114d1cba3d3590b51d2407da59f2f934
3f644ef4f588415c384c1a4392c8b8f78a59a31b951a684acf119c333d2a8569e398cc1a0be9a39a38163226c59175ce9b9dc3bfd679e3bc18e075c68972794c
decc8bee8959eba0b44a90b6b9de979ade9aae43109b83eae1b34b807de4e48889b8b4cbfeb784424064f86a139f48a2493a877fadfb3dcd8b015e37ebd292ee
14c2d99be3361d5d7b871033ac3527deedf3e690f66c0e21c6ecaaee90e20546ce4fe524bcce10bbe578212fc8237b1a8bea1d5292d8554ab2898ce60e292499
7852e83879b6b233f9d79a7f3d270678cdd503d2d1e288c80af3ceba075e4a01894f9127ede133603d6e4fea80264536a6765ff59e94540248d826d43cec2d89
72594be23c325eeb84d3029b1b4b6b8470a03e0ba505ccec97dcecb58a1740a95592e407d5a7f35aeb76e7c590bd96643e5e8443a26ac87e2ab683bb6b2c0b22
671fe94929d6982d7a3a49eaf692f771ad42b15597ea6da94c2602926718abb95e5a745c8b8d4dd8b492eb80c51451dd0ec7b02636fb7203e0b498f27fc5562c
124fbc52041d9613faa0fa745eebbc715e0cfa216cfb629e6a16eb1c436dca46966fc744958457ab13ac7e3bdc9f93539786c96be854bddde6a6740b26bb0cad
7ed9be30873c256403f2628aa42bd9743be1552240b1b8a0900aa198a7da92428901ea23ab1477000bd573f8d7ea87cc89613f44bc8f22548165e1ad38dd9b03
996eb8c363d99b4d6205fe1d5df7178fb1c8bbee52cd548b33c46c635fb358aa96ede65f4b3181ad58454a865f548ba2e6ab4a03976584487941a89741764a10
72a824aeb978a7a2d7f047665947d77599393168af3999886b0a42295870b4cba66e9701968036a09c4fb00a87b26d77749d36b66fc0738504a52ed57ceae251
985d36fe70ac9741ab63bd8ccc34b99c111e364c350c7f502dbc7ecd24f42145c9a164b794b49357b1d7f0606a893562252691a4576b43a5e4e9bcd675f47931
c0ebb2296a0cdb2d9445ac2581972d76ccd6a82571d8e003733bce94e35a44f4fcd1f58db0d1f0db7b54f3a9f39792978bb29096c5c34dacecc65e93654deb64
edd8b256a026543b1b54074561ca103cae928b66421028f821ec4c2709c61b788c4d1b4475c5aae7b0d7ea87cc89015e67cdae21c15e67c1327289412e7e27e7
5ac3926252e678f31aaefc83df70bc1f82b8c7806a31b3bf9aad1562bd9ae4aa72ab1b7b2d05055c05c61b256ca916c3ff82f81eca63ca6c53991e54477beda5
c4861d229e74dab6ea39fc6bf543e6c4b01f12f2eb853192971cf621c8423d2b2a4f308de2dc7f44c060587dcd9556fec8fb336fdf600754b7e818b7eb117267
cd0432f01aee46eaa4000c1e355cf5966a19202f650cd44b498124a98aeac06b0e123ade84846bda519ad0523d47fc5afd903931c4ebbc291fe17299589712fc
58eeefc4c97a87e5450f9708fd6c7838da5e2744df01d58dbddeec3f5534113e697563af89cf5ea27bd8ee89d4b655cb0079e50ac9b0a944d9de47a4c8e27e4f
5c0acfa32be5aa76798caad50fb9340cfad712decba27b9d857d67380211f6d540142e6c82e4b9a7112890859913e68d356acffb550b1dff2d62d05a58286bfe
a1d58fcc6b8328ba14009065ad3d62d76dd561de58c48d15a4fa3e6f362369fc90ca5b29fc85a54f6437b396ea39d665d40f9913c3eb325963ae43ac81ed2193
27f82169829defe0ab72288e0b0713f6827d7a6c9cc0188fdd15fa55e3d4267b79911d27e5e931bc7a0c0fb23c882a44de28d2c3d07370aead9a1515bf5e5e65
c3c997d75fff6203cbc7966a1ebfc6713eaae5bd271dbbfb755bf51cbcd63ab039d1cf6b13773f927f65d802a90c464dfadbf2f6925636ad83af80608363b306
27f6585ec792ad1ed542c75cf69eca42e431e474c4560baf535ed48106d4b2739e495b352bca65015e5c2e31d46dd5729d5e764143111957a525555bb5ce1b2f
0dbdbc9e806942c734e903e2c46ed07d27e7455f8f4ceaca3fd3df27d1ebdd706237249a1f322b4eee11c51c20ff5a793d2794d71701cdbf9e19caeb8b80e687
cc0ce5f54540f3f96686f2fa22a0f67a6628af2f026aaf6786f2fa22a0f5e83343797d11d0fc9099a1bcbe08689c6f6628af2f02c46bb5d77342797d11d0fc90
99a1bcbe08e8fe213343797d11d0f8f5cc505e5f0434ce373394d71701ad6f9c19caeb8b00f921ea5fcf09e5f54540f7759f19caeb8b80aecbcc0ce5f54540fd
9099a1bcbe089844fd9059a1bcbe08e87ae3cc505e5f04343f64669c732b02a383a80fba8e3e3394d717018d87cc0ce5f54580fc6bdd9fefc34279dd07f5af3f
3294d77d503fe4234379dd07ad47ffc8505ef741bf87e3234379dd07cd53fdc8505ef7e1ddeb65d25b6396b679fbe39ff39cb6ba33e67bfc5e70bb345f9f7b04
1fe2a793ae3e9be5438fd45394f2ab85f9b6aabba55637f27c3318a4bbbd8bafa85d8b95ef141228affbf0debcf6446a776722b157e6fb794efb7969ed3f86bf
ef75fd6c6eed6a71db29582fe2a7b3583cb947b3ea5617a53c49a54f8bcf9d522b13cef1fcf3e1fee9e1ae5bd9cadc84573fcd0ffb73f003515ef7e1bde3212b
03dbf6f95b7c67966739edad4989b39fe5648b1f6b585cdb21f7b088cc5999e75e29fb394a3df2dfadf9b92f54ef5c5cbafc96ee4ba51ba99a797f6f060cb6f2
ba0fef9da7facc36eb969b40b6f1a7e9369b7343b8b3e4d35a666cdd653d6fcd72193e9d6f7fcb81c3523fe4b9e32a3c2eee47eb178f5d4384a49ea2bdbee721
ef9eba4652bc0ce5750f2e62de98fec534ab966e6deec68467c477bef27bc37ef6b2e34eb1f8b9be0b9f4e68d85f5d524f8d54b4d7fb7e7875e3d66d7b9d36ee
c69e54f03ceefe1ebd00e5751fc85ebf77fcdadae5821d5ddc70cf64af19959c6c25d77fdbf131d491fbd4b01b79ea99eb855fd77f2f9eedc39765f7c4b1ed2b
af3afd0bfe0802fb17cbe46eb1ec76e8a342e5750f2e601dfd863c4a17df9833c54380a5610737d8dabbee8fe19ff0eb3bf10a7a8814a5d6961c72f3d5750ab5
6f46f5964fb22d75139eff5eacfc6a70c2a1bceec345f821c9b2f135cf140f0156e6899f6fe4fa97dd1f43fcb5c5e0ab963d44fabe914ad73edc7ff6d01ab4f7
9d13d02d29c3b3cfa70e9f6623aabceec165ac37a68b68953abdce3f82559c02063fe4fb3063d7f68b318ba71ea93036d6cb057b208b6e23db1ab4cb456fc3a2
8516cefaaed84a23aabceec145d8eb167bce366f6c681d6377dfbbb9d832e396dc8be54da75433bb5c6ebdddc1c65efb9e40384b858fe0abd939a8435479dd83
f79e37fe60b7757d17cdd7b9ecf586d6217ad119e75b6f28ea99fc7d52d15e0712f658f50d451f820fd429153c6f8919d6e6b1575279dd8bf75e9779e20e4e1b
ba9c291eb26af393bd86ee15970d637ff224539691f611e3212b5ec2ec9b146e78dda787a5c28de339ac04f54c42595479dd03e3de391eb2348fe9e36211bbf9
4cf3c62f66f5f4fcf024aeeb9359d9a7458f0314231d3405b076d56766a381f68bcf4fee61f1a5632571ddbe19dd0c7ce60dfbe96cc96ac061515ef783ecf5fb
d681f9a76fe6ef55c383f3aca3dbedc423bb345ffaa20e3fe2a7e3b613b4b6d178e17ef597f9d697abb4993cdcf54f1b5b52ab6fe6eb8017a2bcee87d6157c64
28affb7019713ec571505ef741bfe7ee234379dd07537fb2fad97c5428affbf0de75058a53a0bcee837ebfcc4786f2ba0fea5f7f6428affbf0eef16bc509505e
f7e102f2af15474379dd07f2432e219f4f711494d77d207badfb5f7f5828affba071be8f0ce5751fc80fb9585e4f69d71fead9094aa79c7852eb4e90515ef7e1
ddf29e26edc5ff8776ec9fe9d4b35dc33445dd17726a3f5c29de2dce377a52eeef7199a3787dfaa9cd4499191575ff61f8c8ff2cc85e27a77d36875b19396cbd
ce0af929e9212be5755ed02b7e28b8bfd32aa9acc303ff776955a7554a6f6c9556ae3a96d72ef16e40359f1aede15615d42a6a52ce2d2d62ab858ed6910aeb1d
1de85d925a6a545b350bf141ac2b97e3b32dd52c53f30150652b7aede8f2daaa95d707e2f4ef6f3c9ed7792144469f73bfe3678738be5efbb4f6758a7ff440ff
3dded66b7a59a747f31a7a7b55075ebfbebdbefec6c3ebdbdbeb0b1ee21bfac984d73e951f3e30adebdaafdbaa85d772dceb6f3aec050af827aa96ebb4d202be
2c6e4f5ab7552baf0fc4e971bea18f7698d7b0d2ccea9cff15d162f3db60c79c4f2b3282b6b2964c6a4206cc268efed32f9d5f1f6daf6deac918f6a8f669e075
166c6b9185db08ccabb4fa25d8ebb4b63559d73a71de91adf550d0a80e03247f8379a6e3721c9ab3ce46f56b2ef7a59a5a40f78a848c755d5163e8c546b5f2fa
509cfe3dd2c7f33ad8eb5c6ed3c41974bebc2b36f6ba72d4c9e4205429dd9e993f554aff6a62519a1ccb6b3286b8c3f7a90e742cc0c25cee2919da083a4aabdf
f2e016bbc4920a70d2d150b37423b02dd532407ecba8e5cbcac4ab6954bf66c15ed341181034b6124b3a6a7e1154d7caeb03717afcfa147b5d360e762ebe27b3
9bfec1608bbd26ca117960ffc0e4049449f84502fb782caf939a9897acc903ee505d27c17da07614eb2278c7ec2815d133fe1dfd1032ac5565d79e464545eae8
f00aaa13a86e0c3fdf826842214e17df95b2c0f3e087d080b2dc96f51aa6da82e5a2da41b5f2fa409c5e077624af09b9705a9c0f1026e72924dea0ffa5bfb950
9dfa19c68b6ca0233b06a3eac8eb24721eef5f73052e4dc93a55473ab2741c73a5186e697530b3f043e45b0fc8dcd348a3ffa49a66a098f725c1f093a222834c
b4d54c6f9e88e6455044769ee69d5cef4bfcf63c7584c94ec949a20b555e1f08539d1e0f39ee6f4418f135c568473ab303cb546ac5bf886f95af116048c80375
30667085537f6a9c8f38b3af3a7542c720c31e482efe304f6cd1eab7529a57c7eff2a810c7206df01b88a1091ce360afcb9778c1ac25e79b525e8a57120c3f0c
7d90aa531a6b186370f9931a130cb5d787e202ec758cee89256ca85db48f756c593ddfabad8731a339565d9f1c7a2795fbaaeb6aabdde2f417a5446da2bd2e76
c2ce08f2c1e57734ef632f82fed7d58e10cf1fe56ec45347d21914b5371cc10881cf4f03c3e14a49b5f2fa409cbe8fd9c1bc6e6cac04098a1014290269f85e5f
941b613c89d74a13bb04533b9a99a544c4d4ef283ca8d57c0c7cf40ed5db279769636857086db099dd3abb254702d16f38d73562d1d6af9b5b61909141cc0e88
d87df2438a4de3a3269a7892c16625a48b66a22d3f64eb6295d77d30fed4f5c6d647eb6e1766b1b29d7fdbfcaac5ebc654975908ee8588765b16c2c4148406c4
1012772af24177650e69723cc6c379dd51bdd7d0306d64ff23c4d7f3d73d2932fa7042c8fad755e211edabf79a283a8a3099e02b7dcbccae141677d0222f5359
72fffd9e4cf3fea00bffef80783d9b1fb232dfee9f578bd686cdbb1ffbf67a0df7ac2cc0057f44c27c1db296c3b91216262b96ba5d850735b8758c4d7754779c
3cde57f05ccabcaf43aa26cf817d1aac1456dd9a4ab92d95f1babb2f968697b72037473389d9bd17abbceec38c71be47738fa7faeb6607c7ad8fddb4815f0857
e8de0e3fb308c1eb6e59c4072af682b168d1a1707a6bb78f49aab6eaee939732a9cd25809ded5151a452042e1c6286f023ba4f97852c0128c4f5f65dacc30843
2433b18317abbceec3e9f97cf1a3f5715745bbd92a71cb75dce3b504bd64ed4d3ccf6ee135027d080993216cc2061dfa263475ef2072aba3eade93674da08606
60afa68a734b78aed7ab29ac41e53c907ba5b0028a9547c4fb862f5679dd87f9e2210f8d99b67b7fdba5c1567788b5eeb8b9efcb7a3b2e236fda8f7dc7745cf7
a04cd633eeda5234039d72c99d467f576afc623baf41b1667b3d537ec88f4e9ac8e32038e1a2f39edcd7a1230a3b793d7ec8a84c3941532f17b7d03b84f79a34
ade18a5dcc376fecdad279125f3846904f2276f3ed4aa37d6da6d8eb3d7a0ccbf41bd90dfaef286dcc388a4feabbebc5e9fb3dc58fb6ebbb272699cb909e8c9f
3159ac758feaebbd9ca163921ea7b80daca88c4979c9f118d3b417cbec02f9d9c75fec7f1ca77f0f47fc686f3bbe5a62c7efedee0ea413955948ddef12de8826
89f5c8571a9219696ccf410eaa874fbe963c914e3e363258734c5ce71cb4a52964108c48f9b4f2d50917fb5fc6e975bbfbf3c67f3ae221e1ed56d748054a1e22
2245cce4ec92c5aa608afcb69403bbfbbc39a4bded6352b7adbaebe421ac1e520fd1ea2e29d692d429270756fb41e7a0892eb2e4e51d5e94efd4646bce32a99d
75a96dee50475dec7f16f3cd1b7dfcb2a0ce38dfe6379b9e911c39095d3361649199de6ec97270b842da3e75b4f5758595efc476289cdee40d19ed9eea3dbda1
982026d372ab7fef4961051e797cde79e712e489ec78116bce8829b398a7cacb33f95bb127c59a50fdc5256a480b4cf71aae1806f9d733f921f13bb6ec1793ee
fd6dfb80f0eb981252866565a1795879dc96b54415645c542952e56017c924b6197870a32385aa7dd56d16713bb3a6f6210bcc467ae98e5455d11841a22a2a6e
5c2503c66ccb845c458e6cca1a66c6f5323b9ac0641b16411d175e3657a8bc9e86f9d665d6f50dafa31bb31fbfee3e04fe341b6c4edd945230c95ce5159b288c
87c4234f02360c255b5c1480b292985774cc157023389b7457b5df7c0b7a589689f9b465c89b2e6339c0465395c0a5219718552fb8a1906ae4d1ae5b9ad6bc22
c335055974beb61303f9058d0c5f718e2a562e51a2b095cfa7b49e8059eb659ebf1bb358b9cebf7520949fe44530d559cc9a902e6fcfc65056c539d7b5ac39a2
18050c3ace786d8e497d87ea505710115269b38cbdec503413ca12d7cd377fa1840b6be809d61c5158962253d5b413b9d74d51238f5ba40f94b1f0860654a309
4e91d4b6d365a2bca0b75e46d187d3bf477ae8131fee0d0e5b83257919ba9bf354253e52863a1296e4ba2acebd404024b56c14c9eb3cbe5e26c46e8837fbaa43
5d41f626535829492c4a31d592b2dae45fd3e812b70585882895142262a30447a3c5840260a17691179b4473c93589034492f758ca928f8edc406cfd808455e4
622baf0fc4e9df4b7a02af4328a4e0184191e76117915025cbfd5d7bb8d1e00b0a5930b57389e44a2734b53aba5ec6a7e44763bc541daa7d53dfc869e0214555
8ad263497ae435b931b64a314048018abf3c8a65904bc5aa8322be0b85c04a93612ed9afa100b8f6f0a7138c3764811399ada8b6ecfc2baf0fc4bbd5cb98e0b8
cabe0a5205c69945cd6e04c18e91cfcb3b10a070c473925b852031790d697dc23e0b70197a55077b2d05e80da98b501086b6465ea77019d0184456e4c136aa7d
d528921963981617b1b6bdc8a3222e40f74805779876a264c66d542baf0fc5bbf921cceb98a75f862cec90752f9b1a707ffb948d166fa7e41d07192cdfee1103
3b7e9f05b2c935d71174a90e66367f651f58ca6bc34610594c178ffbe2a49eb764428a2af6fc80fbb151ede3002979ae5986f05e16dd6ba80ebcf6deb3236d11
e0a303b15bd446755fddaea20fa77fbfccf1bce63c7da9fc922919ac59d823870820fe750d4b5a23f681502e971f269c118af0d7f1fb2c9017eb6c8fea38ddfb
9d856d3f245d9aeb7ab8be875ad9f8215826b229f9c308ab2020c2d65f54a7528f5ebe664513278ce63aaa8ef61ae69daf0a5362070fdb6d542baf0f05f17abe
3ab043fe66b86e30d655c5f9d4c6db0efe75e2b90805d52c203271c64bc137bade1fed5f232097543daa1bb758765693ad438ab84d53deb6d786ef1c6ca81106
b7b5c36d24aa8efb87bcc954310ff346f91754bf4861bb43b90e360ec174d3dad4b9aaa55a797d28e698370ea1ff30596f943a3fd9248c1797b9d761d6a4bfd3
bac6b67969edd7d8fa0eefb12f5fedb1735d7a743c4474f6a9e679a3295eb19ddedb6fde50efe50dafde5ef1ee05fbeaf1b033868ea9e948de464ff6f96bab66
7b6db2d7373e5676e97b938df91ad5a228e12d0749117924b55c5d5bb5f2facf83d9cc000000e44944415440bce3be9386295cb40cb6145cc9529cec6366b0af
86c3e21be268889e79d492d07c2a2507a53a76df4953c38bee572d742cd9ca9671b73599ec95b1d5c26bcb5bb07201183c868af7d4dba8960112b71fc9435248
bea59a65e8b4967cf544d61a1de9716dd5caeb03619277fa7e99e1e11006c514a1a378fd01317f175c33c8bf565e7f08ccdf05d78cd3f3af158acb837e1f98e2
1af16edf9ba450fc41a8bd565c23d45e2bae11a7d7a32b149787d3f343148acb83c6f914d708e2b5da6bc5d5e1f4fc1085e2f270fafe210ac5e541e3d78a6b84
719fde3ba147a1f803f83f3c3ea5117a944de80000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 8.3 D\u233\'e9calage \u224\'e0 gauche de 32 bits}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi0\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux instructions que vous pouvez utiliser pour impl\u233\'e9menter un d\u233\'e9calage de 32 bits sont }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl}{\loch
. Par exemple, pour d\u233\'e9caler la quantit\u233\'e9 de 32 bits se trouvant dans dx:ax d'une position vers la gauche, on peut utiliser :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl\tab dx, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que vous ne pouvez d\u233\'e9caler une valeur en pr\u233\'e9cision \u233\'e9tendue que d'un bit \u224\'e0 la fois. Vous ne pouvez pas d\u233\'e9caler une telle valeur de diverses positions \u224\'e0 la fois en utilisant le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cl}{\loch
 ou une valeur imm\u233\'e9diate plus grande que 1.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprendre comment cette s\u233\'e9quence d'instructions fonctionne, consid\u233\'e9rez ces op\u233\'e9rations individuellement. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 d\u233\'e9cale un z\u233\'e9ro dans le bit 0 d'une op\u233\'e9rande de 32 bits et d\u233\'e9cale le bit 15 dans le carry flag. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl }{\loch
d\u233\'e9cale ensuite le carry flag dans le 16}{\rtlch \ltrch\sub\loch
me}{\loch
 bit, puis d\u233\'e9cale le bit 31 dans le drapeau de retenue. Le r\u233\'e9sultat correspond exactement \u224\'e0 ce qu'on veut.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour effectuer un d\u233\'e9calage vers la gauche d'une valeur qui d\u233\'e9passe les 32 bits, vous emploierez simplement des instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl}{\loch
 additionnelles. Un d\u233\'e9calage vers la gauche commence toujours par le mot le moins significatif et toute instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl}{\loch
 successive op\u232\'e8re sur le prochain mot significatif. Par exemple, pour effectuer un d\u233\'e9calage \u224\'e0 gauche de 48 bis sur un emplacement de m\u233\'e9moire, vous }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
pouvez}{\loch
 utiliser les instructions suivantes :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab word ptr Operand, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr Operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr Operand+4, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous voulez d\u233\'e9caler vos donn\u233\'e9es de deux ou plusieurs bits \u224\'e0 la fois, vous pouvez ou bien r\u233\'e9p\u233\'e9ter la s\u233\'e9quence ci-dessus par le nombre d\u233\'e9sir\u233\'e9 de fois (pour un nombre constant de d\u233\'e9calages), ou bien placer ces instructions dans une boucle pour les r\u233\'e9p\u233\'e9ter un nombre variable de fois. Par exemple, le code suivant d\u233\'e9cale la variable }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Operand}{\loch
 vers la gauche selon le nombre de fois sp\u233\'e9cifi\u233\'e9 dans cx :}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
ShiftLoop: \tab shl \tab word ptr Operand, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr Operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr Operand+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
loop \tab ShiftLoop}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous impl\u233\'e9mentez les instructiolns }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shr}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sar}{\loch
 de fa\u231\'e7on similaire, avec la seule diff\u233\'e9rence que vous devez commencer du bit }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
le plus significatif}{\loch
 et proc\u233\'e9der vers le }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
moins }{\loch
:}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
DblSAR: \tab sar \tab word ptr Operand+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr Operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr Operand, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
DblSHR: \tab shr \tab word ptr Operand+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr Operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr Operand, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a une diff\u233\'e9rence fondamentale entre les d\u233\'e9calages en pr\u233\'e9cision \u233\'e9tendue d\u233\'e9crits ici et leurs versions 8/16  bits : les d\u233\'e9calages en pr\u233\'e9cision \u233\'e9tendue affectent les flags diff\u233\'e9remment. Par exemple, le }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
zero flag}{\loch
 est activ\u233\'e9 si la derni\u232\'e8re rotation a produit un r\u233\'e9sultat nul et pas si toute l'op\u233\'e9ration a produit un r\u233\'e9sultat nul. Pour les op\u233\'e9rations de d\u233\'e9calage \u224\'e0 droite, les drapeaux }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sign}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
overflow}{\loch
 ne sont pas r\u233\'e9gl\u233\'e9s correctement (alors qu'ils le sont dans le cas du d\u233\'e9calage \u224\'e0 gauche). Un test suppl\u233\'e9mentaire est requis si vous avez besoin de tester un de ces flags apr\u232\'e8s une op\u233\'e9ration de d\u233\'e9calage en pr\u233\'e9cision \u233\'e9tendue. Heureusement, le drapeau }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
carry}{\loch
 est le plus couramment utilis\u233\'e9 apr\u232\'e8s toute op\u233\'e9ration de d\u233\'e9calage et ce flag est r\u233\'e9gl\u233\'e9 correctement. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shrd}{\loch
 vous permettent d'impl\u233\'e9menter efficacement des d\u233\'e9calages en multipr\u233\'e9cision de divers bits - sur les processeurs 80386 et ult\u233\'e9rieurs. Consid\u233\'e9rez la s\u233\'e9quence suivante :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ShiftMe \tab dword \tab 1234h, 5678h, 9012h}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, ShiftMe+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shld \tab ShiftMe+8, eax, 6}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, ShiftMe}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shld \tab ShiftMe+4, eax, 6}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab ShiftMe, 6}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Rappellez-vous que l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\loch
 d\u233\'e9cale les bits de sa seconde op\u233\'e9rande dans sa premi\u232\'e8re op\u233\'e9rande. Par cons\u233\'e9quent, la premi\u232\'e8re instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\loch
 ci-dessus d\u233\'e9cale les mots de ShiftMe+4 \u224\'e0 ShiftMe+8, }{\rtlch \ltrch\i\loch
sans affecter la valeur de ShiftMe+4}{\loch
. La seconde instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\loch
 ci-dessus d\u233\'e9cale les mots de ShiftMe \u224\'e0 ShiftMe+4. Finalement, l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 d\u233\'e9cale le double-mot faible le nombre de fois sp\u233\'e9cifi\u233\'e9. Il y a deux choses importantes \u224\'e0 remarquer sur ce code : d'abord, contrairement aux autres op\u233\'e9ations de d\u233\'e9calage vers la gauche, cette s\u233\'e9quence proc\u232\'e8de du double-mot fort au double-mot faible ; ensuite, le carry flag ne contient pas ce qui est sorti de la derni\u232\'e8re op\u233\'e9ration de d\u233\'e9calage. Si vous avez besoin de pr\u233\'e9server le carry flag, vous allez avoir besoin d'empiler les drapeaux apr\u232\'e8s le premier }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\loch
 et les d\u233\'e9sempiler apr\u232\'e8s }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez effectuer un d\u233\'e9calage \u224\'e0 droite en pr\u233\'e9cision \u233\'e9tendue avec l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shrd}{\loch
. Elle fonctionne de la m\u234\'eame fa\u231\'e7on que le code ci-dessus, avec la seule diff\u233\'e9rence que vous proc\u233\'e9dez du double-mot }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
le moins significatif}{\loch
 au double-mot }{\rtlch \ltrch\lang3082\loch
le plus significatif}{\loch
. Dans les exercices on vous demandera d'\u233\'e9crire un exemple de cette op\u233\'e9ration. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_03_12}{\*\bkmkend p9_03_12}\rtlch \ltrch\fs23\b\loch
9.3.12\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
otation en }{\rtlch \ltrch\fs23\lang3082\b\loch
pr\u233\'e9cision}{\rtlch \ltrch\fs23\b\loch
 \u233\'e9tendue}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op}{\rtlch \ltrch\lang3084\loch
\u233\'e9rations }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcr}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\lang3082\loch
fonctionnent }{\rtlch \ltrch\lang3084\loch
de mani\u232\'e8re identique que shl et shr. Par exemple, voici les instructions \u224\'e0 utiliser pour effectuer des rotations sur une valeur de 48 bits :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr operand,1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab word ptr operand+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr operand+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr operand+2, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcr \tab word ptr operand, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La seule diff\u233\'e9rence entre ce code et sa version de d\u233\'e9calage est que la premi\u232\'e8re instruction est }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcl}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rcr}{\rtlch \ltrch\lang3084\loch
 au lieu que }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shr}{\rtlch \ltrch\lang3084\loch
. Ces op\u233\'e9rations sont donc tr\u232\'e8s simples. Elles appara\u238\'eetront dans les exercices. Sur les processeurs 80386 et ult\u233\'e9rieurs, vous pouvez utiliser les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
bt}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shld}{\rtlch \ltrch\lang3084\loch
 pour impl\u233\'e9menter plus facilement des instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
rol}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ror}{\rtlch \ltrch\lang3084\loch
 en pr\u233\'e9cision \u233\'e9tendue. Le code suivant montre pr\u233\'e9cisement cet usage : }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Calcule ROL EDX:EAX, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ebx, edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shld \tab edx, eax, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shld \tab eax, ebx, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
bt \tab eax, 0 \tab \tab ; Met le carry flag \u224\'e0 1 si d\u233\'e9sir\u233\'e9.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La version }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ror}{\rtlch \ltrch\lang3084\loch
 est tr\u232\'e8s similaire ; gardez simplement \u224\'e0 l'esprit que vous travaillez d'abord sur la partie }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
la moins significative}{\rtlch \ltrch\lang3084\loch
 et ensuite sur la partie }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
la plus significative}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_04}{\*\bkmkend p9_04}\rtlch \ltrch\fs23\b\loch
9.4\tab Op\u233\'e9rations sur des }{\rtlch \ltrch\fs23\lang3084\b\loch
o}{\rtlch \ltrch\fs23\b\loch
p\u233\'e9randes de diff\u233\'e9rentes }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ailles}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Occasionnellement, on peut avoir besoin d}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
'effectuer des op\u233\'e9rations entre op\u233\'e9randes de diff\u233\'e9rentes tailles. Par exemple, on pourait additionner un mot \u224\'e0 un double-mot ou soustraire un octet d'un mot. La solution est simple : \u233\'e9largir la plus petite valeur de mani\u232\'e8re \u224\'e0 l'adapter \u224\'e0 la taille de l'autre et ensuite effectuer l'op\u233\'e9ration}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
. Pour les op\u233\'e9randes sign\u233\'e9es, on peut faire une extension sign\u233\'e9e. Pour des op\u233\'e9randes non sign\u233\'e9e, }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
l\u8217\'92extension est de }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
de z\u233\'e9ro. Ceci fonctionne pour toute op\u233\'e9ration, bien qu'on }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
montrera des exemples juste pour }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
l'op\u233\'e9ration d'addition. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Pour ce faire, on applique les instructions d'extension et une fois cela fait, on peut effectuer l'op\u233\'e9ration qu'on veut. Consid\u233\'e9rez le code suivant qui additionne un octet \u224\'e0 un mot :}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\loch\f9\loch
 }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
var1 \tab \tab byte \tab \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
var2 \tab \tab word \tab \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
Addition non sign\u233\'e9e : \tab \tab Addition sign\u233\'e9e :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, var1 \tab \tab mov \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, 0 \tab \tab \tab cbw}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
add \tab ax, var2 \tab \tab add \tab ax, var2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Dans les deux cas, la variable octet a \u233\'e9t\u233\'e9 charg\u233\'e9e dans le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
al}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
, \u233\'e9largie \u224\'e0 16 bits et finalement additionn\u233\'e9e \u224\'e0 l'op\u233\'e9rande mot.  Ce code est parfait si vous pouvez choisir l'ordre d'\u233\'e9valuation des op\u233\'e9rations. Parfois, on ne peut pas choisir l'ordre d'\u233\'e9valuation, par exemple, la valeur de 16 bits est d\u233\'e9j\u224\'e0 dans le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 et vous voulez lui additionner une valeur de 8 bits. Pour l'addition non sign\u233\'e9e, vous pouvez utiliser le code suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, var2 \tab ; Charge la valeur de 16 bits dans AX}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
. \tab \tab \tab ; Faire d'autres op\u233\'e9ration en laissant }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
. \tab \tab \tab ; la valeur de 16 bits dans AX.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab al, var1 \tab ; Additionner la valeur de 8 bits.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch \ltrch\lang1033\loch
adc \tab ah, 0 \tab \tab ; Ajouter la retenue dans l'octet }{\rtlch\dbch\af20\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs18\lang3084\loch
H.O}{\rtlch \ltrch\lang1033\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
La premi\u232\'e8re instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
add}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 de cet exemple additionne l'octet se trouvant dans }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
var1}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 \u224\'e0 l'octet }{\rtlch\dbch\af19\langfe1081\dbch\af19\afs20\hich\af9 \ltrch\cf0\fs21\lang3084\loch\f9\loch
le moins significatif}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 de la valeur dans l'accumulateur. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
adc}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 additionne la retenue de l'octet dans l'octet }{\rtlch\dbch\af19\langfe1081\dbch\af19\afs20\hich\af9 \ltrch\cf0\fs21\lang3084\loch\f9\loch
le plus significatif}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 de l'accumulateur. Il faut faire attention \u224\'e0 s'assurer que cette instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
adc}{\rtlch\dbch\af19\hich\af9 \ltrch\cs20\dbch\af18\loch\f6\fs20\loch\f9\loch
 }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
soit pr\u233\'e9sente. Si vous l'omettez, }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
vous risquez de ne pas obtenir }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
un r\u233\'e9sultat correct. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Additionner une valeur }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\lang3084\loch\f9\loch
sign\u233\'e9e }{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
de 8 bits \u224\'e0 une valeur sign\u233\'e9e de 16 bits est un peu plus difficile. Malheureusement, on ne peut pas additionner une valeur imm\u233\'e9diate (comme ci-dessus) \u224\'e0 l'octet }{\rtlch\dbch\af19\langfe1081\dbch\af19\afs20\hich\af9 \ltrch\cf0\fs21\lang3084\loch\f9\loch
le plus significatif}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
 de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
. Ceci parce que cet octet peut \u234\'eatre soit 00h, soit 0FFh. Si un registre est disponible, la meilleure chose \u224\'e0 faire est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax \tab \tab ; BX est le registre disponible.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cbw}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
Si un registre n'est pas disponible, vous pouvez faire ce qui suit :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab var1, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jge \tab add0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab ah, 0FFh}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp \tab addedFF}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add0: \tab \tab adc \tab ah, 0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
addedFF:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
S}{\loch
i un autre registre n'est pas disponible, vous pouvez \u233\'e9galement }{\rtlch \ltrch\lang3084\loch
pousser un registre occup\u233\'e9 dans }{\loch
la pile de fa\u231\'e7on \u224\'e0 l'enregistrer pendant l'op\u233\'e9ration. Par exemple : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cbw}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab bx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre alternative consiste \u224\'e0 garder la valeur de 16 bits de l'accumulateur dans un emplacement de m\u233\'e9moire et puis proc\u233\'e9der comme ci-dessus :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab temp, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cbw}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, temp}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tous les exemples vus additionnaient un octet \u224\'e0 un mot. En effectuant une extension non sign\u233\'e9e ou sign\u233\'e9e sur l'op\u233\'e9rande la plus petite, on peut facilement additionner toute paire de valeurs de diff\u233\'e9rentes tailles. Consid\u233\'e9rez le code suivant qui additionne un octet \u224\'e0 une valeur double-mot : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var1 \tab byte ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var2 \tab dword ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cbw}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cwd \tab \tab \tab ; }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u201\'c9}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
largir \u224\'e0 32 bits dans DX}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, word ptr var2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab dx, word ptr var2+2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Si vous travaillez avec un 80386 ou sup\u233\'e9rieur, vous pouvez utiliser :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
movsx \tab eax, var1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab eax, var2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Voici un exemple appropri\u233\'e9 sur un 80386 additionnant une valeur de 8 bits avec un quadword (64 bits) :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
BVal \tab \tab byte \tab -1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
QVal \tab \tab qword \tab 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
movsx \tab eax, BVal}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cdq}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab eax, dword ptr QVal}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab edx, dword ptr QVal+4}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour plus d'exemples, regardez les exercices. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05}{\*\bkmkend p9_05}\rtlch \ltrch\fs23\b\loch
9.5\tab Idiomes mat\u233\'e9riels et arithm\u233\'e9tiques}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un idiome est une idiosyncrasie. Beaucoup d}{\rtlch \ltrch\lang3084\loch
'op\u233\'e9rations arithmetiques et d'instructions ont des idiosyncrasies desquelles vous pouvez prendre avantage. Certaines personnes se r\u233\'e9f\u232\'e8rent \u224\'e0 l'utilisation des idiomes arithm\u233\'e9tiques et de machine avec le terme de }{\rtlch \ltrch\lang3084\loch
\u171\'ab programmation }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
astucieuse}{\rtlch \ltrch\lang3084\loch
 }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
\u187\'bb}{\rtlch \ltrch\lang3084\loch
, de ce genre d'astuces que vous devriez \u233\'e9viter si vous voulez r\u233\'e9aliser des programmes bien \u233\'e9crits. Malgr\u233\'e9 tout cela, certains }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3082\loch
artifices}{\rtlch \ltrch\lang3084\loch
 relatifs \u224\'e0 la machine sont bien connus et on les trouve couramment dans les programmes en assembleur. Certains sont tr\u232\'e8s contourn\u233\'e9s, mais d'autres sont simplements des }{\rtlch \ltrch\lang3084\loch
\u171\'ab trucs et astuces du m\u233\'e9tier \u187\'bb}{\rtlch \ltrch\lang3084\loch
. Ce }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
livre}{\rtlch \ltrch\lang3084\loch
 ne peut m\u234\'eame pas envisager de commencer \u224\'e0 \u233\'e9num\u233\'e9rer }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
tous les artifices qu\u8217\'92on conna\u238\'eet }{\rtlch \ltrch\lang3084\loch
de nos jours, }{\rtlch \ltrch\lang3084\loch
ils sont trop }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
nombreux }{\rtlch \ltrch\lang3084\loch
et la liste est en \u233\'e9volution continuelle. N\u233\'e9anmoins, il y a certains idiomes importants que vous verrez tout le temps, }{\rtlch \ltrch\lang3084\loch
il serait donc bon }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
de les traiter ici}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_01}{\*\bkmkend p9_05_01}\rtlch \ltrch\fs23\b\loch
9.5.1\tab Multiplier }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ans MUL et IMUL}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous jetez un coup d'\u339\'9cil au temps employ\u233\'e9 pour l'instruction de multiplication, vous remarquerez qu'il est tr\u232\'e8s long. Sur le 80x86, seules les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
idiv}{\loch
 emploient plus de temps. }{\rtlch \ltrch\lang3084\loch
\u192\'c0 l\u8217\'92heure de multiplier par une constante, vous pouvez }{\loch
\u233\'e9viter la p\u233\'e9nalit\u233\'e9 des performances, en utilisant des d\u233\'e9calages, des additions et des soustractions pour effectuer une multiplication.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Souvenez-vous que l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 produit le m\u234\'eame effet que multiplier l'op\u233\'e9rande sp\u233\'e9cifi\u233\'e9e par deux. D\u233\'e9caler de deux positions, a pour effet de multiplier par quatre. Et le faire de trois posions a comme r\u233\'e9sultat de multiplier par 8. En g\u233\'e9n\u233\'e9ral, d\u233\'e9caler une op\u233\'e9rande de }{\rtlch \ltrch\i\loch
n }{\loch
bits, \u233\'e9quivaut \u224\'e0 multiplier cette op\u233\'e9rande par 2}{\rtlch \ltrch\super\loch
n}{\loch
. Toute valeur peut \u234\'eatre multipli\u233\'e9e par une constante donn\u233\'e9e en utilisant une suite de d\u233\'e9calages et d'additions ou de d\u233\'e9calages et de soustractions. Par exemple, pour multiplier le contenu de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 par }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
10}{\loch
, il vous suffit de multiplier la valeur par }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
8}{\loch
 et ensuite lui additionner la m\u234\'eame valeur multipli\u233\'e9e par deux, }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
c\u8217\'92est-\u224\'e0-dire}{\loch
 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
10*ax=8*ax+2*ax}{\loch
. Le code pour obtenir ceci est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab \tab ; Multiplication de ax par 2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax\tab \tab ; Garder la valeur }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
obtenue dans bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab ax, 1\tab \tab ; }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
R\u233\'e9p\u233\'e9ter, ce qui correspond \u224\'e0 multiplier }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
\tab \tab \tab ; la valeur originale par 4. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab \tab ; Multiplier ax par }{\rtlch\dbch\af20\langfe1081\dbch\af20\afs20\hich\af8 \ltrch\cf0\fs18\lang3084\loch\f8\loch
8, selon le m\u234\'eame proc\u233\'e9d\u233\'e9.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add\tab ax, bx\tab \tab ; Additionner avec 2*AX pour avoir 10*AX}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 (}{\rtlch \ltrch\lang3084\loch
ainsi que tout autre registre}{\loch
) peut \u234\'eatre multipli\u233\'e9 par toute valeur constante beaucoup plus rapidement \u224\'e0 l'aide de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 qu'en utilisant mul. Ceci semble difficile \u224\'e0 croire, car mul ne requiert que deux instructions : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab bx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Cependant, si vous regardez les temps d'ex\u233\'e9cution, la s\u233\'e9quence avec les d\u233\'e9calages }{\rtlch \ltrch\lang3084\loch
est beaucoup plus rapide }{\loch
que l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mul}{\loch
, et ceci }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
dans}{\loch
 la plupart des processeurs. }{\rtlch \ltrch\lang3084\loch
Le code est \u233\'e9videmment un peu plus long \u224\'e0 \u233\'e9crire}{\loch
, mais }{\rtlch \ltrch\lang3084\loch
il en vaut la peine, consid\u233\'e9rant ce qu\u8217\'92on gagne en performance}{\loch
. }{\rtlch \ltrch\lang3084\loch
\u201\'c9videmment, }{\loch
sur les processeurs les plus recents, l'instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mul}{\loch
 est bien plus rapide que sur les anciennes machines, cependant la voie des d\u233\'e9calage est encore plus rapide. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez \u233\'e9galement vous servir de la soustraction pour effectuer la multiplication. Consid\u233\'e9rez la multiplication suivante :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, ax\tab \tab ; Enregistre AX * 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab \tab ; AX := AX * 2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab \tab ; AX := AX * 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab \tab ; AX := AX * 8}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, bx\tab \tab ; AX := AX * 7}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Ceci vient du fait que }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax*7 = (ax*8)-ax}{\loch
.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une erreur courante }{\rtlch \ltrch\lang3084\loch
de d\u233\'e9butant }{\loch
et de soustraire ou additionner 1 ou 2 au lieu de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax*1}{\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax*2}{\loch
. Ce qui suit }{\rtlch \ltrch\i\loch
ne calcule pas}{\loch
 ax*7 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1\tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab ax, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub\tab ax, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
mais il calcule }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
(8*ax)-1}{\loch
, c'est-\u224\'e0-dire, quelque chose de compl\u233\'e9tement diff\u233\'e9rent (sauf si }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax = 1}{\loch
, \u233\'e9videmment). }{\rtlch \ltrch\lang3084\loch
Gardez cela \u224\'e0 l\u8217\'92esprit }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
quand vous utilisez }{\loch
les d\u233\'e9calages, les additions et les soustractions pour faire une multiplication. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour effectuer certains produits sur les 80386 et ult\u233\'e9rieurs, vous pouvez utiliser }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
lea}{\loch
 aussi.}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
L\u8217\'92astuce consiste \u224\'e0 utiliser le }{\loch
mode d'indexage scalaire. Les exemples suivants montrent certains cas simples :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [ecx][ecx] \tab ;EAX := ECX * 2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [eax]eax*2] \tab ;EAX := EAX * 3}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [eax*4] \tab \tab ;EAX := EAX * 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [ebx][ebx*4] \tab ;EAX := EBX * 5}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [eax*8] \tab \tab ;EAX := EAX * 8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab eax, [edx][edx*8] \tab ;EAX := EDX * 9}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_02}{\*\bkmkend p9_05_02}\rtlch \ltrch\fs23\b\loch
9.5.2\tab Division }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ans DIV et IDIV}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 peut \u234\'eatre utilis\u233\'e9e pour simuler une multiplication par certaines puissances de deux, les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shr}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sar}{\loch
 peuvent servir \u224\'e0 simuler une division par }{\rtlch \ltrch\lang3084\loch
la m\u234\'eame puissance}{\loch
. Malheureusement, vous ne pouvez pas utiliser des d\u233\'e9calages, des additions et des soustractions pour effectuer une division par une constante arbitraire aussi facilement qu'il le serait avec la multiplication.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre moyen d'effectuer la division est d'utiliser les instructions de multiplication. Vous pouvez diviser par une certaine valeur en multipliant par son r\u233\'e9ciproque. L'instruction de multiplication est marginairement plus rapide que celle de division et multiplier par un r\u233\'e9ciproque est au moins toujours plus rapide que diviser. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant vous pourriez vous demander : }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
comment peut-on multiplier par un r\u233\'e9ciproque si les valeurs qu'on utilise sont toutes des entiers ?}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\rtlch \ltrch\lang3084\loch
 }{\loch
La r\u233\'e9ponse est qu'on doit tricher pour le faire. Si on veut multiplier par 1/10, il n'y a pas de moyen pour charger cette valeur dans un registre avant d'effectuer la division. N\u233\'e9anmoins, on peut multiplier 1/10 par dix, effectuer notre multiplication et ensuite diviser le r\u233\'e9sultat par 10 pour obtenir le r\u233\'e9sultat final. Certes, cela ne vous avance en rien car vous vous trouvez \u224\'e0 effectuer une addition et une division suppl\u233\'e9mentaires. Cependant, supposez de devoir multiplier 1/10 par 65536 (6553), effectuer notre multiplication et ensuite diviser par 65536. Ceci produit encore la bonne op\u233\'e9ration et, si vous traitez le probl\u232\'e8me correctement, vous pouvez obtenir l'op\u233\'e9ration de division gratuitement. Consid\u233\'e9rez le code suivant qui divide ax par dix :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab dx, 6554\tab ; Arrondissement de 65536 / 10}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul \tab dx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
Ce code laisse }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax/10}{\loch
 dans le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
dx}{\loch
.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprendre comment cela fonctionne, consid\u233\'e9rez ce qui arrive en mulipliant }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 par 65536 (10000h). Ceci passe simplement }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 dans }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
dx}{\loch
 et met }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 }{\rtlch \ltrch\lang3084\loch
\u224\'e0 z\u233\'e9ro. Puisque }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mul}{\rtlch \ltrch\lang3084\loch
 est un peu plus rapide que }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\rtlch \ltrch\lang3084\loch
, utiliser cette technique r\u233\'e9sulte plus rapide qu'utiliser une simple instruction de division. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Multiplier par un r\u233\'e9ciproque fonctionne bien quand vous avez besoin d'une division par une constante. Vous pourriez m\u234\'eame l'utiliser pour diviser par une variable, mais les avantages obtenus par cette technique ne sont convenables que quand on se trouve \u224\'e0 devoir r\u233\'e9p\u233\'e9ter l'op\u233\'e9ration beaucoup de fois (par la m\u234\'eame valeur). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_03}{\*\bkmkend p9_05_03}\rtlch \ltrch\fs23\b\loch
9.5.3\tab Utiliser AND pour }{\rtlch \ltrch\fs23\lang3084\b\loch
C}{\rtlch \ltrch\fs23\b\loch
alculer les }{\rtlch \ltrch\fs23\lang3084\b\loch
R}{\rtlch \ltrch\fs23\b\loch
estes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L}{\rtlch \ltrch\lang3084\loch
'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\rtlch \ltrch\lang3084\loch
 peut \u234\'eatre exploit\u233\'e9e pour calculer rapidement des restes de la forme : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dest\tab := dest MOD 2}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\super\fs18\loch\f8\loch
n}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour obtenir un reste avec l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
, il suffit d'ex\u233\'e9cuter cette instruction avec la valeur 2}{\rtlch \ltrch\super\loch
n}{\loch
 - 1. Par exemple, pour trouver }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax = ax mod 8}{\loch
, faites}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and\tab ax, 7}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
D'autres exemples :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 3 \tab \tab ; AX := AX mod 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 0Fh \tab ; AX := AX mod 16}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 1Fh \tab ; AX := AX mod 32}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 3Fh \tab ; AX := AX mod 64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 7Fh \tab ; AX := AX mod 128}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, 0 \tab \tab ; AX := AX mod 256}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3402\ri0\lin3402\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; (M\u234\'eame que AX and 0FFh)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_04}{\*\bkmkend p9_05_04}\rtlch \ltrch\fs23\b\loch
9.5.4\tab Impl\u233\'e9menter des }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ompteurs }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
odulo-}{\rtlch \ltrch\fs23\lang3084\b\loch
n}{\rtlch \ltrch\fs23\b\loch
 avec AND}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous voulez impl\u233\'e9menter une variable compteur pouvant s'incr\u233\'e9menter jusqu'\u224\'e0 2}{\rtlch \ltrch\super\loch
n}{\loch
 - 1 et ensuite se r\u233\'e9initialiser \u224\'e0 z\u233\'e9ro, le code \u224\'e0 utiliser est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
inc\tab CounterVar}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab and \tab CounterVar, nBits}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
nBits}{\loch
 est une valeur binaire contenant }{\rtlch \ltrch\i\loch
n}{\loch
 fois des bits justifi\u233\'e9s \u224\'e0 droite dans le nombre. Par exemple, pour cr\u233\'e9er un compteur qui proc\u232\'e8de de fa\u231\'e7on cyclique de 0 \u224\'e0 15 on peut utiliser ce qui suit : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
inc\tab CounterVar}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab and \tab CounterVar, 00001111b}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_05}{\*\bkmkend p9_05_05}\rtlch \ltrch\fs23\b\loch
9.5.5\tab Tester une }{\rtlch \ltrch\fs23\lang3084\b\loch
v}{\rtlch \ltrch\fs23\b\loch
aleur en }{\rtlch \ltrch\fs23\lang3084\b\loch
pr\u233\'e9cision}{\rtlch \ltrch\fs23\b\loch
 \u233\'e9tendue pour 0FFFF..FFh}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 peut \u234\'eatre utilis\u233\'e9e pour tester rapidement si une valeur multi-mots contient des 1 dans toutes ses positions binaires. Chargez simplement le premier mot dans le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 et ensuite effectuez un AND entre le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 et tous les mots restant dans la structure de donn\u233\'e9es. Quand l'op\u233\'e9ration AND est compl\u232\'e8te, le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 contiendra 0FFFFh seulement si tous les mots de la structure contenaient 0FFFFh. Par exemple : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, word ptr var}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, word ptr var+2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, word ptr var+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\li1702\ri0\lin1702\rin0\fi0{\rtlch \ltrch\fs12\lang1033\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, word ptr var+n}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab ax, 0FFFFh}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
je \tab Is0FFFFh}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_06}{\*\bkmkend p9_05_06}\rtlch \ltrch\fs23\b\loch
9.5.6\tab Op\u233\'e9rations TEST}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous vous rappelez bien, l'instruction }{\rtlch \ltrch\i\loch
test}{\loch
 n'est autre chose qu'une instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 qui n'enregistre pas le r\u233\'e9sultat de l'op\u233\'e9ration (au moins, sauf les r\u233\'e9glages des flags). Par cons\u233\'e9quent, beaucoup de ce qui a \u233\'e9t\u233\'e9 dit \u224\'e0 propos de l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 (sp\u233\'e9cialement pour ce qui concerne la fa\u231\'e7on d'affecter les flags), s'applique aussi pour l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\loch
. Cependant, puisque l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\loch
 n'affecte pas l'op\u233\'e9rande de destination, des test sur plusieurs bits peuvent \u234\'eatre effectu\u233\'e9s sur la m\u234\'eame valeur. Consid\u233\'e9rez le code suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
test \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz \tab Bit0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
test \tab ax, 2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz \tab Bit1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
test \tab ax, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz \tab Bit3}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
etc.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ce code peut \u234\'eatre utilis\u233\'e9 pour tester efficacement chaque bit du registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\rtlch \ltrch\lang3084\loch
 (ou de tout autre type d'op\u233\'e9rande). Notez que vous ne pouvez pas utiliser la paire }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\rtlch \ltrch\lang3084\loch
 / }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cmp}{\rtlch \ltrch\lang3084\loch
 pour faire le test d'une valeur sp\u233\'e9cifique dans une cha\u238\'eene de bits (comme vous le feriez avec une paire }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\rtlch \ltrch\lang3084\loch
 / }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cmp}{\rtlch \ltrch\lang3084\loch
). Puisque }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\rtlch \ltrch\lang3084\loch
 ne balaye pas tout nombre de bits non voulu, l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cmp}{\rtlch \ltrch\lang3084\loch
 ferait la comparaison sur la valeur originale, au lieu que sur la valeur modifi\u233\'e9e. Pour cette raison, on utilise normalement l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\rtlch \ltrch\lang3084\loch
 rien que pour voir si un bit est activ\u233\'e9 ou si un groupe de bits le sont. Certes, avec un processeur 80386 ou sup\u233\'e9rieur on peut \u233\'e9galement utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
bt}{\rtlch \ltrch\lang3084\loch
 pour tester des bits individuels dans une op\u233\'e9rande. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une autre application importante de l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\rtlch \ltrch\lang3084\loch
 est de comparer efficacement un registre avec z\u233\'e9ro. L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\rtlch \ltrch\lang3084\loch
 suivante active le }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
zero flag}{\rtlch \ltrch\lang3084\loch
 si et seulement si }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\rtlch \ltrch\lang3084\loch
 contient z\u233\'e9ro (tout AND sur la m\u234\'eame valeur produit la valeur origin}{\rtlch \ltrch\lang3082\loch
ale}{\rtlch \ltrch\lang3084\loch
 ; ceci met le drapeau }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
zero}{\rtlch \ltrch\lang3084\loch
 \u224\'e0 1 seulement si cette valeur est z\u233\'e9ro) :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab test \tab ax, ax}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test }{\loch
est plus courte que }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab ax, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
ou}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp\tab eax, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
bien que ce ne soit pas mieux que }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que vous pouvez utiliser les instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
 pour tester une valeur de z\u233\'e9ro de fa\u231\'e7on identique qu'avec }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
test}{\loch
. Cependant, sur les processeurs \u224\'e0 pipeline, comme le 80486 ou le Pentium, il y a moins de risques de provoquer un blocage du pipeline, puisqu'elle ne garde aucun r\u233\'e9sultat dans le registre de destination. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_05_07}{\*\bkmkend p9_05_07}\rtlch \ltrch\fs23\b\loch
9.5.7\tab Tester les }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ignes avec XOR}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous souvenez-vous des maux associ\u233\'e9s avec les multiplications sign\u233\'e9es en multipr\u233\'e9cision ? Vous aviez besoin de d\u233\'e9terminer le signe du r\u233\'e9sultat, saisir la valeur absolue des op\u233\'e9randes, les multiplier et enfin ajuster le signe du r\u233\'e9sultat comme d\u233\'e9termin\u233\'e9 avant l'op\u233\'e9ration de multiplication. Le signe du produit de deux nombres est simplement un OR exclusif de leurs signes avant la multiplication. Par cons\u233\'e9quent, vous pouvez utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xor}{\loch
 pour d\u233\'e9terminer le signe du produit de deux nombres \u224\'e0 pr\u233\'e9cision \u233\'e9tendue. Par exemple :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
32x32 Multiplication :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, byte ptr Oprnd1+3}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, byte ptr Oprnd2+3}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab cl, al \tab \tab \tab ; Enregistrement du signe}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Effectuer la multiplication ici (sans oublier de prendre la valeur absolue des}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; deux op\u233\'e9randes avant d'effectuer la multiplication).}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Maintenant, ajuster le signe.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab cl, 0 \tab \tab \tab ; V\u233\'e9rification du bit de signe}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jns \tab ResultIsPos}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; N\u233\'e9gation du produit ici.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs12\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ResultIsPos:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_06}{\*\bkmkend p9_06}\rtlch \ltrch\fs23\b\loch
9.6\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
asquage}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un }{\rtlch \ltrch\i\loch
masque}{\loch
 est une valeur utilis\u233\'e9e pour forcer certains bits \u224\'e0 valoir z\u233\'e9ro ou un \u224\'e0 l'int\u233\'e9rieur d'une certaine autre valeur. Un masque, affecte typiquement certains bits dans une op\u233\'e9rande (en les for\u231\'e7ant \u224\'e0 z\u233\'e9ro ou \u224\'e0 un) et laisse les autres bits inchang\u233\'e9s. L'utilisation appropri\u233\'e9e des masques vous permet d'}{\rtlch \ltrch\i\loch
extraire}{\loch
 des bits d}{\rtlch \ltrch\lang3084\loch
'une valeur, d'}{\rtlch \ltrch\lang3084\i\loch
ins\u233\'e9rer}{\rtlch \ltrch\lang3084\loch
 des bits dans une valeur, et de compacter ou d\u233\'e9compacter des valeurs. Les sections suivantes d\u233\'e9crivent ces op\u233\'e9rations en d\u233\'e9tail. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_06_01}{\*\bkmkend p9_06_01}\rtlch \ltrch\fs23\b\loch
9.6.1\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
asquage avec }{\rtlch \ltrch\fs23\lang3084\b\loch
l'}{\rtlch \ltrch\fs23\lang3082\b\loch
i}{\rtlch \ltrch\fs23\lang3082\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 AND}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous jetez un coup d}{\rtlch \ltrch\lang3084\loch
'\u339\'9cil sur la table de v\u233\'e9rit\u233\'e9 de l'op\u233\'e9ration AND du chapitre 1, vous noterez que si vous mettez une des deux op\u233\'e9randes (ou les deux) \u224\'e0 z\u233\'e9ro, le r\u233\'e9sultat est toujours faux. Si vous mettez une op\u233\'e9rande \u224\'e0 1, le r\u233\'e9sultat est toujours la valeur de l'autre op\u233\'e9rande. On peut exploiter cette propri\u233\'e9t\u233\'e9 de l'op\u233\'e9ration AND, pour forcer s\u233\'e9lectivement certains bits \u224\'e0 valoir z\u233\'e9ro dans une valeur sans affecter les autres bits. Ceci est nomm\u233\'e9 }{\rtlch \ltrch\lang3084\i\loch
masquage}{\rtlch \ltrch\lang3084\loch
 de bits. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme exemple, consid\u233\'e9rez le code ASCII des chiffres "0" \u224\'e0 "9". Leurs codes correspondent \u224\'e0 la plage 30h..39h. Pour convertir un code ASCII en sa valeur num\u233\'e9rique correspondante, il suffit de soustraire 30h du code ASCII. Et ceci peut \u234\'eatre fait tr\u232\'e8s facilement en effectuant un AND entre le code ASCII et la valeur 0Fh. Ceci balaie les quatre bits forts du code en produisant la valeur num\u233\'e9rique correspondante. Vous auriez pu utiliser l'instruction de soustraction, mais il est d'usage conventionnel utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\rtlch \ltrch\lang3084\loch
 pour obtenir ce but. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_06_02}{\*\bkmkend p9_06_02}\rtlch \ltrch\fs23\b\loch
9.6.2\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
asquage avec }{\rtlch \ltrch\fs23\lang3084\b\loch
l'}{\rtlch \ltrch\fs23\lang3082\b\loch
i}{\rtlch \ltrch\fs23\lang3082\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 OR}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme on peut utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 pour forcer un certain nombre de bits s\u233\'e9lectionn\u233\'e9s \u224\'e0 valoir z\u233\'e9ro, on peut utiliser l'instruction }{\rtlch\dbch\af18\langfe1033\dbch\af26\afs20\hich\af6 \ltrch\cs20\dbch\af18\loch\f6\fs20\cf0\fs20\lang3082\loch\f6\loch
OR}{\loch
 pour forcer un certain nombre de bits \u224\'e0 valoir un. Cette op\u233\'e9ration est communement appel\u233\'e9e }{\rtlch \ltrch\i\loch
masking on bit}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous souvenez-vous l'op\u233\'e9ration de masquage effectu\u233\'e9e \u224\'e0 l'aide de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
 pour convertir le code ASCII d'un nombre en sa valeur num\u233\'e9rique correspondante ? On peut utiliser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
 pour produire l'effet contraire, \u224\'e0 savoir, convertir une valeur num\u233\'e9rique de 0 \u224\'e0 9 en son code ASCII correspondant. On fait ceci en effectuant un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
 entre la valeur num\u233\'e9rique et la constante hexad\u233\'e9cimale 30h. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_07}{\*\bkmkend p9_07}\rtlch \ltrch\fs23\b\loch
9.7\tab Compacter et }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
\u233\'e9compacter des }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ypes de }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'une des utilisations fondamentales des op}{\rtlch \ltrch\lang3084\loch
\u233\'e9rations de d\u233\'e9calage et de rotation est justement le compactage des donn\u233\'e9es. Les types de donn\u233\'e9es byte et word sont choisis le plus souvent, car l'architecture 80x86 est compatible avec ces tailles du point de vue mat\u233\'e9riel. Si vous n'avez pas besoin exactement de huit ou de seize bits, utiliser un octet ou un mot pour stocker votre donn\u233\'e9e pourra\u238\'eet \u234\'eatre un gaspillage d'espace. Le compactage vous donne l'habilet\u233\'e9 d'ins\u233\'e9rer deux ou plus valeurs dans un octet ou un mot. Le seul inconv\u233\'e9nient en faisant ceci est la perte de performance, car cela prend du temps pour compacter et d\u233\'e9compacter une donn\u233\'e9e. N\u233\'e9anmoins, pour les applications o\u249\'f9 la vitesse ne joue pas un r\u244\'f4le critique (ou pour ces portions de l'application o\u249\'f9 la vitesse n'est pas un facteur cl\u233\'e9), l'\u233\'e9conomie de l'usage de la m\u233\'e9moire peut justifier l'exigence de compacter des donn\u233\'e9es. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le type de donn\u233\'e9es qui prend le plus d'avantage du compactage est le type bool\u233\'e9en. En effet, un seul bit est requis pour repr\u233\'e9senter les \u233\'e9tats VRAI ou FAUX. Par cons\u233\'e9quent, on peut garder jusqu'\u224\'e0 huit valeurs bool\u233\'e9ennes dans un seul octet. Ceci repr\u233\'e9sente une raison de compression de 8:1, donc, un tableau compact\u233\'e9 de donn\u233\'e9es bool\u233\'e9ennes, ne requiert que 1/8 d'espace d'un tableau correspondant non compact\u233\'e9 (o\u249\'f9 chaque variable bool\u233\'e9enne consomme un octet). Par exemple, ce tableau en Pascal :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab B:packed arrray[0..31}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs20\lang3084\loch\f8\loch
] of boolean;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
ne demande que quatre octets, si compact\u233\'e9 \u224\'e0 raison d'une valeur par bit. Alors qu'une valeur par octet consommerait 32 octets.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un tableau bool\u233\'e9en compact\u233\'e9 requiert deux op\u233\'e9rations. Il faut d'abord ins\u233\'e9rer une valeur dans la variable compact\u233\'e9e (souvent appel\u233\'e9e }{\rtlch \ltrch\i\loch
variable de champ compact\u233\'e9e}{\loch
) et ensuite il faut pouvoir extraire cette valeur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ins\u233\'e9rer une valeur dans un tableau bool\u233\'e9en compact\u233\'e9, il faut aligner le bit source avec sa position dans l'op\u233\'e9rande de destination et ensuite stocker ce bit dans cette op\u233\'e9rande. Vous pouvez r\u233\'e9aliser ceci avec une s\u233\'e9quence d'instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shift}{\loch
. La premi\u232\'e8re \u233\'e9tape consiste \u224\'e0 masquer le bit correspondant dans la destination. Pour cela, on utilise une instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
and}{\loch
. Ensuite, l'op\u233\'e9rande source est d\u233\'e9cal\u233\'e9e de fa\u231\'e7on \u224\'e0 \u234\'eatre align\u233\'e9e avec sa position de destination. Et finalement l'op\u233\'e9rande source est envoy\u233\'e9e dans l'op\u233\'e9rande de destination \u224\'e0 l'aide d'un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
or}{\loch
. Par exemple, si vous voulez ins\u233\'e9rer le bit z\u233\'e9ro du registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 dans le cinqui\u232\'e8me bit du registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cx}{\loch
, on pourrait se servir du code suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab cl, 0DFh \tab ; Nettoyer le cinqui\u232\'e8me bit (de destination)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, 1 \tab \tab ; Nettoyer tout dans al, sauf le bit source.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ror \tab al, 1 \tab \tab ; D\u233\'e9placer dans le bit 7}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab al, 1 \tab \tab ; D\u233\'e9placer dans le bit 6}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab al, 1 \tab \tab ; D\u233\'e9placer dans le bit 5}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab cl, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce code est un peu contourn\u233\'e9. Il fait tourner la donn\u233\'e9e vers la droite au lieu que la d\u233\'e9caler dans la gauche, car ceci requiert moins d'instructions de d\u233\'e9calage et de rotation. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour extraire une valeur bool\u233\'e9enne, il vous suffira }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang1033\loch
d\u8217\'92}{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
effectuer}{\loch
 l'op\u233\'e9ration inverse. D'abord, vous d\u233\'e9placez le bit d\u233\'e9sir\u233\'e9 dans le bit z\u233\'e9ro et ensuite vous masquez tous les autres bits. Par exemple, pour extraire le contenu du cinqui\u232\'e8me bit du registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
cx}{\loch
 et le placer dans le bit z\u233\'e9ro du registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
, faites :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, cl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab al, 1 \tab ; Bit 5 \u224\'e0 bit 6}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab al, 1 \tab ; Bit 6 \u224\'e0 bit 7}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rol \tab al, 1 \tab ; Bit 7 \u224\'e0 bit 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 1 \tab ; Tout nettoyer sauf le bit z\u233\'e9ro.}{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
 }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour tester une variable dans un tableau compact\u233\'e9, vous n'avez pas besoin d'extraire le bit d\u233\'e9sir\u233\'e9, mais vous pouvez le tester \u224\'e0 sa place. Par exemple, pour tester la valeur du bit cinq pour voir si elle est z\u233\'e9ro ou un, utilisez :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
test \tab cl, 00100000b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop470\shpbottom2295\shpbxcolumn\shpbxignore\shpleft-121\shpright9277{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex86\picscaley86\piccropl0\piccropr0\piccropt0\piccropb0\picw726\pich141\picwgoal10890\pichgoal2115\pngblip
89504e470d0a1a0a0000000d49484452000002d60000008d0803000000a418cde900000300504c54450000008000000080008080000000808000800080808080
80c0c0c0ff000000ff00ffff000000ffff00ff00ffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000330000660000990000cc0000ff00330000333300336600339900
33cc0033ff0066000066330066660066990066cc0066ff0099000099330099660099990099cc0099ff00cc0000cc3300cc6600cc9900cccc00ccff00ff0000ff
3300ff6600ff9900ffcc00ffff3300003300333300663300993300cc3300ff3333003333333333663333993333cc3333ff3366003366333366663366993366cc
3366ff3399003399333399663399993399cc3399ff33cc0033cc3333cc6633cc9933cccc33ccff33ff0033ff3333ff6633ff9933ffcc33ffff66000066003366
00666600996600cc6600ff6633006633336633666633996633cc6633ff6666006666336666666666996666cc6666ff6699006699336699666699996699cc6699
ff66cc0066cc3366cc6666cc9966cccc66ccff66ff0066ff3366ff6666ff9966ffcc66ffff9900009900339900669900999900cc9900ff993300993333993366
9933999933cc9933ff9966009966339966669966999966cc9966ff9999009999339999669999999999cc9999ff99cc0099cc3399cc6699cc9999cccc99ccff99
ff0099ff3399ff6699ff9999ffcc99ffffcc0000cc0033cc0066cc0099cc00cccc00ffcc3300cc3333cc3366cc3399cc33cccc33ffcc6600cc6633cc6666cc66
99cc66cccc66ffcc9900cc9933cc9966cc9999cc99cccc99ffcccc00cccc33cccc66cccc99ccccccccccffccff00ccff33ccff66ccff99ccffccccffffff0000
ff0033ff0066ff0099ff00ccff00ffff3300ff3333ff3366ff3399ff33ccff33ffff6600ff6633ff6666ff6699ff66ccff66ffff9900ff9933ff9966ff9999ff
99ccff99ffffcc00ffcc33ffcc66ffcc99ffccccffccffffff00ffff33ffff66ffff99ffffccffffff4462b0500000001174524e53ffffffffffffffffffffff
ffffffffff0025ad996200000001624b47440088051d480000195649444154789ced5dcd7ada48d3cde5f4fd904d7223f6c67813df88bd31de9825de786ee0c5
1b5ae48ddade6439de782162891ff1d5a9ead60f6043e6cb336ef4d699673020904aada3d3a7aabbc3a774ad50740d9f8c42d1397c2acd47df590ac51f86f954
28ad155d83f9942aad155d83f9942bad155d83f9e494d68aae41d55ad141682544d141a85a2b3a08f5d68a0e42d55ad14128ad151d849a104507a16aade820b4
c0a7e820744e88a283309f12a5b5a26b506fade82054ad151d44dcdefaed453d7f7cd37bd083fdc6c13e9a338cb857c7bc199af9e39bdeb9207ab0df39d85b9b
fe5544aed68fa3c7fbc7d1e87ef48487113dfd890708469a58973b6b9334498b12cff33ca507478d9e94496ef3b4b036cd135be6f491a4b4a9e54d3629f2dc15
f411fe80e5075cfc79369fd2ff1e8bf97c467fb2390ec6ef66d838a50df46746ff67f411da237f0c5bf177c69f9ae2256de25dd301e8a014074564396a1c6c33
ea224d11350eb619755ea412350ec6bba6c7591529478d4dada8fd07e7733eb38da87db4d28cbb1b046dd58eba6e6bdad48eba6aeb78681db55a8f9ec72fe3e7
177a7cf90ffd79797979fecff8f911d7a328cbb2a08b51bac2d1ff05bd288bd249a3d3bbfca2c09bf8001e8b9436597a1b9f77057f0ddfc21f5cfc6cb97a5dae
56abe56ab9a4bfafcbe50f7ac1177fbea457f4263e4178e567abe5eb14745af9effc58f12756b28f1978c147e0401d8eeb5fe060b61d3547448f38d846d44e22
742e9583c91196cbff4aa0af8809f750d68c9ab7ad1035d3ba1d353e802071b0dced6e900212d08aba6a6bb4703beaaaade3a175cc9510f3d70b249a749afe40
b79ff077ccb44e0b97e45093845482a4c4e5ac8c0e9a46da41a252e4f4664adb729b4014f95259678bc2b2d6d0a694be4262053ad1c55f8aa6cda70d457b155a
ffa0578b0c62b8a864729a319da6cba0e4bc89ffce6593a58b9e42d3487b1dc59a53ac2ee17b2829db51a70e8a57b05ab7a226f1c4e71035ed71b1f487cfe458
b329247a09b59ebed6517b5526195fc99935a3e62fd3f798d644cc9d0d82666c455db575e9a4191b5187b62ee2a175dc26e4efc79fa3d113f1f9e788b93dbabf
1bfd2d2684bac8d471e788ee9ae8012aa47c3d127082dfa53713be62f860c96a9da669816b61f332a1cb815ed50aad574c04264036ff2e2c58ced8842c43874f
7cc81673ef01566c427e81c8d345e64d0cfd47db561072ec1addb875f40806171467ce077365336aa24e0ece1472c336a34e60551035df95d92fcfccd93c1095
9efde0389675d442777c40d47ad58c7ae14f65c96a5dee6e1096e4a21175d5d6dce911b9eba8abb68e88d6310f9e9bd17834ba7bbc67bdbe7ffa7977fff838fa
f9ccb44e5ccaaece42f4e8112fe8a14cd0f9178e1861e92a25dcf8a426744df87a385c3ff28109b942fa3cfc2b0ca3576b91da45ad868b9578eb1573621a8c77
263700aba40868d0d039bb5acff8c4c18bd2ffb92d0b0a876c6c928a09215e34a2e670481b4b39b366d436157289a79dafc43cf34116dec84bd740a156514ba7
81685efd9935a20e5afecb770d3b1b041240f1d451576d2d36af68445db5754426246ab57e7ab9e79cf189bc078bf51dfd3fbe134d23214cc1006a516a5ad2b7
ca84b882e42e4f58f1d0815b1613e9589de5440db29423352391cabd5abf86948fd9b9e0ee3a78eb40db8588b1f09f25794adba635b17d77bfcaa417b7a025f5
f348bb0a1cd18a0969479d825bce26a2d665336a166e895a24998f04b1f6496106a7e4191fa20eb758361713b26a468d0e876f06f1d6bb1b44f29046d4555bb3
09495d23eabaade3a175cc1353cdfd0bf1f80ee58ffb3b3c10a9ff1abd3c8aa6b1a583c6947080a430241749e1386544af482ec5a20e0187889c7e8d4b95ca2b
74a189680fdc6e114c08f321481a38f02313b50675179ef073dfc38b4ace57dcab7fc71bb507582e58ee48d3c859a307a7cede72945ead5d336af6dff0b7ccb4
a219356de08d920c93299a7a319ef97ac7c2770db8bd42d4921d64df3dadb355336aef43164bc9bcedce062984bb75d4555b17e80f493eeaa8ebb68e87d651a7
8ca367223269f4e348acf51db4db9b10f29c09c424e74c06970357804d61b2c63b39f99482bbd614deb4e04da4e748c1f045ea3849654ac862f0d6d9345c7422
28ebdbcaabb538d20597d6688b88de4a2a10812c5910f4cc33cda13e67c16cf6a04c05ebf860c4dd46d4290c6cc2424e595cd98c3a15c23851c96c15123e7fff
70e712cc50157565bc17de5b37a30e99ed2b9b9072778358c9bceba8abb62e73168e46d4555bab093908e6718c7af523084d62fd173f1bbd8ce47ad0f5cef982
909280b4744528a1c9594b60fd605e4bcec8a8aba4fed42b90e466c412ba2ab41398d8c47b6be6e6340bd61a0cf026e4b5ae4757ee1a9c67b59ed644ca42cd98
37e528064300e12412b612c4523121ae1d7562f9a5f88266d4c468dc9cc81a71b01f21759d8512349c469532faa8bd5467ec34ea7e28dc7cacdb53516b97ee6c
105ffeafa36eb43536158da8abb68e48ade3ae5bbf3c91af860161d5c6c8cce39d981062ae8503453b5bce1a2120099b42d2125142ea569110f1a846219b0ae6
99631309ef5872d10a179f8c8328b2f065e119236acdfa98558c97842cd06956d5242ac1f629a3247e96884aa682d48ea396ba75336abae7d0995b4feb66d45c
2e413190b3b86cc97d017a0db9c9587d57b5195ad411327f5755325c459df9ac7325463ed9d920529c6e461dda9a7b8db268445db575446a6de3086427cc68fc
4844967cf19e9efd056a8f45ad5d89ca539e701f4a17054a42ce8f9d06652f749512e4e8692aa90d7a53f6d69cfaa7181443c696a3069756de3af3977f1a32c7
d514075b2c3d17164c23eafb9956dcf913836ba79b2dfc40a5d4ad8922384e812202b911b624723057b6a34e13e45e4e4c48336acee2103c7736a2bbb5e9119b
fd2b93dbab8a7ae1cd94f7d68bd766d4e1bbbf44adf39d0de253c646d4a1ada584da8a3ab4b5a68c07c1dc3df388f96874f7f3e9511cf6dde8e5a7681aba4b14
0b9c0c18b0dc58717eeb02572347cf09e543aae36d372e55ca0ae4d33112c522afead6d0c1406d26903721814df267ea3539a8355742a622e6e2627d818f769d
f05834291da758889abb8676d47c12d4ab177266cda8fdb835f54350c9f96b164a21e813a6c26cce4f91d636bdc6546eafea86ada2ce245ea95b3b1e13df6e10
3f7455475db5b59810d788ba6aeb884c48dc29e30bf90fa273188c7942bd2fa875cea529342c4aabb9f4a485f49e5c17e38e138691675f48aec3aa532027426d
c1e52ca8d60f9e7b2a88d07de72ede9b905f5ce508dbc3a77c25240b16a4daf47dfeeb3b5f7c5c7b0c76a405e7805c4b135a17cda8732154eac2c05f1d357a79
ec20e7e198f9f27b5d6ff17e03418a905751d76ea45109a9c61939d645b6924ac8ee0609294a1575a3ad6564a08eba6a6b55eb83607e8ed94f3f8d78ced3dd3d
a78c3278ee4a361fa94b5015cea50c86610136d0a83b516b97a4cd4420b8bfb42ca4e0ea70a5e01ee101d81fd0e5ab072db2859ff0c4a31ade5ba3ca20de94a7
0bcd332970ff0a6a9d2d7ce56f162c02d7adc938d0d5273a58f86354d15c18656c479df20c80c2ca704c2b6a74f12cf79232aeaa4247e6c7f8c3ed355dd6514b
f97d11d47ab16c461d6ecda5a883ddd920097ba866d4a1ad9d30be1175d5d611a975dcdefaf91ec69ad8fc170fc7dc6340e6d9ab35352a275d68fd02dcc1f0af
0cc79015749039318c24e1f08085f58ce7e10ea28943cfe9403ba6f5f4751e86bf67d2614f43ca385d05699c4b755a2a6c52e0fb21a58730ab6ec1b332963e65
b496c79b131e94f10376923236a346ed1a3cf173429a515bae6073d46c42bce2064a67742765cb299b903a6aef95b2a609a9a25e700631f57342cadd0d2205be
46d4555bcbd49a56d4a1ad234a19a3566b4e1947775ce363adbefb496afd24053e0c0360ae2446a72d0f41a363e78938259b415ca84294121dad5c0f14a32c5c
2b8ff025289df952326477d6ecdd590865386639f3ea176a214c1a31214b36e361a6a8d4cf64a42647f287225e99233836d63221c8b4a346110dbdcf5a7c4133
6ade8cdc8c3bffe9aa2a64c87826b3fbb5ea356affefd5f9358c9fd6518733645ac3c2ef6a10b455b96e44dd686bc91aeaa8abb68e48ada3f6d68fe347193887
4e3ffaf4510a7cd4bfe35a94986266310a06c540b62363609cd6430c4bc7a555e2978cd49022390c26e432bb07f3e3f2a461426699e7f602b5e14c2a21f34aad
c35438a6d38f300c320d645a04832026840d2817862dcfa880fa257e94b119353a7e8c37864a48236a8bb9162c96b9981099549505b7539990d9aa8eba666f50
eb46d4a4f42cf66c424a97ee6c103f37bd8eba6a6b667cee1a51d76d1d0fada31e8e797a19519208a51e4979effef1e9fef9decf094137884e9a4758a8cb464d
4c263394d2a9f260016b0a661b15bec007ed8331e04c5e544852c65726c334081b93355442a6992f15231fcce403b365988b31f3c505e113a8cf9b5227c58e54
44b79401393121ada8b9c660fde039fc7633ea3461c92c53be87424e3af7e5eb6c360d83f875d49c04902b9ad6c33175d4e116f42963beb341780e422bead0d6
9cbdb4a3aeda3a1e5a47add6a3bf51d57bba7f94ea1e547be4471951edc0ba0da60779bc94fd9df333f8582579d23286f512d487ed5a260a8333a524495c11a6
8fa695090963e08b30a0f81a06cfa5cf9f55d499ceebe118af9cd38a31d5282371d272bec5a375396a1c899f98da8c3ae72190240f05be46d4ceb16f2da4f3cf
aa1817d524dada845451d766842b21b36533eae05124652cecce06f1c33175d48db6167b55475db5b5aaf5413044e191af7fa01c727fc7cb08467e59478a490a
3c11072ba3708192dc0f16385e8d840a4221b3f131782ed3453056e6e41af2dcb8dc9b423fa93a0cd0cd5875a7f5c4d4302e1e9612a07a36f3a5e4ac72e5c162
f314e89c3caac5ba1664656c5dd16dfb94b11935aff24ad8e3f3b48046d4482a41bad217f85877859b21d430ca58475d733ea875236a4988675930213b1b84e7
a6978da8abb666c6a35652455db7753cb48e5cad7984111afd48a47ec4743e527099ff2e22c39385a8ed5d52a6692a632ea4d698e28eba135277881e86c8c08b
02c3be5c4b462224f95a2ebee0fb0a3df414fe789a85e1b865581dc33dbbf0a2cabac2ea98c5b492c8299722bc09c12241ccaac89384471411134ffc80096947
cdc3ecb55ad751a7be7f4fb8c0375d06190ec38820b99f7255475d59144feb65336ade1c56c78885df6e9044caee75d4555b4b7fe81a51d76d1d0fad232ff0bd
8c9f9fc77f8f5f5e9ec7637a317ea1e732838f57fcc9ba3fbf64b0c0ca3aa94c3959080855916dceafcfb3d8c40b05f1adb062d09b90952cff5bad645522bff2
de1a2b067f54eb087fc98a45ce0be75840f8ea573156df7dc5a66a11235608ca835ff16736a2e6458485a875be1135efc489bd924064a562b5ec72e9d5ba1135
3fe5386438a615b5ff3acfe04bddee06f1cdd888ba6a6b9eb6de8aba6aeb78681df5ea98475e16c33a7dcfb2fdc406db2f99c62801921d488d93915dea0fb9d1
318188f319cc3d83dc614a250b39ac606ac30019a615d1379969f32aef0b069b5d45b5f29cdf9bcec2aa297e032a590ddf657ed5b788264c0876cd09237b0e5e
1550cacaf3cda861be296abff2bc1575091782a8f9603e6dada78570d46b59795e475dd5aff9cc36a2f6514acab8bb41d08ceda8ebb6964a4823eaaaade3a175
d4defa4d1cfb3f12d3dd837d346718914f4cfdf72ed53f841e6c6b630c50b53e007ab0df38d847738611772544a1f847d07f3155d141a85a2b3a88b80b7c2d44
62db144780b887635a88251d51c48f2332214a6bc5a188bbc0d782d25a71288ec784c4531455448fb8177d35a1b4561c8ce3f1d6118d612962c7d114f8621a9a
55c48ea3f1d6fba61c9c9ad23f1b18dbdaf26df33b0f079ff1e737777adeda473ae899d3c19e9d15e62a3ced9d6e6e34df1a2f922b63bed9cd8f6cc09a8b7776
d76fbf2e7b179b1fd98d3353f8670393b4b65c1f074f04c7a6d66f063b348156671b177993d669efe0331e9a1bffeccbc64e2f9bfb287a279364d2fb56aedfc5
49f88e35c3cd6de6ba11a0e9dbfc9bd9c7eb2fe19e7b3093f776075cb46e9b7730aef675f2a5bda57d235fc7dd791ecb9c90bd13c4ca20505b9c695f8ff5e4f3
e157c30536d84de65c34f7716ddcaecf6c621822bbd80ea029af573dec6ef3eedcc224107f878e9af3d64b6bea9ee27dbcdd8cfdd6514e4f27839bc9c3613bfd
f7712c75ebfd131fafbc785d54dda8479b447dd3ef1f7ec603bf53216e6b37cde0840afba8937a0d2d37b574dd96d731df1ee7fba2ac4ccd8ee3b6695d7c1d6c
ba923771f15633b66e1eb7dddf448563a984eca7b53563f9a41024257fda1be012b559fc65d83610efc39a5bfc293d73d28b9e317db0ae4d3a664261f6b96b7f
833d7899bded1b73e2bfb36d124ef612f15a9837f4bb1bd3ee82c16fb3f8a6e7cc81de9ace987d57b8f54a3e631ca075c6d6e407eeef63707c6afd66b83dbe94
be6bcecd20b16366e396ec6de590ef4076ea8968cda54d6d1f2f76dc1a837d268462e35ebbdfe357fdcf439b0e3cdf3614d73d9cf736d4721b56a2f2bb3bef3d
6077b29f168b0b0acc5ceedb5b809cf13034e3a5cded39e26ea9f58da17bb2bfef7c3f0e4792321eb2fc62c2e2d5ff2c2ff80f1378cbc9eeb0b66fe296fbe46b
61ce50fe4095afb6f631d9f0b3bbf0056c2ba407b05f98389e2d1b268184f732ddbbbb1e38eca4974a7bbc3b7fcbb66c4eff62576ff016c477f97b65cc36dfe1
8c5bea706dce87f67067f3afe3484cc821cb8a52a8a56b3a81f22b3ebb9551fd8609913eb9a80a2284c282335b3bb5a6b7a710b20665d6b8531a3a6ccf3c0fdb
6a5aae6d6ffffe7877e3a6edb7a77e77e7f57b3738dee1b42e21cdce34b2c1d282bf2d2f37e10699eced9f3e0a4752093968b55cbf8f96f664482efafeb35b26
e4b72ab0b253ef2493c10576fa6dd3b0a3d3eeb9ed2f6f22010fcecefdabc1f549753adbde77471570130ebb3b0d9239b8fc52efae56ebe404fb39dc84f01907
fbbf7672c6973b53d8a479bb4785e350ebc316813e902c05ce4ccce9f8c1b1ddd8b2d2bfa3d6c45757656f434ac9c629fbe08d9dde9afe5e2b0c7cbd24ba8a10
1627e6fac6e6de11edad66ec04513af5ec2f7be66a688b60426a71beeae15f8d37fdf4a000d7683ab73eeb87e7678349ee10caaecacca165c37f1dc731ca7810
aba9fb1ce641657aa7104f26f0960dfe8d021f8e3d49438fdc3b2bd7beb4dbbe356e0fede31f4c79eb4d834fcafa5b3c5c9fb0d496beb2f31e86a6bcf1818c0d
7bf1cbadbbe45b68b7dbc342c41927a1a79051a802e2dfcc484ac916d3884dc871544280bdc32883fe6df80877eaa9d999326ea77befe1aa5f0db60b596e41eb
965a3f1cac5ae459cf06210ac9c6b6d5fa9ccdf778ef30230a15376177d7ecbef2b0bb4dcfb1a354fe262efae360e5643f3788ae75239f724639d8ac6d478323
a98430f60ed6526a1312c66b52ee618f87c9b7c4f9f768ddd8e985b949ec450ff32b9a1799fafff1edc3f0e1e180218a41dff80ac7d00c6c3aeef921f026edf2
933e4a75fbaae01cd165481827b43b3be97df5bbdbac51fc86b76e9ef115f555f6fae4cbb70d5a4f30be7f58881f82e3996f7dc8f2985ea570c5a0672e2dcf96
f87f9a90f5492d9b832fe6eba4b8e8b5bb803c74f30738116bbe86a793537372917a2fd232d2c975efc0a2b035d510fbcd99e95d2561779ba11c60d46bd4cde8
069fcdd76171fdd96d747a941398f3582dc8b1a48c8288a7d628e282d25ad1411c472544a0b4561c88b8ffc5d43694d68a03715c05bea30955f1b15013a2e820
34655474109d1a8e5128044732838fa1b4561c08ad84283a08ad84283a084d19151d44b7a63a29140c556b4507a1b45674106a42141dc4310dc7e86f7d290ec4
319910a5b5e2401c53dd5a69ad3810c734834f69ad3810eaad151dc431cd09515a2b0e847a6b450771649590e38955f19138a6e118a5b5e240a85a2b3a8823ab
841c4fac8a8f84aab5a283506fade82054ad151d84d25ad141a809517410aad68a0e420b7c8a0ee2c8e6841c4fac8a8f444cff5859f5232fbb7e0210788fd66f
7d47f1bf8898bc75c5ccad1f08f5788fd6bff93b478a4e234ab5fe2714fdad9fc655741c3179ebf37d26e43dbca5f08aff45c4b43ae6ba6542ccedb06fbe0eea
f7f18b99f6d2d07bfc8b9a83afe68b3c9b7c355fc74a6b458d28d55a68ddebdbe41a3fd41a7e9efe626df153b1e3de594146a537b4f6a45fe2278a0739313b9a
d3507c3c6252ebca1e5f0aadf1b3c7a7a6a2bbe97bdd7eb874eb07feb9edc4dcac73fe8962abb456d488b212c2bf432c3fdb0d8607b5feb61e9a0bffb3c57df9
51efcbcfeb1bf911714d1915356232211b6a7d85a7288af8c2087eb69bacb5e90f1cd7fa04c1794fa2390dc5c723a6c1f38129e509f3587e8d1e4a1d5246f0bc
187feb995e4a463bb1696e734bdfe2ad37d19c86e2e311935a0f8d7718bdf375506b08b7a87841aea460dedf929bf6262485cbe637afa3390dc5c723a689a9b9
e9234b247a4fd6c15b43ad874cdc1b3221c1650fe8156e016b2ed725a78cae17cd69283e1e31a58c24bcbd87e16d5fec87b9c023461eade95b3be89df5e599ed
13a5cbfee789b59f7bc97a3d3657c9e45469ada811930921025f7c31e662c8cf85d65c1421229f5c95e797643a2ec8595f43a88bc19939b946956f3dec9bd3e1
4344a7a1f868c454b75628fe108eea1f0256280e434c29a342f1871055caa850fc19a85a2b3a08f5d68a0e42d55ad141a8b7567410710dc728147f04aad68a0e
42d55ad141a85a2b3a082df0293a889856c728147f08eaad151d844e4c557410aad68a0e422b218a0ec27c320a45e7f07ff91fa0fea72945b10000000049454e
44ae426082}}}}}
}{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
j}{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
nz \tab BitIsSet}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
Figure 8.4 Donn\u233\'e9e compact\u233\'e9e}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
D'autres types de valeurs compact\u233\'e9es peuvent \u234\'eatre trait\u233\'e9s de fa\u231\'e7on similaire, sauf si vous n'avez besoin de travailler avec deux octets ou plus. Par exemple, supposez avoir compact\u233\'e9 cinq champs diff\u233\'e9rents de trois bits dans une valeur de seize bits, comme montr\u233\'e9 \u224\'e0 la figure 8.4.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
 contient la donn\u233\'e9e \u224\'e0 compacter dans val3, vous pouvez utiliser le code suivant pour ins\u233\'e9rer cette donn\u233\'e9e dans le troisi\u232\'e8me champ :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, al \tab \tab ; Faire un shl de huit positions}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1 \tab \tab ; D\u233\'e9calage de deux positions vers la droite}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 11100000b \tab ; Balayer les bits ind\u233\'e9sir\u233\'e9s}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab DATA, 0FE3Fh \tab ; Mettre le champ de destination \u224\'e0 z\u233\'e9ro.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab DATA, ax \tab ; Fusionner la nouvelle donn\u233\'e9e dans le champ.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
L'extraction est trait\u233\'e9e de fa\u231\'e7on semblable. D'abord vous vous d\u233\'e9barassez des bits ind\u233\'e9sir\u233\'e9s et ensuite vous justifiez le r\u233\'e9sultat :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\loch
\tab \tab }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, DATA}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 1Ch}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shr \tab ax, 1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
Ce code peut \u234\'eatre am\u233\'e9lior\u233\'e9 en utilisant la s\u233\'e9quence suivante :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, DATA}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, ah}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab ax, 07h}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On verra d'autres utilisations des donn\u233\'e9es compact\u233\'e9es tout au long de ce livre. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_08}{\*\bkmkend p9_08}\rtlch \ltrch\fs23\b\loch
9.8\tab Tables}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le terme "table" a diff\u233\'e9rentes significations selon les programmeurs. Pour la plupart des experts en assembleur, une table n'est autre chose qu'un tableau initialis\u233\'e9 avec une valeur d\u233\'e9termin\u233\'e9e. Les programmeurs d'assembleur utilisent souvent ces tables pour calculer des fonctions complexes ou autrement lentes. Beaucoup de langages de tr\u232\'e8s haut niveau (par exemple, SNOBOL4 et Icon) sopportent les tables en tant que type de donn\u233\'e9es primitifs. Dans ces langages, les tables sont des tableaux accessibles par des index non entiers (par exemple, nombres d\u233\'e9cimaux, cha\u238\'eenes de caract\u232\'e8res ou tout autre type). Dans cette section, on adoptera les tables du point de vue du programmeur en assembleur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une table est un tableau contenant des valeurs pr\u233\'e9initialis\u233\'e9es qui ne changent pas pendant l'ex\u233\'e9cution du programme. Une table peut \u234\'eatre compar\u233\'e9e \u224\'e0 un tableau de la m\u234\'eame fa\u231\'e7on qu'on compare une constante enti\u232\'e8re avec une variable enti\u232\'e8re. En assembleur, vous pouvez vous servir des tables pour plusieurs choses : calculer des fonctions, contr\u244\'f4ler le flux du programme, ou simplement inspectionner quelque chose. En g\u233\'e9n\u233\'e9ral, les tables fournissent un m\u233\'e9canisme rapide pour effectuer certaines op\u233\'e9rations aux d\u233\'e9penses d'un certain espace dans votre programme (car le space superflu, stocke les donn\u233\'e9es tabulaires). Dans les sections suivantes, on verra certaines des utilisations possibles qu'on peut faire des tables dans un programme en assembleur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_08_01}{\*\bkmkend p9_08_01}\rtlch \ltrch\fs23\b\loch
9.8.1\tab Calcul de fonctions par des tables de correspondance}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les tables peuvent effectuer toute sorte de choses en assembleur. Dans les langages de haut niveau, comme Pascal, c}{\rtlch \ltrch\lang3084\loch
'est tr\u232\'e8s facile de cr\u233\'e9er une formule qui calcule une certaine valeur. Une simple expression similaire \u224\'e0 une expression math\u233\'e9matique est \u233\'e9quivalente \u224\'e0 une quantit\u233\'e9 consid\u233\'e9rable de code 80x86. Les programmeurs de l'assembleur tendent \u224\'e0 calculer plusieurs valeurs }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang1033\loch
moyennant}{\rtlch \ltrch\lang3084\loch
 des tables de correspondance, au lieu que \u224\'e0 travers l'ex\u233\'e9cution d'une certaine fonction. Ce qui a l'avantage d'\u234\'eatre plus facile et aussi plus efficace. Consid\u233\'e9rez la ligne Pascal suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab if (character }{\loch
>= 'a') and (character <= 'z') then character := chr(ord(character) - 32);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette ligne de Pascal convertit une variable de caract}{\rtlch \ltrch\lang3084\loch
\u232\'e8re en majuscule, si le caract\u232\'e8re se trouve dans la plage }{\loch
'a'..'z'. Le code 80x86 effectuant la m}{\rtlch \ltrch\lang3084\loch
\u234\'eame op\u233\'e9ration est :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, character}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, \u8216\'91a\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab NotLower}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, \u8216\'91z\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab NotLower}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, 05fh \tab ; M\u234\'eame op\u233\'e9ration que SUB AL,32}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
NotLower: \tab mov \tab character, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Placez ce code dans une boucle imbriqu\u233\'e9e et vous auriez bient\u244\'f4t des probl\u232\'e8mes de performance si vous n'utilisez pas une table de correspondance. Au contraire, l'utilisation d'une table de correspondance vous permet de r\u233\'e9duire cette s\u233\'e9quence d'instructions \u224\'e0 quatre instructions :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, character}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab bx, CnvrtLower}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xlat}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab character, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
CnvrtLower}{\loch
 est une table de 256 octets contenant les valeurs 0 \u224\'e0 60h aux indices 0..60h, 41h \u224\'e0 5Ah aux indices 61h..7Ah et 7B \u224\'e0 0FFh aux indices 7Bh..0FFh. }{\rtlch \ltrch\lang3084\loch
L\u8217\'92utilit\u233\'e9 des tables de correspondance se voit surtout \u224\'e0 l\u8217\'92heure }{\rtlch \ltrch\lang3084\loch
Souvent}{\loch
, se servir }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\rtlch \ltrch\lang3084\loch
une table de r\u233\'e9f\u233\'e9rence aide \u224\'e0 }{\loch
augmenter la vitesse de votre code. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\loch
 mesure que la complexit\u233\'e9 de la fonction augmente, les b\u233\'e9n\u233\'e9fices }{\rtlch \ltrch\lang3084\loch
des }{\loch
table}{\rtlch \ltrch\lang3084\loch
s}{\loch
 de correspondance augmentent de fa\u231\'e7on exponentielle. M\u234\'eame si vous n'allez probablement jamais utiliser une table de r\u233\'e9f\u233\'e9rence pour changer des minuscules en majuscules, consid\u233\'e9rez ce qui arrive si vous voulez changer de casse :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Par simple calcul :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, character}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, \u8216\'91a\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab NotLower}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, \u8216\'91z\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab NotLower}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, 05fh}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp \tab ConvertDone}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
NotLower: \tab cmp \tab al, \u8216\'91A\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab ConvertDone}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, \u8216\'91Z\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab ConvertDone}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, 20h}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ConvertDone:}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab character, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le code faisant la m\u234\'eame chose via une table de correspondance, se r\u233\'e9duit \u224\'e0 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, character}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab bx, SwapUL}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xlat}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab character, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous pouvez noter, quand vous calculez une fonction \u224\'e0 l'aide d'une table de correspondance, peu importe la fonction, seule la table change, pas le code faisant la correspondance. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Mais les tables de correspondance ont aussi un probl\u232\'e8me majeur : les fonctions calcul\u233\'e9es de cette }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
fa\u231\'e7on}{\loch
 ont un domaine limit\u233\'e9. Le domaine d'une fonction est la plage des valeurs d'entr\u233\'e9e possibles que la fonction peut accepter (param\u232\'e8tres). Par exemple, la fonction convertissant la casse des caract\u232\'e8res a comme domaine le jeu des 256 caract\u232\'e8res ASCII. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
D'autre part, une fonction comme SIN ou COS accepte l'ensemble des nombres r\u233\'e9els comme valeurs d'entr\u233\'e9e possibles. Certainement, un tel domaine est de beaucoup sup\u233\'e9rieur \u224\'e0 celui du jeu de caract\u232\'e8res. Si vous \u234\'eates en train de faire des calculs de fonctions \u224\'e0 l'aide des tables de correspondance, il vous faudra limiter le domaine de la fonction \u224\'e0 un petit ensemble. Et ceci parce que chaque \u233\'e9l\u233\'e9ment du domaine de la fonction requiert une entr\u233\'e9e dans la table. Et vous ne trouverez s\u251\'fbrement pas pratique d'impl\u233\'e9menter une fonction se servant d'une table de correspondance et ayant comme domaine l'ensemble des nombres r\u233\'e9els !}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des tables de correspondance sont assez petites, normalement elles comptent de 10 \u224\'e0 128 \u233\'e9l\u233\'e9ments. Ne faites que rarement des tables ayant 1000 ou plus entr\u233\'e9es. Les programmeurs n'ont pas la patience de cr\u233\'e9er (et de v\u233\'e9rifier la justesse) des tables de 1000 \u233\'e9l\u233\'e9ments. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre limitation des fonctions bas\u233\'e9es sur des tables de correspondance est que les \u233\'e9l\u233\'e9ments du domaine de la fonction doivent \u234\'eatre assez contigus. Les tables de correspondance prennent une valeur d'entr\u233\'e9e pour une fonction, l'utilisent comme index de la table et retournent la valeur \u224\'e0 cette entr\u233\'e9e de la table. Si vous ne passez \u224\'e0 une fonction aucune autre valeur que 0, 100, 1000 et 10000, celle-ci semblerait un candidat id\u233\'e9al pour une impl\u233\'e9mentation via une table de correspondance. Cependant, la table demanderait 10001 \u233\'e9l\u233\'e9ments diff\u233\'e9rents, \u224\'e0 cause de la plage des valeurs d'entr\u233\'e9e. Par cons\u233\'e9quent, vous ne pouvez pas cr\u233\'e9er efficacement une telle fonction \u224\'e0 l'aide d'une table de r\u233\'e9f\u233\'e9rence. Tout au long de cette section, on supposera que le domaine d'une fonction soit un ensemble pratiquement contigu de valeurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les meilleures fonctions pouvant \u234\'eatre impl\u233\'e9ment\u233\'e9es par une table de correspondance sont celle dont le domaine se trouve toujours dans la plage 0..255 (ou dans un sous-ensemble de celle-ci). De telles fonctions sont efficacement impl\u233\'e9ment\u233\'e9e}{\rtlch \ltrch\lang3084\loch
s}{\loch
 par l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xlat}{\loch
. Les routines de conversion de casse qu'on a vues sont un bon exemple. Toute fonction de cette classe (dont le domaine et la plage se trouve entre 0 et 255) peut \u234\'eatre calcul\u233\'e9e par les m\u234\'eames deux instructions (}{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
lea bx, table}{\loch
 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xlat}{\loch
). La seule chose qui change toujours est la table de correspondance. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xlat}{\loch
 ne peut \u234\'eatre utilis\u233\'e9e de fa\u231\'e7on conv\u233\'e9niente pour calculer une fonction si le domaine se trouve en dehors de la plage mentionn\u233\'e9e. Il y a trois situations \u224\'e0 consid\u233\'e9rer :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95 Le domaine est hors de la plage 0..255, mais les valeurs \u224\'e0 repr\u233\'e9senter sont dans cette plage. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95 Le domaine est \u224\'e0 l'int\u233\'e9rieur de la plage, mais les valeurs \u224\'e0 repr\u233\'e9senter sont hors de cette plage. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95 Soit le domain que les valeurs de la table sont hors la plage. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
On va consid\u233\'e9rer chacun des ces cas s\u233\'e9paremment. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le domaine de la fonction est en dehors de la plage 0..255, mais la nature des valeurs de la fonction tombe dans cette plage, notre table de correspondance demandera plus de 256 \u233\'e9l\u233\'e9ments, mais on peut repr\u233\'e9senter chaque \u233\'e9l\u233\'e9ment par un seul octet. Par cons\u233\'e9quent, la table de correspondance peut \u234\'eatre un tableau d'octets. Pour se servir de l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
xlat}{\loch
, les fonctions qui tombent dans cette classe sont les plus efficaces. L'appel de fonction suivant en Pascal : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
B := Func(X);}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
o\u249\'f9 Func est : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
function Func(X:word):byte;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
peut \u234\'eatre traduit avec le code suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, X}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, FuncTable [bx]}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab B, al}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce code charge le param\u232\'e8tre de la fonction dans le registre }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
bx}{\loch
, utilise cette valeur (dans la plage 0..??) comme index dans la table }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
FuncTable}{\loch
, charge l'octet \u224\'e0 cet emplacement et garde le r\u233\'e9sultat dans }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
B}{\loch
. Evidemment, cette table doit contenir un entr\u233\'e9e valide pour chaque valeur de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
X}{\loch
 possible. Par exemple, supposez que vous vouliez repr\u233\'e9senter une position de curseur \u224\'e0 l'\u233\'e9cran dans la plage 0..1999 (dans un affichage vid\u233\'e9o 80x25, il y a 2000 positions de caract\u232\'e8re) dans sa coordonn\u233\'e9e X ou Y de l'\u233\'e9cran. Vous pouvez facilement d\u233\'e9terminer la coordonn\u233\'e9e X par la fonction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
X:=Posn mod 80}{\loch
 et la coordonn\u233\'e9e Y par la formule }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Y:=Posn div 80}{\loch
 (o\u249\'f9 Posn est la position du curseur \u224\'e0 l'\u233\'e9cran), \u224\'e0 l'aide du code :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bl, 80}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, Posn}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab bx}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; X est maintenant dans AH et Y dans AL}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cependant, l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
div}{\loch
 dans l'architecture 80x86 est tr\u232\'e8s lente. Si vous aviez besoin d'effectuer ce calcul pour chaque caract\u232\'e8re que vous \u233\'e9crivez \u224\'e0 l'\u233\'e9cran, vous d\u233\'e9graderiez s\u233\'e9rieusement la vitesse de votre code d'affichage vid\u233\'e9o. Le code suivant, r\u233\'e9alisant ces deux fonctions, am\u233\'e9liore consid\u233\'e9rablement les performances :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, Posn}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, YCoord[bx]}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, XCoord[bx]}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le domaine d'une fonction est dans la plage 0..255 mais les valeurs \u224\'e0 repr\u233\'e9senter sont en dehors de cette plage, votre table de correspondance contiendra 256 \u233\'e9l\u233\'e9ments ou moins, mais la taille de chaque entr\u233\'e9e de votre table sera de deux ou plus octets. Si autant que le domaine que les valeurs sont hors de cette plage, chaque entr\u233\'e9e de la table r\u233\'e9querra deux ou plus octets pour \u234\'eatre repr\u233\'e9sent\u233\'e9e et la table contiendra plus de 256 \u233\'e9l\u233\'e9ments. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En rappel de la formule du chapitre 4 pour indexer des \u233\'e9l\u233\'e9ments dans un tableau \u224\'e0 une dimension (duquel une table repr\u233\'e9sente un cas sp\u233\'e9cial) :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Adresse := Base + index * taille}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si les \u233\'e9l\u233\'e9ments de la fonction demandent deux octets, alors l'index devra \u234\'eatre multipli\u233\'e9 par deux avant d'\u234\'eatre index\u233\'e9 dans la table. Sinon, si chaque entr\u233\'e9e requiert plus de deux octets, alors l'index devra \u234\'eatre multipli\u233\'e9 par la taille de chaque de chaque \u233\'e9l\u233\'e9ment avant de s'en servir comme index dans la table. Par exemple, supposez avoir une fonction F(x) d\u233\'e9finie par la pseudo d\u233\'e9claration suivante en Pascal :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
function F(x:0..999):word;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez facilement cr\u233\'e9er cette fonction \u224\'e0 l'aide du code suivant (et, bien entendu, la table appropri\u233\'e9e) :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, X \tab ; Obtenir la valeur d'entr\u233\'e9e de la fonction et}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab bx, 1 \tab ; la convertir en un index de type mot dans F.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, F[bx]}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
shl}{\loch
 multiplie l'index par deux et fournit l'indexage correct pour une table dont les \u233\'e9l\u233\'e9ments sont de type word. Toute fonction o\u249\'f9 le domaine est petit et autant contigu que possible est un bon candidat pour \u234\'eatre calcul\u233\'e9e \u224\'e0 l'aide d'une table de correspondance. Dans certains cas, des domaines non contigus sont acceptables aussi, au moins dans les limites o\u249\'f9 le domaine peut \u234\'eatre limit\u233\'e9 \u224\'e0 un ensemble appropri\u233\'e9 de valeurs. De telles op\u233\'e9rations sont nomm\u233\'e9es }{\rtlch \ltrch\i\loch
conditionnelles}{\loch
 et sont l'objet de la section suivante. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_08_02}{\*\bkmkend p9_08_02}\rtlch \ltrch\fs23\b\loch
9.8.2\tab Conditionnement de domaine}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le conditionnement de domaine consiste \u224\'e0 prendre un ensemble de valeurs dans le domaine d'une fonction et les adapter de fa\u231\'e7on \u224\'e0 \u234\'eatre plus acceptables comme entr\u233\'e9es de la fonction. Consid\u233\'e9rez la fonction suivante :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\lang3084\loch\f11\loch
s}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\lang3084\loch\f11\loch
i}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\lang3084\loch\f11\loch
n}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
 x = }{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61677\'3f}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
sin x|x }{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61646\'3f}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
 [-2}{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61552\'3f}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
, 2}{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61552\'3f}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
]}{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61693\'3f}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette repr}{\rtlch \ltrch\lang3084\loch
\u233\'e9sentation de fonction SIN(X) est \u233\'e9quivalente \u224\'e0 la fonction math\u233\'e9matique }{\rtlch \ltrch\lang3084\i\loch
sin x}{\rtlch \ltrch\lang3084\loch
 o\u249\'f9 }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
-2}{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61552\'3f}{\rtlch\dbch\af23\dbch\af23\hich\af11 \ltrch\loch\f11\loch
 \u8804\'3f x \u8804\'3f 2}{\rtlch\dbch\af16\dbch\af16\hich\af12 \ltrch\loch\f12\loch
\u61552\'3f}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme nous savons tous, la fonction sinus est une fonction circulaire acceptant toute valeur d'entr\u233\'e9e r\u233\'e9elle. Cependant, cette formule utilis\u233\'e9e pour calculer le sinus, n'accepte qu'un petit ensemble de cette plage. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette limitation de plage ne pr\u233\'e9sente pas de v\u233\'e9ritables probl\u232\'e8mes, en calculant simplement }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
SIN(X mod (2*pi))}{\loch
, on peut calculer le sinus de toute valeur d'entr\u233\'e9e. Modifier une valeur d'entr\u233\'e9e de sorte \u224\'e0 pouvoir calculer facilement une fonction s'appelle }{\rtlch \ltrch\i\loch
conditionner l'entr\u233\'e9e}{\loch
. Dans l'exemple ci-dessus, on a calcul\u233\'e9 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
X mod 2*pi}{\loch
 et utilis\u233\'e9 le r\u233\'e9sultat comme entr\u233\'e9e pour la fonction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sin}{\loch
. Ceci arrondit X au domaine que }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
sin}{\loch
 requiert sans affecter le r\u233\'e9sultat. On peut appliquer cette technique aussi pour les tables de correspondance. En effet, arrondir l'index pour traiter des entr\u233\'e9es de type word est une forme de conditionnement. Consid\u233\'e9rez la fonction suivante en Pascal :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
function val(x:word):word; begin}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
case x of}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
0: val := 1;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
1: val := 1;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
2: val := 4;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
3: val := 27;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
4: val := 256;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
otherwise val := 0;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette fonction calcule une certaine valeur de x dans la plage 0..4 et retourne 0 si x est en dehors de cette plage. Puisque x peut prendre jusqu'\u224\'e0 65536 valeurs diff\u233\'e9rentes (\u233\'e9tant une variable de 16 bits), cr\u233\'e9er une table acceptant 65536 valeurs quand seuelement les premi\u232\'e8res cinq valeurs sont diff\u233\'e9rentes de z\u233\'e9ro para\u238\'eet insens\u233\'e9. Cependant, on peut encore utiliser une table de correspondance si on conditionne les entr\u233\'e9es. Le code assembleur suivant pr\u233\'e9sente ce principe : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab ax, ax \tab ; AX := 0, en supposant X > 4.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, x}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab bx, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab ItsZero}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab bx, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, val[bx]}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
ItsZero:}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce code v\u233\'e9rifie si x est en dehors de la plage 0..4. Si c'est le cas, il donne automatiquement la valeur 0 \u224\'e0 }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ax}{\loch
, sinon il cherche la valeur correspondante dans la table de correspondance. Avec cette technique, vous pouvez impl\u233\'e9menter diverses fonctions qui seraient autrement impraticables. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_08_03}{\*\bkmkend p9_08_03}\rtlch \ltrch\fs23\b\loch
9.8.3\tab G\u233\'e9n\u233\'e9ration de tables}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop1636\shpbottom2206\shpbxcolumn\shpbxignore\shpleft2327\shpright6497{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw278\pich38\picwgoal4170\pichgoal570\pngblip
89504e470d0a1a0a0000000d49484452000001160000002608020000008e2223010000000467414d410000b1889598f4a6000009c549444154789ced9c6d5053
571ac74f77f643203a5d70c04eb03616996d2544791914a13ab0ac8d2f19065cccc0a419eba8bb30cd2abb7545d72efbd2f1a5b8daea76986119756284c6563b
99645996222c88664101378905c6dc129892d9a563eed8dd98fb713f3cd3ebddfb969b374998f31b3f5c1e724f9e7378fef79cf33ce7fa82cffb0861309848f9
de623b80c124375842184c546009613051812584c1440596100613155842184c547c7fb11d480e9c2ef78a15e9590a45bc9bedeb1ff8e84f6db69bd7698b6364
94f86a062194fdea9a928dc522460f41fc63f4fef2657284509576574c3c748c8c9e3c7396e98f44e67dbec78ffdea3c95447bf28267a1d0384646114231d70f
b7590f412084c6c627688b9f244f9e39abafd3e9eb7497ae5cf593a488f1ccd90ff5753a108fd5668f89931bd6ab0fbdd310c18dd02fe8a3147bf2822514023f
490e0e0d4b796a06296adee763194115129b5d9b9d9d9991c1b474f7f4ee7fdb00d7bb76bcd9ddd32b62dcbaa50c8cb9eb5eefb86c8ad83726293259654579c8
8ff1a2ce530d0e0d83c2a5d893142ca110dc1ebe535498cfb4f4f50f349f68e9eb1fb0daec0a650ef35757af7dc28c547397c53b3b27b1595edc0fbf94cbe570
9d9999e97ef8a588f1a59599605c9b9d3d363ec1528814df3c0461eeb2586df6030d46845090a2ac36bbb6660ff45a5bb3a7af7fc0dc65512873fafa07e8bb60
1c4eb79e4308359f68618e495161feede13bdc7e09d993112ca1103846ee295f59cd329acc9dafbff643b95c5e58f04c062932d92163231da9e62e4bf6ab6b84
1ee1bccd7231993be979499e9a6a32774a31024f9f06c3f5edb39b56580aeedaf126dcb546a98485656545395ce8eb74372cd70cfb0ed277151516bc77fce885
8fdbcc5d965ffdf230f3c898f295d58e917bdc7e09d993112ca1104080b2282cc89f9c9aaeac2867edb3e9486d6bef58be4c4e6ff425361b5724fa76a0c1e874
b9b7fdb892f7b7a052796a2ad398a550341cdc8f105abe4c9e9e96c6ba45a8a7cf7f04e2049650d8dc1f9b181b9f109a5e5264b255abb2ba7b7a8b0a0ba2ff2e
83be3ef0f4295c2f7cf38d415f2fc508a4a6a684ebdb21636341fe7a8db6fa77ef9f92b25362b273bbe63fff0d8475cbd2004b880d2b74766ed7b03e70e1e3b6
b68be7856e3777591042d73b4dacbd070b6eb3bca872d72d2c2cc0f5bffebda0ca5d27c5e874b90b0bf2d7666787eb5b30186c38b8df3d31fa83175f6c3a724c
8a87c0bccfb76245fae0d030f757423d953802898f98841c23a3226913c7c8286c34c3c54f92099bd3f493e46737ad4ccbd62d65cc6d370c8850d50536d9fa3a
1d6befc185d5ac103b34dbecdd7f836bcba7377668b64931ce78bd74ca2e2cdfda3b2e2384d2d3d29a8ffc22a46f000cc8fdb1f17a5ded5ffedae3274966a6c1
3b3b47e7099970edacc44c0c5128739c2e37b3b374d62464ea5f4a6d405042569b7df5cbabb84b5b9a882b06e96969ab5f5e15abc2456ce9eee9fd494d15d3b2
a9b8e891e7d9bc343ef18099426012a4a84020a0afd3c18f10a99353d3bc1f66354bb730e3f52284fafa07821485104a4f4bdbb7f72d7397c5dc65397ef45df8
7308198fbe7b18220371442ed137e2ab193ab6ceb79e62fa03c298f17afd24491b11421ffcf1c3e6132d6f94954282bebba797b9c47de42136151771bb2f648f
13ea3c155d7f935e4073badc6b94ca908dbfc0fbca9dd3e576ba1fd2231e0fcc5d16b52a97b7dee22108d62264dee74b4f4f4f91c9e2e70f42c84f92ed1d97b9
0f60abcdfe4659a9c8d32432e2d46ce230eff30d0cdee64611af5da1cc89d3db9fac9661350bdfee2188a623c784ce5e04294a4ac8f1cf429d964fd5aa5ca6c5
4310f0703add7acee9720b550cb4357b58b2d6d6ec8132829f2415ca9ce6132d6057ab72a126c8c53b3b07fd04e67dbeabd73e617d46a4381331dc2908a8d2ee
1a9f7800d3420c8953b3094290a226a7a6b9fa11b2d308050c8d8720dada3b4eb79e837fe16e0a4216d068243eb2f967218532879872319b38dd7a0e1ecf4e97
1b21a4ce53395d6e8db61a6e5728734c97da2b2bcafd24a9ca2f66de0b87be5e5ab9b2207f3da43e81204565bf9627f4e0813360fa3a1de8e790b191d59fbefe
01c3be83f7ee0e4e4e4db30e95d1385d6e5872b0e0ddc9084d41cc0fc463c68853b38b8e50bf84ecf45c2114308087203a2e9b5a4e1c93be2461cd420a654e8f
ed737af9c3fa3102788e998228b92e1e68301a1b7faace53f13e38a16200a3f3e89187f6a9b2a23c332343a3adfeed7bff97e181f6b96b36a06463f1c2c2425b
7bc79327df72f503d0c519a1fcb23a4f257d6884a6209a3805fa92d40f12ee57c8fe0a050cf0c5ad81b0f4132552d672524f6a1f32365e319935da6a83be7eff
db06deb81702e2f8f1637f5827358b0a0b7ef6ce615ded6ede3e88176780b066a1c1a1e1ddd5cf2464b5d91b8c4dd2bdc5c4109180e9eee97df2e45ba665eb96
32911236172905341a295ae59150565616d70815035dedeef68ecb223b305eac367b6141fe8cd7cb9d1378bf0b7db7ffb9de69baf1b9d5dc65e12e9dc58b3340
58b3d0bebd6fddb9eba03559a5dd15abf7053052606e684502a6b46493f4843b2f520a6861c1934e4891c9766ed7b0f6585f7f3def18190dab628010f293a49f
24e572f90ecd36c7c83dd823c2af3c04b173bb8657e5ccfd0f8887596a40a18a339151b2b1b8afffef4b75739f2c88040cb0754b1933d51401420534a7cbcdcd
2b488907fe859caeb6c63b3bc752e7e0d030c8975531a0bdc9c9597be7ae83be4e91c954f9c51f9c7a5f5fa7cbccc8f8c3c933f5ba5a7a29ec9d9dd3d5d6f07e
fbe4d43473ffa3afd3596d76e6aa54a438130d55da9dcc8928d1e0be8d27f48e1d9d140d694c3444020628d9581c0804e0543810ee428e2ea0b1c6edd72dbf47
08b18677cb8f342153edfc193984505b7bc75e833e4efbb620455d3199b9f996c52548513f6f3a72e17ceb73dbad4ac74310ded939c3be83f4dfcb4f92478fff
e6cf6d17d177f2a06b8572b9bcb2a2bcaf7f2010088818138ae7561712c16ab347303282a713f61af430a5c49c2045ddb9ebd86bd0c7a3f1684891c974b5350f
fee95c6c4778e07d1b8ff71dbb066313bc465190bf81ce88f01a314c1c23a3919d0c1694508a4c56bab9244e7b83d2cd2509f8a44708956e2e494c0971e12d11
c26a1e56e0b00412322e96dbcf9fa15b3d1e821039f20b6c58af8eecdd7eb1a4769ca23c31c503a4c86489b6bc14c264eeacd7d5322dcc77ec22302e552426dc
220e4bfcb203262118bad5b3d82e4408fe4fb09215892542e9c6c525cae2cc22822594ac889408e11c1a730b2464c4440f5ec8252b4225c2b68be7c7271e2084
bcb373f4010e5e23262608d68530094590a27abfe86b3036992eb5d3f9cca5575a4d46b0843098a8c00b390c262ab0843098a8c012c260a2e27f7dbae4fc7268
eb2d0000000049454e44ae426082}}}}}
}{\loch
U}{\loch
n grand probl}{\rtlch \ltrch\lang3084\loch
\u232\'e8me quand on utilise des tables de r\u233\'e9f\u233\'e9rence est la cr\u233\'e9ation de la table elle-m\u234\'eame. Ceci est vrai surtout lorsqu'il y a un grand nombre d'entr\u233\'e9es dans la table. Imaginez-vous \u224\'e0 devoir placer un grand nombre de donn\u233\'e9es dans la table, devoir les ins\u233\'e9rer une \u224\'e0 une et finalement, apr\u232\'e8s un travail laborieux de typing, les v\u233\'e9rifier une \u224\'e0 la fois pour voir si elles ont \u233\'e9t\u233\'e9 entr\u233\'e9es correctement. C'est un travail mortel qui fait consommer beaucoup de temps. Pour certaines tables, ceci est incontournable. Pour d'autres, il existe des raccourcis, comme utiliser l'ordinateur pour g\u233\'e9n\u233\'e9rer des tables pour vous. Un exemple, constitue peut-\u234\'eatre la meilleure fa\u231\'e7on pour le d\u233\'e9crire. Consid\u233\'e9rez la modification suivante de la fonction sinus : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\qc\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
Dans cette fonction, }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
x}{\rtlch \ltrch\lang3084\loch
 est un entier entre 0 et 359 et }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
r}{\rtlch \ltrch\lang3084\loch
 est un entier. L'ordinateur peut facilement calculer ceci \u224\'e0 l'aide du code suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, x}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl\tab bx, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab ax, Sines [bx] \tab ; Obtenir SIN(X)*1000}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, r\tab \tab ; Calculer R*(SIN(X)*1000)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mul\tab bx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab bx, 1000\tab ; Calculer R*(SIN(X)*1000))/1000}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1701\ri0\lin1701\rin0\fi0\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div\tab bx}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\fs23\loch
Notez que la multiplication et la division enti}{\rtlch \ltrch\fs23\lang3084\loch
\u232\'e8res ne sont pas associatives. Vous ne pouvez pas supprimer la multiplication par 1000 et la division par 1000 juste comme on fait en math\u233\'e9matiques. De plus, ce code doit calculer la fonction exactement en suivant cet ordre. Tout ce dont on a besoin pour compl\u233\'e9ter cette fonction est une table de 360 valeures diff\u233\'e9rentes qui correspondent au sinus de l'angle (en degr\u233\'e9s) multipli\u233\'e9 par 1000. Ins\u233\'e9rer une telle table dans un programme en assembleur est une t\u226\'e2che extr\u234\'eamement ennuyeuse et vous avez de fortes chances de commettre plusieurs fautes en ins\u233\'e9rant et aussi en v\u233\'e9rifiant les donn\u233\'e9es. N\u233\'e9anmoins, vous pouvez directement charger un programme de g\u233\'e9n\u233\'e9rer cette table. Consid\u233\'e9rez le code Pascal suivant : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
program maketable;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
var \tab i:integer;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
r:integer;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
f:text;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
begin}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
assign(f,\u8217\'92sines.asm\u8217\'92);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rewrite(f);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
for i := 0 to 359 do begin}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
r := round(sin(I * 2.0 * pi / 360.0) * 1000.0);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
if (i mod 8) = 0 then begin}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
writeln(f);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
write(f,\u8217\'92 dw \u8216\'91,r);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
else write(f,\u8217\'92,\u8217\'92,r);}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
close(f);}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
end.}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\fs23\lang3084\loch
Ce programme produit la sortie suivante : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 0,17,35,52,70,87,105,122}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 139,156,174,191,208,225,242,259}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 276,292,309,326,342,358,375,391}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 407,423,438,454,469,485,500,515}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 530,545,559,574,588,602,616,629}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 643,656,669,682,695,707,719,731}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 743,755,766,777,788,799,809,819}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 829,839,848,857,866,875,883,891}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 899,906,914,921,927,934,940,946}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 951,956,961,966,970,974,978,982}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 985,988,990,993,995,996,998,999}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 999,1000,1000,1000,999,999,998,996}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 995,993,990,988,985,982,978,974}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 970,966,961,956,951,946,940,934}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 927,921,914,906,899,891,883,875}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 866,857,848,839,829,819,809,799}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 788,777,766,755,743,731,719,707}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 695,682,669,656,643,629,616,602}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 588,574,559,545,530,515,500,485}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 469,454,438,423,407,391,375,358}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 342,326,309,292,276,259,242,225}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 208,191,174,156,139,122,105,87}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw 70,52,35,17,0,-17,-35,-52}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -70,-87,-105,-122,-139,-156,-174,-191}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -208,-225,-242,-259,-276,-292,-309,-326}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -342,-358,-375,-391,-407,-423,-438,-454}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -469,-485,-500,-515,-530,-545,-559,-574}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -588,-602,-616,-629,-643,-656,-669,-682}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -695,-707,-719,-731,-743,-755,-766,-777}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -788,-799,-809,-819,-829,-839,-848,-857}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -866,-875,-883,-891,-899,-906,-914,-921}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -927,-934,-940,-946,-951,-956,-961,-966}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -970,-974,-978,-982,-985,-988,-990,-993}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -995,-996,-998,-999,-999,-1000,-1000,-1000}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -999,-999,-998,-996,-995,-993,-990,-988}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -985,-982,-978,-974,-970,-966,-961,-956}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -951,-946,-940,-934,-927,-921,-914,-906}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -899,-891,-883,-875,-866,-857,-848,-839}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -829,-819,-809,-799,-788,-777,-766,-755}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -743,-731,-719,-707,-695,-682,-669,-656}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -643,-629,-616,-602,-588,-574,-559,-545}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -530,-515,-500,-485,-469,-454,-438,-423}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -407,-391,-375,-358,-342,-326,-309,-292}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dw -276,-259,-242,-225,-208,-191,-174,-156}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
dw -139,-122,-105,-87,-70,-52,-35,-17}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\fs23\lang3084\loch
Il n'y a pas de doute : c'est plus faice \u233\'e9crire le programme en Pascal pour qu'il g\u233\'e9n\u232\'e8re ce code, plut\u244\'f4t qu'\u233\'e9crire manuellement les donn\u233\'e9es elles-m\u234\'eames ! Ce petit exemple montre aussi comme le Pascal peut venir en aide au programmeur d'assembleur...}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\fs23\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_09}{\*\bkmkend p9_09}\rtlch \ltrch\fs23\b\loch
9.9 \tab Exemples de programmes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les programmes exemples de ce chapitre montrent divers concepts importants, en incluant l'arithm\u233\'e9tique en pr\u233\'e9cision \u233\'e9tendue et les op\u233\'e9rations logiques, les \u233\'e9valuations d'expressions arithm\u233\'e9tiques, les \u233\'e9valuations d'expressions bool\u233\'e9ennes et le compactage / d\u233\'e9compactage des donn\u233\'e9es. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_09_01}{\*\bkmkend p9_09_01}\rtlch \ltrch\fs23\b\loch
9.9.1\tab Conversion d'expressions arithm\u233\'e9tiques en assembleur}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme suivant (Pgm9_1.asm) donne certains exemples de conversion d'expressions arithm\u233\'e9tiques en code assembleur : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Pgm9_1.ASM}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\loch
; Plusieurs exemples montrant comment convertir diverses expressions arithm\u233\'e9tiques en }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\loch
; assembleur}{\rtlch \ltrch\lang1033\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.xlist}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
include \tab stdlib.a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
includelib \tab stdlib.lib}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.list}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
dseg \tab \tab segment \tab para public 'data'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Les diverses variables utilis}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9es par ce programme}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
u \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
v \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
w \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
x \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
y \tab \tab word \tab ?}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab segment \tab para public 'code'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
assume \tab \tab cs:cseg, ds:dseg}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
; GETI lit une variable enti\u232\'e8re }{\rtlch \ltrch\lang3082\loch
en }{\rtlch \ltrch\lang3084\loch
entr\u233\'e9e}{\rtlch \ltrch\lang1033\loch
 et }{\rtlch \ltrch\lang3084\loch
elle }{\rtlch \ltrch\lang1033\loch
retourne sa valeur dans le }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
; registre AX.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti \tab \tab textequ <call _geti>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
_geti \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
getsm}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
atoi}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
free}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
_geti \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
meminit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Abitrary expression program",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a value for u: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab u, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a value for v: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab v, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a value for w: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab w, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a non-zero value for x: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab x, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a non-zero value for y: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab y, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
; Bon, calculer Z := (X+Y)*(U+V*W)/X et afficher le r\u233\'e9sultat.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "(X+Y) * (U+V*W)/X is ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, v \tab \tab \tab ; Calculer V*W}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab w \tab \tab \tab ; et l'additionner \u224\'e0 U}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, u }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bx, ax \tab \tab ; Enregistrer dans un emplacement temporaire.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, x \tab \tab ; Calculer X+Y et multiplier cette somme par }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab ax, y \tab \tab ; le r\u233\'e9sultat ci-dessus}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab bx \tab \tab ; puis diviser le tout}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv \tab x \tab \tab ; par X.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
putcr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Calculer ((X-Y*U) + (U*V) - W)/(X*Y)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab byte \tab "((X-Y*U) + (U*V) - W)/(X*Y) = ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, y \tab \tab ; Calculer d'abord y*u}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab u}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dx, X \tab \tab ; Maintenant X-Y*U}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab dx, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab cx, dx \tab \tab ; Enregistrer dans empl. temp.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, u \tab \tab ; U*V}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab V}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab cx, ax \tab \tab ; (X-Y*U) + (U*V)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab cx, w \tab \tab ; ((X-Y*U) + (U*V) - W)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, x \tab \tab ; (X*Y)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
imul \tab y}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xchg \tab ax, cx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cwd \tab \tab \tab ; NUEMRATEUR/(X*Y)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
idiv \tab cx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
putcr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quit: \tab \tab ExitPgm \tab \tab ; macro du DOS pour sortir.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab segment \tab para stack 'stack'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab segment \tab para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end \tab Main}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_09_02}{\*\bkmkend p9_09_02}\rtlch \ltrch\fs23\b\loch
9.9.2\tab Exemple d'op\u233\'e9rations bool\u233\'e9ennes}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme d'exemple suivant (Pgm9_2.asm) montre comment manipuler des valeurs bool\u233\'e9ennes dans un programme assembleur. Il donne \u233\'e9galement un exemple du th\u233\'e9or\u232\'e8me de DeMorgan. }
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
; Pgm9_2.ASM}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar\sb0\sa120{\rtlch \ltrch\lang1033\loch
; Ce programme montre le th\u233\'e9or\u232\'e8me de DeMorgan et plusieurs autres op\u233\'e9rations logiques.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.xlist}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
include stdlib.a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
includelib stdlib.lib}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.list}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg \tab \tab segment \tab para public 'data'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Voici les variables d'entr\u233\'e9e bool\u233\'e9ennes pour diverses fonctions que nous allons }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; tester.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
a \tab \tab byte \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
b \tab \tab byte \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab segment \tab para public 'code'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
assume \tab \tab cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Get0or1 - Lit un "0" ou un "1" }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
en entr\u233\'e9e}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
 et }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
il }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
retourne sa valeur dans le }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; registre AX. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
get0or1 \tab textequ \tab <call _get0or1>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
_get0or1 \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
getsm}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
atoi}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
free}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
_get0or1 \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
meminit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Demorgan's Theorems",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "-------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "According to Demorgan's theorems, all results "}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "between the dashed lines",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "should be equal.",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a value for a: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
get0or1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab a, al}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Enter a value for b: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
get0or1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab b, al}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing not (A and B): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1 \tab ; Op}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9ration de NOT bool\u233\'e9en}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
putcr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing (not A) OR (not B): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab bl, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab bl, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, bl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing (not A) OR B: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing not (A AND (not B)): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing (not A) OR B: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing not (A AND (not B)): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing not (A OR B): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "Computing (not A) AND (not B): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab bl, b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab bl, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
and \tab al, bl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "---------------------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quit: \tab \tab ExitPgm \tab ; Macro du DOS pour sortir du programme.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
stk \tab \tab byte \tab 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab segment\tab para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end \tab Main}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_09_03}{\*\bkmkend p9_09_03}\rtlch \ltrch\fs23\b\loch
9.9.3\tab Entr\u233\'e9es/Sorties de 64 bits}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce programme d'exemple (Pgm9_3) montre comment lire et \u233\'e9crire des entiers de 64 bits. Il fournit les routines ATOU64 et PUTU64 vous permettant de convertir une cha\u238\'eene de chiffres en un entier non sign\u233\'e9 de 64 bits }{\rtlch \ltrch\lang3084\loch
et il retourne }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
une valeur }{\loch
sous forme de cha\u238\'eene d\u233\'e9cimale de chiffres. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Pgm9_3.ASM}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Ce programme d'exemple fournit deux proc\u233\'e9dure qui lisent et \u233\'e9crivent des entiers }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; non sign\u233\'e9s de 64 bits sur un processeur 80386 ou sup\u233\'e9rieur.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.xlist}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
include stdlib.a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
includelib stdlib.lib}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.list}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
.386}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
option \tab segment:use16}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dp \tab \tab textequ \tab <dword ptr>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byp \tab \tab textequ \tab <byte ptr>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg \tab \tab segment \tab para public 'data'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Acc64 est une valeur de 64 bits que la routine ATOU64 utilise pour permettre l'entr\u233\'e9e }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; d'une valeur de 64 bits. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Acc64 \tab \tab qword \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; La variable quotient stocke le r\u233\'e9sultat de la division entre la valeur courante de }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; PUTU et dix.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quotient \tab qword \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; NumOut stocke la cha\u238\'eene de chiffres cr\u233\'e9\u233\'e9e par la routine PUTU64.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
NumOut \tab \tab byte \tab 32 dup (0)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Une cha\u238\'eene de test pour la routine ATOI64 :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
LongNumber \tab byte \tab "123456789012345678",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab segment \tab para public 'code'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
assume \tab cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; ATOU64 - \tab Au commencement de l'ex\u233\'e9cution, ES:DI pointe sur une }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab cha\u238\'eene contenant une s\u233\'e9quence de chiffres. Cette routine convertit }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab cette cha\u238\'eene en un entier de 64 bits et retourne une valeur enti\u232\'e8re non }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab sign\u233\'e9e dans EDX:EAX.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab Cette routine utilise l'algorithme :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab Acc := 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab while digits left}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab Acc := (Acc * 10) + (Current Digit - '0')}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab Move on to next digit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab endwhile}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ATOU64 \tab \tab proc \tab near}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab di \tab \tab ; L'enregistrer parce qu'on va le modifier.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Acc64, 0 \tab ; Initialisation de notre accumulateur.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Acc64+4, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Une fois obtenus les chiffres, traiter la cha\u238\'eene d'entr\u233\'e9e :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab eax, eax \tab ; Zero out eax's H.O. 3 bytes.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
WhileDigits: \tab mov \tab al, es:[di]}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
xor \tab al, '0' \tab ; Convertir '0'..'9' -> 0..9}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab al, 10 \tab \tab ; et tout autre chiffre > 9.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ja \tab NotADigit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Multiplier Acc64 par dix. Pour cela utiliser des d\u233\'e9calages et des }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; additions :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab dp Acc64, 1 \tab ; Calculer Acc64*2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab dp Acc64+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab dp Acc64+4 \tab ; Calculer Acc64*2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab dp Acc64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab dp Acc64, 1 \tab ; Calculer Acc64*4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab dp Acc64+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab dp Acc64, 1 \tab ; Calculer Acc64*8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
rcl \tab dp Acc64+4, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab edx \tab \tab ; Calculer Acc64*10 en tant que}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab dp Acc64, edx \tab ; Acc64*2 + Acc64*8}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
adc \tab dp Acc64+4, edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Ajouter l'\u233\'e9quivalent num\u233\'e9rique du chiffre courant.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Souvenez vous que les trois mots forts de eax contiennent z\u233\'e9ro.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab dp Acc64, eax \tab ; Additionner ce chiffre}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
inc \tab di \tab \tab ; Proc\u233\'e9der au caract\u232\'e8re suivant.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jmp \tab WhileDigits \tab ; R\u233\'e9p\u233\'e9ter pour tous les chiffres.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Retourner la valeur de 64 bits dans eax.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
NotADigit: \tab mov \tab eax, dp Acc64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab edx, dp Acc64+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ATOU64 endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; PUTU64 - \tab Au commencement de l'ex\u233\'e9cution, EDX:EAX contient une valeur non }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab sign\u233\'e9e de 64 bits. Cette routine produit en sortie une cha\u238\'eene}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab de chiffres d\u233\'e9cimaux fournissant la repr\u233\'e9sentation d\u233\'e9cimale de}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab cette valeur. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;\tab \tab ce code utilise l'algorithme suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab di := 30;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab while edx:eax <> 0 do}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab OutputNumber[di] := digit;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab \tab edx:eax := edx:eax div 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab \tab di := di - 1;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab endwhile}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab Output digits from OutNumber[di+1]}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; \tab \tab \tab \tab through OutputNumber[30]}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
PUTU64 \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab ecx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
push \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pushf\tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab di, dseg \tab ; C'est ici qu'ira la cha\u238\'eene de sortie.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab es, di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lea \tab di, NumOut+30 \tab ; Enregistrement des caract\u232\'e8res dans la cha\u238\'eene}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
std \tab \tab \tab ; \u224\'e0 l'envers.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab byp es:[di+1],0\tab ; Produire un 0 de terminaison.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Enregistrer la valeur \u224\'e0 afficher de fa\u231\'e7on \u224\'e0 pouvoir la diviser par dix \u224\'e0 l'aide }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; d'un op\u233\'e9rateur de division de pr\u233\'e9cision \u233\'e9tendue.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Quotient, eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Quotient+4, edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Commencement de la conversion du nombre en une cha\u238\'eene de chiffres.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ecx, 10 \tab \tab ; Valeur \u224\'e0 diviser pour.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
DivideLoop: \tab mov \tab eax, dp Quotient+4 \tab ; Effectuer une division 64/32 bits. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sub \tab edx, edx }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab ecx \tab \tab \tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Quotient+4, eax \tab }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp Quotient}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
div \tab ecx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab dp Quotient, eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Maintenant edx (dl, en v\u233\'e9rit\u233\'e9) contient le reste de la division par dix,}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; de sorte que dl est dans la plage 0..9. Il ne reste qu'\u224\'e0 le convertir en un }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; caract\u232\'e8re ASCII et \u224\'e0 l'enregister. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab al, dl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab al, '0'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
stosb}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; V\u233\'e9rifier si le r\u233\'e9sultat est nul. Dans ce cas, on peut quitter. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab eax, dp Quotient}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
or \tab eax, dp Quotient+4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jnz \tab DivideLoop}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
OutputNumber: \tab inc \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
puts}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
popf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab edx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab ecx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab eax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
pop \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ret}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
PUTU64 \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Le programme principal constitue une d\u233\'e9monstration simple de l'usage des deux }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; routines qu'on vient de cr\u233\'e9er}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
meminit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
lesi \tab LongNumber}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
call \tab ATOU64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
call \tab PutU64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
printf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
byte \tab "%x %x %x %x",cr,lf,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dword \tab Acc64+6, Acc64+4, Acc64+2, Acc64}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Quit: \tab \tab ExitPgm \tab ; Macro du DOS pour sortir.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
stk \tab \tab byte \tab 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab segment\tab para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
LastBytes \tab byte \tab 16 dup (?)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end \tab Main}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_09_04}{\*\bkmkend p9_09_04}\rtlch \ltrch\fs23\b\loch
9.9.4\tab Types pour compacter et d\u233\'e9compacter des donn\u233\'e9es}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce programme d'exemple d\u233\'e9montre comment compacter et d\u233\'e9compacte}{\rtlch \ltrch\lang3084\loch
r}{\loch
 les donn\u233\'e9es \u224\'e0 l'aide du type de donn\u233\'e9es Date, pr\u233\'e9sent\u233\'e9 au Chapitre 1. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Pgm9_4.ASM}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab Ce programme montre comment compacter et d\u233\'e9compacter des types de date.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab Il lit une valeur mois, jour et ann\u233\'e9e.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab Il compacte ensuite ces valeurs selon le format pr\u233\'e9sent\u233\'e9 dans le chapitre un. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab Finalement, il d\u233\'e9compacte ces donn\u233\'e9es et appelle la routine DTOA de la }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
;\tab biblioth\u232\'e8que stdlib pour afficher le r\u233\'e9sultat sous forme de texte.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
.xlist}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
include stdlib.a}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
includelib stdlib.lib}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
.list}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
dseg \tab \tab segment\tab para public 'data'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Month \tab \tab byte \tab ? \tab ; Valeur de mois (1-12)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Day \tab \tab byte \tab ? \tab ; Valeur de jour (1-31)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Year \tab \tab byte \tab ? \tab ; Valeur d'ann\u233\'e9e (80-99)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Date \tab \tab word \tab ? \tab ; Ici les donn\u233\'e9es compact\u233\'e9es.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cseg \tab \tab segment \tab para public 'code'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
assume \tab \tab cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; GETI-\tab Lit une variable enti\u232\'e8re de l'utilisateur et retourne sa valeur dans le}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; registre AX.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
geti \tab \tab textequ <call _geti>}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
_geti \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
push \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
push \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
getsm}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
atoi}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
free}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
pop \tab di}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
pop \tab es}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
ret}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
_geti \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
meminit}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Date Conversion Program",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "-----------------------",cr,lf}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab lf,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Obtenir le mois de l'utilisateur.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Faire une }{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\lang3084\loch\f13\loch
simple v\u233\'e9rification pour s'assurer que cette valeur est dans la plage}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; 1-12. Si ce n'est pas le cas, r\u233\'e9p\u233\'e9ter l'invite de saisie.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GetMonth: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Enter the month (1-12): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Month, al}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
je \tab BadMonth}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 12}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jbe \tab GoodMonth}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
BadMonth: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Illegal month value, please re-enter",cr,lf,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jmp \tab GetMonth}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GoodMonth:}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Une fois le mois lu, lire le jour et, encore une fois, faire une simple v\u233\'e9rification}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; sur la justesse de la donn\u233\'e9e. Notez que ce code v\u233\'e9rifie seulement si le jour est dans}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; la plage 1-31 et ne contr\u244\'f4le pas ces mois qui ont 28, 29 ou 30 jours.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GetDay: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Enter the day (1-31): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Day, al}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
je \tab BadDay}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 31}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jbe \tab GoodDay}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
BadDay: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Illegal day value, please re-enter",cr,lf,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jmp \tab GetDay}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GoodDay:}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Et, finalement, obtenir l}{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\lang3084\loch\f13\loch
'ann\u233\'e9e. Cette v\u233\'e9rification est un peu plus sophistiqu\u233\'e9e. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Si l'utilisateur saisit une valeur dans la plage 1980-1999, elle sera automatiquement}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; convertie en 80-99. Toutes les autes dates hors de cette plage ne sont pas accept\u233\'e9es.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GetYear: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Enter the year (80-99): ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
geti}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 1980}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jb \tab TestYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 1999}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
ja \tab BadYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sub \tab dx, dx \tab \tab ; Extension de z\u233\'e9ro \u224\'e0 32 bits.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab bx, 100}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
div \tab bx \tab \tab ; Calculer ann\u233\'e9e mod 100.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ax, dx}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jmp \tab GoodYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
TestYear: \tab cmp \tab ax, 80}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jb \tab BadYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cmp \tab ax, 99}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jbe \tab GoodYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
BadYear: \tab print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Illegal year value. Please re-enter",cr,lf,0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
jmp \tab GetYear}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
GoodYear: \tab mov \tab Year, al}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Maintenant que toutes les valeurs ont \u233\'e9t\u233\'e9 saisies, les compacter dans le format de}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; 16 bits suivant :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab bit 15 \tab     8 7     0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab     | \tab     | |     |}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; \tab     MMMMDDDD DYYYYYYY}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ah, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab bh, ah}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab al, Month \tab ; Placer le mois dans les positions 12..15}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab cl, 4 }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
ror \tab ax, cl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab bl, Day \tab ; Placer le jour dans les positions 7..11}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab cl, 7 }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
shl \tab bx, cl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
or \tab ax, bx \tab \tab ; Cr\u233\'e9er MMMMDDDD D0000000}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
or \tab al, Year \tab ; Cr\u233\'e9er MMMMDDDD DYYYYYYY}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab Date, ax \tab ; Enregistrer le r\u233\'e9sultat compact\u233\'e9.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Afficher le r\u233\'e9sultat compact\u233\'e9 (en format hexad\u233\'e9cimal) :}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Packed date = ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
putw}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
putcr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; Le code suivant montre comment d\u233\'e9compacter cette date et la transformer en un }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; format pouvant \u234\'eatre utilis\u233\'e9 par la biblioth\u232\'e8que standard LDTOAM.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ax, Date \tab ; Extraire le mois}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab cl, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
shr \tab ah, cl}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab dh, ah \tab \tab ; LDTOAM n\u233\'e9cessite le mois dans DH.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab ax, Date \tab ; Obtenir ensuite le jour.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
shl \tab ax, 1}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
and \tab ah, 11111b}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab dl, ah \tab \tab ; Qui doit \u234\'eatre dans DL.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
mov \tab cx, Date \tab ; Maintenant l'ann\u233\'e9e.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
and \tab cx, 7fh \tab ; Balayer tout sauf les bits contenant la }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
; valeur.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
print}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
byte \tab "Date: ",0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
LDTOAM \tab \tab \tab ; Convertir en cha\u238\'eene}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
puts}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
free}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
putcr}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Quit: \tab \tab ExitPgm \tab \tab ; Macro du DOS pour terminer le programme.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sseg \tab \tab segment\tab para stack 'stack'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
stk \tab \tab byte\tab 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
zzzzzzseg \tab segment\tab para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
LastBytes \tab byte \tab 16 dup (?)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\fs18\loch\f13\loch
end \tab Main}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10}{\*\bkmkend p9_10}\rtlch \ltrch\fs23\b\loch
9.10\tab Exercices de laboratoire}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans ce laboratoire, vous allez effectuer les activit\u233\'e9s suivantes : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx426\li426\ri0\lin426\rin0\fi-284{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14
\u8729\'3f}{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14\loch
\tab }{\loch
Utiliser CodeView pour ins\u233\'e9rer des points d'arr\u234\'eat (breaks) dans un programme et localiser certaines erreurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx426\li426\ri0\lin426\rin0\fi-284{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14
\u8729\'3f}{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14\loch
\tab }{\loch
Utiliser CodeView pour faire la trace \u224\'e0 travers certaines sections d'un programme et d\u233\'e9couvrir des probl\u232\'e8mes avec celui-ci. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx426\li426\ri0\lin426\rin0\fi-284\sb0\sa120{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14
\u8729\'3f}{\rtlch\dbch\af25\dbch\af25\hich\af14 \ltrch\lang3084\loch\f14\loch
\tab }{\loch
Utiliser CodeView pour faire la trace \u224\'e0 travers du code \u233\'e9crit par vous pour en v\u233\'e9rifier la justesse et observer la s\u233\'e9quence et le calcul pas \u224\'e0 pas. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_01}{\*\bkmkend p9_10_01}\rtlch \ltrch\fs23\b\loch
9.10.1\tab D\u233\'e9boguer des programmes avec CodeView}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On a d}{\rtlch \ltrch\lang3084\loch
\u233\'e9j\u224\'e0 eu l'opportunit\u233\'e9 d'utiliser CodeView dans des chapitres ant\u233\'e9rieurs pour observer l'\u233\'e9tat de la machine (valeurs des registres et de la m\u233\'e9moire), entrer des programmes simples et effectuer d'autres t\u226\'e2ches mineures. Dans cette section, on explorera l'une des capacit\u233\'e9s les plus importantes de CodeView : le d\u233\'e9bogage. Cette section d\u233\'e9crit trois des caract\u233\'e9ristiques de CodeView qu'on avait ignor\u233\'e9es jusqu'\u224\'e0 maintenant, \u224\'e0 savoir, les points d'arr\u234\'eat (}{\rtlch \ltrch\lang3084\i\loch
breaks points}{\rtlch \ltrch\lang3084\loch
), les op\u233\'e9rations d'inspection (}{\rtlch \ltrch\lang3084\i\loch
watches}{\rtlch \ltrch\lang3084\loch
) et la trace du code. Il s'agit d'outils tr\u232\'e8s importants pour d\u233\'e9tecter les erreurs logiques dans vos programmes en assembleur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La }{\rtlch \ltrch\lang3084\i\loch
trace}{\rtlch \ltrch\lang3084\loch
 du code vous permet d'ex\u233\'e9cuter le code d'un programme une ligne \u224\'e0 la fois, en permettant ainsi d'observer les r\u233\'e9sultats produits par chaque instruction. Certains programmeurs se r\u233\'e9f\u232\'e8rent \u224\'e0 cette op\u233\'e9ration avec le terme de }{\rtlch \ltrch\lang3084\i\loch
single stepping}{\rtlch \ltrch\lang3084\loch
, car elle vous permet d'ex\u233\'e9cuter un programme d'un pas \u224\'e0 la fois. Mais, la v\u233\'e9ritable utilit\u233\'e9 de la trace est d'observer le r\u233\'e9sultats de chaque portion de code, noter toutes les erreurs de logique et d\u233\'e9duire pourquoi une s\u233\'e9quence ne produit pas les r\u233\'e9sultats souhait\u233\'e9s. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
CodeView fournit deux commandes faciles \u224\'e0 utiliser pour tracer un programme. Presser F8 a pour effet d'ex\u233\'e9cuter l'instruction suivante, de mettre \u224\'e0 jour tous les registres et les emplacements de m\u233\'e9moire affect\u233\'e9s par l'ex\u233\'e9cution de cette instruction et d'arr\u234\'eater l'ex\u233\'e9cution du programme sur l'instruction suivante (qui sera ex\u233\'e9cut\u233\'e9e par une nouvelle pression de la touche F8, et ainsi de suite). Dans le cas que l'instruction courante soit un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
call}{\rtlch \ltrch\lang3084\loch
, un }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
int}{\rtlch \ltrch\lang3084\loch
 ou une autre instruction de transfert de contr\u244\'f4le, CodeView effectue ce transfert sur l'emplacement cible et affiche l'instruction \u224\'e0 cet emplacement. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La seconde commande de trace est la commande }{\rtlch \ltrch\lang3084\i\loch
step}{\rtlch \ltrch\lang3084\loch
. On peut l'ex\u233\'e9cuter en pressant F10. Cette commande ex\u233\'e9cute l'instruction courante et arr\u234\'eate avant l'ex\u233\'e9cution de l'instruction suivante. Pour la plupart des instructions, les commandes }{\rtlch \ltrch\lang3084\i\loch
trace }{\rtlch \ltrch\lang3084\loch
et}{\rtlch \ltrch\lang3084\i\loch
 step}{\rtlch \ltrch\lang3084\loch
 font exactement la m\u234\'eame chose, cependant, pour les instructions de transfert de contr\u244\'f4le, la commande }{\rtlch \ltrch\lang3084\i\loch
trace}{\rtlch \ltrch\lang3084\loch
 fait la trace aussi \u224\'e0 l'int\u233\'e9rieur des sous-programmes et en suit toutes les instructions, alors que la commande }{\rtlch \ltrch\lang3084\i\loch
step}{\rtlch \ltrch\lang3084\loch
 permet au CPU d'ex\u233\'e9cuter les sous-programmes \u224\'e0 toute vitesse et d'arr\u234\'eater directement sur la ligne qui suit l'appel. Ceci vous permet de passer rapidement dans le corps d'une sous-routine sans avoir \u224\'e0 tracer pour chaque instruction contenue dans celle-ci. Normalement, on utilise la commande }{\rtlch \ltrch\lang3084\i\loch
trace}{\rtlch \ltrch\lang3084\loch
 la plupart des fois et la commande }{\rtlch \ltrch\lang3084\i\loch
step}{\rtlch \ltrch\lang3084\loch
 quand on n'a pas besoin de faire la trace d'une sous-routine, donc \u224\'e0 l'occurrence d'une instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
call}{\rtlch \ltrch\lang3084\loch
 ou }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
int}{\rtlch \ltrch\lang3084\loch
. La commande }{\rtlch \ltrch\lang3084\i\loch
step}{\rtlch \ltrch\lang3084\loch
 peut \u233\'e9galement produire des effets impr\u233\'e9vus sur d'autres instructions de transfert de contr\u244\'f4le, comme }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
loop}{\rtlch \ltrch\lang3084\loch
 ou les sauts conditionnels. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La fen\u234\'eatre de commande de CodeView fournit \u233\'e9galement deux commandes permettant la m}{\rtlch \ltrch\lang3084\loch
\u234\'ea}{\loch
me chose, la commande "T" (pour }{\rtlch \ltrch\i\loch
trace}{\loch
) et la commande "P" (pour }{\rtlch \ltrch\i\loch
step}{\loch
). }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'un des inconv\u233\'e9nients majeurs du tra\u231\'e7age, c'est sa lenteur. M\u234\'eame en maintenant continuellement press\u233\'e9e la touche F8, vous n'arriverez pas \u224\'e0 ex\u233\'e9cuter plus de 10 ou de 20 instructions par seconde. Ce qui est au moins un million de fois plus lent qu'une ex\u233\'e9cution normale \u224\'e0 toute vitesse d'un PC. Si un programme doit ex\u233\'e9cuter divers milliers d'instructions avant m\u234\'eame d'atteindre le point probl\u233\'e9matique, il vous faudra ex\u233\'e9cuter la commande }{\rtlch \ltrch\i\loch
trace}{\loch
 trop longtemps avant qu'elle vous soit d'aide. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
C'est dans ce contexte que les points d'arr\u234\'eat viennent en aide. Un point d'arr\u234\'eat est un point o\u249\'f9 le contr\u244\'f4le du programme revient au d\u233\'e9bogueur. Ce qui vous permet d'ex\u233\'e9cuter un programme \u224\'e0 toute vitesse jusqu'\u224\'e0 un point sp\u233\'e9cifique de celui-ci (le point d'arr\u234\'eat) ; l'ex\u233\'e9cution du programme reste suspendue, ce qui vous permet d'inspectionner l'\u233\'e9tat du programme \u224\'e0 ce moment de son ex\u233\'e9cution et d'y effectuer \u233\'e9ventuellement une trace \u224\'e0 partir de ce point. Les points d'arr\u234\'eat sont probablement l'outil le plus important pour localiser des erreurs. Puisqu'ils sont aussi utiles, ce n'est pas surprenant que CodeView fournisse un jeu tr\u232\'e8s riche de commandes de manipulation des points d'arr\u234\'eat. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a trois commandes de frappe vous permettant d'ex\u233\'e9cuter votre programme \u224\'e0 toute vitesse, en y pla\u231\'e7ant des points d'arr\u234\'eat. La commande F5 (}{\rtlch \ltrch\i\loch
run}{\loch
), commence une ex\u233\'e9cution \u224\'e0 partir de CS:IP. Si vous n'avez plac\u233\'e9 aucun point d'arr\u234\'eat, votre programme ex\u233\'e9cutera jusqu'\u224\'e0 sa fin. Si vous \u234\'eates int\u233\'e9ress\u233\'e9s \u224\'e0 arr\u234\'eater votre programme sur un certain point donn\u233\'e9, alors il vous faudra placer un point d'arr\u234\'eat }{\rtlch \ltrch\i\loch
avant}{\loch
 l'ex\u233\'e9cution de la commande }{\rtlch \ltrch\i\loch
run}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Presser F5 produit le m\u234\'eame r\u233\'e9sultat que la commande "G" (}{\rtlch \ltrch\i\loch
go}{\loch
) dans la fen\u234\'eatre des commandes. La commande }{\rtlch \ltrch\i\loch
go}{\loch
 est un peu plus puissante, car elle vous permet de lancer un programme en sp\u233\'e9cifiant un point d'arr\u234\'eat en m\u234\'eame temps. Cette commande prend la forme : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch \ltrch\i\loch
G}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\i\loch
\tab G\tab adresse_du_point_d_arr\u234\'eat}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La touche F7 produit une ex\u233\'e9cution \u224\'e0 toute vitesse jusqu'\u224\'e0 la position courante du curseur. Ceci permet en fait de placer un point d'arr\u234\'eat }{\rtlch \ltrch\i\loch
non formel}{\loch
. Il va de soi que pour utiliser cette commande il vous faut placer le curseur l\u224\'e0 o\u249\'f9 vous int\u233\'e9resse et ensuite presser F7. CodeView placera un point d'arr\u234\'eat \u224\'e0 cette instruction et ex\u233\'e9cutera le programme \u224\'e0 toute vitesse jusqu'\u224\'e0 l'occurrence de celle-ci. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un point d'arr\u234\'eat non formel est un un point d'arr\u234\'eat temporaire qui n'a plus d'effet une fois que CodeView reprend le contr\u244\'f4le. Une fois reprise l'ex\u233\'e9cution du programme, tous les points d'arr\u234\'eats non formels sont annul\u233\'e9s par CodeView. Il vous faudra red\u233\'e9finir ces points d'arr\u234\'eat si vous aurez de nouveau besoin d'arr\u234\'eater votre programme sur ces m\u234\'eames points. Notez que cela arrive m\u234\'eame quand le programme cesse son ex\u233\'e9cution pour d'autres raisons que sa fin. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une chose tr\u232\'e8s importante \u224\'e0 avoir pr\u233\'e9sente, sp\u233\'e9cialement quand vous utilisez la commande F7, est que vous devez ex\u233\'e9cuter l'instruction o\u249\'f9 le point d'arr\u234\'eat a \u233\'e9t\u233\'e9 plac\u233\'e9 pour que le point d'arr\u234\'eat ait un effet quelconque. Si votre programme saute sans ex\u233\'e9cuter l'instruction o\u249\'f9 ce point d'arr\u234\'eat se trouve, le programme ne s'arr\u234\'eatera plus jusqu'\u224\'e0 sa fin normale. Par cons\u233\'e9quent, quand vous choisissez un point d'arr\u234\'eat, ce point devra toujours \u234\'eatre une }{\rtlch \ltrch\i\loch
instruction de s\u233\'e9quence}{\loch
, c'est-\u224\'e0-dire, un endroit du programme o\u249\'f9 tous les chemins convergent. Si vous ne pouvez pas placer un point d'arr\u234\'eat sur une instruction s\u233\'e9quentielle, il vous faudra placer plusieurs breakpoints, de fa\u231\'e7on \u224\'e0 avoir des points d'arr\u234\'eats alternatifs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La meilleure mani\u232\'e8re de placer un point d'arr\u234\'eat formel (c'est-\u224\'e0-dire permanent) est de placer le curseur sur l'instruction souhait\u233\'e9e et presser la touche F9. Ceci aura pour effet de changer la couleur de l'instruction en question pour indiquer qu'un point d'arr\u234\'eat a \u233\'e9t\u233\'e9 plac\u233\'e9 \u224\'e0 cet endroit. Notez que la touche F9 ne fonctionne que sur des instructions machine 80x86. Vous ne pouvez pas l'utiliser sur des lignes vides, sur des commentaires, sur des directives d'assembleur ou sur des pseudo-opcodes. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La fen\u234\'eatre de commandes de CodeView fournit \u233\'e9galement plusieurs commandes pour manipuler des points d'arr\u234\'eat, telles que BC (Breakpoint Clear), BD (Breakpoint Disable), BE (Breakpoint Enable), BL (Breakpoint List) et BP (Breakpoint Set). Ces commandes sont tr\u232\'e8s poussantes et vous permettent d'activer des points d'arr\u234\'eat lors de la modification de la m\u233\'e9moire ou lors de l'\u233\'e9valuation d'une expression ; on peut aussi appliquer des compteurs sur les points d'arr\u234\'eat et plus encore. Voyez la partie " Environment and Tools" du manuel de MASM ou bien l'aide en ligne de CodeView pour plus d'informations sur ces commandes. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop1599\shpbottom8424\shpbxcolumn\shpbxignore\shpleft311\shpright8876{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw571\pich455\picwgoal8565\pichgoal6825\pngblip
89504e470d0a1a0a0000000d494844520000023b000001c708030000006eb0699600000300504c54450000008000000080008080000000808000800080808080
80c0c0c0ff000000ff00ffff000000ffff00ff00ffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000330000660000990000cc0000ff00330000333300336600339900
33cc0033ff0066000066330066660066990066cc0066ff0099000099330099660099990099cc0099ff00cc0000cc3300cc6600cc9900cccc00ccff00ff0000ff
3300ff6600ff9900ffcc00ffff3300003300333300663300993300cc3300ff3333003333333333663333993333cc3333ff3366003366333366663366993366cc
3366ff3399003399333399663399993399cc3399ff33cc0033cc3333cc6633cc9933cccc33ccff33ff0033ff3333ff6633ff9933ffcc33ffff66000066003366
00666600996600cc6600ff6633006633336633666633996633cc6633ff6666006666336666666666996666cc6666ff6699006699336699666699996699cc6699
ff66cc0066cc3366cc6666cc9966cccc66ccff66ff0066ff3366ff6666ff9966ffcc66ffff9900009900339900669900999900cc9900ff993300993333993366
9933999933cc9933ff9966009966339966669966999966cc9966ff9999009999339999669999999999cc9999ff99cc0099cc3399cc6699cc9999cccc99ccff99
ff0099ff3399ff6699ff9999ffcc99ffffcc0000cc0033cc0066cc0099cc00cccc00ffcc3300cc3333cc3366cc3399cc33cccc33ffcc6600cc6633cc6666cc66
99cc66cccc66ffcc9900cc9933cc9966cc9999cc99cccc99ffcccc00cccc33cccc66cccc99ccccccccccffccff00ccff33ccff66ccff99ccffccccffffff0000
ff0033ff0066ff0099ff00ccff00ffff3300ff3333ff3366ff3399ff33ccff33ffff6600ff6633ff6666ff6699ff66ccff66ffff9900ff9933ff9966ff9999ff
99ccff99ffffcc00ffcc33ffcc66ffcc99ffccccffccffffff00ffff33ffff66ffff99ffffccffffff4462b0500000001174524e53ffffffffffffffffffffff
ffffffffff0025ad996200000001624b47440088051d480000200049444154789cec5d3d62e32c13dee3b0cdfa22ebc64a632e121aac465c4434a046ba086a84
1be7224a63be9901d9922c27d96ff367bf3befbeb6250182e1617e60203f0ec71efef9e7833fee8ffd710f57f8e3e0fbc31eae9e7def0fcffda1effbc3a17fea
f7fe703cec9fe0577f3cd28323a4f44ffe084f3da5f3f1f1fef8afe8fb2efa87b5c6daf4917ee8e1f2f469ce0fa7cf865ff8bf9ea49aa77fffa2a135c7e703b4
b1f7c7237c020b9efa676ad6813e810b4fc4b6e61bd5fa7e8aee7fb09ba5f0662abebaaa774961861d696bdbb81a7e6542e08dadb5d995bcb6aa2b5b95f0cbd4
1a6f704a29eacba44259677ebe58939dab2e6f72dbd5edee5add237121a51f01a5e617d8d14396dc5a396e41bcd8f0cd8b553bd343ebb6e3fc2dc7afcae5571b
858f899d72f2c036d7b83aa11c79e29ad3b568acbc9efa93698e9d3c321b7ed5d02bf02542b856db98145b67838d37ce9f0b49bb176bd22de52ba75dbff4fe98
cb9c81b22090f2710e752aa0480249c4eabf4e6a569b104cfc5a182e4475608921368869ddc5728e29b953fe48e68df93e85e6d8611554d46365b5f774a3be8a
1d6cd46370f48b64466bd2dd3909e8b05f2eac5eaeca027680e512aab39c7104969fecf012764ccc9061bf17fe5480490fb6fd9b840016bc5e1f47d594117cf2
2af6eca9ef47af45e2d7b93aa666861de80dfeb6aa7e025d6007474a31eec5f67a6da99f0835a19ade9dd106478b7965c82c62a7824cd5958c23b0d423c1b380
9d246aa8c3f4b93df94806bd8536283a55382b38198590b82a772efafe9cf34df2a39ee7776fc3dca7d00576ba90854c44f14ccd73f8958341e12f30144269f9
96ed40bd915ec746b68b4aa63e72d0f8ab1d1623510fe2880fe24019e1e65e6369fe72fcd6247710763a00c341a53627e68dc0d2c133b8239f226b1db13b3b59
41a93e029bb20b0e6f79c14e1a2f841652e36dcb6add076fa831cff5cc0ce258bf8df8a5a1c2652cd0c4fb3874b06de545f559ec7b85aa5ff7608a5519cbec1e
0d0264ea01aa61104a15d6d6cf8dfa2ae557f0d0fd4ebd21a9fe6f14951f4817d871899fdb3e610747fd06065616fc4566eafa0c2c19ea7489390570495fb6cb
e2e05f038f57a18f79b7f82a0d66800ab9017840699d0e0fb37c15f229e3c0e932b00c809977a75138c28e8b0c0589d980655dece9be7c1852246b9b06bb0ebb
06d001ad81b77665ac9cc341939b323c40efda326819ba5d3e87f2c82e1201dbc8a3e0229d5506a32f340af4bdceb0868f1ede9d1d420f2840d30ec6c426f4b9
693d0b2516d4daa0f4858475b1fe8f707f4738c5b1b4ea426510ee5f4c17d8b1a18c9dd3445b19be11e98d75fec2d585415463828c85265e9f3fe7945520b882
77b50f1a4711c80201e2828314c00ee12806569779ebe0fc5e49e0980ad8ef057c0f837b841d0b1e0876a6187456944e173a8ba342961a8a505054998c688ed8
a16a40ee58000d7839eb49198d3be6109b923296317f13d5f64aceb00fb66ea0210528e2d17aebc28ec4a41458840299aae017804963fed9a8830c1cd00c28ae
a22c75584c0e39ddd71b3e4bb67284884dd8c14a8ae0b4cacd5c9c84b0e191e9aff959f13e7048e7ca64081fe83654011bcd075b2976da45756486a394834183
2653098c9b784d21195da03b7345d2871e948c9bf52985891944b47744098248435f0db6b2443b867071c20e8230ccfd6811abba0e5e37242144d4862477c8e0
9afbeac0cdc0a9511d72135a03a3015b0330e6584401b83012d2d4d592b24fb6f62ee8222f154bee9a81029aaf377c2eb0d30cbdd725e7bc83daf2659023535c
4e83b61aae17b193e11c5111063f15472b0cfb849a41112c62a78137fb803c2f49ee282866307047d869d88e54261fb02319427f26772436c30459006614dc1c
4418d9ba53b9c3a4abdd5c6771c458d62992c4920acc63b938fd602a10cddb690e6871d0496088380e3bd0f068f249aa4d1954680145c16e8a1664f20cadc9d6
3627b6b89849c4f2be9616ec9df4a34ad841394b8642a61ee799495d200292a73e60a730d384945f415268f836df92a15c02ff48671382ca72193b96462a724c
910368a0ef17b0e3584fd84972a7d0881d39c7ce2e8ef435fa5706648f09c5aa140913d4ff27ec70cd166a13f664ff9124e6d42e6a28e92c786534a6a7d51f0c
72843fb506f84572478ac8141593d47986e5cd1cb634bf438e6f5eb2687da2dafd0ecefa1c3b1b9fea043f8811ab16bf0e475e84c32c2f4e1baa50551e3e9f80
338f8186cd1e44ecccf75d854e146024ef7bb10b4f6c5f091dfca38ace42f724e1e13a5bc2ceca936a37a192a0e836a8aff241030dc8803eb7bf79c81e5b5081
d0596b66595332dbae4f8efbc942aa39ef3bb8edc4de6357791d1eb14bfd86c9bde07910093b06cc657e7ad340c00b175c16b4a8038a521b2c3a3f1a1b527b2e
6c9879661969bf1d35443352340ed863b90dedca3bce7d9ff0251a2fb90eb3b9f7c14f3bb4b246a6ae1bfc04b35ceefb6b5dfa6934c78e4a6e569c60662c6981
0cfbe8d2dca101b3458f11a7136d9c644653613ec74ff3c36b4457e8d694c2856a30441c297abb841d839a078618e66ff1ab3c192993796511ab9765718e172c
12305a57d990648072d613d4b0b46613dfdcc48220451f0de0540d1dc2822be3a8788424aa4fccc8637e1365cc851ec94190b5b121c4218e6aacc11706f19098
1aaa12065d0646c2859b39cc2dea340062f714218485059ccfa6397632c963fb332e05bab6eb78e317bff4bbc105901c3c83df1cf4376a2399122d58712b4137
5732ea3d285a6442f2355dad05f63ba610b3ac508b5ff0b1661b9e6dc4ef0d24ccc45093048c1a5d402407be37599c34c7e46ddf279531324125b6c9843a95b1
a26f682a79dcd472aa86c0799ca51994079ae25e43abb1ee5ceed6948516c432b930ff0daca18608601270ec37b466c31ea06cf11b184758d9642b19d3fc9ae7
de8a54a38c53d9d03de49c2dcc827c3e5dd83b3744e1cd345b4dbdd0a93746faeb7d2ca4ff0676a613536249b9dc1089706d1ae473e9bf819da998599b5cbfbc
2cfbbd29cbcdb708480a3f40d90bbe131294b6dc810923c88cc12b814fe27f12fe45f34660b80cfee00253e223899f3107a5c407782d3eb8e8b763a7fb46b5be
9fa2c38fb7f7c03ffa4713bac00e020d17cd0166e8a67880dd1754eb83c94a77bef0a5d0e897c1a81ac51f4ae483c3e16a6799bde4d5e406e7e8430711bfbe33
a1cc085514294d68417cf8d7335da50bec90264bd15626a4d9d67ba34776eee6388b936ca27312ba8acebd9b66767186659c948fbebe3351a392b1d4d12476fd
17a52d60278414d3b062b8605cdc1f768a71efe312bd6435dbe0442136bb7ea6fb69ea0f7e6417d9a7d86958b4bdd8b797d0d4261d17fc7086b29a8f8b3fa265
ec449269caf72f8aff9ec4c601ce38fb7c604a9cd651d936250a714dec42f01a36554e297ae856b043c4598c756bfea2b497b0f31363e1427e23d8d982f75a86
bdfc19035c4866e84dc5d82f4fcb18721ff207f0d0414ab79ced4ef9a8c1d67ba6f6c1222bb3e27c5f30c0d5491555bf412ff5c09115861956b8408c199a9462
acb3e085d991962c36bc0739b7cb567f33c4df894e9debd9fa2920769c65a8ad55b038971e67ac37fe67fe96d2ae6127a9c41028a2ef06c8b052e72c378c9b9c
79d435d0ef4dc636e59a072630fae50082e1893450c9d429e3c0cf36064b4eefe372d5c3f9d606839850e599875558b3d05369577416376051480d358a66d35c
f57d018d1601e9ab65f6e991b1121a8581771bd643d3723e0ad77d895ec40e2d0c95b7819d92158566baa0de6a79943b5dc6567a25037b8067c0180e030ebb50
cde54ea055d109cb92dc614985d1adcca83559d0f97683ca6ecfd6017556923bd3292770bbe0c94e3119edf0d5c734fc4f688e1db077300c5d3d321c09d022cf
80851297fddf403fc274827b28b5ab5c1379a9d82b3babbe98f2c40d49b5a610765c821ce2bf5a3486f1a66f2d031f3543156fd2ceaf093fd1d51af12cd93bee
7cab41afa4734f39bcab643bb6c695e0127b202271841d8a791531fcacb620baa511c37bdeb819ec3d482c772eb4d4a6aab4140797038b325c11c6f8cce43284
707d6b5e0c248fd851aa50a5365aaba9ad8c1e1cf8597dae8c867f796e725dc0cf4297c54eabd2a89d818c3ba34b48a24c0e5790c4e8222ff0716e76e7a28bd2
c08d2257a532853690a288f9feaee82e56d6608b78ec2d605ad459f07f1d6c9ed4ae65028bf6b8387aa9b3c2cc811aec9d30bec530e01e91a798665bac758361
1917f68e61225fa57d5b8f7b7037787e0a63dc7f304346455360cbb9e8535b8701e700431a5ad3ec3a9661d10e19634fd8b1578ace08193fa6dc9b5c7042e7ad
d8ca16840aabc5193b9ccd5cc5f6349b510ecc0b835da3a41a7ea7c9c0939f7526bfe36295d148d5ec2cbbec60ef9ce50ee643cfad130286320c3f61f8d7f071
b1738731d280dc51711c25cf33cad1d7d67bc448eecc8bf72aa64872e716a8c41e07c973c60ef5df19fead3278d196fb40f1a60371d683526ecf7b2c4e165f18
c73c0379ed49186b0abad7a8a97cde217692dc39dbca24f364a84b2a08e58e11df093ba9f90e7a384fd8c9b18116bfea572739235b17b063eb70649ba625963c
b92f1a2f7f4a7c537596f99699cab2aa64d6ae99f21999223dd3b6c6b8d435346a05960f67c20ebb903558c03fd991af772e23961464e1d4a8d37dc6462b129e
f1c666f24950d07dae98d138a308a30b0312710f1bf969c8b61d73d566632d33b6660ab023d4f7c00ecd4284089783cb59fb24191d05016adcad5897659d95af
4e544972c117b0839734518f1e49cd6e654d025da222864cbb803bccb3479abac06718a1b98901a6d9b0cfec34bf67282abbc58c676914f9a0a6adc7f8ea0c8d
9802e44e897b1db3434caae3571cc19cb69d52ccab26361697eaefd368a17353102b71a541930cd54b1f7963071bfb45ba22776ce568a8a5afbeaebec19cd69b
e8604960f83a7e5507dff8c62613a7893b89db8e3e6dddd8b3fff414654b5b8fa7776c030c80d6779377e0b07d72d5015ef684338a74d35594b36ed39bd30b0f
18014bb539b454a1776eefdb68d2b98d6da8ad2dd5f1e06afb7c6c6b17dbed502439df55bb37c89d45ecfca3fba23fecdc4c4f674e97892ffb59ffe8bee80f3b
376eb03fbc924ad2b4f13fecdc39fd71e716e5eb93cabb89dcf155e72aeb6cdd76b6063d084e8bb36ddd56ae760dfc73d6760dddb04d6dc128eaaadac1ed0e7e
d6ad6dad837f8d032ba976b682142e3e682adb7d41d1c972f1b755eb772fbaff20c12027d8b9e58d030b94ecfbdbde4bf3f7547f1076f8446779f02800f0b88b
e0da2156b7446fc48e6dbfc54ea70f233bc78e32e01da2076ee595c89dc38ea67b9e4b813cec4b4e8e991213f3592ed9ca690ff1cd53628c7925d9c5b6bf3ba3
76869d1c3953c409f3791876243a94429d766ae3974c8818a59acfefc4330cfa3cbd36e3b73c24dd89572fd3b53354ef84663aab6659f6f3b88bd8599eb693ec
103276340c0f2af396ed21e5dea523674e34f7d1d3d938c36bdb303f0ce69628c99d57f7c085f90981f7456e8a9d151eaca043565e37833004cc3245c740b047
156370733a4b7214bb26676ba12466d4093bbb83bfd85aff55048a541d9e0dc395262fe8fc2dfdb22d93668373181ebdc4d328e2211413fa85d1188a65fb10ba
9cadd1fa536c8bca9e1f9ac5526f8ea6f60e1e22824b239679be9e1de439c40460f20acf5f08c3923245437553b4711a9c137b47c5b5f96fe79da4e5151e7ca1
7d4fe7fee52f4b0c3b3408b872605b0c66eee727bb9478924989112c451b389e02d385cc8622d72f053ddd1455932ecfb1c90807cdaece1c839e631d9e641258
0ca1630421cbdc143be3b55023246f8382e12c8ad7cd844f261ea40311429243d321a4a3637816a98d6d3436f2230fb23dac6769f0c4540ccfc04322c523ae5d
8194aad2f15ff74176861da2e160e22bd86901260376f8f055b1668c9de97a9688a5eac0be21eb76815bd306170f6a5412a46af9b2959be48e0749d5626b9a05
eb0d4b008ba889e23c1c9429d5aec6c5e56fc780ff97a6b6b2628f3bb4648e8c8bb3f1126dc2fc841daf2ce92c1d759622ec58e3c7d81193f91db205d2c976c4
babc765fd8e82989202ae54213cfb83522383ae3f6053aad7e333a20157225b1539db5111d7b08860eb4d4872c451fd874dce97dd0d447d7a8a9000e227b3e9c
03277b8bb3d9fec4af057b47cc9d7d3e913bd6aca672c785b96df975c403efca2aea2c505678eaece569cf133ac53b44f39f0793fe3cc6c898a353df14db3dc6
c3de714ad4a87bd65945b4951b1c59828d034ec6da0867c52adc1ce399b10c7795ef3a10607e1c982126b6b20f077704933278e7c9525c65dfc74517412ad104
513f7716c3d236a17fc5b94ed8a982737830435893218c4012a3340d8c366d826b3c6ebdf14df06b895777831d37b3773476bb61a7debfa496ad256e1c5a83b0
f989db3be92a63fce7d8448ab343277b27f3610fcc5d1fc2f1fb8026111d638d52a70a9e0e2c54af6dfb49135f26c3d31ea234ade990e6d1f1a0783a6406053d
f41426c9a3ea4fa1c7f741537bc7a01bcd998e7383d742d1e2dc0d05f487304c09d6d370b0e9fcce9d38a50325c6cced69d3bcfc07e0c0714767e46eb073b19e
f54e242672e7dbd836ef4329d2f4cfcf56e35eabeed575b05ba18f5a479fca9d3b8bc1483ebaf9e38c3f0d6e3579ff0a7d0dcdd742df8ba6eb5977a6b392bd73
dfab55afd347e9ac690c86770dfeedd8ba6a6ddd59e7ea1a2e5b57359dc5bbb66eabdaba0a43d92830adc2b834db62d81be4a8e066dd545d639b166e56f0a4c3
3f5a6b2b28b6fe82a28fb18d87dbaaf5bb17fd717183637be71fdd297d90ce1adb3bc9563e2d79dc0db9bb6acd9fd3c44707da1ef397e277f6ea37dbe1d6b30d
c3732c55465f76cbb6639f7eea67099683287405abf1afa37f64633e999e6f644ff447d1a833fb8ce5769517716e70396eb060d6ad37a18594eb1546fbd8ec57
f04c58399e1b9ccfef905bebcdf03a792f083277d28eff93e64b988275b826b1b9b2928e234db1aaa0c508e5686942638efdf53589910cebe8302b717d9dfed3
c973d19a5d1fbc12dc1ce052879a2f8f9b39753b0c81f392cbf6a2d47853b4f802b394f91e68be84b95d87323bb8f35a6827f0486d3b4ade32ce86a0af100f17
a9e6054d75162f52ecd83a82c6ffcd1198ef4ba045719d24cef60a3a5754b337f5760a2da135f4f9797f5e17383d8f93eeedabbbf76f96a661375263e73e8ad1
29296d81c73275a7e4bdb2849d32aea3173106431daeafa32b29c42fd262c5db7ae533c9b2722b336889a2e3cef05cd1e2d53dd3442cf32503ec798c6e3b4e9f
f952725600125dd864c7e5fcb74f539d95895f473ab5ee9a6060ac62f53cf64bc0cd6a0ac2f99ee23d1ea7e8dfd6299f4a15b35cc158c11a9760d493dc79cb01
fc1a78945380b731173a8ea643352e123f7e8363243f8aa6d87161b5a63f0f78e65e9717662c773a16e377226852e8e92ce6545ceecfa2409eb48ee8dbefa3b3
2ceb84118c3cc382152877f23741bc24cb2fedc2225baf3a1b71b4f1088f76ba6637de05cdb12328d6bd3937b9a63f5fd38c929f63bfe4f065e7caefe20c15fc
d124e78d7f235bb9638e979c915fa9c06d04d3458f4e2abd4e053bfb5982da331a70f813f5f3963d7c83a38f3f8aa65d8e812864e1adae789f78546e3decb179
887b6c32450b63ab7141635b5982e6a773e65c8ad72cfec7deb5e339cac3f0eb689bcd45360d4e33bec8d2004db80834d80d5cc434384d72914c337c926cc090
c7ceec378f6c26dadf0e09e1e1872cc9b2fc9710870faace9b09553061ae552e76e9705ca1588dcec7bdcd0947180e82e71af614a144d93102630eb96fc7b9d1
75bf8abe89bda37a2133e78239ef1bdc628bfd20b954a32e572d5e25a0ee603b17f4f3b5504b5391f5f1ffa6a7f818c232357bb4cf38e936b176f45aa148b5da
00eb2ccadabd13c17de466fd0db47b6b44d7be439ac52b23fd3c7adfe089cf82e988fa6655b96b2ba7ec51c0672b545cc160950b9d55170e562d7fcd80fe5cb2
b40b4fe11f9b39c6dea7e76b7e4adbaa657f67c13bcfe47c0e59e4fd561140f32eefcede7d0714f04e5394293924a80d4c71099fc97aadee5bca7f9b5f7e016f
f0aec9fe9f7451ff267d42dce083ee943e217ee741774a1f148371b21ffd41f7471fa4b3be9fbdf30de9837456b826a1292f4a85467559dcde9ac483fe9ee6bc
53a53ecea6b988665abbfe6fdda171f3ace37676f97c4d4257655e643895afb6379fa9f9416fa039ef94d8b91d79e41b4ac97296b473d8fba9ba75dff6d9cc73
33f7eff8985317e670b7ce8e6f4821efb06fd5e6ceaf7cde5d41293328a5aa70bb2cfc81968d43efe912078397b10ab03e09a655b7e75f7ed0db29e41d80e7dd
afb872f1cae763e71238f41b38e640a804b68123f2c95e718ab6c0ad3a973bcefae953185e97025c926a0ffa8728e01d4bfbd1b3552fb2cb26b4e0b8c1d2a521
13955b12ad788369b0163a973b1e17a18667fcfe033f55abdb8987a2ac43d18faadf520266c33909f3d78519a56bce354dc25a2e8d43024dd9bab8c1faf6539b
ff2dcdd6b3d08679eeb0b64d326593755b63aae0f27a8c391df1064f62304ef614573e3af366822f3c79142903aba21482f39117af8afd6a91392c5e0971558a
73230dc78f88178942ef8b66b85fbe96255c6c3d808672182ee3061ba8e7bc13e20dda5a7531a4fdcfd4e4afea96cf240d1dc5ef70847505154989edabe2772a
88e3e4a7cf53ac9ee73f2a1a2779ff02b10dd287de1b055d3e8eb7ab31a70a34cb9d206e5022e79839ef9c89fdcaa0bfac0bbf8c0c185949273a33c828176af5
2a9d9542b52d7386df61b89d19ada0e061d2c0abf8f01fa599dc716db603b989c6b30e2b241f2fa7a4a143ac7be262dd6350e56e1eeb7eb226010e138abf57f1
ed98000d28c931a70d8304535ee0ec555ac62728eead940905eae2889906dc60ec1ca28b38467740337b078d9226ee13b13b4e436fa7b56a748837d88c31a763
e6de137b27f40d9a7c4f1ff29177245c98c57d0169d071e675168a0a52bdbf5fa55839cc49e51d35948b1b08634e331f77ba6e2e8af07f9f66737481dd9e7454
db18cecf84885b0aa80b9e6ef1debe8e8c04438976a7abe6f3ac02844e20af41e99a8d6e93ddce561b056d823a4bafa56aa21f54d8e4951baa56429784ce5d69
25488e86bb4056892a41d8387ab91881790714f28e001c8179e97c83e7254305690bb0b310e308ddef20212ce667648ea7f086797ef463be86f596f7b0ffbab9
052ded7c9bca0a5857e41c4fe0950e04ac8ea848673904e11a263dcf2773e4c2925ef01d624efb7d15616bf83c3617c2e0343298e5c6a14db336e60cd8360511
f2da778cc1486ecefdf0e1f488c178d0dfd203bbe9417f4b9f8037f8a03ba50f923b0f9df50de883ec9d477ef46f409f87cdcdabaa77eca1ff7e14f00ead3e88
9d9ba327977ce9dd8af5d17ec35e543cb09b4f2e73028473f4087e8adf62534224c4fd02197d430ad72456b0fe09e689ceac1801e49436b07e825f7d09bf04de
a9ddc12073fc0a3721ffe0bb177183e5b826113f34d95dd072f95bc8ce65a23befe9a2889d144cce8b11794d11165010368a0d25ca1207839799ab9077be9d1f
ed1e6919b245a9f8c45e4f6b332a91328975707903c93cf6eb24f7da7c2d54429c93660399e6eeaaeec13af7404b0c155aecfc1d07e64b9b13c4c184fbb52b5d
dc603ec56020cf6dedf24161ae5929d728898e59f2d056f744f32eef38315f732dd76c7d1afb45798a9ba5009bcfd12d83e33ee6ec77454b7b87e48e08735cdb
8cb6e6b5e3e51acc29de60b78c1b3c5993f01ff860ebd742dc3ce896691eeea7897772b07a123cad8c1319d7c1e57a89af9c2c1371c5e7e206e9af8bf2491eb6
f25dd052ee243107bd9d8dfcefdd79056e63003c157c88b734910af1a997f3ac82f02d7b460d23a64ac5edecb179d0dfd35c5c680bb6b8b6b72f4589b186ae63
bc4163f1b0066521c51fb2e9aaf93cab65b7f29eb7b3fcfec0aa3ce893698937281834d847fe9dd2ce23e047043fe9f6140b7708d5d002f7cb0a109679e8fbe1
aadd33cdf649b08d5c5e5d93f018177de196a64a6755abf95ac32306e35bd007c5607cbf98d36f481f14fbb5f4ef3ce80ee91137f8a0bfa50f8adf79f0ce37a0
37766e9cc8248ef1bf8ce9a3a4bc6c7422c50fd3a6ec25aefb83ee92ded8b9d7b2ad4fbbb89731a7ce97687fcf7771fd99cc133e9642819273a52c8393062e04
1ccdc8272a95bed2a5bce8a2b46b9a467e7d5ae546ce966f126ee3a135e270df7c062e824a9f8001f5fd7188d7946f842139ac9d40b0f139efcadcaf4c6844ce
cd7361d180cedb02f964d71b81fdf5d22b3c60056d126cc75ed8cab0caa89691c82f85055da00de40563729cedc3f0a495af01aff08b6eadbff3ca763c87ebb0
fd72dee9e6b80a2ebe612855b813b56f22e7cecdce546acc9778929cf20f547817b13edbba41eb3420b64f905901b25c6dce3f4cf5aab4bd10bdcdfb3d96c496
788838cb08c185799ae70bad3d40259643711954754546ecb3293505571536afe01d1442af903bb315592cc7e596f4884b5fce3b7633e30427538652cd616363
d7ccf60cc64836344ef2c675c4dc6fa6b7676f9cc52be3cb65c4b3a4cb439292d49514b553f542f6a4a944dcd3feff72022898fb952bf70acd02c4e729be0c77
da06f1f089e4475805a09f516c34ed01eb617badba7e8f42c44c852c7873734f171ca6d30753d367a59b596dfdc2ac362ffd5ef59a65bdadd5b16f3c5c6b2321
d17c61cb2555f5a46c2d9eb24777ff01ff342f477afab15187feb9ed4d8d75a7b71ed4508c16ef369454ded0331b7b645811be1da956eab93754d467425d6b4d
a8d74d8def3707eb0a561b7c538b15573b2e31b5b2eddc63fc46ee9dc2df5eb4695463ec5e29aa5b83ddc30f358adba1a15774c7bd9af421366ac3cd765058ec
e76edf1fb029bb040af6119b066fd447ab795ce3a3c3d6e4fb895f24b0a53be5a53ea8b655669005c00648b56753e058f10145105910bba0cf1771837c723bae
b6d7e2cab2960df3b239ddc9a073cabd9c92749203bc655ca00926a0a0c532dbbb8c55a3939bae59b9c32ea8adb7c2e8a11c50824f658b2d8366ba0ffcf1091b
8672644d950352dabc2c0336a74814148dbc2cb3adf96931a7616bc7003ae06bdc3b08dc53f20a4eec1083b91a02360c20acfcfd53035015f9a4e8bdfdc5b948
eb7e08fb96033a92db14a7e89b07c2cbcc547de887fb8f6e5929a6e84f18da61685c2200002000494441543a879481fd842f86ee098034b831a6b84f5e90e4e5
c9f58277bcb860afb018c5399b3fa32de31e06be18ca1d6a578d4925268b1cd748c9210305dd1b954027212afb4e636351dfebfab7e8f702522dc40e4f06193a
3390688a73a74de890f14f6db658ed17d5ce74903bec04f6dd210149201e68b31909b17f60ed472a0e940274b4624c30ff50020913b056041cb39615c4d1ea17
5490a8268ed0ea8b6a09765e0c5827784fd4efb053523461a034c40aca085a3d2c75b7c1076efbe32f81f78b2e0e643e959ef841a5c4190ccc67a9e234967da8
a6eae29faef788a19ec9ee6cc02805ab23be51231b60895cd24e6efeed2fa33b28f1eeb21eed1ffb04492d40a3b8ad855068766bfcaf124859eea654172c4689
c5106b462aeae7bcf352fe8474cf7d7d196f30b27bc1ec43e1eeeea07bd9c76346adfe149b5ba3519415d0cc23c45e457b1883a1951f06f4f40416c64805d99e
12e16e397ffb505ad77b7c63dcf70bde7163a5c43f84dda4e8e368986623af191e9fc300e4caf59495b9722771b29794c869d4713928b2b153e0c53e3dca0f2c
0f85c80dc5005776f7ccccad3cfb7798125934c4597559ff8092b8cab1e0a3ad3c8846fe9e0cb6b2bb3be19c94c05be2aa81f1b9f9e2debf3f6c429a1a4b97e9
3e6130ae966470ee9735c762742c0347a93ceb2a9aae5c8abf702f6fdd4c979946b9039a47f8afcf82a7843acb47c46339d4eecdbce3f06bf8b6142a25c06944
bb401ac35a56f49f5aaa9e3acd7d4857c635fd8277d842203d950cb96647f6afdce861de91205a6dba61719832aa76a4df54ab3ada3142b861bc82574153e023
8e35c3384debc3c8c2d455db48aba132c449b9d9803306a9d3528596120a67bc5f4d7247b395eb58b83fc73b06729578cf039b2f5bc7271929e995e87886948e
f32cea0ecf0673dea12e6b7545cd40087a28ac6860157ee7543dbc9df002374ad7adee4f780727d27e25736a4580006fb062cb82951ff34ec272274e50904db3
c979bc7232f08ef1afbb1af1ae02890d7e88f45eb33b3ef4aaf544ee60b3f1903d913b046f389bdd8e737406372529c6252ea718a47c943b940d7e86be4481b6
c6c327f24420a96287755982aadc8c86fa4a4f3a2b7611bad215c355a874b519e54eeb1f37df395b0f03beb9c03bf498ccf38e87cf273e71b37286aeabe8a9db
e98ee4acdc71528b349c97c21d9568eba36642f1175a9363397dd0d765dc26aa25e94c58d83bda71c354eb737227eaf16433c49c5e06e16b038f06b597259d8c
8f49b2d8dbddc9c43b6532187b34472fc138f3205016784b2563fff1847718dc54b3f9da0dcdeedba2b492aa87e5895782bc6343b188771a921b3b4a158a7d17
e7094a21d659d6e7c7a68277130b3b9d459d36f14eee6ac368f76856d0abb7f16e89b1aa86e163c671c47f65e1bf4da9b6dde614c7f52cf8624d0fa502e1392b
3b7f47c16c204e7416fd6ee92f656d366c2b53e398783f8872a0dd9c89782277dac2dee1a0afcd7ac0f03f4b2ffd0fd87469c193f302c713162d8d794fb1996a
3dc78cc3fae3c8dc52aeebc895b0b9ec6668e6e97e45c99311819ddba01ec1c9558257b84ed9e0fc6494085b429997c405e5b4430839a0402d57acf1fda4848c
db10af9c1cb56bba9040e9719ce19bf209829cec50492194ac2c3a48d229b62d763aab5f43ba8102c77c92a2b5f37b551510a1f9cdd34414fb855cca9d5ca061
84a2c0755a8b65237f07881c1f5e6387a1ad6f7fc3dc939200a1a40fbc933b904fe1605935d5a9852ae7c958b7e2fea5121c2d44f9164782d86011b1372d4df4
2ceb104df0fdc506bfcd78c7faddde629555f07484a858c3ba21979f145c1fe13cb438923a10856b8d50f053f5206daf6f1aaff21a4bcd1aca4faee880b37639
39e7e6fbb3f665042bbc7c5f80f863e0601ec6ae5a6c55bec512b6f70e592f4e7832c9bfeed3c0fd4dd3c164d71fd0dc0f26b995a0fbf1c52ea57b0c83cea443
c507a7b36a2343d54ccb286be781501c500bd36a9d57c1bd5ad11cb0720f34d867abea60fcf4f925a76204bc4377ecb01858a0a1d3f0fe38a59d94f462851390
754ebb9be64177ced6659dc556360f1b463a7793752cff1a440a0e4da07738f56a98a35b1a32548c7215e5ee698c34cf0c3ae39ddc372af21056aac72957d4d0
4bd42fe1e415a3b6bad628c03378c83be58a5a6f0be1b9b384733bd3238fd1fa5447878ad624a679d61cd7fdb3495de5fdf3640944319fa7a9fedfc5780d4865
9bf597b3d1df38bdb173e10a65e3555f8b3728e1527eeecb64494f3fbd2b1672f2aa62586aa0d5bfb9e7e81d7927f42b7f15ef7041fe064a9d55d66b96c45e5f
8cd76d602405faeb3de5dde7d13bf2ced4005f1737586565f57728fcfbf21db19fabbc2a5e1b6ed2feb39930df9177a6519b7c02669ced4cad6ba56bdde9ba55
8a0fb5568d529d32f8d768d5d60dfe62546d6a635afe59d51a7fd30aaf36bac627d446a9a66e1b7c80a127d0ad8f47fff9d1cf6fee5c0a164c622963fc97a474
a4e8c184cec5d3784f3f41ee94d7d8f8411f4e4bc7fe7b51b2e09d5deea6abf27d10e3f6f498eaab1bef3a25cd0f3efac97f568fbc5e907755a9f1ca753dddb5
512a867f83e610042d098fbc5724482eea7e9bf1dcfe50495eb5dd3abf878a67d69e9cebac61d66fdf8951f931f95737de751ab6527b01a986b808b2e4c13be6
872ba7bbe221e7d4edd35ceeb852d7ae532ea490e206295c75a53bc4fdb496eb69b91fdd998d7be12f72414b17e82407de05de29bea0bd5e4d2bbbabc9a388e4
0524bbfd98ea2bbc83f38dea138af71eb4807aa34002f19bd71ae5854cc2311c7a01cf19ec91418e1d87305903a55bfe98ae0ae7e89d7f058d3cff331c4e9e3c
50fbe7c0637ecc4ddb3b198740b0c7d8275c9de44e7b8d77cadbae57400bd81c8f3798f00acf79d110f1fa54c558a8205c1ac74db9cc537c662db4e735899177
8e577827486146e40206d16092a202783ab25c94be4b6e94a8c8121b4af0ea3ce74a1a0d1cbf804c5e28e31d1b2dc73c9228adfa961df6b74f66ce3bd4e52bc1
61409353d4f5d11437c8ce76706b3a7238e853260c63bfd080aa4781415c74cd8d1ab0154afd64852569b4110aa579b48e216df1edb2ba6dbb80aa9af43a45f6
c0065ca326ee478bb8e9218968e4c9d83620b10f0cadb41e0c81c56614cf6cbfb2e8af25b5e41d9144a48c845c8fbdbb33da5018f8c03b4dac19338ed6d051a2
50b87b029d6ce70f0ab10c24c8d471d39b6d65d70bb49e1d04dc8d3aeb6612474ee41bd67da915615d51dae398a217c646a756eb87e032f06215db546651c9b1
fee5ec31b748b0141714c080760eca898b9e4ec2aaec1823d7010d8e589566ce3be15a68421aca4baa371791fea3ec4fd63ee04ec6d3e4cdf49d31e4ab328d6a
6ba51579aff0501bfa8affc8e9d5912f4cd3659a3ee1d5aaa3931a6fc53f78a5d1359d23f797c19ff0434dfb0cfeead163a72b6d51fd50ab94c013ccd1de31d8
66a881a3be6d7623ef4817d58d7227e3a8557fe92795faad8fe64e59aa1a1c28d122e65411de60a2c6ceb40947f0b2c091c341c7cdf2412731a713ef98fccafa
cd3ee45b6f3910cf24535987397adddfaa33c4db3bbc39b0008e511fe54eede40e45789840eeb888e58cc3c86fdcffc0453eb19515c5b125b3b8c1aecc8b6d19
e62956639ee278b077d4528085fe1db9e49dabb8ee2a0c84f09603b828db80772cf9daf490e6e4e6c8d93b64eb10f427d9c92ede92c8bbdfd3de6fbba1d9862c
887744b2aa180debd6e75a1cbbb6b4770c0989f84a3489c7aaa4deb4a4e168bb0f1edafe106e579def93a890536c106edb17e2c2ae53a232947ac425b0a5b789
28e49d4e2615301af46d92e39d1aadde0d6d38b0b47576f82de11d2505619b1f7b767909d3af895ff60d874fddbe8fe78cce22b74c945dc41a24aad8b5b5a30d
48d87714168b3204d9a70f43bf1618b996e69ceb172f242e738de3abd9266bba21e749eb6a0dc970771be190655bf996e54edcb7d42438c3e258503bba71342a
2d1b91e87da193f191a160715e7b1431cd6bff0d9d359fa3f36c7c7dace04a073fa3be5995eeda9427d1e465ced6a8b80277b05c6073eb94b8d16cf3aac8fec0
3bed7cefbe0f28ebd29d49dbbc1aeece2db56f77b3f64e56a106ca13d85429e08162999389214a60a59414d1a6a20f2eecb4c4cf519e25f054ddba83e7d4deb1
f9964006dabcbc1650627da885ef461ff055cd62e49639016ced3760d7ed9f0296ed6ca7fa808cdad0966c8b16bf3faff724ed53b7aff7419f4dd431e99c7714
4ecea8f7d435c7c9c1f7dffca0678b506b8e21fcff3118fa8a515d002f9d3ce80be8cc3cebdde83417c9df114c7b0d4e680bbc82f2a02fa033f3ac77a3f78a39
ad1b7331fa3c27b973abf3ac3ba733f3ac77a365ecd7471003823d78e74be8749ef57e742607d2bbd3f62177be8c785df3c374d6629ec5aee516e7ad6fdb12c0
104130c0763016d910efd2dfb45ff9cee98cce22a78dc33bb8cc514dc432659f7064a17d72915a72091531933b721d937bec67148bd7204a06bc83ec5130700d
658ba49db4bc5c1faf4090dc510f5bf96be854671d29f6824203b86fce132d69e3dce7192fc56b76eeb087b58cc240c3f93cab764e9a9297ede9c1e6da8e24de
dd3bf20ef8ffb41a422bb00ee596401b2a6058c4077d019df32b1380062d095c4651e1256db00eb9a331407647dbe18d3a048e99af49a8e9152f0356e5e5b550
133c088bb906c73b2de12bc10a9c204336cc8091aa1ef40574aab38ed4a389eb9bc93b78d4c6e87ae8eb3590dd92babc7d62eb0e294b941f2187cdf106ebc1db
b871182a79769175fa4339c5328360e6e91d5a4d8c5f232e2f2df8df740cc69dd3195b3905bf1f370ee48e91b4e766ca717d6c5ccca9713118b58bc1a85fe60b
f273bc41225269e20a36ee3922dc1bebf416c790d5b0f53aab7df895bf90cec40d9221cc993c2feb2cca535c8f718372881bd484de385d952ce2772c5a469294
57f626d6f98fbdab476c5557c2dbd16d9e3772dc58a7091b891a990636028d44031b8106b971369234d1d38c0448209c38d7b14fce65ee8f636c04866134339a
f93e8df553a83bcad6017567a73b35f8caf5a63b8f91787e27c3ae72e66138a80a3a92a7daaf9e544b8eeb59cd69c86333801da9abd94287a21f3bf6308ecd3d
0a079bb9c9fd6525bf83c0cadc9b5b6c3fc288554910fcd555018e1cd791e2d565cd291dba70924b3d367ea397af3b9c4cba033980cddf799c2cd74253323cdc
eb6ca17b8cb9d3c057dee7b830e6f9ca738e6bfc72399a394e563a07412aaf888c7870ae944cb5ab1067893fb96ef02f97a5bf23e0cf3dd5439f434cb0fc9300
aab0792920467f2299344a98fad9c1702db4263449601fca6c7ae6f574a15c79efe995b33b12f065c7ea6873127b33fb15db9ac4c324b28e6e661f0ac681ffb3
9a1b54e4c0e0c3bdb99307adffb12f7b626ea7a70f33eeb5c6c4d66a68205fd51a2ba5afb64e77dccc34da1d1c06313f37dd798844fc1df56cfbe5ecc72be26c
92839977f8f5f57c4de2fb31e30a309b9bee3c44beb30683dd611d3ddf62f487492cbf732bb947fd8ed872830f93efacdf09fbd1bf478e5bcde9c3e47be7acef
f777f2407746ea864dee20df59fbb5c0397dc77c5177b101e34a2982de3e2a6527ebf6d6e82307c6136896a2fc42cbd47fc0f87196f8176039679ddaaac7405b
d6eb25e65ad5fecbc92611df64c016cd66fe0e73d96072a9f8e24ac96373d6750d9595fea8890ecc99b04d62cdda77d47fc0d8e910676d9957c60b6f332aabd6
e8fcdb3c84bd5d1b6f2d1d46650b0e53ef5b617ee74c92caec7222499bade1185e2f614ff16f4658cd487ad51569f5fe836f245a198bc3f599a9d57cc07f61a2
e42ce8915ffa3bea3739624d70f33c63009be44844bddfe98a94fd6e0f344dd5e17fe685c980d838c4c1a8ec475da9c625850b1365f34948ff63a03b3cb73c63
d75d92e7c836a68337009b8314acab4de2ff05ddb1f5e1d39ba5bf03d0b6d04e3f504f4604d62452bb26a148d160255806b4ab27bf0b2fb43bc7e9102f78b8e3
25eeb5fa93ac0e2258474f0a528a2e692b80229147802b2a29a9b9a81a2030926d636e3f979d80cfbb0e518c795d0107cfb19385d946db9a418b32f727c20461
02513b8a8ab0bc97941c6b02bf9c0bda484b492bcd2176c75e163b334c5d557f63c632c0e85bce598edc5a4fac8a206dc2194b065b40505b16ebe8b38142bbc3
48c290f59719fb8f4aa93e8937f881eeb4d36d66821ca0d41aa8d48fda58b853fda20fd519fadb93a3e689022445251bf3fc28657c7689745b8cecf55b2d4f35
35a7542ba47ff67bdc39c2043acb7234fb1b174962628c244abd571666da3c4ac6069bc328fa72d6bd7ab9c3bdbcb704663712a373ac6ad0438f8c95530b8c04
133f7acf6aac1b4c6cfd0eb335185c8503f9b5eec615c92cad6bc6aeeb93b824617e27c9c8132cc053b072bdb9e712ff73caaed25220ab322054e4f685d8398f
81edea34cb4ce0962e409bf964774670db4e5bd0a5062f93fb34d17591f69a0156e01f8ea3f93559d89d76ae3b9db53bebac8fe692916eacfd1aeb061b528703
f9788309f655211bfb17788ad7240ffd1d73cb4a78140a6371acbd60e63f7c406af9d2d6b2a98eba6aabcc786b8dac0520f67760124177cc402532af89d915e3
0e141adf8ceca816ecadc570d27dcaa046ae923437c324b519f249e258545aecc0de42c6d5365aab2d2e616db1c05249bd1770f96147f752d9fddd8bacfdd1a4
7d39b64ff092db97a4b77cf4968bc0ed4f5b1b4574767f694fc3f1fb498b409f0da76187b133ef73ed26e0e0b18afa3ba3dd996a4eab842549e2e30d566877b8
b53b1c55a89edb9db05e598fc7c197f652adbbfaa4652a833e096377cc7ea2231612dbda9dcaddf5d6e1d3a2239559c70cee6c8d7687617372866c93e60a53ff
013b4e768715f5a43bf5dcee0c7881c5708dadc572ca37aa5ff4c54dbdae433ab7b303b3ce2973d8ba97867125706e18b77f6e4fc4edcf1cdce1a5d3709d926e
1831ecef2ec762ce9ad91de648eb833e0925b24214836f0b5f9ff0959dbfc39660bbfe9a84fbd6590ebac32fa5799a4ffaca45d09fc590af91e4e4f49ebf0319
2df06b4a7759f0f9e409856ba35fec0b641125da1d867f9488652be06a798b649696b9029c9f97de1141b4da4e5f12dbc4f04252066869e66557fed998e15f97
85dd59f83b9d254f66abb5ee166f502618673108b7106f504263a03f909f1b2cc919be0c387335fa3bd9d35a7910eac4e78817337852477f871708a75f661a78
8ef7105b0b3478f0618211649a810ae8928e11373e69f0d71958c41d48e4e1ec5d248ecf2bd50deb35e57a6ffe2c2aa4683c60e599b40f07a0c021e062c465fa
4b24782622ba63e69e0e2dc27a8c9ee2a376ee116fd0c4259946d841086cbdb9268cb3106f909ef0e8fb8f3834c56ad9d94cca58fdce110e62a60bc8079f4a9c
1f61f30b7eff000ebcdae16f53bf6c0db64d1d9b332c1024729ec361f89311465bd8226b499e14543e6a9cb340774cb866ce038f0840be7fe5faacd61fc4e838
c15acef65597f6dd5c99ff8931930c8e989962f25ff6124eba136219b419c66de7f2633adee6b3896711d49cd2b2c8cd3f0aa0fa6869eee109d44014a5832db6
4ab113d681ccec4b0e7cebe6ebe01c3e95cfe419fff2856645661d517ccb534c4427057d122678dc9b0df03e83ad87d41cea5066e9df886397a5e2f27a96ca84
4d27a7225d7758556a5f5d4bb97b270207e61e351865901b1c48ddc6b7926cf26d12a957be99dca30623c4c11869ec871f37e2ea6f727b89e4956f26f7c06e12
364a7632b33ba9c8ff46b7e34f91efac39bd07c77519d89d67d9f7956ceb4bbf78935bc9d76a4efb5a36e616c9b69555231b80c890bd6c8006454e2e0fbfc39c
25b69ee287c9d76a4e2f8d3845486c5637f8ea788ad59544c5986ce249f4b322c8ef6c724f59fa3b3de3ac7cd7ba66095bcbefecb3ba355168dd19e353f5e420
647e80c5934632af1778d66333f0146b7ab5a6f63a5bd927dffa241e26cb392b1bb713b2b6de6d370ffbb8352a8b51e011b6f1908b6418ac20f6687d7321cff3
263dec264257f5addcfa421f26f1daaf1a28317aa0a38e2780dff41e92b798aa373b20c25b066b41cf5af97396efef54ee108a3ce1b228cc34eb580633ae5987
12b7947cc3397d98446b30a44e763d19effe5260cf696d18162688eaddbbd41b6881836184ee1d65b1dc1dd69726149dd6d25c1d161c85bee9841ec98e9d4bbb
5a9b6e58950f93488cee38ae13aa4c3c35908bd83ad5412fe0ef174b1f53eb0c390b29de40aa5f8437901fa35be3a052921fe96a21745c53598698713a2d29f2
842a4d686197e28bada7f86112c90d325773daef095d29fe32938863a0cb91616f1ccc98953218c8b73b4abf8dfc5157e94e82c57eae12c6d5ca4cbab361a83c
48a2f53bbd9b60f26935fbb5964d5b4d9871ca3635513048ed14b327e342975ed69ceae138c9957196edf881c2439e0cbae320a6c4d653fc3089ce5972b8bbbb
d157b6d1d7a01746bb6c634a096a53697f3c3fcef2fd9d64ae3bcc5645c4a5f2eaec9dee20d7ec687784f577c4e62b3f4c227316d45026d43dd7f130ba1816a8
d14dc6394b29379e1f67f931bab53bd47e6055eb224f713afe8dcb548ee39a4d7316c2406f9c008f93c83a3af2a357f85cd3553449989e2a6777b82ec8932e6b
e33c1fb45ab33b80194731d3cc77b646ea7ca1e4f4179928009deee40819c79dee189b98b003c936eca687c9724d421a17798fdb2dad445caaba03db93e174a5
f449bf1bf539579da66b7196ee29397456ef3ef4958b0033ce61559a010a4e06ddb1e58fe24fe69afdcb65e9ef40340ef71f6a44d77a6c9c96810384a3a4b62d
a5d5ca2f3afd7edc2ffa6bcb0d3e4e6ebf163a99aa6fadc1e8529195e4546cb9c187c9d76a302e8d988edfe2df59738a0581bb0d33ee81727bbb33cd5973debe
9b8aaa7a599f6c7a69f3771e22b7b73b538c7e8fbac12dce7a9c7cade6f4d288fe9ac49d6a4e37dd79887cad4fe2d288538c3ec375d767c8098ae1b857898874
890221d256fbf54059e69587c54a88d5f9f28ea150732bdba7b1f68b2addedacd6e4eb35a77c0f0d9347f2cc59b236f09a58fc8cd93618b4dce2ac87c9d257ae
0ee6eeee8822941dd694476a55bfe8bd3e37d2384b3bad1ba44d7aab952efc18ddf7951b5b0b548e25414d7901eb429541469b475851f09c45d063b3c93d65a5
06a32019412cca4b6b1299831661604c7406201ed45f470ff9421dd7ac187527b98c19e77715cbc6eca44e2ffdb48a01d05e465543acca4dee29115fd9988b56
1abb731a323420afb5ac6baf066300a501fe9a702d74f27758ac6e301d87ec920b047eafd45fec2276213e2153518880a3f12dce7aa044f23b9ce4608a92a0de
d47a41d9742f876af8463f7bf53b5cabc21b68513778b4c51c425f274718a0433cc1d46d52052129f2856ebef2832452eb0e99b6caae67ad73cd02162aeccfd0
8f1907d3fa303931e13a3a234759925cb5b2e2d7d59cba01c645507f5b49ae243ddee48612a9fdb28e0a68cf8aaf0cb6caa2049c5f0f88c58392f052cbb5187d
811977dd49eab8ee0838fd3a4fcb5ca485c84591665969fe29b252e4695e94224d73b33d2ff3accccd7f595e98ffa7799a994de5b12cb2222fd2b4cc44991d73
b35389df346388f2988a6c1b7a75e8c89c65dc94fcd5bb3d2876ce1a6228e376f46e032193dd21619f4498576673ddc959bcd51345f1a0a6705577f2ad06e361
12599380da2fc524d73edbac6a9b56b683ff4ab505c5b4f53ba83ba974e365de407e8ceef0069b6cc07567eb7322446541dff18aeeb4221dd11d37b9b744ed4e
6d42e492e875c44100daa380708535a709766d8a44e078932b93ccf006a5944448f2d425b8605a97eb5e8f62413d6a83e5a933dda1a4783a6e6ba18f13b81b7d
704b8c9773ec7f9b183de9b275d4bf849550738ab55f7bad84d27b13b433a18f7eed976f77144443cc12977c08269893207eb77bce7447ed0879cd27d76b933b
cbd25716ee838feff150af4c1c36237843cac3b69de37e299b1feaaa8f19905458635fb78dd9a7eda1d6d5dbdc9f2c35d136673d449673d6a96a6ad9d470ff56
39d218e78c274f841c5c6ac5ce1a07a0e6f2eb957d5cf7ef912daffc38b9fd3a7a3a7eeb4e1cd71bfece8324921bfc845c1ad1cf2bdf852f74f3951f24b7af39
f57383df5ffb75dcfc9d87c9ed7567f295175cb3df20f90fc0c1f8c4450be578f51e5f1617937c89aee9f6fece14a31fe776a74bf1a54fbfa828b25c34b04739
01fe3059b9681c1264b4488da94ec34f3ea0eaa6658ca532909d287e7feadc12b85d7921c6b145fe11f3ee2831bb93170544d1655eaee172115696480f9195f6
a8b9fbf54711c45981eeb416f74dfdfe8215c26c013c1cf333123fc0df81f3ec9bf7702385651ff54b0c692b5f122dc706da509ed80193a6fd0787e4169a8faf
5864ca76fed91132d2806631268c247e8123b55fb8dd5136af3486a25155d62d068644eaf682d58d74fc56127291b84f68aaaf17d448600b9ca7a27f425fa886
c4389d6942e9787464447718b2e944746767064acd95ec56296f0749f11b4b1a39148a376d3a3bf3cc8f6f63190f1aa7e559da1d2090ea2907262a45572c04e0
0d963a01fca667b303edecefc4df3ba94668773a57833802a75cc41b94612b3cee6346a9e7cba7c5483af6e78a39fdfd3f73fe744be1f60aafc9d2ee9c0e7b15
d19d5a515bfcf25e7d704c4b9ab653af31feee0039042fac18df469fc4e62546adb2f47710683021d2bd44ef2c005224ba43d3a9355602120003544a0718b921
ee176e1464faf802fe4e1740ac0e3fd1cb37a776bdadfc01d8dc5a1f00c728dce868478dee3c03777c20b00c4ccd83351fa8b370aff00dfcf99d51835e6868ac
8667ca5c0bd6684bd1973ba62b87b11548af7d5f082f6cc194c3058427112b6f02ed3ce91d594864cea2e6c748a10f662292c5b07c20f0db62ba9770560ee7d4
783feef68205f6fb42c31a0cc692d638d08c3bdce68b3cc5c167c8889c077d1bb9d5edf407e0efb8d2dd70a3a31d8505a1d7f98c008ad090a7b9ee643ee52d5c
4d753421d98b92e662bcbf36528bbd31cc161ba974b31a75d87e9e1c039273b81da0023291a86ed0ed667c3125030ea0b17022f85dcb1a8c861e407d2bbae75e
69792dfb4a0e730c01354acd6f6c1bf94ec930f521ebaa8fbfe3af852684e71c38d5939cad4042ad0b0cd0fa79478debfc88ddf4c7f749b436700a37364e775a
bdb40c8eca741e38db21dc403bb816d5b03c8ceb8a2ccb7599e5677896c4e0a2a4a1a64c030c92a5298e2023242bee000020004944415452fc00ad788e7d0afe
65cd229e5334bf23711bbcac5449382e53aab3d21a4567bef0378fdf0af9b32c4f31cdeccb1774273c496175e727ac67b95aa4d9c6c9ee2c940775a720f19bee
06c221eb41772c0ed2f0dcb29164d6a3bd9d0de3bd9d2e2c71563c477fc337e7452405b45c4707e9ec93d24d9b55911f4b8f6bf60c3f58c13c8d46d10d03e2cf
59fe5a281fa2c1e16455b5bad6aaf529fc6ca93bb9f577b21f80736a4ef3bcd09d769ce5733da788838b7f2687f99c75c462131ce899d7265c91dda03b85fdae
1877299cb9d9eb596e00860982341d6609305b56a2bfe13d9287e53031bba3c07ed08392f8400c41ba4c184ff87043f7ea0dadcd38ff0ec76ef4ea7a169bebce
45bcc13ea42358ea4e61fd9dfc47c459078828c38d8e2adb5db1f033b02907328fcce0eaee5df6e4dc2047b29cd99d74dc65f295978156af43e6c64077d08a0b
a3a54139666c9888af8c0ff49138dcf478dd606e67bf89727e3876e02b873dc51979d36fe4776d82ab779cb3d21d5d8fd145d887b3d49d0a0c349ce64fc8ef28
8b0bed4b6a2297bd310e5d343768133c8b915e25260ea9d00c744fa9417718c4414a1e00d6f80dfe2eadddc9a3099e173f72d736d4069e5c984130d39ae2bd9b
422b1e4df02c63746934eeb4a7bdd183f3ff56f8246007a65ba805258e9fc60e277580fbe5db1d6b97ddc3f451f5571e4ea264a0adf7b6d96747104483fea345
43d454ce34e1a071731ecb2b1fcd9361f13967b2838b0d209e6a58b770ba6333653beb373c5b8f29b11d5011a17e5e1a8f53d4ee921ef16de68619bf1365b38b
f8cab8dddde38bbd4f154e4fa7615f7b1edaaf1b0c70bfde3256989ff87264e9878583320994d64c972684602c68f9e938dbff085f19af0a3bcf37679d3077b7
37cf543bcbf4315d24af31dd21a203aea90e7e30951d2b25698d76d4c6fe279d34377b9fb748a2fc5cb7fd6f6376642c3568ec4a35cc5a147490b3fc97acd150
31134e83b952a5970d2ce3c34462f4d7922540fe9d277c0dabb2939d6cda8cd0ba15ff98bbd74909bf81c8aae97ceca6efc6aa3cd09fd063e34ef6f33bf0abf7
f8b2c4d7d1cb4f3d8e91dce027e4d2886bf99d1b4bcd384bc8db4fe847ffc4450be58375f45b8af367c3e531aa9619c58844f33b1fcaa511a738eb5b3172d1c2
96baf801fde89fb868a1dcd1ee74ded51c25ea6b2de5f67667adb7efc65273e3fed4e0dea5b1f8f14f924f5cb4507657eff16571dee9870541314127fba6baf3
7bfcd60ecfec0ef5ca7ff89c25dbaabd8a789b76b2ed2b790faaee6357b78decbe74056f3f674d79197e877ae562eb297e9844e2ac4fc8a511d730542080e330
d724c6c9bd8062709dfc843589bf55e0bece7b6c5a060be815675cacdcb1c3b195474a682a5b8999820a32ccac6e03689d1936b7c0c3a5c3716f233f21affcb7
4a64cec23be1b0bc56d0246d1ceed4c47ced09fe6fd7c6b98f73eadb1dc73c9c4d6ba16da5ffb56cfc598f93c89c45c88bdab1cc6c7ea72b8b0767f4838f90f1
deeb96f037ab8205705cafe577eae010f83179ffd7ba23b6feac87c952771478bbe9a1b7b7779de33ad1152e73688d2ef1389ebf161ad6ef78371c320825d6e4
fe4b492145b1cd590f91e59c857090ef5253da6855bd8f5b4146dc2f024b72ff7bc5d29d33b1ccd320549f7c7f27c41b2443b3fa0dc3ae9f5083f1b7cad2572e
9d1ba39e2f62552afddb7a38afc330768c835ffb15e20da65d8e5b76bffebdbd19a42057d7af6e723359e2ef0c775f1d42e0367f9f1cbc54ae7992e18c617587
b152cb74fc56d8533c6255ca0b90dc578b390bca138671bff997e3ff3860bc589c17b31dfec17fcd1f9c27f89e032f41024b62ccee3dec6f36c0f7187ec8936d
e88b43cffd9dcc0baef6249cb38698dd4c5e106b2feb0667fe8e9f1be493eed8f82ab9c5d425ee6aa537994b33b33b19dcdfdcfacaf12a8cc456722deb06895f
eb1eab393d8cc412a03bff1e1af9a3fec84dbe57e63dc5c68da15cc096b518fd55ff439eda149b76a0f80b75070a8df6fae4af85867c12bce060d35aa732e7ee
066e8f78f0b5fbafcbac4f82110adb08c9d87a2f4c2e2add365a9439688df1aed38cebb3d9984c7627eced3b977bb24b35541adfd0bb8d364a6f72379961a89c
f303909c4bea63e9c4a4a62580688f35a74c19ab136019dc05f76b9307ca6d31e326bb7327bcc14d1e28dfc553fcad75834e36bbf358b92dd7acef2b7f7ffd8e
b8d335da242eb7addff1fbb3821e9b6f11d5d7555b49d93712ba35eab6aaa504ea0bb359566673d5c95ec2d6be967523eb5ecaaa6ddaaa327bf46697b6356feb
ce6cac65d5b70dec5dd79dd9476e437f3cb4bafae65e1a7a0abcefe1ef6cf270f9969b3bc739cd11460c6925d6da4dff34514990bee46854d9f624f812e80ecc
3cb6beef69856af6adf81f49cd672525506258eefecfded52336ca33e1ef38b3cdfa227163b6892e123582062e028d440317110d72e35cc469a24f33e247d871
36c9bbce0fd6b3bbb1630366e1f1cc48337a06040a4e3d401296732d731216129c07322072be1484fbc6d027cbe269be2b5ad1051697a3dc82b0bdfb912517e6
0625f012ee6d0f49855d6ce0bec4ea0bd8658b89e8e5fc4ee353a0c5989ab08abfb74bfae7e3397f0a7fade87f17b9b3c0f272d08430a722f297d30698132fc1
a0e85d8baba1f10bda69376033a14559ea6064fe23caa9e6944d923d5f0f5354fb1e67144c5e392f55e59da1f16295b9df4a63bc765e9ea3564ee9c6033fc5e7
7e0696dca12097937acf5837d815559e977db0790d62105118aa2bc4e9806d69775cf4a35af459856e68e5a391efed387b3db4000f58b996ecc4bd6f4698906d
a4f5bd98a381cd7148fa5281ebe58683b7872577a8d05840a5eea6893ecd04e7ac9e363f361d363eb20d91c6d6f4d0748765622cb43bbeb8efe8affdbf2bfefa
3750c037c9c6fd8f0a4c00b7c0c5ee1e48900b590e70d083c2b3b5d1679de0d467693f1ebae453507fb1c156f7d6fd71579c1e042850e18196b5eed8c5f11198
710f4fefd61bbc363428ee42f8a178b584b26125badf66e08eb3b2cc46eebc88177c165ba4bb4da374d3cd3aa72d78bb03de67790ab9d867c99d506f70f06c72
5e63a3be4f67f31a7a56b2b1b9b7855273d428c73520964eb71916f85b1bb97382539fd5d9411478448d55864c059bd7c08678878f61cf49219038a957a627d9
c41dfe8d5c9706cd2483715d08e435a3dadb517fcb7623896ce4ce094eb9d35cd61a442454cb553cf8691bbf5cefa1a2a46ae08d96390914c7359048d43ca31b
916e93cbbaee9f8c161493a812cfecf3168e203b9e61666eb23b6ae1b38ef0cf1645ff7c9cfaac3aec8d7e8ed4f16003a626957a8d45a45ba83b48dd083c28f9
59e642f5102bc3778c956ba875e7be2d92c21d0b99692578b57a39f82caf3689668843b43c01cee795e56b178854a1124b4a988925fd9b64184905d2a5cb7196
3529938e334f29cbbf1b75ac41953c258c2d587670acd73875e9ac2613e8a739b31d2f5097cf5745f6e2dbfd07be100b9ee0fa09dbb900e7951d0a4e81aef621
90e6e4df0c5fac5fe7d7d46e8af82eb8cacdfd8c1a8c882fc7556e6eacc1b8095ca906e3fa35a7115f8e2bf9acebd79c467c39fe61cd69366d254e7d96d7ed96
59767ec4881f8b803b6d59a445569aa2bc20fa459b739a09d9e4bedd72e275c1936a13d6ba9f8cd15532cc437fc3f99d888f63b11edd97acbf36bf931cac7d14
7e0ef9c933a1f4fddaf4627d5618efec7d698fa4de6bdfbfea2be2ad58964eb45892fb5a634685b3ca969a96725b70f7d063bbddc2191d116ac68563f4c6f7c4
99f359e2b55eb3113f06cb92adce998f41a5f46560979bd466dc4befa416a79555e9d8b0b526f45967b9d0a1cfe7980bbddc3f2be2c7e024fd0d457162777c40
23831d84cf5039db33b4a0238d6c67588203853e4b80101c3bab2682fb8f3b5ca8a48ff8515872678b2667994737ba6d55b0f62ad15e8387bb9fda02962c2bcb
9b64a9bf138ed119f082465e755ac431fb8a70aaa1a246ab7109cc0a5439a50e700a4bbf903bccf2517bd91f6859afbc1f1648c4f99e5561c99d9e9b537ddc8e
f4e86636250d77dcd998e72de978a378b2b6dc19a385cf0a73a1db29d0191eda72b1f629e28722e4ce1da4fa80f73ab587745c4c9252bcc3831deedc90e9defe
82a13b2ef6cadde143121ec8bea055890f5b4bb1f2b5ff5b119f80e538abf60f3d96625edc01231d3fd3d77bee68af3e198eb3c231baaf4cbdc337149934f12f
f40623be1ce765c6142bab0b77b7b5d4c6c160ebb3ba111667932b864329db84f33be138ab0151e062622307a530d3ff43addc882f43c09d3ea1625c7c283717
7a0230bbc7e6cccec864921eb361eda709f50697e3ac27b9815d45b5a7691c9caf0801778664c420a8f5f2fc202a18c864dc07ee6ba41a24ca1afec9ba5f115f
8e2b6937c51a8c1bc0956a3062cde90de01f7227ec45126bdd6f00ff903bf3183dfaac9bc03b6faeccabb428645648f7a32a4a37dc2a8bdc3dcfcb62ee40c123
776e0157aa570ef3590535dfe1d6aa60181ff1f371a5353661cde9d0d4d33768bcc2a7457c11ae6477c25879cc673963a468206f749c575e03aec49db3b94180
7e52cb60b1e47d15b892cf3ae54e05229b5a9fa8641b251f57802bad0b3d1d67b9c71c9aa5b25cc40fc7e7ac294eb6c6668e397de4ce8af009637414486a701d
572b8f913b2bc2a7ac476f70dc554c2d97ea57169e46fc1c5cc9672df359b8a2c2eedd8f6778b0df4bab32e2e3f814bbd3d2ef09736fa0c5c9f97753598ef808
ae34463fb53bb4627d03c09faff071115f834fd1fd3a0e2d3caae8aad6842bc53ba1ae7bc44a11f506233e8a2bd99dc89d1b40d41b8cf828ae647796bd662356
89ff54af7c49e3295dd89d3e936586dd66adccfedbc9467c2bd0a25f2cc89285c1dbabc6b2d03db68030b22ecab01259565555940c92bc92535fc82e2b8ad46d
ec18e25f58e6d187be66365aa195c117f6e1fa6020513736de5e8d7ea70071b2f48ad0d0e2633d6a3cf96d8ed95452ca163e8b41ddb7b4f038726755180c8346
5502af2339bc5163a956018a01ebd86edc5c592394e3ce96632fadc167b5a86b00f9fe6114cf58da9daef44f9a915b5143651d188bd1cdd09471b23b94bfaca0
ce9d51aaa6e6581c89623b62c1ac84e27f9bf73d9fdfe960637b3e73274e30af008320206c079fc5679fd5a0dde9a47358f9a440286cc3535d0edc093b413a72
4c36eb7c8cbe2165d3f1b7a8a1b20a0ce24ab8fea55cd89d06ef7f052ac36e8d53bd0db386942a3d77dae920a970a664e2dd690d86e360616d8c955706efb3ac
b91bb823669f5563ad5f5fc156ccbaa7c23eba4868e44e371d849526e0dd69ff2c839d7f6de4ceca3070079b39660b9f45353719a802c2223fe7b3b27ee24e18
ef84fbb2935ca81e58366c67ea9785a1227e1682c577d9c26775deee7465a0ab83b1b28b93d9fdc09d2638c8b0ef112dce693eab1e3b48fbed448c95578170e1
e6eec13d8c6a160dda8e029a7c617748977b1a6785b1b2f5f66b08b897398913bb137b02ac03783bd3813b39883f934568901912f6f2c4676948a82700ee5107
07b19e3bf7de782ded8eaf1b54cedea0a4813d9a489d35608c77c6899e3125619f60c3f926351b480207d3db8332ce07259a8221ffa2046a6da436c0bc92293f
8995c986792d83182daf07a1cfb236f913bc2550421007e46772b92d6975ab719c35b49ccfa7bcd50bebd123d687ff94476f2e6c7536bf13b1465c853b5123f7
26f09fb873a96f40b43b3781abd89d58737a1378e7cdd5cafda9ddbfa6d57d7b49e1ff5c43256285c09b6bd0c334b5a955d3d5a32d39d65837d8e38f608c5e37
6d4dc32ed5cdf24b1dedef1cd853e337dd51fe2a7267e5f0d33a029fc8698c8d50b03d600d0666ba54b03960cfbe660b30b7ab1ef6a786143b644fd4e6be094c
5382a7b55f34779c436b3710a49f6aea345b27284630cdfb709c084231ca9d231bb7719c7523188bd11d5524c774fa767803270559059ac3938149b7022b9515
30aa579e5e657eff3d664d37f8621c67dd04fcbc327a1b30da1ee771b702eaf6483429a60c69edec4aed361736e085f0eeae40df6630a9719a93885825867c16
1f93095310d3436b883bd88178aac3a861c3b7cec1311bf082f9fdcba98e30cc4944ac136cce6725f8a484399f857974678e86c555727a35295cf073c61dec36
5b4c31f59c47679c7326e89f109ce10fea1020f00713c35ff7aa604cd02b025f6222a5ed84a04d53dc71dc88f97d793cf4971eba9aea95edb37ba2fc2869b430
1d5a2406bb946fa7055a1db1c652443c7107f7df63edd854113fd5ef44ac18610d460247bb1fbd93f6b5ee0269524c76a7f74e6d697786fd498cb2c36a9fb98f
4dc48a1170476244ace69a538d4e8c7bee8cf55f6d6877c671d6b0bf414f95f871d6e8b322568cd16751bd72ddb4531fd9c6d7ba0b248b1cd6395044848908b9
6d94bc1babffc6fa9fe4579110cb666dee881523a8fd923e2c1eded038f527fd18bd9a7cd61836d352d2f118a3cf3b2643c359167dd62d80f25968253a6d54db
77cd38bff3a40ef88ec11495a9479ee8baf709d0f9a5311f863b2aff268b3eeb167065bdc18815e34adc89f1ce0de04a9a7114efb4b5ea946e9b1e1f1be70eeb
a6d6adeeeba6ab7be7206ba5956a957bd5bddfb5bad675879ba9be51cabda49aa66edc5eba51bdaafba6a6e3e00f150ffd0d0e0d708543bbd196eeedffbe68b6
3ce2c7e39c3b8e580d0053eecb801a61f7aad65f705edf1549dd7ff5297c29744b0f52f397b883d586b0432983fec99128699f63ae7446626efb6af8c47961ed
2141eee44526d9c9bb196da230f90ae96d5fad13e4b77d35881dcc07e18e3bf8a820a15cae60fedd8aae5043056385852d1f93b594d6c5042ea66b851812b743
2a1893b75cf894f09022c6942e1b0e8d29e0f18fcf11333ace571d7a3b5c8f2de3bff0d16de90c8b10c077ee8141e2be3909131bc067c2d72afc513377567741
fe7ae8813b7e76914fdc99140fe8dd842c4e4d153f8e47e27c94b6020cc616b37eb6f7793f83634ff7f701252230b98397e50f0af259ac80f98353adc177f0d6
30fa2c7759048c76a7735f30474ac7c1e1dd749c7ba62ae92d929351f1081fa84df4f4b527bedc64e03a6344515f76c27d19c97068467bba7f29eecaa81ac5f3
fe6b0e7de729609e046f6d7538ba77adac0fda6a7be8502cd63e0208d61e616b6cc38dbddb5bd50476676d17e4af870eb8c327ee0443a9e08bd593ddc956eee1
6de11f5065cf7d8b14a0edd5ee07232b6cbd861166700a679fab955f8dbf6060870eb853cfaa840177c832416987e0686d18a5ec2bffe0f58a7443dca9dd0f8e
4a462937c41dec36863fb3e8b30023e1d96729603293555ac9257730ea71b132361728ab4ce665218bbca88aaa9259ee362fb2c23d4965e536284af737935955
16b9a45fabbc28f3bccc8743bb57f189dbdd6d9957ee604551955f77e864a0c06077bc2ab9d2c41de5ed4e4a7a8da8f789abd97a77c58271d6ea2ec85f0fdd0f
0c72dce141bc736a955cbcbcf142bbe5caad347641487a66f03f6bf74d4ddce93c774ad24d431b8dd54eca5db19bf659e5c8951a2361c79d5a352a9fdfc725c9
3825e886142e5484443faefc6a29abd523ae6e6bf4e373d277e0d8e3c65aa0dcc86b6b7b5c9244f18eb33af6d90d4f4df2d567fc757017e380438cd1679dc05b
25372acf290ef0f5f2abc683a15887e398dc7d9300af416be901b67b2b9df15154a1cb13633b3ec649b7880dce5800faf017731211116f43e44ec44711b913f1
5144ee447c14c41d8c8673dd2addd6aac5e232d5d49d6a355691d57ddbf5546fd674b5726ff4ba56bdd275ef36ab1bd5e1f67d473a6358ffd6b475a31bedb6ec
6b2c4ed36dd7c443afead0fc943b973ad246449ca03ae54edf25b0c94c31298073e2d3218544d294ab4365765839371e0347b5cde51cbbe26fec65e20f7ecc01
b6da1ee51676059d1fbe87c9d8646e4e80946f2c244fb6808c36ca2f1d558439039384abf85f3883e2f29b112790ee66e1b59fb853c2ae15509423773033a8ad
4dee6a09750f89d27d63ee41d530b52545eeb497b9c3e1f96de73210f377ddf46024545d0fca7d146abd686075bed94e9b1a06626f719e2173ac41625f64c422
df948260c9a52d2da53823de8a8abe86c5cc1d86970f841cb84389f5c6eb216c400dd9d02ac7f9b3f13ae38bea95da9eb32e0516f73e7f0d702e1218763b85c4
2f7fdd0d6683cca008a4142bb410c83489a7f1daa72fb883d9a8d77297d1eebc0379460fc9c41d628a62d9c01dc377f84a83b645000fee119bdc047247bb0d38
e7eee656b213acb255a1798e85659a89d6eaf4c0b93bb02e39cb9e45d01a254087120bb5f033d8e3b2f9c1e56caba5f32b30a702ec0e76d859b7f3855b04a12a
81aa433a17acb795f36e7c6e788ad928f7e9a660a27a34cc58238ce52665d5d1bdea368edc793b64aaf7d6b42177e8a65661bcd3a1ea656384b30a498efd226d
2bb359d6106f5ce75855a4051503619ea767eeae52f890a3cf2be8c5c49057220586c34b6743ebedbdc2dd097752d8658bf326bb23f7408bea9b803bf449d00d
7d52a92670ecdb8ce18e570641706c1486e233beadfc81f2c0a58d782b32e40a0fe29da1118e0cb9d338ee302e196482f104ef53cdd85ccce368e3bc19379293
fe0fea263862d1c36f3be8193290a47458e1a12f7527f03a1f5e2d68945c18a55c8f296c02657a12557447631425ebb0b2c8d1807c9e6327e65d429fd5fc22c6
3728f15091f459ed4e069b8c35d880b7b27357a988bfa20a73a19e3b54fd9585dca9dde5153cf78b8f6de2b748429fe5b82368c826c6c2a0f161d0681154304f
47c82ecf0390be90f7597c69772c9612072cf07627c7949cf462c08b83ccdc5bc63b5ed395d48a5cd8ecb8d3bba7b877e70c5d62ede5e15ac4198ab96e70e44e
8d8a1af3183d45369153f0026176e80d2867ee38bba3d19ff9d007c602cde12969b4302a7d21c90d521c332f365d279fe5b933de7be4905124def110342e25a1
183c830ccfa60d7c961d637efb0277bc2ea7c6d3a888c9e8b37a9212c652c0182bbf0799afc19db9b3c53b2bb63629dc1d410bced03219cf1d0a52724f9a595e
cc8fad298e7e893ba4b3c12912c29f6eff86fa71bf70366477bccf0ae39dcc77f4e681b3a3c6a8e801717e07cde2f22097ec8ed7fc68d08be680b6506129973b
6bf7e5a0e83bda9db7a3f0b570337732b837cadd0f17e1fca649138a776cf2e7a860a7e0ce1e363bf33b79b6bbed6805703593dbc8ddbf23d99e13ee909f6054
62967b1a39da74db97ba9052b1e73d15592978760f15d99d1de02d363be46ee55952929590c8abcc8b902f0ee2be11f068f79ecac739acf7dcd9e38e1c2af78b
744f35c9dff30d771fb8ce8aeceb40fa1adc993ba4f1edbe828f7ed0f1e08d8aa2dcc5831f276da9f300c6a11e1ae01e60ffdb6fca60ac1bf3ff4afa7deb063b
db51c3d78d7b4cfac2c9e047f899eeddde8f93b43f1df01f8c9ff89bee7e42e341140976c33a74abf3586af8605f3ddb78ab3832221dce8dceff9719ce26855f
ee3bb4f34b6df8f96945bc8c04affa5dc09da6ddf9097e49dfd6e16e534c44d332389ab566a14287eb4e9c17e871f9e4f68c3b927ee7b4d842fb72f2f3a91d0f
1f6b337fec92c276bf03d0420db21e1c066388b37c199e5145672583a3d0bf64f820cca38ced9f8ae1dc9058f7c6ef0729ce4db97122be29a2e1793be4e938cb
8da194cf21d478c54daf6addd58fee7a13579e951f28f76127b7e7e640a16fdfda569ba6a771947637ae76fff6dabdeca2ef670c7955df35025e8c931d9a4ee1
871cfc471d4800af51adaedd01f7caef75a4f730ebbbb7a884b7ef8d3daa4ecdf345bab3beba18cf9a5e98de324de7cffb993ec83e6a63d5e1d11d1a1b421ddd
5efa8db9b708fa263ef085ddb9e6a71d31f4f903f1feac02e3c288893b97fcc9bf81584cf346fc6814a7dcb9aadd712e268f33286bc1197762ed57c41ba153af
d23271e762ae2922e2023e27de895823a678c7e4711814f12ecc76671bc7d011efc2c89df6d502ce8888730463f41e1ebefa6c227e12c271d64bc5c411119730
fb2c7b52f31211f13a42bbf334d7574444fc15614ea2983a1d4744fc1d410d46138b5822de83d9ee187865d56d44c419e678875d3b971eb1324cf3ca7b1ed7b7
45bc0b9f54bf13b142c4fa9d888f22d660447c14913b111f45ac1b8c7827cef40663ac1cf146e40002a5bd66adcaaf3ea3889f826ae8241bc75911efc599ee57
8c9523de88ec85f5e811116f4171aadd14e39d8837a29afbf6c57827e25d2863bc13f14114a7e3ac4bda3811112728912d22da9d88f723f3e32a1ec75911ef45
e9d780c69c44c4bb51a0c8a349a2cf8a78375cbc83fdcb62ac1cf16ec8d33c7aacc18878233e59ab326245c862fd4ec40771e6b3785ee5322d86a17a5be5a6cc
64650afc2bf755d677b9b4b252bac86d26559f574656a5c9d24399e253a30ae9de6895ac6c56d4ad2cf732effa2add4b77ac5c9ab694fbac6c755ed9a2547d95
994ab69dcc0c7e8c74c797a5dbacd599b455de9b32b7a9d4a6ca0f55ee0e951959fcbfbd2b46771467b66f3938818d9844728236821241021b810448602390e0
9bdcdec8ed64f4ce2909b0bbe79f7edffbb39ea6bf195dbba4aa53a5525549d8a6fbc288b16f7c57ef339aaa05288cad5a8c7f766d87decb88f1750b3480d143
4c03fedbdeb1cbf01c9a27f03d9bfab977956f860da33eeb7a0736d0db0fbc330dcdf7a6df27a841186de7eb7a5dbae6ab01ff215a631031cd30edfde0db665e
86fa0bf67b8a41862f1884f8da611b8796465bdafe73e8261aad07dabe01a1fa80d0a96b7dd3cf4b577ff6f50c1d0183d6dcf77af83e74b0660da3ce308cef9a
e93950c5e1bb18a4fe6a3bc0ac01731dc568dbde0e1f80f12906217dd99a16e3b709d668fb7da1d19b7d811a5ddb7cc220611af7b9ae7c57817fffd9c1a8f5f0
ad439fbadde6308d635f518d8d1ed20d8fa4f37c74ddcb3390e48acf026d2b53a2064a0a5b95c9966857eb6c2c8d9e53b56aabd72cab9d4ec64437e6912c89b6
5596935ee96cd5a6dc335d83c1a834f9aca0d7b99a74e96a95cf815e390d36bab28e6c6c0bfe10d3ebfb02fe5396b7dae92dd39dd1c94cfe9a6c4ca3d5a28d5e
f31b60146bae2a27fc2b41530431a6e8743ea21bc434163032d558b279985ae78bd6b6c900c3e955659d29c14dc60b4cad2688a9743e514c9677403be7aa3681
5e1582b6d22ad0ef643362bc116bb0e1f80ed6801a5de83607354695530cb47115d5041ba536a831def2c1683de7d20d625c0398d290fea27df1ed0000178949
444154207f1a5d65f5c15f4718d952427e46a3eb05e3454dd166e7a465f9047a97c9a46da91e0823a05d610d8cdf34b4a51a562fb0062665bc6352b4cc7d97dd
97a4a498b1e0a4ebcb4bfece77e2b38006a767bc48d687d99321991faec1f4fabcb5a6ce7cd6d8c1b831e9920d964d7ad04d6787cc2bd39b5e79dddbc6ba3969
1d8cb1800dfca1314dbe6933d8417b55835e4ed9e006f809e853e13030198d6de13e1e1ed1f1714c8deb5d3141cc5cd81d6260c8d676a0b7ce747c5c9369ac19
317e8681017325ff5a7b74c3f478f877631fc0075480d10add0c7ab4a67315c6f7405d2cb0686fca51e8d0ab61b70e5e0af9408da606d77205ff49db954ffd2b
0063a0195c344aeb4aca9fe1ee403b466bc11aae1536ad25dd3414d3c97898692a6c4f310a980033efc006560ffc0da495a686177ae0c39c7b05b4e40f6b9696
46c722ea692df0a718d501b58c9fdc4326c5d9c1b5980d76231bc0209dd2b6a4869a306fadc622a0d53d5a2c4758c3c1a8b0369cc7810dac61a31a9797606ff5
93efc4ef86d6ad7bf0f146e2e270e10a4b687d38bddfe1c2ae9c54de58cb80541d712153239660a5d249cb4aa8ec030b1e80381ebe9be773a95d9765a03f16a5
10b7e03d8a4b042b0953a1c6a4c48ce7f043049cbc61dc91b810e25a58295cc95802532ee10901a30e01a33b16649ead05c31f161ce20e03ca23215a8151d826
cf475b30aec84a8a2b2d555c69a3acc41bc430fcc14fca15910230e63c237d02be5a6038040c5a6352b71dd698ef80f16024e8cfb870a73524fcb90757b241c0
bae5d15a127ec51a6a83b6cb1df80a86a73a4669c010b44a8da52d608d9ee1e9ae3b57bcc41df83f020e1c2527dac71ce20ead21da20a080fe306593a560f3d8
6f08bf8f64bd1d460b59c09a1e7105d6e4784c4a8c4b938447248307e636dda0cd9eab97b833fdec3b8fe03b65922a3e1d4be5894ab244dfd0e8c426ea8657f6
a6937b8a3fb22427157dd2f40eba49b21bbba53abd672947e4499ab36376bfa53ac9f2244763ee9acf7a23ebf496827b92dd1332ced23bc6df1ddeb9a58923eb
54f8673234d1ea96de15c4a8f49ef38181181e60902da581119fb894270223a304c2b8253776cb801aaff90f2a90fffd7653499eddee291551402d6ca007e99a
c3a00dd4046445cc620da0bb6955f1a9ba2ab1012de5aba0964ed23b06d9db9d7d5d0ad4015fa6a49bbea569a66ed92dcf72d0efb096d8fa96a4c21dddb2bbbc
c6c09be143ca32287dd83ac0e23fa8a353ca4f554ab419ad0935304cd0a8bb5853403952651aa3ad931ca8efe499a432777972cf047d76cfd868a0c63b2a0d6a
82757a7889f62c792edfd1d3aacf9cd572a1c5d49c48ce6306378f15a9b374c5966775a8406a172a805aa558027a08dde67b2e2bf91653e78315c2c84243df26
a9974028b0e0f411771aac1d2e389533ae606df42c141057c24a3a333c571212449e8e082fac2050cfcc47bdf370b15069507615c88a2ae312daee88d7d20df5
0e9668c9b28615c2ca958895a632068c2d5410535cb0d4f686d0e104ada119c81f68caaa52375608539a53e93555bd2d8e05bf323c31121046be876e5cf05b26
e167930a0274885128342046563ac29f6e031b5420f99c9448af7786c799f50e9466f5466b212506a3f4b036e216e22aa3dc9ce6d19acd51563119d8875477a6
5c7289f223e62e1815e195f50eaa006463f0bf216dea62cda23565b6c4e819e29229a5de99d72c71ebe70f7107458ebe6a656b1c9f31651ed6b0299d55b51af4
a0f326eb919a1eee61905a9d292b64708304910df990b9871af2465559690a9b0c3922ae438636109dd31bacd62dca602424648ebc557c0ba9d5a2a25375c2a7
216b0a695561540b513089037ffcdfa09b2b5da95b503bad7b55834de10ad22dd154845166bd82a032ebd0b15320b8a45690cb8707e2c503045318b2a12081d4
ea87235a8e2ff20668e0d73d4acc016e86e5d06a4d3ac558818151327a60d303a8762e5803687b680b6d08d3165985e4db6393f0b0499317cef299cdb04901ba
45ba010d1c60ad87cb5b34180f33589a1162ac165bd7ea016b104d053635ad4936d0a6105bf71a0681f5610d68db26c64937f02f82ad4b5dc3d64386c407026c
5bd01aa063b14317a3c5d630aa330ed3587052065afba15ba2b562eb461549d27da0fe838324cbe93bf2002bf88b8971a7ab5cc5e72756ae41519574060b63d7
13fee951ef258a8dced570f1ae36155cbc7670d5f531b2906727d4be95ad5002635c876e15cac062463aadb0cac001abb5765d81105439d486c98016655c85da
17b4554f5c9a133a824d834205f283981a695b8f8fb1d433a8a8bd6b54736b52b11bd122cc8d18d8a108d023601aeac1da176837c000617f540efb950d6c66f2
aff586ca1b6aa068e77854a3d4966cb6078ad009a24c4d6dc0bf268c06680dd01588a413d1a2328118c0ac2deafaa4079b622c2706cd1d6641098eaa9d953ed1
800d50eb05953ebaeda2a6ed6c05a580ab039b0aa8b185a8591bd3d624941464a82661541d8dc6da98b69e35c64e40236aa09aafa481182bb686366bc1f1ae85
1a3b6b5f5a0b3b014c9aa65105c4cc0dcd00bc11660dd41a46e5dcd0d6302b3ce4e93f246d5db5f275ee13e3ce32f0438589e95783c60e2bf63da8d3bd46d318
af1f4b63417053e7a4dbf8d0deb5b028e89dc34e671a40c81ffbc0f1a68199bd71f556288f3adf677ac3eec06bbdf432bec39695cdccf1ad109c345b10d32dc2
a65e0bd06b10c8c679a5f7d6098c20a6ddc1065bb6a9241aa075538bf1fab1b101cc05fc8d69a652b19b578f7970e612d393905861832d97cff54a187931b7c2
7fd8c41acd12c4f80c68c8468fc2df8e6dd0660b6aacd81e610f87f12bf9a35b6f441bf23776980a340dc72fb5b33e2f47b1861b68c684d602da0e62b035a4d1
cba86d3fb3b1a01306f0a1692cd8cc83c098848d6d679d0186d9cb40071bce566e46e9e65a4e8ab3fd68600dd1166680181360da66e5a4b86e2c334f33a878cf
b3a8fbb67946df09e58f7fd9a3f78face29310bb8c512b1910d5b553a3328536b709a900519b0ffc457dc0e78d370cfe55b62ae41eaba654a27a85a8881c848c
96d408a7dadd7be6209b8fb96138ac72e435969c60a34040d641d444d4dd73c4ee325f330ba932beca445a8fe0ad4d366616cd7dbe59bc049df273b2e97208b4
e974673ec84725e307c931195201d440d436cc7818afc08630eb3b8233b5214c12a80dd2d66dbc215ceb74241a748319201f890bc98768d508354b93ae29930f
d4b0494ba5039bd2a55bfa008374ce91507526895b8c92d4197328f200d1aa311733359934540339d69596d63048569b420a29327663aa047fa472b2e938dea4
6386b76db601862d73c26c4a6823e36120589b4ae58b024c99add29644033a27153995a747d99441a7129382bc58c878b186a3ed31feb6e6cc64fc5cbb8b75cd
e53be161d647bdd3205c26b20f0c7b74dbe629ab3f14c95b1176add84ea22c6b6dd895f63c06b3ba0edb3d54a7acc7e65cf5b16cab35f67968f28ca769bbcab9
1de476d11c8772f924d232a9a5b9394696bc1f4790a148253d97b2ed8e220f45a40a876ec9a30967733c4da3fc2657487b7ac4563f9e86d922ec5af57d7d2076
6b392d9b7214d1c83b99c018038cb0474fd77006503d78c498c743399695b2b9e5d91e6bed8c7b6cc0087bfcc8a644499e7157db501bc3b3c39ed5697e7493a3
06d93984934ea5076e8e61141ea8267276293b875c4a7a8cef8e0d46384a18a401dafb2684fb8a8a09dd62918cca206aa368ed4aa77be9e4c4826a10c683253b
cf06e5c036030c574eb233c106239e7496a6cf65520063e3ce85dbe3ebdbe8c98bef84ab8ee73b749c843b2d69d17492c3500e4a6307786022c425d203a176a1
5b276f9a213c3818dd1046d98454882426e391770f3aa2299c142547a0f7414cc3c36da1531afeec8318e34e36943f9d6cdac0bf8df44ede74a16137d297136d
24a0183ad4e040746ba2b60106d5207d912ea41f6ad813e67e596b3ce50f171b60776dd086e38df43ee8ad0c326de01fadf54e8fdacc9798fd52c39cd6988399
a620a6366fd618de606c41cc74d26d843104fe6b988df99c544efaebf5a3ef74b1ec99e95e7cf4f51a8c30c93383ad3f9bb113c25e4bd34382378959a571fcce
ce20843158bf1f85d08d32def0331fbdb059c3f86e0e62021b2158e9b635c125038c763cf9c76e63a04fc1bac316f05d6296401febd7f1f57ec118029b00b39d
ae6e56c48c0146d4a68bd65865bcf3279b39582336cd16604e973601df1ac474d11ad3c966aea5db1ce8cd12c45c30f68826b0695fac11e4a3dbcbf8a8f410e5
af277d0fe3231b99347bce1daddd0636dda526ba5de3ffd9778e9c15161257da1a3cfd58f0f67541d369e34aea836fc66eb697b174e1fd5a22eb19175c58625c
b0d1c5b9c4f62b6ed5af2b81fca7b7b872c018ceb814c3635ca9c74ae9cff01657621b167c0c6f0c0863887271c177e60c3f312e45b4535063798f3b17daf55a
f0db093376b361a59be6d466780b7f264471b299aff0ba86f074c51ddb9c71276a53b93718ed6986189762f86c2e31d4f61253dbd764c0f1db65d42d249be54a
06bf883bf1a99ec35631b9251a1b2036cda2b07330d6df526c1058d94f0309c5dc4b53af196a756b7675071d3b03353620647a6a657cbbe477ef74bf72675239
96fcade606620de3fb193b2774db54e0aff2d5401a2a7f11f31856366533a19b33a02b6fadec836ae13f87a61fb9c1b16645378b9d4ba636c2e00627a831e99b
b71a1b9014689dbf67188f0d8a0a301e03c743e94903adc578c0c03eec9e8d4319f94bb3c6f1e90d9b47c05491ff34142266c3060703f73c133639b683a0a37a
09d6c006061ba0b2e5ae92dade69268b666c1fa40f9bc0a84774736286c9d9caa7871aedfa086c7211c349716ca235ccd8856ea8a03829118df0278c6c6aa2b6
3906d22899cc2dc4749ab61f870073cf382903eaa9a0a6fe67df8939ab0a2b8cbe3786f053c58012574273a6fee52d2074573db45e7123aee4fd5c2971fc4b3d
832dfd4b5cb2edc926aeb43d74abdf16fc4bdc8971a30df26314b49510627891f019caae233c067cb63bf953fe7b786413cdb187b26abb2a840823aab99d6559
f5062306141beb99e58cb22f71650ee1efa5d0d8cf2233567fb16ce27fd1f6078c8b4da48f6f30aab7b28a6cb618a5433d13e926a8692e6bd5eeadc8fc45dc39
ce0659479c39f74a9dfeac37d6e62db5c6d4bb9e197a0de17eebae4202dbbef94c9da820cc55efd4b1d0d8842ea9371602fd6b3d544f57bd13e84721d1bc6670
379e626221b3f457ea36a19e08daecbd48db63a112327cb79d85c414a42d81de4f57d913ad11b5093022da43cdabfa9b23bdbdc4d8a371c10ce6a2b7c1e8fd72
c2186391190b953d740b655be54fa34d41fed65ee3ed51840aff60ed68b42e58536c1bcbb6269455ddabd1fb40ff75bd63c6655dc7d569c627de46430bafe34b
a392cc4aa34028b4d0cbd0083d93de2e4bb238e2209ce30f7a20b02933e9a6f4d9983cc92146a7473719ffc0ea4a92ac4493270aefd82cb981fe50811ed8900e
31b752e844fb229fda1442d7a4ab240d03459a3abbc541189f067cd93b9d0dc63b2574b0c9a2196c68cc393e833417d042a9c31a3668e3d2002a157a016d2eb4
afd68018126e494ec6b9d0b3c0265af36e83d1c8268829de6184e6fe823f3fd5c0405d9ed6045d8ca2025a73297d93f1ffec3b7fae3fd7fff5fad177ec38ceeb
c474da8dabbedec512b2f3e579e3d4fd335f3bcfdb3eaee7eb6cd4ffd0fbe5aac6695dd62971cbb8535e35ad2f23cd38fee4fe3f7198d6ff4432643d1521c726
2b248df9415b06fc6f9e7f5264bcfed6f3b48ed3588625795df35e495b4fee57e07ea7eb47df71d3bccd338d3f4cf339699a33efd6cb60fbd826ff78d9699da7
71395fdfd6e2ff06a8dec7057913c5c236f30cdccc537951f5b6db5f72587f7280131559d3175bd901c0158653475646c9cf6ec7439ae32aa8d43e22e3a83714
138f8f121e86fd12dcef74bdf98e99adfbe6c7516e6d7dc83d8a7059fe64467b7eb922499efe6539daf187e5e626e3befbe7fe71955793ff1bb3b67bfefe4637
2b14ebe3eabdf6cff9cb7710f47cfa734257ff89377ea15227f0d5d8bcbfad514f875da44179499e4fffb57cf7c7079abc7f66af9f823bdf7e61f1e59feb933f
01d1fbd7c0f3f4c15b1b7e5bd2fe6b82cf9bef84ef69f13ba2e1017ee7741bdaab3bbf5c41675a7e1897fcf07ac790fe7a7ffd3bdff971a0f15b127f58a1f73c
5ffa94574fffda7fff697aff9eebe4cd4fefb6df76fff4a6f4db886976987277fd5a30bf3cf2cfbe031338f92fd16fa1cd1e2b89bef3373c7ed3ebc577d2e75f
5aa6c661ce5d58a048ecce585785b8d3f2877525c85bae5be7e22bfdfd2bbb58e6cf6f5a7e190ac350a33b983ab54fcfb30cfce1642bc04f2f257496fd058bfe
fa54627a5b23eee4fcd3726ae147ca5963ad6377ed6d6679a7969ff6e4fe051b1d239fa4e527ab442799bcfcf3e3b5c4925f57745def87d17d7c4fd4c797e602
307e56c25afb6f1e1ecb6310cb8d0d59e15dd8c15c6c5a6f80cd206505c58d15bd5d54c3c95726f5f7e78b357ee3ebc5779e5cea98f34758378bc49df0791ef9
8930c41db953ca856afc94848ffd88d5f46b2239f834921c98260a1b6eda83c4cf06617986971c78398f0a4c7c00b03e59204916488ee3eedd87e283ec9e4960
b3051c7b78705ce4f00ae4fdefc6f33e1a8fbd7c67b000669fd9a8e2287f089b0f09bf893893f7576957e30d29c2c40a5dbc7b0386c43547db24f92fd3eaef71
5dbed386ef192f7156f9038467d0b7f1b4f9af27a30a2307e78c9fdad8422e1aae7c56853f37c979fae937877933883b88369806f5f52d1ffd9719bcec4dc64b
c8e6256c44b752bdffd667837fddcf99585720d28cbec4d84fd7fa6af9746ef1ddf33b75905bb8fe407d669633c792a1f34f63275f1fb1355a6295ef55b79fec
d458390d5b32c69dab286b8f44bed2581fdf12f5fcae6314b6fe7964f577d4bfed75f94eb4f8ea8bf0070c79167d367cb427de281d8e0ceffd19aebdff81cf88
de2efcb8d88609927a27ba60ef2459f05c3c3157211c0772e987379ebe6afd6bc57bd415f2dd799e2b8ffc2fbe193ff8f88ae502351fbab0e077278c1d84e38b
238c1d70f8f8c558742c3e9fc90fd5cbe0ebc0a8a7939eb78d0944aab2b01efe2d25cfe53b5db0cae49350d5eeb2c4c2e779162ecf06f96773566a8d1001c477
248d187f6e65e31604ce62b25023333649e56a305fc6b98cb65652b2c00daa63e0ea6533ee0f004c687d2c6543ce5a63f4f8f634a39cc2b3d69d0fef7d82b594
51c7ccbd64527bc4458606eb776b77c69615e3171773d62a43d705d50f6f106dc1b9dfdc00cbc1a4010f6f82cca8949cc49d5de25612d1da30f477bf5eea1d29
6af85dd170bde72c893b572cb6d1d2983fae7ae75ff61d6183b3865b206cf8a398c2dc458e5789dcbe44f74c6a6c99acc657218018ce7975d42d0f4ad5de6190
951b459cfbfd883b278438ddf9d7f335db84aaa5967a8737557d15f659c761435c0dc779a6fefc7ceae407df698fdd622771e738b310234805d89f2fff05d7eb
1edd7f4bb8dce2abf56d8f6e18b0fb8f8df1481fce22718773f23c23bff0e1726721d37839d7e19f885cd8a0849fc8d4e79ef687aad21f4962839bd24bbee4d5
c75b3ee4973b1a20b252a2c28943b1d1ec185cfa9734b3fbc70bef3538200386f80bb431e27b47251cb370f341c15bb23c815d3e64990046bcba6339892b3e9f
44fa888595f88e64d82fffbac1fb7daf57dfd130060a5bc93ed5f217762d7b3cd265e5c85261e0491df3c6d37fb7b24abf716d3fdf8d85259b98bffc73fbf252
68cc98e7ca631d6336669e2a3efd5f610ebef9b7c3412ed82a9c0d62c2960f8c1dfdf3a5ee02f12fccda93ac9f26ccfd0c57d8811c7e38fb6f4ad22cf3e0f8f2
c9da8451ed4354f41fda50850edee6bf8f7f7d3b2d115603767b93ff44919e26777a220f848eb4aa3fa2afe38faf07043d83b5600d83b00cddd8f5f92f719df7
b3c1caf76ddc66c59f728acb4cce06b9976a7d3834093b571fa6f5a76d057f2525969ca14ee6bddd2f9e7accfe293e17a6e3272b6315c7df01c20ec6cb2e5d7f
ec2fa7256a934452f3d4b067adc5925b6f32ef36fe32cc281bf7f2ede82861a85c6473edc331511b2aff2bbb488d229194d163398beee6d2ce1e7b50174cd3f8
e7235aa393249f835fe77f71bbe6b7b9feabfbe8ff8eedc49feb3f5cff8def4cfeda24fdb9fe7dd77fe33bdefbfff869873fd7ef7ffdf9ecd79febff7bf9fff1
7fae3fd7ffeffa5f6d2248af67293a3f0000000049454e44ae426082}}}}}
}{\loch
U}{\loch
n autre outil tr\u232\'e8s utile dans CodeView est la fen\u234\'eatre inspecteur (}{\rtlch \ltrch\i\loch
watch window}{\loch
). Celle-ci affiche les valeurs de certainees expressions sp\u233\'e9cifiques pendant l'ex\u233\'e9cution du programme. Une des applications les plus importantes d'une fen\u234\'eatre inspecteur est d'afficher le contenu de variables s\u233\'e9lectionn\u233\'e9es pendant l'ex\u233\'e9cution du programme. A l'occurrence d'un point d'arr\u234\'eat, CodeView met automatiquement \u224\'e0 jour toutes les expressions d'inspection. Vous pouvez ajouter une expression d'inspection dans la fen\u234\'eatre d'inspection en utilisant la commande }{\rtlch \ltrch\i\loch
Add Watch}{\loch
 du menu Data. La bo\u238\'eete de dialogue qui en r\u233\'e9sulte est semblable \u224\'e0 : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En tapant un nom de variable, comme "Counter" ci-dessus vous pouvez ajouter un \u233\'e9l\u233\'e9ment d'inspection \u224\'e0 la fen\u234\'eatre. En ouvrant la fen\u234\'eatre inspecteur (du menu Window), vous pouvez voir les valeurs de toute expression d'inspection cr\u233\'e9\u233\'e9e. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_02}{\*\bkmkend p9_10_02}\rtlch \ltrch\fs23\b\loch
9.10.2\tab Strat\u233\'e9gies de d\u233\'e9bogage}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Apprendre comment utilisser efficacement un d\u233\'e9bogueur pour localiser des probl\u232\'e8mes dans vos programmes en langage machine n'est pas quelque chose que vous pouvez apprendre d'un livre. Et il faut un petit peu d}{\rtlch \ltrch\lang3084\loch
'effort }{\loch
pour utiliser un d\u233\'e9bogueur comme CodeView et apprendre les techniques n\u233\'e9cessaires pour d\u233\'e9tecter rapidement la source d'une erreur dans un programme. Pour cette raison, trop d'\u233\'e9tudiants de niveau avanc\u233\'e9 sont souvent forc\u233\'e9s de reprendre de ce qu'ils avaient appris au d\u233\'e9but de leurs \u233\'e9tudes. Il faut \u233\'e9viter de commettre cette erreur. Le temps employ\u233\'e9 pour apprendre \u224\'e0 utiliser CodeView comme il faut vous sera rapidement reconnaissant. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_02_01}{\*\bkmkend p9_10_02_01}\rtlch \ltrch\fs23\b\loch
9.10.2.1\tab D\u233\'e9tecter des boucles infinies}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les boucles infinies sont des probl\u232\'e8mes tr\u232\'e8s communs en beaucoup de programmes. Vous ex\u233\'e9cutez un programme et toute la machine se bloque devant vous. Que faire ? La premi\u232\'e8re chose \u224\'e0 faire est de charger votre programme dans CodeView. Une fois qu'il aura commenc\u233\'e9 \u224\'e0 s'ex\u233\'e9cuter et il y a une boucle infinie, vous pouvez arr\u234\'eater manuellement l'ex\u233\'e9cution du programme en pressant la touche SysRq ou Ctrl-Break. Ceci g\u233\'e9n\u233\'e9ralement oblige le contr\u244\'f4le \u224\'e0 retourner \u224\'e0 CodeView. Si vous \u234\'eates actuellement en train d'ex\u233\'e9cuter une petite boucle, vous pouvez utiliser la commande }{\rtlch \ltrch\i\loch
trace}{\loch
 pour vous rendre compte enfin qu'est-ce qui n'est pas correct. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre moyen de d\u233\'e9tecter une boucle infinie est d'utiliser une }{\rtlch \ltrch\i\loch
recherche binaire}{\loch
. Pour utiliser cette technique, placez un point d'arr\u234\'eat au milieu de votre programme (ou au milieu du code que vous voulez tester). Commencez l'ex\u233\'e9cution du programme. S'il plante, alors la boucle infinie se trouve }{\rtlch \ltrch\i\loch
avant }{\loch
le point d'arr\u234\'eat. Si votre programme parviendra au point d'arr\u234\'eat, alors la boucle infinie se trouve }{\rtlch \ltrch\i\loch
apr\u232\'e8s }{\loch
celui-ci}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033{\rtlch\dbch\af19\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Il va de soi qu'il faut s'assurer que l'instruction o\u249\'f9 vous placez le point d'arr\u234\'eat soit un point de s\u233\'e9quence. Si votre code peut sauter au-dessus de votre point d'arr\u234\'eat, vous n'avez rien prouv\u233\'e9. }
}}
}{\loch
. Une fois que vous d\u233\'e9terminez quelle moiti\u233\'e9 de votre programme contient le probl\u232\'e8me, alors vous placerez un autre point d'arr\u234\'eat au milieu de cette derni\u232\'e8re partie. Si vous ne trouvez aucun probl\u232\'e8me alors, vous avez probablement commis une erreur, faites la m\u234\'eame chose et placez un point d'arr\u234\'eat au milieu de la seconde moiti\u233\'e9 du programme. Ex\u233\'e9cutez le programme d\u232\'e8s le d\u233\'e9but encore (vous pouvez utiliser la commande de fen\u234\'eatre de CodeView "L" pour red\u233\'e9marrer le programme d\u232\'e8s son d\u233\'e9but). Localiser ainsi une boucle infinie dans une plage d\u233\'e9termin\u233\'e9e du programme, par exemple son 25% son 50% etc. permet de la cerner \u224\'e0 une petite protion de code. Et vous pouvez continuer \u224\'e0 r\u233\'e9p\u233\'e9ter cette \u233\'e9tape jusqu'\u224\'e0 trouver tr\u232\'e8s exactement l'endroit o\u249\'f9 se trouve le probl\u232\'e8me. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien \u233\'e9videmment, il ne faut jamais placer un point d'arr\u234\'eat \u224\'e0 l'int\u233\'e9rieur d'une boucle si vous \u234\'eates en train de chercher une boucle infinie. Sinon, CodeView s'arr\u234\'eatera \u224\'e0 chaque it\u233\'e9ration de cette boucle et il vous prendra beaucoup plus de temps pour localiser l'erreur. Certes, si la boucle infinie se trouve \u224\'e0 l'int\u233\'e9rieur d'une autre boucle, alors vous allez avoir besoin }{\rtlch \ltrch\lang3084\loch
\u224\'e0 la limite }{\loch
de placer des points d'arr\u234\'eat \u224\'e0 l'int\u233\'e9rieur d'une boucle, mais il y a de forte chances de trouver la boucle infinie d\u233\'e9j\u224\'e0 \u224\'e0 la premi\u232\'e8re ex\u233\'e9cution de la boucle externe. Si vous aurez besoin de placer un point d'arr\u234\'eat dans une boucle qui doit s'ex\u233\'e9cuter plusieurs fois avant l'arr\u234\'eat d\u233\'e9sir\u233\'e9, vous pouvez attacher un }{\rtlch \ltrch\i\loch
compteur}{\loch
 au point d'arr\u234\'eat qui d\u233\'e9cr\u233\'e9mente jusqu'\u224\'e0 une certaine valeur avant de produire r\u233\'e9ellement un effet. Lisez le manuel }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
Environment and Tools }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
 de MASM ou consultez l'aide de CodeView, pour avoir plus de d\u233\'e9tails sur ces compteurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_02_02}{\*\bkmkend p9_10_02_02}\rtlch \ltrch\fs23\b\loch
9.10.2.2\tab Calculs incorrects}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre probl}{\rtlch \ltrch\lang3084\loch
\u232\'e8me commun est obtenir des r\u233\'e9sultats incorrects apr\u232\'e8s avoir effectu\u233\'e9 une s\u233\'e9quence d'op\u233\'e9rations arithm\u233\'e9tiques et logiques. Vous pouvez observer le code source tout le jour et ne rien voir, mais si vous tracez votre code vous avez de bonnes possibilit\u233\'e9s de d\u233\'e9tecter l'erreur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous pensez qu'un calcul particulier n'est pas en train de produire un r\u233\'e9sultat correct, placez un point d'arr\u234\'eat dans la premi\u232\'e8re instruction du calcul et ex\u233\'e9cutez le programme en plaine vitesse jusuq'\u224\'e0 ce point. }{\rtlch \ltrch\lang3084\i\loch
Assurez-vous de v\u233\'e9rifier toutes les variables et les registres impliqu\u233\'e9es dans la s\u233\'e9quence.}{\rtlch \ltrch\lang3084\loch
 Trop souvent, un mauvais calcul est le r\u233\'e9sultat de mauvaises valeurs d'entr\u233\'e9e, ce qui veut dire que la cause du calcul incorrect n'est pas n\u233\'e9cessairement \u224\'e0 l'int\u233\'e9rieur de ce calcul. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une fois avoir v\u233\'e9rifi\u233\'e9 que les valeurs d'entr\u233\'e9e sont correctes, vous pouvez faire la trace de toutes les instructions d'un calcul \u224\'e0 raison d'une \u224\'e0 la fois. Apr\u232\'e8s l'ex\u233\'e9cution de chaque instruction vous pouvez comparer les r\u233\'e9sultats que vous obtenez avec ceux que vous vous attendiez. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La chose la plus importante \u224\'e0 garder \u224\'e0 l'esprit dans votre recherche des bogues est que la source de l'erreur peut se trouver quelquepart ailleurs par rapport au point o\u249\'f9 vous avez not\u233\'e9 l'erreur pour la premi\u232\'e8re fois. C'est pourquoi vous devriez toujours v\u233\'e9rifier les registres et les variables d'entr\u233\'e9e avant de faire la trace dans une section de code. Si vous trouvez que les valeurs d'entr\u233\'e9e }{\rtlch \ltrch\lang3084\i\loch
ne sont pas}{\rtlch \ltrch\lang3084\loch
 correctes, alors l'erreur ne d\u233\'e9pend pas de votre calcul et vous devez chercher ailleurs. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_02_03}{\*\bkmkend p9_10_02_03}\rtlch \ltrch\fs23\b\loch
9.10.2.3\tab Instructions incorrectes / Boucles infinies Partie II}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Parfois, quand votre programme plante, ce n'est pas d\u251\'fb \u224\'e0 des boucles infinies, mais vous avez plut\u244\'f4t ex\u233\'e9cut\u233\'e9 un opcode qui ne correspond pas \u224\'e0 une instruction machine valide. D'autres fois encore, vous pressez la touche SysReq pour ne remarquer que vous \u234\'eates en train d'ex\u233\'e9cuter un code qui n'est nullepart aux voisinages de votre programme, qui est peut-\u234\'eatre au milieu de la m\u233\'e9moire RAM et que vous \u234\'eates r\u233\'e9ellement en train d'ex\u233\'e9cuter des instructions sans signification. La plupart des fois, ceci est d\u251\'fb \u224\'e0 des probl\u232\'e8mes de pile ou \u224\'e0 quelques sauts indirects. La meilleure strat\u233\'e9gie }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
dans ces cas }{\loch
est d'ouvrir une fen\u234\'eatre de m\u233\'e9moire et d'effectuer un }{\rtlch \ltrch\i\loch
dump}{\loch
 sur quelques emplacements autour du pointeur de pile (SS:SP). Essayez et localisez une adresse }{\rtlch \ltrch\lang3084\loch
de retour }{\loch
raisonnable sur la t\u234\'eate de la pile (o\u249\'f9 proche, s'il y a beaucoup de valeurs pouss\u233\'e9es dans la pile) et d\u233\'e9sassemblez le code. Quelquepart avant l'adresse de retour il y a probablement un appel. Vous devriez placer un point d'arr\u234\'eat sur cet emplacement et commencer une trace, instruction par instruction, tout au long de la routine, en observant tout ce qui arrive \u224\'e0 l'occurrence de tous les sauts indirects et les retours. Pr\u234\'eatez beaucoup d'attention \u224\'e0 la pile pendant tout ceci. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\cf6\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_03}{\*\bkmkend p9_10_03}\rtlch \ltrch\fs23\b\loch
9.10.3\tab Exercice de d\u233\'e9bogage I : Utiliser CodeView pour trouver des bogues dans un calcul}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Exercice 1 : Ex\u233\'e9cutez CodeView. Le programme suivant contient diverses bogues (not\u233\'e9es dans les commentaires). Entrez le programme dans le syst\u232\'e8me (notez que ce code est disponible sous le nom de Ex9_1.asm dans votre r\u233\'e9pertoire de travail du chapitre 9). }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg \tab \tab segment\tab para public \u8216\'91data\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
I \tab \tab word \tab 0}
\par \pard\plain \s30\dbch\af20\langfe1033\dbch\af26\afs20\qj\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang3084\widctlpar{\rtlch \ltrch\lang1033\loch
J \tab \tab word \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
K \tab \tab word \tab 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab segment\tab para public \u8216\'91code\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
assume \tab cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Ce programme n}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
'est utile qu'\u224\'e0 des fins de d\u233\'e9bogage !}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Le but est de l'ex\u233\'e9cuter \u224\'e0 l'int\u233\'e9rieur de CodeView.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
;}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Ce programme est bourr\u233\'e9 de bogues. Dans cette courte s\u233\'e9quence}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; de code, ces bogues sont assez \u233\'e9videntes, mais ce n'est pas le cas}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; dans de plus grands programmes.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; La boucle suivante incr\u233\'e9mente I jusqu'\u224\'e0 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ForILoop: \tab inc \tab I}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab I, 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab ForILoop}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Cette autre boucle devrait faire la m\u234\'eame chose que celle ci-dessus}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; mais on y oublie de r\u233\'e9initialiser I \u224\'e0 z\u233\'e9ro avant l'\u233\'e9tiquette ForILoop2.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Qu'est-ce qu'il arrive ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ForILoop2: \tab inc \tab I}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab I, 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab ForILoop2}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; La prochaine boucle tente encore d'effectuer la m\u234\'eame op\u233\'e9ration, mais cette fois,}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; on n'oublie pas de r\u233\'e9initialiser I. Pourtant, il y a un autre bogue dans ce }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; programme, un branchement dirig\u233\'e9 vers la mauvaise \u233\'e9tiquette. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab I, 0}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
ForILoop3: \tab inc \tab I}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab I, 10}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab ForILoop \tab ;<<<-- Whoops ! }{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u201\'c9}{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
tiquette incorrecte !}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; La boucle suivante additionne I \u224\'e0 J tant que J n'atteint 100.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; Malheureusement, l'auteur de ce code doit s'\u234\'eatre confondu en pensant que AX}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; contient la somme accumul\u233\'e9e dans J. Il compare AX avec 100 alors qu'il devrait}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
; comparer J avec cette valeur. }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
WhileJLoop: \tab mov \tab ax, I}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
add \tab J, ax}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cmp \tab ax, 100 \tab ; Ceci est un bogue !}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
jb \tab WhileJLoop}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov \tab ah, 4ch \tab ; Retourner au DOS.}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
int \tab 21h}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab segment\tab para stack \u8216\'91stack\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
stk \tab \tab db \tab 1024 dup (\u8220\'93stack \u8220\'93)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab segment\tab para public \u8216\'91zzzzzz\u8217\'92}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
LastBytes \tab db\tab 16 dup (?)}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
end\tab Main}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af24\dbch\af24\hich\af13 \ltrch\loch\f13\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Assemblez ce programme avec la commande :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab ML /Zi\tab Ex9_1.asm}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
L'option "/Zi" indique \u224\'e0 MASM d'inclure les informations de d\u233\'e9bogage pour CodeView dans le fichier .EXE. Notez que "Z" doit \u234\'eatre en majuscules et "i" en minuscules.  }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120{\loch
Chargez l'ex\u233\'e9cutable dans CodeView avec la commande : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab CV Ex9_1}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Votre \u233\'e9cran devrait ressembler maintenant \u224\'e0 ce qui suit : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\pagebb\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop455\shpbottom7175\shpbxcolumn\shpbxignore\shpleft167\shpright9107{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw596\pich448\picwgoal8940\pichgoal6720\pngblip
89504e470d0a1a0a0000000d4948445200000254000001c00803000000535906d300000300504c54450000008000000080008080000000808000800080808080
80c0c0c0ff000000ff00ffff000000ffff00ff00ffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000330000660000990000cc0000ff00330000333300336600339900
33cc0033ff0066000066330066660066990066cc0066ff0099000099330099660099990099cc0099ff00cc0000cc3300cc6600cc9900cccc00ccff00ff0000ff
3300ff6600ff9900ffcc00ffff3300003300333300663300993300cc3300ff3333003333333333663333993333cc3333ff3366003366333366663366993366cc
3366ff3399003399333399663399993399cc3399ff33cc0033cc3333cc6633cc9933cccc33ccff33ff0033ff3333ff6633ff9933ffcc33ffff66000066003366
00666600996600cc6600ff6633006633336633666633996633cc6633ff6666006666336666666666996666cc6666ff6699006699336699666699996699cc6699
ff66cc0066cc3366cc6666cc9966cccc66ccff66ff0066ff3366ff6666ff9966ffcc66ffff9900009900339900669900999900cc9900ff993300993333993366
9933999933cc9933ff9966009966339966669966999966cc9966ff9999009999339999669999999999cc9999ff99cc0099cc3399cc6699cc9999cccc99ccff99
ff0099ff3399ff6699ff9999ffcc99ffffcc0000cc0033cc0066cc0099cc00cccc00ffcc3300cc3333cc3366cc3399cc33cccc33ffcc6600cc6633cc6666cc66
99cc66cccc66ffcc9900cc9933cc9966cc9999cc99cccc99ffcccc00cccc33cccc66cccc99ccccccccccffccff00ccff33ccff66ccff99ccffccccffffff0000
ff0033ff0066ff0099ff00ccff00ffff3300ff3333ff3366ff3399ff33ccff33ffff6600ff6633ff6666ff6699ff66ccff66ffff9900ff9933ff9966ff9999ff
99ccff99ffffcc00ffcc33ffcc66ffcc99ffccccffccffffff00ffff33ffff66ffff99ffffccffffff4462b0500000001174524e53ffffffffffffffffffffff
ffffffffff0025ad996200000001624b47440088051d480000200049444154789cec5d4d62a33c0f7e8fe36e2617299bb89bfa22f5c6b0c117810d660317810d
ce26bd48b2893f49363f8190a69d4edb992f7adfc91fb690e5c7b22c0bf7bffde900ffdbe3de9e76a7c36907dff0c3de1ef63bf876b407bb3f1ef687c361bf3f
bc1e76767fdaef5ee1d3e174a20b2728695fed09ae5a2a67fde5dde9cefaff94f57fd61406885ec287bcff3abc16e3c5f36bfd27fc979f959a97bfb3fee7581f
095b7b7a0528be12c0007fbbff4eec4e77fa10b935faef382b99fadfe1932cf0bb724e5d656ae053e51afc21539ec3b2a8b6ced5fcaa888dbb502fedef7085b0
8898deeb029f9e8c73c9e4abd5f4b6c9ae8b36923cd78673b97fab56ca378e2ec38b4ace2eac6bf58ccaa1be277dded4efa57550ed6725d5d199969ad1385435
3f3ab9c2b476aeb1a4cfd86bd51dfdbd1625b7ce96adb357458c2f814a1e9dad5c77b52200a573e5f8fd129ffed2be6b5f478ce61e1300157df50e0335aedbb9
76fc6e3d44bbe96f67d40ea028dd1970ed6de0303350813e6e02e397d03aa80ef3a2950bba905e53661554d85aeebbd3f77b9c865fe7245cc158e2aedb838b60
a841f9cddb15776e739d0f91c2a624e3e5c465f4be7dc3889eb1de4fd84b6c17bead81aa1a2dd5f990121f0315fcf03780ea755e14f4207006db28b1c5ef869a
1f29b954bc735b4e364a12b4b8803e533043c8edace023f65e0afad80ab521d6a81ac99e04f2de4aaae01c5fc2b7011c542e865a5cb048327941a7a074093647
284142c00c01f71042cca5809e84da05709352c14559ba8aeee8c501d1e1dbf3864b02a8508b06d308cadc13efaf096fe21429612bd5665e6398beb81411e39c
09df449ea35641a92006caf9081280fa16120f96ee4588c05082faa45adeeaebe91d96ca384e23a308d37e856f1d96cd975ce39a4a78bf87bc22832517b349e1
2bd7fe22f8693817bad47b6f2e7c059a4fc6a044056628815700ba70cd25e60eaf54543f226150627c9ba382cc832626cea5ac771e1989cff1db81b578751734
36eb39e95d47548dc386434372cfb70d3a9e5bacc1a7ca50a8ccc19b7b627c076fd22b3563d820e18cbc54bfb754b697067b43906c2f73357c39ad836ab1fa6b
82a679eb2d345aaa27d0fad6eee69d04254b54c821a1e9ef192b3e8172963682c507d7f01760b339ec39981cec5fed8ea27069b7534a4327016a954b67f550f1
96e3bc05a07aec9c55cbc9902c55c93642027f8ef78f185a1abbf017bda54a1bd7087bdc0ae34c682240646715489502b63200af76b110732f50f60e399786a4
502ef6bf03d8ba935479984f070250d41cd512e13cbe6d5d293bb7054714a6b127572a695eb94b1f5172bb9320507c5ebff2bda4dc33a819678312d9a0dc3bfb
edb6ea1d96aa712f2e7c204bd54133942f3c375560351af439e193f7acdcf8baa0d4eda567a38db714d077c0b90cc39f79a335ab659c6e5d274194dca11354c0
bf39f0c852d56804c87e78176630431392384c122735f8d719fcd3c1ea2118190106aa78319a4b8d10613d40bc251b3c7c9afe2e2e526be027c3b247e25709b0
c8818d7434aec878e5302dc30de7cd0af5f17689eb9b53211b0d2fcdbaabfb55b40eaa854f056e8017b7f5621b32b84688a5570516997b40798d5e05152e955c
2e8552fcd50a747115602012bc1ffe174105c886918e8b058c1468c075b198ffa01274ebd10a4562100fb019d2ce9991a30eae9d869ba7c02a0b8685c012a6b0
20064d86c75983856f26076d904fe41720c1a5a411d3cceed8013f450291878d56bf7438a503be71a4809c60130161ae34fda0386f3e0955406945ee18d605b9
2599ac6fa677582ad37745e92d15ba86eaf29a83f45fa126bc36574145fad3ae5fba202ca04f55806237e1b6b45412862b5a4bb454c5040967622818f0556015
56f0a147a6247c370222d052a560b4a696aa641350c1bdf27c6e7cc82281d4200db1ea1d750f365ee4dddc7c3480191fa0412345e3d4383432505f797c64ae56
4e80e45217e5bc7ed75baafe87dabb85eadaa2fcabe81da0eafa0604b1d1b5e2188fd1cd056766031ddecf1d23a89ad944495dd0c08003139f541b02551a164d
be374db166a9b01b50d9314d7f2980a2588a11bb0d599b008c32c565533967c63db61f326091034b3013bc148813a877a2e9cf063162fa3677cac0910783abc8
d2a072940715f9542619420c236952f2898545b4211353f9fa240dd84d72c25dd9a80b01b3e0a84b70d21f1acd82c1d3a4945b03b67f8c6e9ffec42ed8707120
63ccf7382f74aeb20bdb0c4e740dae67eaea8e3cf6d8919f09def459d8dadfbfeaa0be71ad8531690ff086ced20e7b06d64e66b7c3f5d11254ea95268ccc1de0
16078e962a99336fd10312ac393696c4a8e1fe51ec70193797d8daaa855ed1ce9668d4361836dd608d538c935a7982b5483ffd75d5b2df604d02cb800767ab93
3b4904987da616bfa28bd076761edf059f9cd12a549ed0eb6f69cd27ddab39b93d6f5e61ce6ba1e26ee7ec06560bcda27e1f92684fd51e612c4e28778ef217ec
bbe9764b95bad0b1851b3c5e8616c32e4686e75041cbdd4b4596c12f89b30b0d36decd2f3d1b18c05b872b1b724e79e75a8ee18625a81274885b8a55b5023dec
949ca1b918075c6ec24afb8966bc028d0218009d2f26622c43b7dfd38a9c5b12c7e1ca1e5b5ab07116ae9c7d5a34636b2ddeaa763b34b55851fafa896fc6a202
2c7adcf3a056ef53097ec0fa02bed22d6c5320989eec745fc0530f2a6efd50f79d923b54d8b7d33aa8fe1f379417c6ee2fa3f8fb9d74a475502dc28dff3ef1d6
b5cb48dadf43bc7b6b8ffd6b681d54bbef16edeb0923d23f62a87f9084bbb0c0fe06badda7bad39d6ea4bba5bad3a7d3dda7bad3a7d33aa8e6999fbe2c059d9c
8dfceec33708fca7289b0424227d7256b1e4e0dc7e0c3a62835bda5677cd76526f8c60ab100af11a9c2c24571340ff1d0a6038a11adf63a99ccb0bda2cce315e
c7f3f65f02959becdba6ce025622eb523d4993e129e207a0952413003e1f4650c1eacb6711dba2a827fc8a659ce99f230f2adc0478b96ea94c674c3aaba78cc2
baa8ea4b39e77f2b1da6a032ee89258e368b68f78fd51e37ae4f827293554c37d9fecc431631250c14fdaffacd6cfa7f8048373141e7d73aa80ede8c352c3665
d5944d3d896a5b5264e1d88ba99b0aae35a6ac9ba632ad696a539b16deab862e559531a66c3bf8da56a6831f4bd300c3ba6ce053600d5c0c946ba106fcdf9ab6
336df371d6bd7189cb46e3440de538c34dbb34617921da26d9300eac319fb3682adc42aaed643bda670fc4e6b065bc46dbe35ec7df095413334e7b77a2a9f20d
c2e76036bd8a4403fc5f4cc6e29a22ea20d864f71da44614bf80d492a9b2925af762f34f57c81fd4b5671d74a39ba3b3865f9dfef0bdf659992e6cd3032545e2
93d412c7e46afdefa4301ff9c6f182de2835a1ac000360946096c21c4ba7996b754736259d58aad0d02dcc74de79e293df31576cbaf787db8bec2549ea861c2c
bfa5432913b809ac7c2617fa54799c4f120892a4b000631223015b8652854be23b74f67b34e88c126f568be1360dbe4f128142bdaaacbc95ffe9d39f85fee4a5
a211803bad601e1ada13866fd2015cb4895d26e411313299ae46939ceecebca100aac644931f69fa53bab394d655187a7228da1d1e294b6b7fa42c7bb054db14
f436708b54dbed3033072ea7a670d2568bf498bf8a5c9fc0791554c152554ce4ba48b2424fa6bf23059e7307eba402fecb759a6bf897ea0c5e139da4f0130ccc
2ccd749624795ae469ac73284825f3342ff23829529d04d64596a4503d4f33b8a4139de545927c9c753f035994bacfdc444b559b7e5f383c03e833507cde6732
5710f198268c0dd3df94cca04674081246864f93296f5ded9d2ff4a9b4d766206fe2c19882d4028767130fd975fcd315f20775ed598f160747c63aa85e59c8d8
af7a1337aa93aae2f4a76eb38e5f4c01079c12921e42e62626e03655dffad8b7251b9a54cc7d2ac90567215d2f3c237311541d2d0963f430011c98d51c7b93c8
f0a9ad50b10eff064b55d2a318016a3140bc1a13f9fec2e9ef0964968285ace0d562bda33e89b08ceaf48f3e143f7cfa4392aea0191c338fa12b7b8f9285e497
3173329ea4c11d1ca65461c2ba4fd3632175e522a84a4ad5a7877a68f54759cd86d0d3b9dae741f5e98ae32a10a5e9b31e1b9ba1a5aa7fd0937bef25ff1c12bb
75fa9bfb54f8201ddb63f4f3c7836ad7d1c357063a36c2d4bc5fccda1e140a2c05ab5b0eadd95a470bb7d15215ce6c8d7bd9750fb04a29905341bf5f0495cf01
1660773694806a4edc9b44ca953ed2b32d04aa169fc7c61a26f680aadd2f816234062d95fe014f2c7c98684d8423a6ec9f82bb0c2af037f3a4d09347833c1869
4ee17f43449dfc96cecb6dfb49a50a62e36a0b7a949e2a780e0196be53235f91e6fdf68c5d496be1e94db4eb9f5084fab4fac31884a1072d624a5cf7173b7f8b
1e9661d91cb40976533e2d1ec3fa9b2877fe8982eebaa55a1e7060aa122b4a53d1590a75f9d3437a9136687e9e3a0cd8b2adae65d2e8d2789c880a9324235d65
1b7c921fe33163a0202e5fa8c834f6cb2b0c05e75573f6648cec6ae4a78de635576de9635139d6c367075fca1803548dc919378667186028b008cf2b255a7c1a
da7026e9dc899f90b4f951da36352d8f928ebf2747fd4e77ba91d64175cfa7bad307e96ea9eef4e9f4864f25fede55ee9dbe8ddeb054ce3f6075a73bdd40c59b
a03af4a0ea9cd3b4564e8aec7d37c1487e56b479fe5ba2fe0e619c1ac8687c6b8b3341f657e432585e67d3f154e6e93b6f6e75a133dd14895e5e6bf49729254f
eab70b7d0a15b809ba7d3349cf5b2a1f5c2710be4b3e8fdb3170c11e7f43e205291fe4b94865883c297f38a83f9e66164131975a9fe173cdaec187551d3bdb85
ba16d4bb4c6ddffc0b15af6d667c32b1f9661a5bcf4de9292535bc97527cb4bbbec952856c86049fe57edf665f308623a83e75574b5ee916d34fdaac98dc79d6
dcec02839c7e4b309807c83c93f7dd30f03b5ce272c5af03553d573b7b7bc2b9a49ab7a920b4b6b7582a3c608251ee51508562fbd56a26f42211e2494d40e576
1f117595d6a580a9a717c12bd047b0671d995f6afd095f3ca8aaf374b10f58aa8ae1891bdf0caa669ef5b66ee0473a7ee44e999fd2af24e90d96aaea12ca4f9f
806a5dacea7c18847993d38ea337f9b8d53a381914da7fd9550c7faddc6b4689de18dae68eb38293e9667454001e7b11f1f1ce051d27d7466c026386499f7e23
0647e7bea0b30a4e9a4d4085199a58a398847e2b7fa483c19d4e1d2c2c0e10ce36dda42dc84c305480774a6bcdaa696b165486cd2c8e72630d33e5a610bd5eb1
b8999dd7247e318c95ca57605d44db20e9ac3efdc3cd8dd415114c3adbaec4494b86dd5d004f4629f44da8477bda2a6c14393cccbba196a0c56fd8548d3871e3
094c7890e92d08ec2915fae4aaf40aa86c0faa36f4c6f645292ff0e10ae373217a5049c4a1a66f9bad14dba42fbd619162dcf22d93d10670241567f0a3527c13
c5111e12dbb8cad474c00f26603e0faceb08a7b82d70db44fd6f3c628ae3378ebd894f678072e86d009566a91174dece860fa03288c4148fa5e1049c886d2439
5d82b3d7b12d206cdf0d25b40944550f91908f9b3565b40154cf9ced04abcc1937808a2dc8afa0c3232507ec4552f0a13587b26dd8c1e129b3a014004b158dc3
d9f78d85d62866ca5fdb486da206c1a306bff7990915e119b711edf852e68d08635bd3e9bebb7e8844789eed3838da2d3efcb1d930394a730365e198a9d502fe
800e7fca89c70697a9bc613a3ea300aabaff108e696d86855446cf46d538df644ce380046b8d5e361ed0181427685443fb59371518876489c0ea925ed5381253
1c720687a4c6fbe27930f5c4a7520c5664e8e871570ccc3ad616b2c01193d1c497513ba13782ade9db025609c7358892f9f690f9aef2b5e16cc293e8167a9345
3ad7a3fcf009a646ed2d15492218a63a807de9b919dc0b8c69fa02468c17497a561fb302599164b4755d51fddad149e0a1488a3ac82bd224e6288699900524a1
3df743845c1b33598fe2315df08207c0addbe105e970d8e46a81d1a70a47f918dcd867ab83f2320d581a3eec98942a1ea6ec8cce2a33d88ba532a8860a5a5af8
9903cb0be86ca1288dc4b1b3059b0245eed160e4c38481580236c139654fe4a8d3289d804a49290526a9eb8159cdaa38ce709c6b8253418bc68e4e5f1b96268c
1ea291be1b823360f13ced554cd1c8a08a35c303a995905388ee3c2853e6471a581c6c8d18b8d139d8052ac475d2e021bb20f854b30039863c1599a75c258827
35cc91b884cd59521228a5b754ca9d812ab4069a2165329980346229034467d359f12d2adecca71afe4843e3c548069fca5c09b1d87353b6049577a3064b9553
765c9bd21ade7950511cc00ccb26250814d076d69e83aaf18fb58e4be4c1ae90a52260e5e4a47b68306f659062369c6d4dc54d2e71faa34364f12a36b1a1c495
59370acf230eed09677dae90e92d035a9af33598e7a6c93bf31095ccd01957c3b8459d802001d7b385b7afdfaf35bc2355229ee498aa4bd6a64050d61e54bde5
0c4b670f2a6c111d02978cdcc9dce34b1162333751eecfecbcc552955e8cec2647bd3c17e282a5c2712407c525f4c441e5fb9202006064501be5b06c1292f081
96aa9a0a8cc6fe545bfc304e7fa1e75a2602a852ff36808ab4d99ad09b83d48f9b5f91ff0335082730fa7b531b3a5e716a5bfc6a1645096be17deba6f79f9319
2d554c8c4c7bce0dd9c483a5caab1d4a35ac5c411b4cf7210162d599b17e77f4f59d69c86ae37835284d7f0fd469c2b2928e1ec5216acddc52050fd162153571
9f70acd331aaf97b2c55ca6816be02aa61f59729fc7b0d025d3b4590c9d6dd7bf33059a0904f685cde838ace9aefc0338f47e44974d4198cd02daa92d31f6ec8
1f19de72a3fcc28affc21471f108a04a2602570f60210eec01a68801a23ce410ba0d7b34f082158d7f13649df108d84774f95b623f34c447d40ee8d43f5a3a4c
1220c6d9a38fe7f565e496b51c571d589f52d8a135707f64135d4256d40f5d6013d31de3919b80c54946cde716ffc6035ac147781bfa16560bb852e5fed0f859
7d90f48152ec41311cdab8f1bf29f93094016de2bd133448201da5005ae70f4386de849541cc7129c4228b7f5c63620eec03fc06f55f700a5eedec05bda07cd1
3550ed8638558861c2ca287a2ba09e9f87dc59f8630afdcc43f74ba62be30c9b44d6b7f6f5c98e5366af3fe5d7916d86b58f1c2ca527cdfad9b499decff41f34
a9efe08fb3b67e48e24085b525da8c0a831723379e0a840606c1e9d8ffe78d752c0cf1913946063a0eae3eb857dceb27edff96c5b82e3d6b3f3d61e1bcd13b8b
e1619a23fe7d01f65c826ee95048333c75e30978efe89871faad3dab8fcfb3d634fd0fa747ba106f1d36970a8a88742cc4d42d3ec9183ac5755b6a59b7613a21
e766bac74bcfbe92b9cadf33fde9709eed6a81499cea76aeefa7e2927915c64d975d3f91bade39f9146afc716b9fb247c7af38277f98fa1326560b8c21853f99
a5609f185fea403deb84ff5930ff36b12c15efdbb4baca4d17c5ef43d4a6ba8859f776c13f44fa4d500dc1cf66b5ccef53c52e81b68589929b0bc57f10e9883d
ea0f6d665c220c49c5d762cab77161ec5b9f1accde04d5974c7f7e77664e56d16ecd8f2613b16df2db30e8091346deb5237291e861c36f7cbeb77813544348e1
23491077fa7fa4e4f6e9ef67fb3677fa3904960a8de5babf34a6137f55dee09dfe764aaa82b16b6be2d1a76a86403a63f275b5c2053ae01f6e9c042ed45acca3
9a6cdc4ce8c4af85152e666e7e2e750a571116ff52ee64fb61b51923b1f7eebc7f98287c97dfb09cba362d2da81d77205deffb1f7ebd95015df00deedcae870b
c6908241af1e3bbe28bbf784c2fa5d133bb486bdac143caa8bbb01e6aad7b9bf96faf939449b69ae1dfe0caf277629ce794ef17423ed8f1249b5bb2100f3ae31
984d825d79e885eccd81929bfc0d4b35f85465461f8a21a22dae48574d874c394fb85c5ddfe88b9df03ff6ae1dbd715e876e07d3c41b891b334db891b0a1d490
1b111b4a8db411a931d3381bf134c34b807ad98965e5fe93c4c9f07c5f5e8a2493140482e001502e3b40ed870b556c707dde8deb8bbeee3d8c91ff84d82ab1c2
9bf82ec53ee3e80e4fe1ed67344711b75f2edb4b333e55cd4f590a62e586b278841daa51004db5eb4a497ba282cb6941e90a21f6cff83670f3e20f9514ca79ee
32ce5b2f18ece4f45195e4aac44c1722c366b71a4976072dc5a4e48e4ae2ddc26da4c2726c42725ee2ff79f8da173cb4c6da8617485b9292871f7b8d058acf20
1b6c66b844208d4632d8f23d4d69025b6379e84695ed793675a3e3d8fc09253e8026f414f7bbebf0c1b53f965c48677599cb709bd2d4a1ab7ffad3f7420a6943
9b1a8997fcd15c647f7ca725cf7dc15dc1658b8d117bfa7437f5b8c62c7e35457660179fad9058092c1372effc71fe11b47dece26e45e8d54b1b5af35beb8ecb
6c148252f24ae97092e338efd719d27a78064c8683720b9b2bee0a6dc2236b17e22aa6bdbfc1a60299f739b2971c2a3307042d2ff7fd4f3f44b3b01396058fd4
111b3d2c7d7d5278a4bd4ffa63547cf1cf3cde2d665dc3e66d2d9bb4828e7713b89f05bddb4412f585786e05c3ba67b1041c35437978b0e2d5d48bcd237a0299
1374976eea46cf9cdccebbd114f671ae555bb4119d35947e903eea99fa84bf8a6283043dfc753052e25a5c557470133f49c426866fb42fe8bcce754caab2993e
982e347dbe9a30362cbc6936d67bc75294664eb88907891324e2ee32eb93990efdb7b1813e6e53c6bc070c8687b2e82c2028c9c2602e4c2f939f6a607e3e1bfe
ce30a56e98374a4f7bef7875856ace0c83e2d068a9e4b3815d784e2d0e410d59193adf059577b2ff97c18b7722d3c8c885fb70c3bd412a23afca892070873a44
3ad8957b0e19b1f3f261183998dae0a862c1f01d35a3086f495197f7e79a1794e3640fc6ede476e84613a39b46fecfc460e89460f3a1214dd5298e454e9121d3
404e9618ca7819d648d88c838f1bbc082c21c9905d2c91ac824f59035994256684c1d1d02e287adc9e67fb135a594f0f22be750e1293af94f896d5c2c1b6add9
f456d26bdaf49c2049c318ae38848b87c9c540f5c459e4ebabd06d22eae912ee423390af776d4acf0d57e1132edbddf310ad693a7e9f5095933132f2a9f660b4
19adca2348a38a81555cf47462a494ed892230d3b712fa8ed38db2f04cd598ee70b8df96d3dde2414eba460d42d5279f3a65b7f51b0b671320d812a8edd19a2a
27dee8c43594301f8df3d7780faa571f199d861ce9c8d79327cd18cee7a47b2b4b3c58897a31fc8a0fb1038e321d44bc57e642fa135b78102a2487f739431508
abd5300c6a7666b03248a844b48b918fa5ed445c0d46aa5444f243966283f2180c297c123810f9556a952a2db2dedea3a9c62eb8856db9c34950ef5b4fa3982b
5c9f6f48296bca648755b15112db5e984e62a4fab59e8a3732d1cadb9f1aa894618acd83fd904e1c87b117cabe353deb736214fb76b24dc194405a9254e7a470
e7dd1073a1282965e8ac21256928198972f1b49e1f2766cd98770e335ed67181d545b6a08a045831bc9a9115cdf95b42158bbc0fab791ad4077f66584324a0ca
5e53d1913f24f883060a83c28d8cac6ad45435bdedc841c605b0bdaaa92cdb0665b960cfcf5d0a63275c5f12ef72c4dd7efec9ed44b89c9e06829fd872168e28
4e1a88191d5eca414375734d256662106c66202e6af97ad56383968f6da0f1ebe9c47c5cb39e68aa9950c1e485c1472ffbc9c7239feb8d6e9c09553dbf15f6bc
887724f66614aa4896916f0a55d4543529a7e8c8b0f1150bd3554f67ed4d432ede162a647f8a99ca35186973323040215afd6de4ec798c967518506e4953a100
d5b88c2b307082937348c3353f9509aa76a5f373122a1789b3d9eef29a5acfa7920e2b058bd3a741c6ccc8dfa7a577be39a25fc74286ce4e13e33f100d6a9de1
d40c9efd1fe047f813264dd651daedc33356afde8d814fdb70bdbe7f66db23f2ff5174911cf910ae63e1c1b723f11d6d8bd00716cc2f8bac3dbc7ef608c8d0c5
471a8d3a5ccf9c77e354a85acaca3bb3cc28a616c39ca2a58f87368c161b25c5009d872dc722edc748663ec648abe38ec2c4c4a02825867978f94aa89ec3514e
0dd0e19ce31d44a10cc3c0dc919d0475a1026661349ec228e330062be2e0a7210e6f9ac825bea718ffd1611f38da54c3f4c7db7343e11445dca6b97cceb4fadb
f7564009b0bd96a3229f6c4f045255e36a09bf62a96a9cfe36e342d7de036652ed13fbe20a6f43f969753fd6d3fda800fcee99163ce2e069da0c466ff8f1388e
1b15106969a1b82b3c9da37d15d6699b1dd0622a1f150e36637ba0084d1626be9739b7ed080fb24fe6493369f8e4fb7302eb8950d1b2f569e680a4f5a21e174f
f8d4ea583cc2c7b8abb30c0bf8e7d373d99b8738e2aced5319cbbe11f5afd08d2d70e9ebb950e18704039f6caa0e47e3c1c5457045fc4d56cddb1446b90d83b2
bd8326b686a63f363c8d6053b903cea15134a2896680844ad2ba7d390a50eff55a4d55699d171a2b4b5d77e8756752f78caf3b268b41fbb95296ee709a3c06ef
1a6eddf92ec37521454869d3135fdcfc7eced208f5617679d11cf3433878c29169631b55d4d45ad1ab6fc3581accfd421544c227687c4a2aa79bc68f922773c5
be74f451aa30e4c4390673bbc48662fa9b36d71a3b139b3eb4ad689c9eacb25c512ca2555e553657f1c91a452e9936b4daef55319f4cc2a202dd4326d72fb151
71cd5698f00f5de828efa1d5b5a9f15e66fe2470fc8cfaedabc2f967dbcdfbafe69b37e1311efb01c778a84a536b9c9e390d553fbc4e191b3a73d4ea0142abf7
e12cbc5373858e64a2f3736143f967b014d67ab6bb0fefe596e3f477216e52bc35ca4167bf2f44ea1dc010b3c3b2e27131e0eb1d1c4ddd668fb09454e62498f4
db42dc4efd8498e7f86dbfb17ad3af189d207f37a9c9807aa13503e894dde229a7c8d1565db4a9e6abbf6f0bcbc5cd34df09792996b915fc2dd96fb9fcb02d44
a7b8ba46352db9789746290ac968297009293d63c27b91e3368d59981b4e5c0a09092ba0d9360babd5cb0c99f9364d5868e12177555f2ec3cdd63b5d962fe52c
3bbbf09d013db94d2fc257c0d40ab7692e7319a6d59fee6d3a0bff3154633333462dac8a4fa3f9d9bd37aef49575fe2e7333e1ff45c1580662694379ccfab205
833e6cdc7588db08cd821e78692e2ba093158e5cb5566578d23201f40dbc8aaf3f3aa600002000494441546e66df7905fb7da072cea0bec8ef3ddb508e1b1b75
af3996d3335ede203a11aa373d336fa37aaf5ba0bc193fc2bf050394ae728df313f5528e79c906b65eb9bd2c548ecdf62a30a988f2bff916372664bf9fd60353
a7d8987a720a462ec935134948e8dda516d0857bff2237f3c00b2a18eabc7908d78f5b9135eeeb34b4bf91b97eb76bc872791418b0e9878c4c74ce7ab32e6105
749bafdda6e9e2ceae0a52b85fb8e03582dd2473283470a3c021295e4fd2c8213c63831bae6e9e0a485b60559f9889bc69c1a617b0c9d0a4eb7c3639c8e131b7
0cc2b4ac0c1b1d231b30f9d3d6773d8191f6e5b98fc98c0a904a41237ba1029ed9c5609d8477a3881bc56ba2699af0d819d102e19d5151f1fa3107d0994d8575
f7302121df4db9df7424abe4bee744d12591b42040f06cbc8589c42e8b97cae9fa8c325522ad6d43156dc754ae7ea0a509d27d31139efbd63b50b7075b85f77c
719be679d2541bdc2bc8a153eeef0915328824b2967466c644b0c493cc29f9795c43c4e9b6afd7608bdc4e9a0ab710ba06f5289fb25c6adcd5d268a877915e32
26489c27248cac4dca8c95f017a1c46309c5c2b27e5afd95911562476255b960063b39dbab8ad7f30b9aaa25a13a5949f62c2452586ab843cfbf3c8bf273428a
1d23929e1c156e2477ab92a8c8c480da8f592e67f978f12b5c2fef3f2b8eea1f81c9248366d5863245abe4613269fb32227cc1c95ecf175eaf35553e124c0425
2ea44df04e0f06739f3a75a04df642858ac75a120a65fb335d3833c8093f4b9d9a13c90fb55424c2757acc72399bfec257137952eb072ce13a947cb8124d331a
ea58dd178da90756c768a8fde517fcf9c4dd10af7750361695c9066634670e45bd137eb70d76d1c8c0c8598521034103e59404b4a28df460c997d03910ad1c1d
6b0e545732ee196fcbcdf86aa86d596def82643f9648c40c16db96fda62d79acab635b0bad0eb6dc0e5708a6da33145c097f2dcbd4bf0e8dce4fbee4fc7c9984
2a52168f19b06b69854ec3787af56437315dde5e001f57ff925899de3dc2660a783c0862273a4c40dbfb02289c85a10a521b60930b04cfc92867e6c68e07834c
efd46f4a21fa88d3b08ef96923f732fb85cd38e63bcccbeef7b28f9eb32c3916fe128a4c305c7b5d3ce1cb36943f889596f0f1d092d5a0969c9ff3ac2f9f8860
0bdd780ebd844b3005c7b0f7cbf94ba6e9ef739d39fd8c97f00da1e336cd651b69727e7eaea6aacb26798fbe296ca7d66ed3a41dfe8475d0319a6681a33eaf4d
9390b0020a39ea8ba984a6102d03c0623da2e42c4c58402ec2eacf2eadfe469b2a837b495ecfa53ade0909de6242a57a49538d7b7fa67ce9a949bd500978573a
d9847f05795cfd2d505f4e989f1a1359d85ea896989f09ff30cc7a925e30e6dd1d26b1184fff98a0d984ef0ec59802b940289f9c9ffb48d2f3c9504f5886ed14
5fcea437a3130faca72454094bc894288255b5c05298eafd3d0e36542f544b85b913fe6158c13814ab12c9520ad41a755532d41396506494a0e3e1e209733e55
e767790983917fbd8c46c2bf88ebdb3433e66724e9c574499fd8c6846f06d3166b5d0a4553955ddd7a57d5559d325f245c8465ac82a532395fc5a74af8bec8cb
d59a2a95bb4d5887e26a2e851f919e31e13361ea6b9aea4724924df84c94a516a2140b1ef5e7a4a912fe3266e919f7826396f7bd10e68ad12e0a0c7c9f496199
62ea12264c9aca927faa8e350d97ad768c04e6f30dc5e4d74a9861b2a9ee40fbdf316bd421e6e0bce888c0a0e15ff36c0a8f69ee4c9830313f51845e6262b23f
70ef97f6fe806ab1725fd7719e2c5b2463b9c3b5a226ff375cddb4ddd1bf94beaa6941d195d83657b62941c20d62d254a86c784c3a14f3ab3417cdfb589357a2
7051d20d88e9563015e3c7b432169ada7754949363ca3cccd080b91416b63513be0a93a6daa3578b9260640b79d709a01864c1a672754db248a1122e9865f57f
4b967d112f1254b5634ec2b6e4e0369bae16777fd8b6eee4da5247099f87399db88a22d15c0d4807e38a063855b49d9296bd4a78f61791519dd8c60471b740d5
6215e8abc57e13be0633e7e77183499efcf117bb464ec7a7d982609bba9b252dfb48a13254ecb0c41446ae74947108ae97254ff81acc72298c9159fdbf2e27a0
eb4b49539dde2911ec470a554e09f92a1527e698494f2f94864ef84a4c9a6a4329106583ba87e304b8b0fa2b2843675f11db7f82506136240e9d8d1fb731949b
1405ba11895d717398333f7966017210961292fbe78b1e507c9a1dc8a74d2168b3dad0cee1470a55115a050f07060c035c833d9563f16a30054b6ed7dbc39cf9
294d908e02641ec349dd458a7a3ffd3dee2c27ff56064399888f122a0ddc023b3ec4eadcc15eb754fb5ce92454378869faeba1e13a9d1827a10ef83143b2321f
926d7eaca60266fc500efa1814a439f863b19d95804fb819ccf2a87f755396a03f39275bc27fc1944ae8969f9a63a960d637c2f7a8a15c5e9b90136e095f959d
38e10763d2548c0b2e0517f8c565f8c9a50c7f08895f74546492e3297486e001747a38970ee0c978182fa38be986f48f74eb1f766b176e7d798934d95409092b
d16657021f26e767edfd73bda5bc0be1c7bf0174a426bc17578349479b4afa67dd86b5bb77b6f5c557b7fb936023372be15d28edda10adac6458ee88d702361e
8faaf66b9bfe29f0faab5bf00d213657aa689d24e8101e8be3229d13d0c7f0f465cd3e036b2ba9ca2db0a229f31db0b2005ef23557667559ecc20b137e550d3b
fbe736eb82a6da167595857ff1b26a19dc155d536e4c9a151780a984ca05cfe1e9368dc3581a43430d00e7cfe0eb10da8f416051e13661a6aea158377171a3ba
26cc72005422f504c445d43d2b8b595fd88175f1bb273027bc09c104989545247f1d5f508e9a6a7f3efc5f0de98d6b9d275b2ff742fa363cfc55ca44eccb3fb8
07e576fc9514ee7d0ee12ecf619a7f68857fe6a2f0aec6e5705a0d2f4271bb9c9e71e652d0c3b0b35b1b54ee65a54b8f9caad0ca5c064592afd354d449ecd1c1
db57ffebb0322f38a733339a9d5df4deffed1efc28b458947849538dcccff0b446a395fe66ab8c964f01f7bc367b5f634636e30d0fd39f7a2d246f4085f99ce6
3ee95d3c22a6491df51e926a28bc7a8bd572032afc91846a116c538058d25413f3d31fc7ab7abfd5cd185532682ad5f90aa765eb9508ab53838507aec2787c59
b0732fbd10cebc2578a43fca7d817a2ba04d427515adbee25218a92f2daa01efb9cfe081ec54ed6ec6052abca86c191e3ca646f2bb8df3d2ff5923f219717aee
a1755b1ea570668abd601de00e8e157e006f8341697c658346db25a1ba8230640b59f25e95668bc4f49bd15111d273f9d478414b339ca4bdef73935e43ec142a
ac60970ba43d4fd745ba744341665d3cd50d96c2c7f4e387a0326b33e96d19630f2c48d31ddb7d75abcf71cf7e85763d86df9e36f1085bad45c3a5ec0e5f92bb
f09b38f1bd852ec3d3166f4f777d8caf127b784c42b5883b90b05d32d4c7ac2f0904e5a454d1079c70019940e7e7d30a4d954060478fb5e81316812fddc286f2
e452488890fcc62cca9bc3fe5acecfd1f929b52dac3679a18d2a74617395ebdce646196b3213bed9dc66e1bb2ef0b00ddf4ca134fe66955199cdc33fe8ba4299
3c1ce9bf69ba22ddfa07ddfa2966275e58fd8dd35f8af44d58078b1bcaf5526d9ad1a5d029800da52af8594594ab1fd59b5b402e780b66c9a61aa73f051b4185
b97fef7ed463702988f92fc3e6f26179f537cba510440fa9541ca25055ead39af9a13049a8fe2e722e05d885fc76a7215a47d8f91a724e8fe186eafd1dcbd21d
b13587b23a78ffdc3a7fe856b6ce516feaf2753ed263d960a7317de8eff266fa7afbb08c989ff9c5134ecb883c823b6c651027fc5777f9aacf460b98ed93c5dd
a32cfc29313fd59a2bcbd83dbaf05cf3365c884de87ab8517d357b60c2089389c7e5e96fb4a92a94a9c65bd096dd5ae2c306c48e3110c8cbcca12b8350a9856a
e33384556d98fef6a874059c9710e8ac427a56f8e7e676b4f2eda3e0ac0cd3dfe5ba3393a6aa89f936104a3eaf896b5042258d0c42b5471349a1a6b2ab047f1f
66f51cc20ab0295f4f70446fcd831adbaaddf1ef37fac742775958fc2c64a29ef6feda6e3ced7262c62f42039d540224aa530b0649f7f9aae48c19e005fdf477
2e85c470c5497403d7b29c26cca022f565c1a530faa974cc898e883615879bc97cdf4229720194dfdd60666de6d7e526c6951fadfedaba64d49f996585bf62a6
4903db9453e61dc8bb6b24bdd986723d242d8b42256ee7fdada0964a8679bcc6f7a40976e0615dd54b1335551109583801ce72c4a358067d7708c205a908f97a
a8ab85b967215a8cf3487fdb900fe2727ac64fc71e2addf2a0ae364260bcd611b6ebec741f94105685d8ee24dfa0be2e665a9b6df92e8ccd86a3d176a51e41c2
049b0b06ed924d75ce52f0f1f7cf6be21a94280a92689b8cfc4d7661417b76253cd540eb0ff449e993a108af9c0b861a6585ff9852153f12069d9f7a29987456
f1e11f40296fc64efcbe2832992fc7fd8dabbf8faa8095f0d3a019c310adcbbb78b3caa49fd8ac84ef0c233986bd2fecfd8d1ef5c4a74a58075d884768960cf5
54ed3de19d088b9e66d9a530db50ae6be7fda16dcbb64e7361c24514edb56d9a29e53579140ee616f7fe126e0939955c5b959e91012f3564168aaa2eff09ff42
c2ff07ddae8e50e6858bace2c162e7495d25bc051335d5651fd4099f0aab1899d100bb21e6a7e3a2d5d96fef2ce72afc90dab772cdde9f6f8c0827fb4670f96a
79eb0417e126a20d1d17a9cae96a14d9b56d9a79c12377cf9c85072ea25cdd8c4c61440ce6777070272463586a77254be119788be5c6373bc1b7e7a3f05c97ff
63ef6ad21bc581e8756a36ed8bb4375636d645a28d60832e8236121bb8086c4c36c9459c4d982a09639c609033899b4ceb7d5f4f32499085284aa5fa7945d97b
1b49e19bb0506204227b70e9c4d7a3a5679742d9bd11874ea533bd5b5b78b5849a6b4a7da95c9fdbc2a513a7011766a095de80cb7e39a4efde929ab91ce39658
acaebf7611efa14b4d4c7a21ce4fdbc99341ff0c9b3bcd2f10051432e72854d629951288452b44f015082912f90c42c8f732d5e1d14452929e0116c3c9374025
3c812a284cd3b0b3ffd359f6763d66460d8dd424543589802970fb333337758681d300089733959f9dbca4eb9c686ed7633dfe04e4fc015fc6b980f2e0fce454
5052d6c7f2a9172abe9ea5aea194a9f4e9c439640deed332485325ae6f6ff94c2ab84fd23b9b622e490fffedfe31dbd5dcea0f80f13cea2139eabe98941a73e3
a6410f2cb95e2c7f6f545e53b9543af274ec213f273fcf02d55305b2a5f3af74f733aaecc2d10e404cd8afb813be7ccfccff8fe8333f675c0aaf67a1f2ae74b2
5ed9ca96d842d1b6a8a76817db52b2dd36345527f77743449f9b231ef8d848fd52f080815379454cd20b870eef4dc3894226c59375ad56d74fb2d5280ab569f1
1b7f967836a1fb55abbd1195ba6d8f5f5a622ae9549da2783e673186108ccc3b3faf4bc95f96f9d9c6049fff0e5598d08072ccfc8c0843be584df37769aa882f
802a8303caab33a422560afdb894a33e6c7fd1da880883e28ccfb7661b9c9f752164427be06b166975226660f2a512ad61fbf32db42a62fc8c89541133508249
48e702ca839f6a8ba6fa2b9e1337278bfd1013d523a690e572219feab2448bacfad3afe40792b08888cee5a897f3cecf0b7a4605ea4cbbaa588cb2464cc02cba
1486d89fa6c664d052ab2a1f746d56c6d118b112309f877b3de76e9cf979dc6e5aca58130feb497a89581f742e7460929eed5cde15d1aac6ecda88196485e1f3
8db9cfb1bfdc655169cf5085ff39447768c4148cd8a5c083fc549aca1ec856efd697f919b126248b86fa8849cffaeaf7d7eec5f1d4252cba142226603c414748
3ed529f3d3fd37eaa888abc8aba52692834db5e7827321baa74c24aba1258e5821d49e2520836caa98fa1211065de77cbe98340a55c48d308ca520e63455cca7
8ab811291174147301e57385f21da715f19391cb87d024bd98a31e1106bddfe5f386fa8848566755d75579ae727d53a7dbdca4469b329fe45e68d331436d9b6b
e7ad50fa46197ed2d9f71d49cb29125d83cb70f50a75e173517ac2766843d7309b5f8bcc2deb5370a1e3f723af95980fd30c65efd63ba8f2db393ffd1562f2a2
77b53c15780a04986c42e17dfa93a84354e927c96aec2439d5dc2a24fd644aff152e17d84f631bba86305b1dfde6664169b9aba9a14ea9dded1c97c5d9a6a216
42cf20cf619a600c5ed389df49c8f2f1a3d6fe01da69a19a611ee301dd033e49aba5a6a9ae661641f667650bfd978b07ee394082d7b098e9f242b422ee81a8ce
aca67d8269969c9f83a64aec337d6969b97c33ad99d66cc5b8833138ce98e94fe1780018ff3cf7827398549e737d634440b5eb27fbcee4d3a47c33ab3648b85f
a1f252a8de962ebf44332754c63d1d2218795e4deac87231e9289f8af4887bd74ba7c0e7383febcb97bb6fbef5e83a873218691c6a7da5897313c02592663e0d
c7bd9dc7047fd8f8cdb90f15e1052c879d7205fbd028180d84136ca51b86f668defa7672ed781674fd830156baa7b1559d668dfb9b03a32d0af7d0478552ded0
6c8e1db45be04d77daeea9f5f778a1465291f95e9405c5bc0cbe11a7adb1ef767ad983cbfd4ec078d9d516afd9e034b8dbc5b4bbefaea5957ac6d5de02abba17
9c31b508c32b1fce265a93826b59686fdd3ebe11ca06677ea23c1c379eee65e7c569ce34bcfc5d2f544cc2d142429df9fa5fd8ad7bbf9e61c705a328b5f1626b
49921848cee0c93d111ac1751b54b06102f21218976ca4cf68c779812d27cecf0710624bbddf7fcb2d9cbb1f73bffebfb7128a1658c270980ddbf2dfc911a4cd
805366f586a2a1ac247a25c6003fbfe53bd79914252311e3be17a35533be1765cbb6801fdc72bc2b37b3bd7fb7ca0b5d23e9428bff95c322153bb6959be40984
a5a3f8b1281378e9d86f29d08cc4b75ee03418d4c5065ef0751372ac9569b41c6a59ad46a80cdb64f3cecf41535954b25ec1b29b29c07aa122e521817339dc3f
2e150951e19b1f7bc64efa794353228556e2ec6407a711ba93ce3aa775f5206ac6c6939e39664603bac2677961ce8cae776da0ad75974972aa48b9a176b9a9a4
f578e4624782cbe9f3fb39b981c604f2a34fd7e07382c8aea137e6f4d61cfcddbcb7a9e0dde534fba2a31e79928b0d543815dc191a1ae4b96ea9796f85ebb6a1
574cbaf7a82e2e474b71bf69562354aa560b041d83a63a9cfa53dbdbdbd45c3ccddca4c9607149b7fcd4741d57a6198c6267a8d34e58ba65fc2854d97ba1a2e7
58d21bacc031336a3034c861ac2446d79f48e0e9b242e5902aadb314f0308c1a0b387eaf5b52970dca83df92c97a79b78d9d9711fc16881ac3ddd14995582f54
ef4ced09a1a26954199e5212936994228356597f7474575b9274fc5d56d0b67f319c57df65f6bc1aa1d2925590861174b0be24abeaff5ccf9c615b71418bf65e
459cc1dd39c942d91b06dadb54ceb4254d85562a3c8669aa1267e6867129aa992729b6638b7f621afef3d3d329adca79eea9433bcf7466074d853b96bc3862be
d3545e5b9538e2c1e93fbf54c6dfcda54be1a35049f7a21affa39a041d37bbfee5b5cedae3a7d382214dff6e1af9aa6caa5c2dd1330edb1fa3a5cd74df5bb63b
9f9ba7602796d10fe39a7aa7e9e937ae41bb5b467c2a4e5d9ddf6d525aa4a906cfd868980f9e0d7ade9686c111e8c20c727c125d75455339a1c2bbf162e21a73
17063555869acad9fc4dd29296234af60cd256d5e4f9bdf8c4d1f7e9a0a90ac7e1cc71f3226f64e9efa6beb2fde9e15429fa0a38fa63a55c1d785dbaa3477aa8
fc34e8a6dab4ce8aa969e09f3ecf7a1eee899cef17dadd8e323fd3da198387d38b7c9d9df8595c9c0c0b32a75a3f4c8b072a39545ab4bd29bb959565dbae7b11
c0e9c49dd1e92b65164f85adf7baa6a4b56883f4c33c81b276b4b6cf8cf4da46d476b7ed3276b06c83137d447bf81cb3b42eb9f0e4cab5d680429bced993db5d
85874ab462944085b9f95de279c0994224dd056e47d08a9d3d34a3fa593b6ae98387ddc316341ed00e6e274b4070e21ccdbd319ec07ee4cd287c9bbb1dd82148
df327f20fec50a858751482cae430ba2386c1e3b625945a59980ad76348dc216e769d4380d34f4186b585037827b20659b1c356b7af50fc6ddde7b85512f272c
e497ba8ffce9feec85ff1e61e452d0fdd99bd24f293bb9e80fda40b585541c4d476b8ee731e57f284f4241c38d5dda357879f72e05fcb26fdd609be6dd344ed7
d327ef9d279a7ea59ca152785d59a1f4c2c3d169296763e3673d7a2f80be18edfcf1341b94268de242baef89c169c6e5e96ec617d24b4c5d2ade2f83f6bfa3d9
a06c939f03c5c73b3bc46935681a663c185ddb5ef869fe304c9d2eb81486d497a42ceca1aaa9bbc6a213f1f9d2482b8a1a9fb4ad3dff42559f5ff7b639f42d49
0ece80786b8a9a3455535a7205144e7c5bfbeafec8d605bef7b6a2ef5eeab61e1fa25f0a47ed702cbd862c48960ec02e36e8a2a60f694a62eec6391e5a1abae9
3f9f866e2bbcb36375c47f340c7e46f766e9bbd68dfa62df46a3d5e5b8ebe1f1d01eab579c69d71227787fc5a1aee8366c53b6e30bad97f4f322b595f596bdbf
b87bc6bf3fa0556ae91368d62f4deb674d1f654783e1d0b6a2e1aab3ebe44f43a1de0411d49a6d5d590a07e8167dc8d57ac2617f15cc614953adb5dd2d6d0d9b
f9c8ccc53e11713768df71f4ba9174d1456b5538d82517acad6cacd0f803c8169b480e544231473d220cbda6babeb58d7a28df715a113f19b9120c9aa01cf53a
412326f5e7dd95b5fb8b58159464075073a7bfb34b01b69c813a02e3221ac011d791252821b3619ac1a6f25c0acc07dde8823a4a56c41470f7e390cd15935ed8
544fb03da70744d6978849f4c5a4e9d53f38db54e4131294e543f1330a30d46b495f8d58174c786b36974667bcd7716d9ed0883521139b0278503e1565962494
63df76c7d5e4d847ac10a674add966525fcee9c415503fd84f946845fc5dc881729bc39a48c23ff48373caa584f504c6235684ac52a1611a674801b82449d7f5
3a9efe2226d1d7fd5d677419677e92d7135af785c4e935ca54c41454c24373d44f999f2d73358d11115760c4839ccf511f525f62964244187426a91031a49834
6629448421e38f0b619ac8f91971233463c97c98e6ccfa72bf5945fc68ec1973e7bfab7f70d654914836220ca8a9ccbca67a8b3655c46d5092713073f48ce71c
f5520aaab9aeb9900bf615974272fe21dd4a72a13acbe5b79467b79f8c714b2e6321d7d7224f44367ffa1bb63f473702d67bace6f742efd1fa20a9a742e56f09
1cce45c5e700df349fbf18c627e9850494b760ba17d8a714f1735db4daab92458414edc491129683d1d7075d80f96ce2048f0cf15f8c34e70b850fefbbbd9b80
cccfda71b67c94d400a14aeffe88793c827c318c2fd19ac95218d289c96649413be21327189a5de354b080968a6d8981f377d64182274c27b663a1ca368e4b23
a12f2f8ed8654be2643fd942fe4013b4a00064d355c4e0197ab090f108f2c548cba5cccfb1f3b381bda3ac5c32430a6f51095039aa337cd0c213fc8e84aa8587
3cdf640d3c6ac31e299e683ec972ee8123945dfb08a0f6c40893ab604b4906d01a47dc021429624f9d29d11ab5116949a68820e5b0f0c44a78dc11e98ff43c8b
3d79cf8550b95c3fe13753099501d5e9ffb4f3394a3c6261cfd14654c4e712d83755c4edef8ba1adc637dbd9ddd338db54c5f11f76caca5b10aa06f813954788
ce713c3952abb2bb102ae3adb2cc7fa953d464c97f8a043976331227dca26fa26ae23100f5c5c819430368aeec7dd054e548925c929eb82a597dbf06fa6fd36b
2a7fd949a814f49a2af59aaa244645e36b2b3e79278e533183845843e196d639326aaa2f866a92059b6a88fded6853e1cef9a49d4f485c3dfd55de47455ce225
6a8d8f4225c135d8901beb650bed2e5231ed69e84fc031907ad9749aca8a408b3fa4ff48c42dc8d8260deca285e6764a14312d6e98ded6be6ae00aea5040c678
a6986b91e48d25058e961a321a86ed73daac1833c4e59893a1eed80a3f2953ad23eaa726241a8ca48f08f493e79b488df6c548c59e92f466c2341fbabde3f13f
59a87838b18da138256d3738d781383b453f4cb5754d390a061beb9a82fcca3fd93ac6a104bfade664573da92d5c726ecfce357ad4bf165922173a935ef4a6f9
36a437994111ab86e1ac803cd0a5f07d78912023e9ddff053a454d5505f1537da750cd7bf5237e16721fa699297b1f4e7fdfe9773e9675f55f2caa8835411d96
8a49475c0a111121d0be987426a0dcdec5508ff81f41d54bcecf338fba6b95f1ea8a49ff47f6cfb44b21a70cebb76c0b69e48bb81929631588399b6a38fd4960
9980bcdbb2643bd33df9a7c1b0292f9d73b4a5c0131f438fb805f9a2a61af2a9186fbb67f8455dc05a474facafbb4c7f12c44472c43f407e336a34994516929b
91ee591e48cfe8b419657ed67d106faea5cddd512b94f3a3caaa278de26e8c0eae8398cafc04d70a8eee72b6d57ac4249478e0900485698aced60a4406657974
42d5a6779be6225cf027a3580d838d8f298516bf4ee6a8bb06a900475bcdac4dc43474b2e4fc3ce753b967d56aeabfb8b670594b8a85410e926df69052e7c7c7
d094bf498b5251a203f57db75153dd8c9c0b0b7a2e4c73d1f0a885ad8162458dc57b14fe0e50dcb54c21a3cc4015da40603247dd75dd25774b1173186e465664
6c3ef3f332a08cb6067de3b7bff578ae4aef69738db5b5efc8ad670cc50b709fa2f87cd121d2d051c465ac46a1ba199a316a447dbdd7cc79fbeb0d75d741d9d5
285c4fd2bb3bc69a0a77ae12f7ac24b4818e3c09e4586119b2a9364023afa68bec8f815a6c773b18ea5b7ca3a9fff9efcc65ed765db279bb7ad99dd1d2a3e71b
0d3535d636056e7f12020b1fe44920c71e5d4d9b67060714acd5bc393f0639a99eb06a1ae5ce542d15e0c0ea56da750c684a285a9b434684cb70bd17fd054e1e
7536ba275fe19f39251d19e36f862996eafe862c85a65332a5856fe4da9a94225a29daaee538bf4a54356c9250b1e7c2e5ddefc62e885208297843fc25b124fe
76640f2c419beafa4169bded6e67606f772e65b131ca97415b23023b3eacc87dbe0406bfd6b63fff4dc81e9da69a39fddd25f3f38b316b25467c371455d3a441
fdfe22e3404418f2442c90f3ff444d15f147a1d836031eb4fdd59dce7c1d955a6b5fee56e7379ed69a4c67f1d96039000020004944415426fd704e294caa8f9d
d2d17cff0c74ad247441db9fe9fd54ddf3da227f3d3805ba03bd53271898244692d007d003e3871163a83dcb602ea271767eee20253633976672c71986c35161
dd5a934a4442fce3fda4b4243143e173304d161aa651f6e862acd5e9cd161058597e2fbcf890dd4d90aee3ea871f3be29826e6527d0aca57d3cce4a85ff8a928
3baf35bd50c975056bf0566afcc76e338324948036a2dd13e1430d35f8740c97e3d0fb50e986778dfb00342c1d91603c09cf213b2c856946255a5c3018b8cb10
ab92a9aed842a96103a1292f1e1cb628296fb0957c2b5bb68384510686a393b4ded6644037fe2a4124029ef11d94ec7f54f8f10d481fb60ba92f232e85dc70f7
c4566a5349b039e825eac80f176d51076bcfbd664941e594ae9051da43d173b719da09a5535bfd1bb8d21558094ca9f9fce96f88fdd161fd18405afdc780e611
994273651c1f21c08aca339072da3ed3ae902d9d0a15a5feb97521a12a81bbff8942158054c90c0d8910d233f73763a1aa6f3cbe7f377e43ce80e16e753d8f75
eaa2ac78ebf67447bf20d9a3e4bcd478fe78a04112f885d65549dfa6a8d07e7751a8828046c403b0708ffa58a844681adc9dc0a14c71d7baed04e8bb8fa45e53
d92107d969aa03292710345e8d9a2a6e7f81c816f3a906e727393e5f9cf80da7bfd5647e3a70287247247bcbf94fb8935ce56d2a3ce7f5deced41bea9cbaa16c
34c957be7742f5e8852ad62dcfc02c52090d9a4ac38e537aa4e578fa26fbe2655da73f328f1450ab9d1baea97f792dcdb69c83aeb6b071711ec5c835b1875f02
ed73942db1dbbcb4c025fb4d6c9372f7cfca6e7d5d48327213cc6d7fa37e7f02765550c787fba34a5b122a8abadc14984cfb5b393ec2434b74a6be5a909fc234
c4494239d7a4fcfa205078a6f2df0ad7452b0f6acdb6ea0c25838f9ddd878c6f752fd4ea902778fa2b665ebdb34db59e2abf2950bdfb5d9e7619892497a0b810
f39d497f48b7f7c4f5e4ba0338c430f30234db51b7f790ed6fdd4215b11e9862294be1876c7f11eb019e7e9a409742d315d6fd5d59c40375c40cf25211414788
4bc1f6999f8e0a2a3261465c850697423453f63ec4fef620ac82a40559e86046b188bf1079bdc4a33e94bdf3d4354f6ea8f4bda767bcdf3c237e1052bfad5dcf
64bc747ebe79f1f379b6d7bbbd47fcd530a9789cefa2356a23628cf46ed29d17a798541b31859c33093a884b81d2891fe89cd8b25fd14e8fb80e9510ddf09cf3
f375bcfdb9923f1dabe122e6609a64a19874d054a724bdea14296c237753c414d423cb81cf0594074d65c8840268b7288135a9ad95956845ac059a083a660df5
e1f4c74077351845b945ee10a863fa63c41472ef52b8be919db73f45d979ec359b661f88883821b74b39ea4398a6ee9e0c2aa926352ad7e9fda618f1d3908687
69569df919b122983addcf079463ea4bc48d503ef56546534526bd881b6172fe384fcf786e777bc76945fc6468ce1c47ded53ff8913cea117f14bd8320844aa8
2eb814a8ae5a2ef96da164bc002fb5f2545ed14c5cde8a64596aedd7d4d95762e4ec6da7a309827ff4ec6a9aa1119fae7b30f4b17c5886fa56df714a650262fa
f3950c246893c1f36fb8bc348bf2c0cd4a03a487b9e2a6b3a19e3ae92bfa3630811373e88b32874f99fab82a8457ea8bdc63661cebbc32e644a187a7ab929f9e
84edd918e696610eda35f4baa201823933c37d8cef1954835333735f791c42cfb803838f9e59fc727046d85cecefd9be9eff87e46933f286f1a96e67214d1f1f
bea8a2878fb4d3957baf3e0a55cfd6f869a13a31139dae9737c6e5957fc657df82c061c2e79f5d320898d044024579523c485395a319816749b99e01538cabcf
499ec4ac8bb5fb7007df8af156716556c5471bd2be138a5b51f61c6a9fbdde785d7e3fa1d297bd0ed3d0d68719ed64731afdb289640b3bfa6145c44d9d66af57
2f3b5c526ff60c441ba740bd0c5374488eac0ac70094e3decaeaae40ddb9516edbfcadc6a3787216d889c1b8a261f8b1fa97ba2b48921b65bad7a137a58b141b
a18db888d820367011d8206da48b489b526fda17696f46ffcb4455aa6a8f3de3f82766e293c396bb81cc970f9424592ac0dad48b9df2b8b43d27dde4b84fa87a
4d7c6e5b13100b968d166e10fef0543d55c51073d5f3975137c2b1eeb37dd6cf73f840f72b7af7d356a4f805c646d1849a682aaf7a98ba40a31a5edaefc5e7fb
3b0db6ee85d4dff9db24b4f978b9f0a85f807b9240fa27ed2bb4ff46d6b8af14f7c4dfe71e3ac2c6df54918ff4e270ec33815bbfedef071ba56fbfd9cbb335c7
15c9fccf153e9bf87d8dbd8fa9fcbb113fee5e411bc9fe7a503d3c55d9b0e2b358f7f3e1f4a7d7c186e26d7ecab1de42c5a09e62467a0e36a15c36159d930686
3f35eac82777485f51a449c8bbf32bd542f9405b8c0cb41bdea6441b31355343defe2c44cdfb03252d46eab256dc608f958f41356318c401f37997927a0845d7
58786629823b5fc500a22abcf3dbfa596c0e1a9fe6030255338b51ede57b476255822c7aa03742950d3eb4a79874246b50d50412d884a49e439851bcc3b6ec1e
036dcf4ae832286c20a3f6bd7b7e0d9ca46da2f151b678f47dacd57b2b9af89a2d2a2f03500cad84cb4eacfb3d5e9effc4117941dbeb4e281b60ad6bc1f52949
b34eda82507fcd36e5bf1f53ddf671e849d630f5bf7bb0f031a8be9d9ba679facfed292a8ba0f446736c1499ccc36441e7174fcf6fa5f2b34d0da77bc0c3fb2a
6eeb20ca168b65cfce48217182c13d6d2c6568047ebf6de28a5528ed889476f34566d9f353df73c0df448b4e9d7682f1b4edf5788fa9bef3748e65dc83b7c830
960f5313598b98a28ec28bca98ea74278ff69f4f7bc7dd3b95f5df6b6a12b30c34f4b6738d988a4b28edb534faa5dfe8ffc72e93861ac29a048f766e01976885
95b9e215dcbc6c36098ef48fae0541dc46e366814503fdf814a0a03d35b657da37e14bc37cece2bcffecfaf2d9df734cf51bd7137fe74fafbb1f0450460e8782
2b7a6411c1d0a07ad9cb9c1af214d77d9cbfc274b08dec37ca9efab09d7680059b44e1286ca63a1ecf7df2c93beaba1f02f55cbe1d744c15749cf244832a3ea2
6bba963326224f965d88f905c60cbf145a81f66b86ff09f8c9f7f9f1184fcfed5f498945ff5191c4d8fb8473aeeac37d50b17e05d1e1c9b7d0af6319549a0cc1
3fb4c57278f81f257ca41ff83d4b7b789a439a163144f7d553d1a04ca83a9483cffdb3273d06955129fbafc7b07842fdcb40fdf3a7832afdc25dadaf699e3f19
54abd6463ea1a497940762238b50b60636c5537d0daa1772110ffb376bacac17a023dfd7c36e0cac198da85343d96178305689ed10445df743a0ce9ea2bf2ff8
567865a2919cccd3a09a9f07c59753220043d76a020cc79e2a6050f55fde7d1cced5e3d741155e3c150dea195df987b3ba968ff6b9587de8ff9a961262bf6fb2
4c53373d22340a4f4fc51194e38a78605f3dd539c96ef69c52a97dcf43944f2d8fcfab3fda52901afe59762cf7d3e7be0d7fe78b0f0a81dc87a806fb7dff2ee4
feeb373f87d7b5dc8f836a2695f67a56a1d5df469e2a89a5ca346ff578a0e8f62a26331bf5f19b1b8931983e266634f09e9f138dc628d60b1f05d21bf67b4e29
4ab17234fcc553857e299e62bb839f31306ebb74f4ff47184aab3f4435c58c1e93d0bb7147d14a30347e7923a737895b429814247e1bedc3a9c2696e76fdd341
758c86bb34d080e76bd3338df447a4ee301bd9f1aebfd9f74ffdc5530dc50c8a80e80b74680038f7488186f8e1a926e12ba651216eb42b225944261f1cb10d4f
29c85406258c2244f86f9ced5d5a5de2c600523fec97483d165aaefbcfaed3536921b3a6e7b70afc28ecdbcfc7d4a65e069c233fb7ded92c4935b8f8549db9a0
cf5674ef7bab72c080818fc1fa6b5b8474ea29503fc4e8984ecb459b439d3e84c452a5018d0d261d68502406ce0f413c05ead170cc8c897083bf70cf0b164b33
c95e212616cd43a8ca52a815e3223f19f24ed3d436153336d0503f05eaad8f2a7ea3909b96238bb74ef45920883b3dcd2771b8c53b0d133bffe327ac2cd263be
f88418e8df84f4a139c7ff8d629f2dddf52bff7c3efa4a33fc2edbe8e0435ae5136e99464b75af215bdf95e5168c42fd806ebcd1ac88a7ed53d45812d110cd4f
c13f02f5200c34a50a6c908ad38fcc652df2494c7f4d857baed5fe62fa7ba414d6410909b7b175e2ea7e5abf5c5f321cbc6c377736350bdcac78f666142a2dfb
a7126ff11b1e41c4ae1f0cbc7fff2266078cead44f890247290c5ac5d3d7adafe10fa2bf769fac226e1ca252f4d6a353d7fd0338b43a0dde300abf9350793a77
9078818bfa6678f57d626ce136ef66b897134b36c37b824f8a48b6253474dfb5b8a6a7cd7687162e583cd1601f838aa3e807283211b1f1477ccdba0ceaa9bd7b
2d2ba44e35e730de95a80736b8f20ffd0431532824ee6c70fb853390b112961c853f076139624cbf935192679e41c9f3618c70884b21f5ab738934dacf67e4c7
eb7cf3f3df7f9feaf6db070ea512c64cbfbb3afdafafb924aefe61a9bf7ffcd31957fc7faef0971f28ff87afbef442fdde27c8ef16deba34fcdf3a3ce65ddcc6
41fecea1027fe3824ffe219ff9af5cf92f07d5e3d5977f7f273df1bb8738de8e25b8f89fdbf7cf887f7e7bc949fc47ef80a7bfefa9fe7d7cc332fedef6ffdb3a
718b699cfed7be98bf8dfff8fb6adfe765f8cd4f3efe99ebafdfa77aacfe8c4f7df23ea4bce7b8ce297cbadc6f2e7fe4f888cafb340dceef218eb7e43e63481f
b9ff965dfa486e1b512dc4db9cfd1e3dcae3670ab8a52de06fead7c9872dfbdb9002b7efd396c3b026bf6594e7b42dd96f3ecd43c8bbcbc3866a7d58e694df5d
749fc97d44b4f7699b5cde631ea7e4f714a60ded811a3a3e7c8eef21cd0bca93038cb8fbb0aca987eee5e6dd470af13da77589e133e479ce6ecf69dc5cdc5c58
6e216f297a8691c2bb4feb10d2eed3b07aa8c9c32da6d29e08095b4cdb9cd3dee761005bceaf338426973726246c2edd461777549ba2dfb31f360f13e242e529
05fcbdad3d10079002b4619ca3fbe8d3c0303c44a5f906e0d9cf13b195d715d6c0da99ca819109011be136a508b6d60168925fd710d03e6d4c48de72dca83d70
0d8e3a75d8427e4ffd6d23ddcebf87b8956e5ce7dcefd9adf80984ac1b0a027a23fab574e33a25f46d5a6e658474946a5ef75f0caac7ae2ff7ab5746cd1715ad
12ab686c4fbbc6dc9f32355672e84cbb622da6f918f9846a37a16c5f5793b2ca29b9345a2d95f2545e57ded227778df5b51c95b2495603aa414cd42daa55deb4
d45ef7b59c85ea7b25a97c928a600cb2ee7587f256472516d1e95ed583d2cdadbade94ee965a1d3062b9e9584bc0687c75c5cd4c6f80d1889b54ce76622635aa
5a9532588c8d90bf5c205fa9a152bd6de83bb7d657f50835bebe929aa1aa23d00c5206cbf24de46ada130c98f1569398f5aa623903a1b70413a4296adfe286f2
6ebc30ccb1e672664b015f676255af4aabe95a3badbab9aec88c9560a88ad4b85a0e2d684043541b414a51637b260d6cbd11e95355dd94ed082de4138d866ec6
84ba5a802f2a94f70a30a853c07d36075b0ae5ca80f45599e6f64634aaa9a05d0415d413f7cd65eaa0e64dddc748da3124fe8ea7ba5f005a9bce2845c7c4f7aa
e9857de4362ad8aeabe5aa9569eb446705a93aa2bc073465ea59b65669797bd38deeea1e4b7ba32a47bb23d70d0a6a54b3cac8b1d6e048c6cae047aa867245db
d3f80abfb072ba1a5079196a2ac712de88a414c1f00afd64de56e06bcddb88f6a655a43f28e9e8584349ed2fa3eca0b91ed15e77320386ed4a7be06bac6418ba
1ec90c08ae0c50a3bc17a9027746448501a5e5245159558364187d31f3408b6aa001bfd6d7e5a2c90cd2ef4ded4b35db6a394818a52febc5b4dc106d5a49ed61
0608aefb0aea75bd5c59beaf0c50b3357d85e796acc52fec15bd01d4f55a939a2a53b95489c510696fb3d41d489d01533715758a6b9934c024f9f315d54c3500
2dd4a037606d453060a66df43529436cac15ca5b958046173333772ab4a1334c05b65b731f23f054cbaf06d51f5f07d5489f1b2112769ce40f0bddee19794319
14fa0457d08954e2bca5910bec506e94a1885c30e522860aacc874d3dc7e2939955bd9e92f4de7adc81f8f5b69df8f7c73238b611896db8f7d51134eb4289859
0c993197dd99c7822616fde98439e6624d5193a7f3a6b9fdad883960e4a5c0b8b11abd3fd00c85ada9b0110bcc27369602632830fdc8f26351c3e589c51c66f4
f359ade81f0a69933b0b4431a3d070a039f41f685d696f96b3bc14ace96c8f31383dd42ca9dcfa676bf3f030f37ec59d3e3afdf9a0dabe0e2a16a4d109b4ba58
cad7e6efb5e928242e3740476bb1a17c5975856a5df82ce53af1494b74a3af884da51c55bd29e5e570671243ed21aab75ccd1df2cb20a00436c1980b0c484c45
8d2d626c78c098cacd153e8e6a249fceaf3db63e1d8afc538d2dfac9daa5c0a486f4918079b4e770f3d1feb0b63ff41fd6ba0263fc0af31073d0a04f31b4c700
aac5c31ac726eafb0ead85ada3da21ffa876583b1752ee669ca4ce67a7ad8ff677527b3651e7173620d11f3012ff648f83b7a7d25be3a3d3ec3d41f51bd35f53
de699b5e9ecde242eeb9467d7aaaa37c0ccf9e4a2f8f67e778e80e87e5ca6877e7b33bf8e767e778f6d8059467772dcfd6b10ffce1c90e4fc7308e67b73c744b
7e7198eb43ccab433d5c447e7201be38acd26daea809a7c39c0e87e64f4f77542bfa5f61cce9071845cc7294c7d39a5eb8e5b4d63f3b34379ceefd60bba8b9b3
31fce0b71fa48a228ddb1f0ef35473b43f1c1ec3c0343b3f485d42515360fae2a9d2e9f769a428ce03fdda533d520a72dfe96d47a1e47cd51d471186c203fa58
e2fee18fa428828315dbf1f4ee280a301cac607a1f6a6d2998b9472946dd43338e99de7a8a79502e4bb045514223498dafcaf4ad38265a2a0bfd72a85159d589
83210e365c8d4580ae873714583954080994ca3cfd57549e280ab0724468d6901ad6ff808198abe6608bd4744672b08260e8cd02750976380aa19805a1db85a2
0cadc81a8e79d8cc125ad50da981b50463bed852ce518a2b310f0cb8ce30bad3f54d324cd0a4b44130d41369bab555cfe557846e64a67b6336301b1fa12189d1
2dacad2d50c35a229de50326690b8cb61aa11fa42174036a36a36f9814c45c86423b228de25d70c26c6205c3fb4b398486ada932856608ed24cbefc9e88efb9e
6072a720e6b2d50d9da6f9331bad9779f9f5ea6f7bca38a498029e4d6f76d52c990e5f367ea1db3d50d7bb52bb0966af9aa11cce3ca6526dead4aeb3c16262d7
d1a2fd908d40ed29d1dbeb262c28b7360d4d55cad51435d4a8434d18da1ad2d244f2a15feac5428deac6640b0c12a32106ed9dddab52ad26315470cbacc62d16
e5de0cdda1a6659875bb70b94e03e133796c80c6c18c6e889ad02cfe80d149aa7658b3cb6ed4d9ee7553d498309982c69299c057ed3651fbb9e78239125a9dc7
8e691a94443590d6cdd45eaa255035eb26e0b326dcdac2a6b423c3e80e520143e19617669b489f0be953b0c58c835494334d8496d48c85cda5887153291f5ac9
6a14a9e14ee19df0749c81cf68377735ab011bde90b6b1589b67b427523560807415438adb112afd72fae3d789e761a23710a7711a31326f6ac13ad238ccca4e
fb1eb3ea3d17acd646cd6aa4f28c0861107db43d6e0ed5dbb9c1c255774333a1dc78dd0b12433784205eb763d3a3a35036418289c6b70356ad98e85704546838
2204c19a7b807e2c94935adaa1b1ded02960ded0be5924060beceea68616d59606ebeda0099f0300420318a4bdf15800e30fe453c1d8310c2acfba5d54c27853
ab9a9a99603a3b63718d786564986a263158e7b3a1da53456b8a99bd890e5187076a36024374058845d9a39cac9910a900e602208eac59f107ed9398a006e533
da0792ef018eb99e1866372adb330c2e581070010671cd30406b67493ec3f480d1033573bd828d96abf50cc33b046183c8d0ca307bdbcce01aa4a389206de85b
9809d4d0ef2195b9065bde3a74a3a5b7c52006ed3b5663986bfcc5f8f8d8bfebe9362c9f7f1953d1551f43d04aa79ce245ad13ba33f0930f4fa5a2aa739d15a6
3b83024c2998284522cfdea9843f984782f275c074d618acf40de619b4a709a88e15fbf1a0529529c50045ec80e9942fcc40f0fcf85d53a72aa920e1f783ca55
47f2518ed10a6d3c2b078088aaf250931489817eab2186ca4d8b461e6254c69f448b66b4e7c9996002357e093fde417a90b1ea68a2e5b537a61b4a813412f328
50cbaca2f4340f410dacd1965ed16d2cb1416b6f608f50c5587ac0001b907f6cdbdbb1fc9e820580a82845017c4ef22d92184c87986c74cb5c47e06b350c6be8
8568b216f8cbda9fb90ed268e921a6b3dc1e3418329a6775709d481a6845a7755460a8ef2893023cc4b56ea1c2d5ae6e4d43110b93960986415b8d5acc35da53
200069443aac55d490fab665aed15b1472efd5f1d9da5fa514f8d2e5058b849978b9de939fba574fe705aaf1adc273ad862b650d39ddc7b796b28a704fb85d28
2b395d2b6f5b31c89a929b28b74e493c50d6d5d7015c2d1525e8d47291be642d4d5f577473eab228ceb395e467c91a52024e733aceab9acae75a72d6f0edd0af
e800d61ba7f32879daf435df06041f947cad94e36a78d4296b098f505d568c8c89b2a2985b24575b29ab59570b271f2f78eedbe50d5dae29071b6106c36c489b
f1946e444155a31a5b53b28e9eb38e241f6c68e56445e588f1487e319a73ac8031b664cd656c0dac2133d45ad5c55adb7be0170dd89023b149c94f3895b7ea48
7ea24030cc5a525672bed4736728874b6ccea221189443e5e4261e2362c3a8b1ae38395b489db96f2f60437b49196535d524bf592a1998cd16f82aea3bca8152
f985bf959c1e03e62f62aae74b55c31b67055d09f66279d19eafff6bef6af6235599fe5c8ed9c41b496fda6cc28d840dba696f4437c2066f44379a4d7223c966
78ab0a54cc476b9f9377e6499ffacf6fd2dd22504051d407e21d30adbcb507744ee25c02b63f565e43250d1aa73c6ab830231e53c80ff32fa574523dd1dd27ee
41b5459dcf7b1de52329ea458aaa2f1403e58a03ba034191ef8ee4870b6434643690ce09e567e855449df23e78250f640f1c40d4a85b7d0b23911f3ad4e73121
382f49d1460d1bc800017563bc9faf224599dc7d05b91bc9abf82853435ec95b7b07d4de1f833d71226a1e914c7d10f78fe8bc04f9e17dbc9557a4d1ab798ff6
c67c9b200dda93411e6589bd4166c50d9a3df29ee4daa4211f26b3c59b1d24e77befc3a56abcd9e03dce2934f3113a5da72880bdd983ce4dea2d74451b1814d0
c7bb143dda29992d8fd49bd01be23ebfc355e95e1d3b343bee8fa783c0db6aafa82319c5919ca71d3443ae39658fa40a302b779db7e5a77d4f6ab15e832f61b2
5e831fce2c2e056f960e21dd9bb5f5e21200b3964cfa6af115ccee3c4a87ce778b57d2bb1c4ec362cb071febcab341d580f5dbcfb705cf47707034dea550f633
99ba88bd86a55d3c1b21dd5333f90aecaab56eb6b5076fa44f3ed2e0e3b5b3c96f7cfedea757de65d12c2e01c8283eb43698fcc1f9a9169744e97bebb4943fb9
8283abd7d7d6785f41e46009cd0c2e85dcf726791e722a06ca8ffc30c1e3dc2cbdb597a99ededf0a66d841d23a0193aa03c327595e527323941247972a092b2f
3e1d65406ae3d6f9f4b190e20eac31b0625277a31498b53da83ab81ca1a4035548a0119fd5120c8fa35425d8200721f3c7d4407e10c205682d267b2c953c407e
0919918cf23ec3fcadaf0d16904241fe14541c01e942c06c6a21bff1e9504c23a1fee3432de41dde963f6406549d06d37d35503e184d35dd2660554ef501c8bc
3f1a6ac67d29e9b65a881b281fc83cb85b25a0b5f83001247448069029d19a13f83804520bb7759e0ca80d8b39818e08266a8d64de09593c606fc207b5c61ca0
7c955a5c7521fda824d067eec038c6dec2fa1fb0372c519bc294560518a57712c8382219c3011a0dd564f76041df4033247ea4984ef577d868a0f690354a8251
7d5f29e57b139b81bd9122b53d2ec7ea6600610d3a9bbb15b0dc650606a556908ea3f1d00818bbf4a1c0f454aa7a2f533dbf672a1d245519b9fb26e7678808c8
45c404afe329c886c55db70e4c84c005f9d1e6888258e6ee34f796308e5dcdad901ea6781c9858b9f31a2fa9e4e2ee0b73db46535c4c024dfa04b1e42f568109
ea062f57f52a9a542e5ecd75d0aa8dc4bb98a245517ae8d4c637a38c2491975441eed7ed524ce8cde0caad62811aa5876286f5a0e8f7922a2404b95af9d13ab5
8b5cae635770f0b19eba7950f632d5ebfb5ba920198ee06b7dfc63ba3bc1adfe141168e68880f11f758817c9381d8bc17428aa56e4fcaf168fbff681032c06e4
70297c7c23041efc20281f58c084104609810db99011e233213e12220ae5528cf66118e36f0bd51421bf0f8c60b4c62471986622339051cd818bd61713f2ab55
7c630ae30c73b4aa0961169f1f6b0badc16aec4c2d86818cef2ded8bc16eb47335d2f322466b427aa036c4c64428269039f88f6e8e1645d1a02836667d6c0c5a
54cb99ccdea75b9f7ef2e953a7ff73493588384c53d1dc9d74aa6852844913b480109b148b080881091d051e44ac8ce8269e7b2130d14421d830377d7f165108
75d6a9c4228202192104ab1632d6ca4c1d913147a3a835792ca9a280732f620db1d61fc810b18669a36a424079152d0a92284492cb55ba5a3a3d04ad4a2f6228
7eb25a3e82ce552cebc224897cba8e3444350594496e0732a2a095f241273fa87d1187692649b590b197a93e28eabd8805b65f773e51d4db2216e8a7a81b55bc
3d2014d3f886050d3804dce3e5ad5b047a585e45cc34a11ba375290caa5e7563d88520da25fdb412f83e212c7f816965d48c766974603a15573329f2d12abcb2
07c2621b98462c9b194233cc8ae99aa59af6142bda6134cbc55eb0abd85e50069a65955f2bea61310fcb9b8896b795321042a0753b1763bda21e7a2bb436dc76
89a2fe0a5a9e5452a2d249ffeb5c159d921a54de0e74b3123ec4b495bcb052e893ccb5c07401e92568e6bd9025dc662a91839e6d73551948af31a3ac4f12cfd8
2b20c194326f84b2b5c8e14a9d63b4439670a555aa01cd550b7582cadb5c3646a8fa24f216d24165ee40932e95d012330a2a5f49b8ed045734a4e34705f56318
48c9ae9239e8e9ba1227a3445341c5548db44a14906e2bd96069b5a8ad904d819128a5cb1ca8c5f887eca4a86a2806ba0128aa0baa145b60367aef00000d7849
4441546ba5c2048b9d026414aa82deb0b9c82db4ab94720015b8805b05769a30952aa0512687de520afbc7f726e49705500cf4c3878462f21eeaaf6485cd806a
06300f1a85bd01bd294cae4a0d19739563c2498a5e88cab7a6d1221fa899d254926e83d130d02115768ac2d66aa81f4702060d9b090604753a5425a853a0c613
8cb48666c030ea529e0ca4856104e30a48aca037fb13d0377188445ff5b913fb7efdacc752183f01bf3e3e41a084c4771e8104a323abe817236014dc1b9bf8f5
f1b921346af02172a56e253ef89a7dbd78fef7d01eb83736f1ebe3e39ca4819dfc3925c87215776384827b6313bf3e3e79474c158e42c26736cb6befc651fbe7
0fbb0e4ffcee3a679f5caf7b3aa164d42d2808e3e05f8148673bfc555a7f047ebd7cb8444c35e0761745cfc25fbba4a2d316333cf424a1a31f1395247d8ee7ff
24053d5a3c4017a0df0fd8ec78ce9266047845dd7446eba1d5bad7da33159e8c92f8d365f1b0cd4177c6eac16adb6a3b686dbab63306720c90a5ebe0a7ede1a2
d566e8a098b6b3b6873c90232eda622190a83bb8ac0d5c36bdfe7b4507c337cbb45149794ca1e8a45647095c95a944260fb8c74ce366d1314b449725cf699247
92eaea3ae492a2cf3dc3ef99ea5d90664a54f42c7c954c47a75e19c23937e1ec9470f69c0c875dc21fef624cb03f244c2fdc6d28fc498f21e37f19e7ce73f1d6
5f929801fed9beb3fd8aa950a7aa13f76a06dd02fb029302f7761627005cb0c0b1c8c25d8753c25ae47128c21a637102c07560fc61291af9dcd2b4a1e9d3c25c
e9bbbf57743888209c90164ec904cb7762aa014361251e42ec141df22cc329910157d721fb8bcece9e90f2ebcd33557469f92112b40daf5d510f47cf8493c385
9c5f3660fc09b0b8e0e5303371e35b77f51ae63ec8b3c7997997c2e74cf5ec9f4cbef66ec4e56f94434a4c95a965f9c3873a137f34ad5ffe4438799ba1cebe74
6d5afea24b305b15dace8f74ecda70f5cecf0296bc2328e3f0911d9ea5a0b03970921cf0e84d7c243b23454000971de0d7e19bcf99fa89f87060ff0a93a21e5d
42358c5e58408f3bc44fbd5f29c6038964dc4d158ecb0e874427f49289aac4203d1e476f862cb9d73fedc0b5ff0fa8f3cb1fb9fdae9e6f18df0b717ef923670d
3315e322884bad3f06630bf2bc4ef5d1fa6330b620cf4baa8f8a3a83b1850d9702059499a918176143516749c5b81c1b2e8585a9c6c3852f6060fc67a1ceeb54
d1f257ed7d3333e3bf0ef1fecd5a2bac9c9f0d731563173602ca2b9dea7c4887c1085067df3ab3f653bd25377f8022c68fc786477dbd4b81cd40c61e6cb81456
01e512df02ca606c419cd7a9e2d8df983cfc098a183f1e1b2e8548a7d2c90def3f63ecc1613e5bf83344d6df537a649e62ecc286a2ceb13fc6e510e75d0a1cfb
635c8e0de7276f27665c8e8de58f2515e3726c78d459a7625c8e4b627f0cc62e6cec5260a6625c8e8d30cdb2fc8d8a37be30f641ee76291467d98fc198714140
394bd8a5ced8838d47b456fba9b2f91da40cc619c80b1e7b1f93ec0f50c4f8f1d8d8a5b0b6fed80c64ecc186a2be92543af9fa85230cc60c75de4f15eb54e3e1
f8f1ad220cc6076c3c4c1aeffc7c64eb8fb10b1b67294492eac47e2ac63e6cc4fe1649358aeacf50c4f8f1e04d7a8c6fc7869f8a0f3d635c8e8d93f478e727e3
726cf8a95852312e079fa4c7f876f0999f8c6fc77e3f1583b113e2ec7696d84fc5c733327662e3699ae828a196de4ec6606c62f71e75e4aac73f4111e3c7435e
f034cd29bc5091c1380b75def9b97629b0c6ced8838d30cdea78c6dff4de4806630317e854aee033af197b70814ec5bb8919fbb0dff9c9cfd2307662e320d948
523df06e62c63eecdf4f95f1fb1e18fbb05ba77ad5fc280d631f369ea659bff181c1d8838d279479e727e372f01e75c6b763639742fc302983b10f2ca918df8e
fd7e2a066327360ee8589dfac260ecc2c6f2c7928a71398ec9b92312d8a5c0f807d8d0a9d8f9c9b81c1bbb14c2f227a49252e4f0a1a4c21f023ef187504a0805
297411be4afc94fe57f82af08fa48c9440d9c4f4878bbebea2d3f3922ab814188c8b70d6fae3dd2e8cef86df4ecc607c237ef17617c677c3bb14188c6f04eb54
8c6f074b2ac6b7c3c7fe188c6fc42f3e3d88f1ddf8f56ab5359d31daf4763056f75a77ba375aeb1eaeb7bab55a0fbad5f877d0b6b3c6d81ebef6b6d59dc19f74
15f2c18fce5ac8653113e4ecb9e8ab2efa6ba67afedbae59c64fc5d74cf5fbdd9daa3743a7db44f4ad2ee7aba203fe6ce5c5f50a6069dbeb0728d7282cbdabb3
39312bac690ef0a5cef795f60084d94e0b9845309fc474f9580cd9b96c40c60013b6330fc7d2d83a9deb3fc144c45f99ade65b0b2c5af7f36fa5f7d1f6e36161
741f7401a20c84d6a9c3b1b7ddd91c6796bff836d509f1eaac71eee046ddb9b96f4bbab93e5b47d69dd6178e9d906f6eec9e1cd03bba2249b433e3524aeba00a
9726c27d42fc6128de15afeb6c74af5040e35c07127d62f1d439e396a13f76efc83c18259fdc685e9c18dd60dc3025f4ce40fd076cddc244b973ad8ea2a1feeb
d19e6ffb1500c7054602bad88e4e3b9b4c6dff3ac7974cf5b4be0d071e87bbc4f2ac3b86846a6c5deb9af364592756bfb134bc5602538d0e733b03ffc7391d86
52b90a9a623e29ad77ea4369357066e6aa75632be88e6aa614abfc9871806b8deb5c8b6d3b4c09408904b24617f124ddfefc9ea99262abf13f1e3010301a5602
3b6530d6ff8aa92249958eafb0181897c8c6e5589e7632a30d14b722af5d6da54a32098c732b058989a31034404ad030de8dbf8f519d1a79cc38a92af8e2f098
be0c07b576ea407b2b1e468b83daaada8de2063250a919d687d96fc7e778511b50dcd5aeb93fba5368ec1d6dc600f1932437c8164ae69e8cd734ca483c062d51
b9e7f9da898c76766463477313695b2415fcba93c66540449602350efac0b7e6f2c5ff47012595721d74489ab9ee40efd356e7737cc954e372d348d3ddba0c46
e9110a858e4cfd79550a9788062b861f96ce9b1d93e9f4593a2ac6ebfb4fabd2322aadf463d900d10287be74a53fb0a8575e40841a0e8e4af5fb74882b5edcc2
550d7d8742c6669e41fed8db2efc8ac81823f13b50c60e38514e5d91f9adb0b9401ef705ad245549b21a57d9924eab6ce87aeb3614b71f0e5752472867065c38
1a97ba6223c7974cb5587fa5d776f029c124ec978938b5c22a4af782b33849a5c21da56f4a68771aa18893ef79b52c12cacf7e7c3a5a4ea54b67caae5e942a10
32bd4a44ed5a9078fa859637e00d9193f04dd432d6d933a95d05093c7feed12c38805c902bd9d38b92b898aec9907e69ed0319c8b28b76a4a8fec4337bdc5548
77e746f74692cacbbdc3ebd321b962787e1870a6525f8f6e4cf7e4f88ca97e47f7d04747922ac1c11ba335b5c681c229ddb8133d475f2441150a25c56524387c
34ea063420fa52c17843f6da966e312af134e40c2e0f49323d9c9ff8cdcdef4aab3d7f37ae7cf5865ab6a4c1378d02ab4b3ec918142c14986aba3d923819fd92
b1a5e0251568964e45a4241f75b52b034e36182050707b3265dce6decdaf99ea25ba873e4c60aa66a5af822caa7def835e6cfda210e6f7e74cd5fb554f4fa309
bc881a79d5d6b154cdd0faf212a93dc7548d2f0d38f3b99c3246740341f673a632136f179315e1229dde3335587c91a580eb1e529338f19ea9ae5aabc261019d
4ab961a4def8374cb528eacd34a91381ab55422352d05d02c7f384eb844d52958da390c063c13877432e83aa9e2da323fc1204d35bd2aa5178a64ab3dcd55ea7
a25b35dca668b5d383c08dd411536593ce0336c42b317009cb63588372d7f8625a5cfed0b25bec956c59ce82bad43aa56efc15e0ae1365249157fbbe9cdd0c58
c4ad42b9f941523dc7dc787dc0f122ebcf1cbcfaaadc868b6e0f5379730d440c7eaff06f17f9084a1c84b04e90ce5ece926a66a4e37364459d68d4f4b466a04e
95e1c0cfeb10a9860a18c7fba94c37911a46327d1b6fe7d214a942d5a22c956ef298bec2608b5852652f118f54745f64bb357346ac5fa0ea27dfbb14686a3919
33d5e1f9e9ca1575f25369ea1067154870b5219abf66aa31be0b7f68eac5c6fba916d5340fce31baaf249dcb914ba0ea47940d987574b16a3760eed9db5453a6
1ecfd49eab6bfc651c53d79ea0840760311a492cad778f51691dae53a55f3ad13a1ce61637c0bdaf4e8f3a9933c66418fcd5d2f420ce5c8844aeaf66ce5abaca
13bf482af7166ab96a78ebaf433fd5c1e95899f832c7974cf516dd95be8e897aa6752473cf46bf2c9a69f6e4c64718109aae3dbaa75d0e24d8b73149dd68dc78
f46a535cdad373227e7b5fa7d4604c740fd28de322152057e79e8fe84c009639ba513b30b0403d1a9161168942388ebf93eccdbd62fd2316b3a8fbaf60a7c1c2
eab47d7923ce3bad333e25f2c593f1e27abd6484fa0737de6550df8b9e6cc2dc11e3c2f2a7496feb617dcd93cfbdfe5705effc1c7cd0a2a351fac74cb50a2837
ae41250abf66fdcaa32048b372e11adc94811e721c69e983341ca88778be2774a16e4269feed2432c986b7681129275736a9d392dc0558075e8c142a8f476fee
06857d15322a9f7161559e1d1ede67cc5c55bbc5b515099c92ac67efee9a56ccce5bd4968c1597786510f87e4cae1c5e6487ad07e6df31d5ff5c67f153883f05
5f33d5eb76e63f8a938b4d31c6ff30be66aaf75b5ffe368c6351f543f035533d6d6766303ec3d74cf5f6651283f1cfc00f3e30be1dff0772cac9d2c47cac3600
00000049454e44ae426082}}}}}

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que CodeView souligne l'instruction qui }{\rtlch \ltrch\i\loch
va \u234\'eatre}{\loch
 ex\u233\'e9cut\u233\'e9e et non celle qui }{\rtlch \ltrch\i\loch
vient d'\u234\'eatre }{\loch
ex\u233\'e9cut\u233\'e9e (dans le code ci-dessus, il s'agit de }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
mov ax, dseg}{\loch
). Essayez la commande trace en pressant la touche F10 trois fois. Ceci devrait laisser l'instruction }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
inc I}{\loch
 en \u233\'e9vidence. Tracez tout au long de la boucle et notez tous les changements qui se produisent apr\u232\'e8s chaque it\u233\'e9ration (note : souvenez-vous que jb=jc, donc assurez-vous de noter aussi la valeur du drapeau de retenue apr\u232\'e8s chaque it\u233\'e9ration}{\rtlch \ltrch\lang3084\loch
)}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20\ab0 \ltrch\cf0\fs21\lang3084\b0\loch
parlez de}{\rtlch\ab0 \ltrch\lang3084\b0\loch
 vos r\u233\'e9sultsts}{\rtlch \ltrch\lang3084\b\loch
 }{\loch
dans votre cahier. Notez \u233\'e9galement la valeur finale de I apr\u232\'e8s la fin de la boucle. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Seconde partie :}{\loch
 Localisez les bogues. La seconde boucle du programme est celle qui contient le bogue majeur. Le programmeur oublie de r\u233\'e9initialiser I \u224\'e0 0 avant d'ex\u233\'e9cuter le code commen\u231\'e7ant \u224\'e0 partir de l'\u233\'e9tiquette }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ForILoop2}{\loch
. Tracez tout au long de la boucle jusqu'\u224\'e0 tomber dans la troisi\u232\'e8me boucle commen\u231\'e7ant par l'\u233\'e9tiquette }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ForILoop3}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\loch
D\u233\'e9crivez ce qui est mauvais et pourquoi le fait de presser la touche F8 vous aid\u233\'e9rait \u224\'e0 r\u233\'e9soudre le probl\u232\'e8me. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Troisi\u232\'e8me Partie :}{\loch
 Localiser une autre bogue.  La troisi\u232\'e8me boucle du programme contient une erreur de frappe ou de distraction causant un branchement incorrect \u224\'e0 l'\u233\'e9tiquette }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
ForILoop}{\loch
. Tracez le long de ce code en pressant la touche F8. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\loch
D\u233\'e9crivez le processus menant \u224\'e0 r\u233\'e9soudre ce probl\u232\'e8me et expliquez comment la trace pourrait vous \u234\'eatre d'aide pour d\u233\'e9tecter l'erreur. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Quatri\u232\'e8me Partie :}{\loch
 V\u233\'e9rifiez l'exactitude. Le programme Ex9_2.asm est une version corrig\u233\'e9e du programme qu'on vient d'analyser. Effectuez une trace \u224\'e0 l'int\u233\'e9rieur de ce code et constatez que tout y est correct. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\loch
D\u233\'e9crivez les diff\u233\'e9rences entre les deux sessions de d\u233\'e9bogage. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
Cinqui\u232\'e8me Partie :}{\loch
 En utilisant Ex9_2.exe}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s33\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033{\rtlch\dbch\af19\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Le texte original pla\u231\'e7ait l'ext\u233\'e9nsion .asm au programme. Cependant, cela semble incorrect, puisque ce fichier va \u234\'eatre utilis\u233\'e9 par CodeView, c'est plut\u244\'f4t la version .exe qu'il faudrait utiliser, n.d.t. }
}}
}{\loch
, ouvrez une fen\u234\'eatre d'inspection et ajouter l'expression "I" \u224\'e0 cette fen\u234\'eatre. Placez un point d'arr\u234\'eat formel sur les trois instructions }{\rtlch \ltrch\cs20\dbch\af18\loch\f6\fs20\loch
jb}{\loch
. Ex\u233\'e9cutez le programme en utilisant la commande Go et commentez sur ce qui se passe dans la fen\u234\'eatre d'inspection pour chaque point d'arr\u234\'eat. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre projet de laboratoire : }{\loch
D\u233\'e9crivez comment votre code utilise la fen\u234\'eatre d'inspection pour vous aider \u224\'e0 localiser un probl\u232\'e8me dans vos programmes. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_10_04}{\*\bkmkend p9_10_04}\rtlch \ltrch\fs23\b\loch
9.10.4\tab Exercices sur les logiciels de retardement de boucles}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme Ex9_3.asm est un court logiciel permettant de retarder des boucles. Ex}{\rtlch \ltrch\lang3084\loch
\u233\'e9cutez ce programme et d\u233\'e9terminez la valeur de la variable de contr\u244\'f4le de la boucle qui provoquera un retardement de 11 secondes. Remarque : cette valeur a \u233\'e9t\u233\'e9 choisie pour un syst\u232\'e8me 80486 de 66 MHz. Si vous avez un ordinateur plus lent, vous aurez \u233\'e9ventuellement besoin de la r\u233\'e9duire. Si vous avez une machine plus rapide, augmentez-la. Ajustez cette valeur de sorte \u224\'e0 obtenir un d\u233\'e9lai d'environ 11 secondes sur l'ordinateur que vous utilisez. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre rapport de laboratoire :}{\rtlch \ltrch\lang3084\loch
 Fournissez la constante relative \u224\'e0 votre syst\u232\'e8me produisant un d\u233\'e9lai de 11 secondes. Argumentez aussi sur la possibilit\u233\'e9 de cr\u233\'e9er des d\u233\'e9lais de 1, 10, 20, 30 et 60 secondes \u224\'e0 l'aide de ce code. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour aller plus loin : }{\rtlch \ltrch\lang3084\loch
Apr\u232\'e8s avoir d\u233\'e9termin\u233\'e9 la bonne constante pour le d\u233\'e9lai souhait\u233\'e9, essayez l'ex\u233\'e9cutable sur diff\u233\'e9rents syst\u232\'e8mes avec diff\u233\'e9rentes vitesses d'horloge. Prenez note des diff\u233\'e9rences que vous remarquerez. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
Seconde Partie :}{\rtlch \ltrch\lang3084\loch
 D\u233\'e9lai d\u233\'e9termin\u233\'e9 par le mat\u233\'e9riel. Le fichier Ex9_4.asm contient un code de retardement de boucles pouvant d\u233\'e9terminer automatiquement le nombre d'it\u233\'e9rations par l'observation de l'horloge en temps r\u233\'e9el du BIOS. Ex\u233\'e9cutez ce programme et observez les r\u233\'e9sultats. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre rapport de laboratoire : }{\rtlch \ltrch\lang3084\loch
D\u233\'e9terminez le comptage d'it\u233\'e9rations et incluez cette valeur dans votre rapport. Si votre PC poss\u232\'e8de un interrupteur turbo, mettez-le en mode "non-turbo", quand ceci est r\u233\'e9qu\u233\'e9r\u233\'e9 par le programme. Mesurez le d\u233\'e9lai v\u233\'e9ritable de fa\u231\'e7on pr\u233\'e9cise, soit en mode turbo qu'en mode non-turbo. Incluez ces temps dans votre rapport. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour aller plus loin : }{\rtlch \ltrch\lang3084\loch
Essayez l'ex\u233\'e9cutable sur diff\u233\'e9rents syst\u232\'e8mes avec divers CPU et diverses vitesses d'horloge. Ex\u233\'e9cutez le programme et mesurez les d\u233\'e9lais. D\u233\'e9crivez les diff\u233\'e9rences dans votre rapport. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_11}{\*\bkmkend p9_11}\rtlch \ltrch\fs23\b\loch
9.11\tab Projets de programmation}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pas de projets pour ce chapitre. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_12}{\*\bkmkend p9_12}\rtlch \ltrch\fs23\b\loch
9.12\tab R\u233\'e9sum\u233\'e9}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce chapitre a discut\u233\'e9 sur les op\u233\'e9rations arithm\u233\'e9tiques et logiques des processeurs 80x86. Il a pr\u233\'e9sent\u233\'e9 les instructions et les techniques n\u233\'e9cessaires pour effectuer des op\u233\'e9rations sur les entiers de fa\u231\'e7on semblable \u224\'e0 celle des langages de haut niveau. }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang1033\loch
On a}{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
 \u233\'e9galement}{\rtlch \ltrch\lang3084\loch
 }{\loch
trait\u233\'e9 les op\u233\'e9rations en multipr\u233\'e9cision, comment effectuer des op\u233\'e9rations arithm\u233\'e9tiques \u224\'e0 l'aide d'instructions non arithm\u233\'e9tiques et comment utiliser des instructions arithm\u233\'e9tiques pour effectuer des op\u233\'e9rations non arithm\u233\'e9tiques. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les expressions arithm\u233\'e9tiques sont beaucoup plus simples dans les langages de haut niveau. En effet, le but original du langage FORTRAN \u233\'e9tait celui de fournir une version simplifi\u233\'e9e (}{\rtlch \ltrch\i\loch
FORmula TRANslation}{\loch
) des expressions arithm\u233\'e9tiques. Bien qu'en assembleur ce soit plus compliqu\u233\'e9 que - disons - en Pascal, si vous suivez certaines r\u232\'e8gles simples, ce n'est pas aussi p\u233\'e9nible. Pour une description \u233\'e9tape par \u233\'e9tape, consultez : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Expressions arithm\u233\'e9tiques" (9.1)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Affectations simples" (9.1.1)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Expressions simples", (9.1.2)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Expressions complexes" (9.1.3)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rateurs commutatifs}{\rtlch \ltrch\lang3084\loch
" (9.1.4)}{\loch
\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-851\sb0\sa120{\loch
\tab \u8226\'95 "Expressions logiques (bool\u233\'e9ennes) " (9.2)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'un des grands avantages de l'assembleur est sa facilit}{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
 d'effectuer un nombre illimit\u233\'e9 d'op\u233\'e9rations arithm\u233\'e9tiques en multipr\u233\'e9cision et d'op\u233\'e9rations logiques. Ce chapitre a d\u233\'e9crit comment effectuer des op\u233\'e9rations en pr\u233\'e9cision \u233\'e9tendue pour les op\u233\'e9rations les plus communes. Consultez : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations en multipr\u233\'e9cision" (9.3)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations d'addition en multipr\u233\'e9cision" (9.3.1)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations de soustraction en multipr\u233\'e9cision" (9.3.2)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Comparaisons de valeurs en pr\u233\'e9cision \u233\'e9tendue" (9.3.3)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Multiplication en pr\u233\'e9cision \u233\'e9tendue" (9.3.4)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Division en pr\u233\'e9cision \u233\'e9tendue" (9.3.5)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations NEG en pr\u233\'e9cision \u233\'e9tendue" (9.3.6)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations AND en pr\u233\'e9cision \u233\'e9tendue" (9.3.7)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations OR en pr\u233\'e9cision \u233\'e9tendue" (9.3.8)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations XOR en pr\u233\'e9cision \u233\'e9tendue" (9.3.9)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations NOT en pr\u233\'e9cision \u233\'e9tendue" (9.3.10)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations de d\u233\'e9calage en pr\u233\'e9cision \u233\'e9tendue" (9.3.11)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Op\u233\'e9rations de rotation en pr\u233\'e9cision \u233\'e9tendue" (9.3.4)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Parfois, on peut avoir besoin d'effectuer une op\u233\'e9ration entre deux op\u233\'e9randes de diff\u233\'e9rents types. Par exemple, vous pouvez avoir besoin d'additionner un octet avec un mot. L'id\u233\'e9e g\u233\'e9n\u233\'e9rale est d'\u233\'e9largir la plus petite op\u233\'e9rande et ensuite effectuer l'op\u233\'e9ration. Pour tous les d\u233\'e9tails, consultez :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Op\u233\'e9rations sur des op\u233\'e9randes de diff\u233\'e9rentes tailles" (9.4)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que le jeu d'instructions 80x86 fournisse diff\u233\'e9rentes voies simples pour effectuer diverses t\u226\'e2ches, vous pouvez souvent prendre avantage de diff\u233\'e9rents }{\rtlch \ltrch\i\loch
idiomes}{\loch
 du jeu \u224\'e0 l'aide de certaines op\u233\'e9rations arithm\u233\'e9tiques pour produire du code plus rapide ou plus court par rapport \u224\'e0 la mani\u232\'e8re "officielle". Ce chapitre a pr\u233\'e9sent\u233\'e9 certains de ces idiomes. Pour voir des exemples, consultez : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Idiomes mat\u233\'e9riels et arithm\u233\'e9tiques" (9.5)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Multiplier sans MUL et IMUL" (9.5.1)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{
\u8226\'95 }{\loch
"Division sans DIV et IDIV" (9.5.2)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{
\u8226\'95 }{\loch
"Utiliser AND pour calculer les restes" (9.5.3)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{
\u8226\'95 }{\loch
"Impl\u233\'e9menter des compteurs modulo-n avec AND" (9.5.4)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{
\u8226\'95 }{\loch
"Tester une valeur en pr\u233\'e9cision \u233\'e9tendue pour 0FFFF..FFh" (9.5.5)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{
\u8226\'95 }{\loch
"Op\u233\'e9rations TEST" (9.5.6)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Tester les signes avec XOR" (9.5.7) }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour manipuler des donn\u233\'e9es compact\u233\'e9es, il vous faut l'habilet\u233\'e9 d'extraire et d'ins\u233\'e9rer un champ depuis un registrement compact\u233\'e9. Vous pouvez utiliser les instructions logiques }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
and}{\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
or}{\loch
 pour masquer les champs que vous voulez manipuler ; vous pouvez utiliser les instructions }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
shl}{\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
shr}{\loch
 pour ordonner les donn\u233\'e9es \u224\'e0 leurs positions appropri\u233\'e9es avant d'ins\u233\'e9rer ou de retrancher les donn\u233\'e9es. Pour en savoir plus, consultez : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations de masquage" (9.6)\tab }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations de masquage avec l'instruction AND" (9.6.1)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Op\u233\'e9rations de masquage avec l'instruction OR" (9.6.2)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Compacter et d\u233\'e9compacter des donn\u233\'e9es" (9.7)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p9_13}{\*\bkmkend p9_13}\rtlch \ltrch\fs23\b\loch
9.13\tab Questions}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
1.\tab D\u233\'e9crivez la }{\rtlch \ltrch\lang3084\loch
voie }{\loch
\u224\'e0 suivre pour additionner une variable d'un mot non sign\u233\'e9 avec une d'un octet non sign\u233\'e9, afin de produire un r\u233\'e9sultat d'octet. Expliquez toutes les possibilit\u233\'e9s d'erreur et qu'est-ce qu'il faudrait faire pour les v\u233\'e9rifier. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
2. \tab R\u233\'e9pondez comme \u224\'e0 la question 1, mais pour des valeurs sign\u233\'e9es. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-851\sb0\sa120{
   }{\loch
3. \tab }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
Supposez}{\loch
 que }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var1}{\loch
 }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
est}{\loch
 un mot et que }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var2}{\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var3}{\loch
 sont des doubles-mots. Quel serait le code 80x86 pour additionner }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var1}{\loch
 avec }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var2}{\loch
 en laissant le r\u233\'e9sultat dans }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var3}{\loch
, si }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-851{\loch
\tab \tab a) }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var1}{\loch
, }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var2}{\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var3}{\loch
 sont non }{\rtlch \ltrch\lang3084\loch
sign\u233\'e9}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
s}{\loch
 ? }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-851\sb0\sa120{\loch
\tab \tab b) }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var1}{\loch
, }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var2}{\loch
 et }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
var3}{\loch
 sont }{\rtlch \ltrch\lang3084\loch
sign\u233\'e9}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
s}{\loch
 ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
4.\tab "ADD BX, 4" est plus efficace que "LEA BX, 4[BX]". Donnez un exemple o\u249\'f9 l'instruction LEA serait plus efficace que l'instruction ADD. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
5. \tab Donnez une seule instruction LEA sur un 80386, pouvant multiplier EAX par cinq. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
6.\tab Sanchant que VAR1 et VAR2 sont des variables de 32 bits d\u233\'e9clar\u233\'e9es avec la directive DWORD, \u233\'e9crivez les s\u233\'e9quences de code pouvant tester ce qui suit : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\loch
a) VAR1 = VAR2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\loch
b) VAR1 <> VAR2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\loch
c) VAR1 < VAR2\tab }{\rtlch \ltrch\lang3084\loch
\tab (valeurs sign\u233\'e9es et non sign\u233\'e9es}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\loch
d) VAR1 <= VARW \tab \tab pour les deux)}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\loch
e) VAR1 > VAR2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi850\sb0\sa120{\loch
f) VAR1 >= VAR2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
7.\tab Convertissez en assembleur les expressions suivantes, en emploiant des d}{\rtlch \ltrch\lang3084\loch
\u233\'e9calages, des additions et des soustractions \u224\'e0 la place que des multiplications : }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\lang3084\loch
a) AX * 5}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\lang3084\loch
b) AX * 129}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi851{\rtlch \ltrch\lang3084\loch
c) AX * 1024}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi850\sb0\sa120{\rtlch \ltrch\lang3084\loch
d) AX * 20000}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
8. \tab Quelle est la meilleure mani\u232\'e8re de diviser le registre AX par les constantes suivantes ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab a) 8\tab \tab b) 255\tab \tab c) 1024\tab \tab d) 45}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
9. \tab D\u233\'e9crivez comment pourriez-vous multiplier une valeur de 8 bits dans AL par 256 (en laissant le r\u233\'e9sultat dans AX). N'utilisez rien de plus que deux instructions }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
mov}{\loch
. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
10.\tab Comment pourriez-vous effectuer un AND entre la valeur dans AX et 0ffh en n'utilisant autre chose qu'une instruction }{\rtlch\langfe1033 \ltrch\cs21\dbch\af18\loch\f6\fs20\lang3084\loch
mov}{\loch
 ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
11.\tab Supposez que le registre AX contien}{\rtlch \ltrch\lang3084\loch
t}{\loch
 deux valeurs binaires compact\u233\'e9es. Supposez que les premiers quatre bits }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
moins significatifs}{\loch
 contiennent une valeur dans la plage 0..15 et que les 12 bits }{\rtlch\dbch\af19\langfe1033\dbch\af26\afs20 \ltrch\cf0\fs21\lang3084\loch
plus significatifs}{\loch
 restants contiennent une valeur dans la plage 0..4095. Maintenant supposez vouloir v\u233\'e9rifier si la portion de 12 bits }{\rtlch \ltrch\lang3084\loch
contient ou pas }{\loch
la valeur 295. Expliquez comment }{\rtlch \ltrch\lang3084\loch
vous pouvez}{\loch
 r\u233\'e9aliser ceci en n'emploiant que deux instructions. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
12. \tab Comment pourriez-vous utiliser l'instruction TEST (ou une s\u233\'e9quence d'instructions TEST) pour v\u233\'e9rifier si le bit 0 et 4 du registre AL sont les deux mis \u224\'e0 1 ? Comment l'instruction TEST pourrait-elle \u234\'eatre utilis\u233\'e9e si les deux bits sont activ\u233\'e9s ? Et comment pourrait-elle \u234\'eatre utilis\u233\'e9e dans le cas contraire (les deux valent 0) ?}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
13.\tab Pourquoi le registre CL ne peut \u234\'eatre utilis\u233\'e9 comme une op\u233\'e9rande compteur pendant un d\u233\'e9calage d'op\u233\'e9randes en multipr\u233\'e9cision ? Par exemple, pourquoi les instructions suivantes ne d\u233\'e9calent pas la valeur dans (DX,AX) de trois bits vers la gauche ?}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
mov\tab cl, 3}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
shl \tab ax, cl}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab rcl\tab dx, cl}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
14.\tab Fournissez une s\u233\'e9quence d'instructions pouvant effectuer des op\u233\'e9rations ROL et ROR en pr\u233\'e9cision \u233\'e9tendue (32 bits) en n'utilisant que des instructions 8086.  }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
15. \tab Donnez une s\u233\'e9quence d'instructions impl\u233\'e9mentant une op\u233\'e9ration ROR de 64 bits \u224\'e0 l'aide des instructions SHRD et BT du 80386. }
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
16\tab Donnez le code 80386 pour effectuer les comparaisons de 64 bits suivantes, sachant que vous \u234\'eates en train de calculer X := Y }{\rtlch \ltrch\i\loch
op\u233\'e9ration}{\loch
 Z avec X, Y et Z d\u233\'e9finis comme suit :}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab X\tab \tab dword\tab 0, 0}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab Y\tab \tab dword\tab 1, 2}
\par \pard\plain \s32\dbch\af19\langfe1033\dbch\af26\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs21\lang1033\tx-142\tx851\sb0\sa120{\rtlch\dbch\af20\dbch\af20\hich\af8 \ltrch\fs18\loch\f8\loch
\tab Z\tab \tab dword\tab 3, 4}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
\tab Effectuez les op\u233\'e9rations suivantes entre Y et Z en chargeant le r\u233\'e9sultat dans X : }
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
\tab a) addition\tab \tab b) soustraction\tab c) multiplication}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
\tab d) AND\tab \tab e) OR\tab \tab f) XOR}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
\tab g) N\u233\'e9gation\tab h) NOT logique}
\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch

\par \pard\plain \s0\dbch\af17\langfe1081\dbch\af26\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af19\dbch\af19\hich\af9 \ltrch\fs21\loch\f9\loch
\tab \tab }
\par }