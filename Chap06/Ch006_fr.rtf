{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Symbol;}{\f5\froman\fprq2\fcharset0 Footlight MT Light;}{\f6\froman\fprq2\fcharset0 Arial;}{\f7\froman\fprq2\fcharset0 Arial Narrow;}{\f8\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f9\froman\fprq2\fcharset0 Courier New;}{\f10\froman\fprq2\fcharset0 Courier{\*\falt Courier New};}{\f11\fnil\fprq2\fcharset0 Times New Roman;}{\f12\fnil\fprq2\fcharset0 Arial;}{\f13\fnil\fprq2\fcharset0 Footlight MT Light;}{\f14\fnil\fprq2\fcharset0 Arial Narrow;}{\f15\fnil\fprq2\fcharset0 Courier New;}{\f16\fnil\fprq2\fcharset0 Symbol;}{\f17\fnil\fprq2\fcharset0 Courier{\*\falt Courier New};}{\f18\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1 Normal;}
{\s1\sbasedon0\snext1\dbch\af12\langfe1033\dbch\af18\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f6\fs23\lang1033\b Heading 1;}
{\s2\sbasedon0\snext2\dbch\af12\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\sb240\sa60\keepn\ltrpar\cf0\loch\f6\fs24\lang1033\i\b Heading 2;}
{\s3\sbasedon0\snext3\dbch\af12\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\sb240\sa60\keepn\ltrpar\cf0\loch\f6\fs24\lang1033 Heading 3;}
{\*\cs15\snext15 WW8Num3z0;}
{\*\cs16\snext16 Default Paragraph Font;}
{\*\cs17\sbasedon16\snext17\super Footnote Characters;}
{\*\cs18\sbasedon16\snext18 Page Number;}
{\*\cs19\snext19\super Footnote Anchor;}
{\*\cs20\snext20\super Endnote Anchor;}
{\*\cs21\snext21 Endnote Characters;}
{\*\cs22\snext22 Numbering Symbols;}
{\*\cs23\snext23\dbch\af16 ListLabel 1;}
{\s24\sbasedon0\snext25\dbch\af12\langfe1081\dbch\af18\afs28\qj\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f8\fs28\lang1033 Heading;}
{\s25\sbasedon0\snext25\dbch\af12\langfe1033\dbch\af18\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b Text Body;}
{\s26\sbasedon25\snext26\dbch\af12\langfe1033\dbch\af18\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b List;}
{\s27\sbasedon0\snext27\dbch\af12\langfe1081\dbch\af18\afs24\ai\qj\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f5\fs24\lang1033\i Caption;}
{\s28\sbasedon0\snext28\dbch\af12\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Index;}
{\s29\sbasedon0\snext29\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f7\fs21\lang1033 Body Text Indent 3;}
{\s30\sbasedon0\snext30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033 Text Body Indent;}
{\s31\sbasedon0\snext31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033 Footnote;}
{\s32\sbasedon0\snext32\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Header and Footer;}
{\s33\sbasedon0\snext33\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Footer;}
{\s34\sbasedon0\snext34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033 Body Text 2;}
{\s35\sbasedon0\snext35\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f7\fs21\lang1033 Body Text Indent 2;}
{\s36\sbasedon0\snext36\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Header;}
{\s37\sbasedon0\snext37\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 List Bullet;}
{\s38\sbasedon30\snext38\dbch\af12\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\sb0\sa120\ltrpar\cf0\loch\f6\fs20\lang1033 Instruction;}
{\s39\sbasedon30\snext39\dbch\af15\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\sb0\sa120\ltrpar\cf0\loch\f9\fs18\lang1033 code;}
{\s40\sbasedon0\snext40\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Table Contents;}
{\s41\sbasedon40\snext41\dbch\af13\langfe1081\dbch\af18\afs20\ab\qc\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\b Table Heading;}
{\s42\sbasedon0\snext42\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033 Frame Contents;}
}{\*\generator LibreOffice/6.4.4.2$Windows_X86_64 LibreOffice_project/3d775be2011f3886db32dfd395a6a6d1ca2630ff}{\info{\title Organisation Syst\u232\'e8me                           Chapitre trois}{\author Danilo Renzi}{\creatim\yr2002\mo11\dy19\hr12\min42}{\author Danilo Renzi}{\revtim\yr2021\mo5\dy27\hr21\min33}{\printim\yr2021\mo5\dy27\hr21\min33}}{\*\userprops}\deftab851
\hyphauto1\viewscale170
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s33\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af13\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8309\shpright8640\shpz87{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s33\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af13\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 88}}}
\par \pard}}}

\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s33\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af13\afs20 \ltrch\cf0\fs22\lang1033\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8309\shpright8640\shpz87{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s33\dbch\af13\langfe1081\dbch\af18\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\qj\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch\dbch\af13\afs20 \ltrch\cs18\cf0\fs22\lang1033
{\field{\*\fldinst  PAGE }{\fldrslt 88}}}
\par \pard}}}

\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s25\dbch\af12\langfe1033\dbch\af18\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f6\fs35\lang1033\b\qj\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs33\loch
Le Jeu d'}{\rtlch \ltrch\fs33\loch
i}{\rtlch \ltrch\fs33\loch
nstructions 80x86\tab \tab \tab   Chapitre 6}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
Jusqu'\u224\'e0 pr\u233\'e9sent nous }{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
n\u8217\'92avons abord\u233\'e9 que superficiellement }{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
le sujet des instructions disponibles dans les microprocesseurs 80x86. Ce chapitre rectifie la situation mais notez qu'il sert surtout de r\u233\'e9f\u233\'e9rence, il explique ce que chaque instruction fait, mais il n'indique pas comment combiner les instructions pour }{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
\u233\'e9crire}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
 des programmes complets. Ce sera dans le reste du livre que vous apprendrez \u224\'e0 le faire. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s1\dbch\af12\langfe1033\dbch\af18\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f6\fs23\lang1033\b{\listtext\pard\plain }\ilvl0\ls1 \li0\ri0\lin0\rin0\fi0\li0\ri0\lin0\rin0\fi0\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\loch
6.0\tab Vue }{\rtlch \ltrch\lang1033\loch
d'}{\rtlch \ltrch\lang1033\loch
e}{\rtlch \ltrch\lang1033\loch
nsemble}{\loch
 du }{{\*\bkmkstart p6_0}{\*\bkmkend p6_0}\rtlch \ltrch\lang1033\loch
c}{\loch
hapitre}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce chapitre d\u233\'e9crit les instructions 80x86 du mode r\u233\'e9el. Comme dans tout langage de programmation, il y a diverses instructions que vous }{\rtlch \ltrch\lang3084\loch
utiliserez}{\loch
 tout le temps, d'autres que vous }{\rtlch \ltrch\lang3084\loch
n\u8217\'92}{\loch
utilisez }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92}{\loch
occasionnellement, et certaines autres encore que vous n'utiliserez que rarement ou jamais. Ce chapitre organise sa pr\u233\'e9sentation par classes d'instructions et non par leur ordre d'importance. Puisque les programmeurs d\u233\'e9butants n'ont pas \u224\'e0 apprendre le jeu d'instructions en entier pour pouvoir \u233\'e9crire des programmes significatifs, vous n'aurez probablement pas \u224\'e0 apprendre tout de suite comment chaque instruction fonctionne. La liste qui suit d\u233\'e9crit les instructions qu'on verra dans ce chapitre. Le symbole "}{\rtlch \ltrch\lang3084\loch
\u8226\'95" marque les instructions importantes de chaque groupe. En apprenant seulement ces instructions, vous serez d\u233\'e9j\u224\'e0 en mesure d'\u233\'e9crire les programmes assembleur que vous voudrez. Il y a d'autres instructions qui servent surtout \u224\'e0 faciliter la programmation, sp\u233\'e9cialement pour des processeurs 80386. Mais le fait de ne pas les conna\u238\'eetre ne vous emp\u234\'eache pas d'\u233\'e9crire des programmes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
De mani\u232\'e8re sommaire, les instructions 80x86 peuvent \u234\'eatre rang\u233\'e9es en huit classes diff\u233\'e9rentes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
1)\tab \tab instructions de transfert de donn\u233\'e9es}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
mov, lea, les, push, pop, pushf, popf}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
2)\tab \tab instructions de conversion}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
cwb, cwd, xlat}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
3)\tab \tab instructions arithm\u233\'e9tiques}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
add, inc, sub, dec, cmp, neg, mul, imul, div, idiv}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
4)\tab \tab Op\u233\'e9rations logiques, d\u233\'e9calages, rotations et instructions de bits}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
and, or, xor, not, shl, shr, rcl, rcr}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
5)\tab \tab instructions d'entr\u233\'e9e}{\rtlch \ltrch\lang3084\loch
s}{\loch
/sortie}{\rtlch \ltrch\lang3084\loch
s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
in, out}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
6)\tab \tab instructions de manipulation de cha\u238\'eenes}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
movs, stos, lods}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
7)\tab \tab instructions de contr\u244\'f4le de flux }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
jmp, call, ret, }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\i\loch\f0\loch
sauts conditionnels}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
8)\tab \tab instructions diverses}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \tab \u8226\'95 }{\rtlch\dbch\af11\dbch\af11\hich\af0 \ltrch\fs18\lang3084\loch\f0\loch
clc, stc, cmc}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Les sections suivantes d\u233\'e9crivent toutes les instructions de ces groupes.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vos programmes sont destin\u233\'e9s \u224\'e0 des processeurs anciens ou bien s'ils doivent garder la compatibilit\u233\'e9 avec des programmes plus vieux, il ne faudra pas utiliser les instructions \u233\'e9tendues du 80386, car leur usage limite le nombre de machines sur lesquelles votre code }{\rtlch \ltrch\lang3084\loch
s\u8217\'92}{\loch
ex\u233\'e9cutera. Cependant, }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l\u8217\'92heure d\u8217\'92\u233\'e9crire ce livre, }{\loch
le 80386 \u233\'e9tait }{\rtlch \ltrch\lang3084\loch
d\u233\'e9j\u224\'e0 }{\loch
en train de dispara\u238\'eetre. Par cons\u233\'e9quent, vous pouvez tranquillement pr\u233\'e9sumer que la plupart des syst\u232\'e8mes auront au moins un processeur 80386sx. Ce livre utilise les instructions du 80386 pour des nombreux exemples de programmes, mais gardez \u224\'e0 l'esprit que ceci est seulement par commodit\u233\'e9 ; il n'y a pas de programme qui ne pourrait \u234\'eatre \u233\'e9crit en }{\rtlch \ltrch\lang3084\loch
n\u8217\'92}{\loch
utilisant }{\rtlch \ltrch\lang3084\loch
que }{\loch
des instructions 8088. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une recommandation, surtout pour ceux qui apprennent seulement les instructions mentionn\u233\'e9es ci-dessus : vous d\u233\'e9couvrirez que les instructions individuelles ne sont pas vraiment complexes et ont une s\u233\'e9mantique simple. Cependant, \u224\'e0 mesure que vous approcherez la fin de ce chapitre, vous constaterez que vous n'avez aucune indication sur comment mettre ces instructions ensemble pour former un programme complexe. Ne vous inqui\u233\'e9tez pas, c'est un probl\u232\'e8me courant. Des chapitres ult\u233\'e9rieurs combleront cette lacune. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une derni\u232\'e8re chose \u224\'e0 noter : ce chapitre \u233\'e9num\u232\'e8re diverses instructions avec le commentaire \u171\'ab disponible seulement sur des processeurs 80}{\rtlch \ltrch\i\loch
n}{\loch
86 et ult\u233\'e9rieurs \u187\'bb. Beaucoup de ces instructions sont }{\rtlch \ltrch\lang3084\loch
\u233\'e9galement}{\loch
 disponibles sur des 80186, mais puisque peu de PC emploient ces processeurs, on ignorera ce CPU. N\u233\'e9anmoins, }{\rtlch \ltrch\lang3084\loch
prenez}{\loch
 ce fait tout de m\u234\'eame en compte. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\b\loch\f7\loch
6.1\tab Le }{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang1033\b\loch\f7\loch
r}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\b\loch\f7\loch
egistre }{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
d'}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
\u233\'e9}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
tat}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\b\loch\f7\loch
 du }{{\*\bkmkstart p6_01}{\*\bkmkend p6_01}\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
p}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\b\loch\f7\loch
rocesseur (}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\lang3084\b\loch\f7\loch
F}{\rtlch\dbch\af14\dbch\af14\hich\af7 \ltrch\fs23\b\loch\f7\loch
lags)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le registre flags (}{\rtlch \ltrch\i\loch
drapeaux }{\loch
en fran\u231\'e7ais) conserve le mode de fonctionnement actuel du CPU et des informations sur l'\u233\'e9tat de certaines instructions. La figure 6.1 montre la disposition de ce registre. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3765\shpbxcolumn\shpbxignore\shpleft0\shpright8235{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw549\pich251\picwgoal8235\pichgoal3765\pngblip
89504e470d0a1a0a0000000d4948445200000225000000fb0803000000821814af00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000bcc49444154789ced9d6b7aab2a148699
9e83d1c13018060313e808cebf6e0f17ef917cc10a42fbbdcf4ed310b396b1ef46450131120210e2e93520f5434b088696100c2d21185a4230b484606809c1d0
1282a12504434b088696104c194b443a2f9f790df2c12239f2de91a5b1ff9c852c81698f05e2e4332fafd1675ebf1c5c910f827e90057e3b5a729665fcfeb7e3
5b1c0ac47111fb99fd276cc17f3bbec6af6381d8977c89c322e258604bf6afff1bc5614d4fb2ecd7f4fb35cbebb73b64a1256759ac02df1bbc25bb027158c45b
b2fb84b3e46b83b7e450207625c1926d8110c7cfd8bfdfd7aec05ab25fd3932cfb35fd7ecdf2faed0e5968c959165a424b70165a424b70165a424b70165a424b
70165a424b70165a424b70165a424b70165a424b70165a424b70165a424b70165a424b70960faef6095eedab9662961c10c7d7e250329e147ced19bf8e05c725
8e1f7196ecdf790d7a5cb3258b882d210e2bf2f25dbe5fb2d092d32ce977e9c082b629b1d96fa3d0ea3efd37a98f229bfd2e1a5b5dc7eb1aa35bc33eb87bec24
2ace0bd32687a8145a128d8af3c2b4c9212a859644a3e2bc306d72884aa125d1a8382f4c9b1ca2526849342ace0bd32687a8145a128d8af3c2b4c9212a859644
a3e2bc306d72884aa125d1a8382f4c9b1ca2526849342ace0bd32687a8145a128d8af3c2b4c9212a859644a3e2bc306d72884aa125d1a8382f4c9b1ca2526849
342ace0bd32687a8145a128d8af3c2b4c9212a859644a3e2bc306d72884aa125d1a8382f4c9b1ca2526849342ace0bd32687a8145a128d8af3c2b4c9212a8596
44a3e2bc306d72884aa125d1a8382f4c9b1ca2526849342ace0bd32687a8145a128d8af3c2b4c9212a859644a3e2bc306d72884aa125d1a8382f4c9b1ca25268
49342ace0bd32687a8145a128d8af3c2b4c9212a859644a3e2bc306d72884aa125d1a8382f4c9b1ca2526849342ace0bd32687a894fc9618390cf2f41d35e82b
d9694971f25bd22d3f5e725fdb6cb4a438d92d91c6fd347254da3e0db6404af7438c5248b7d994946a1c07331afb42ab0f561996d0929bc96e49373f3943ac29
f69f5541e871aa4b94f5c23e5c716f26a7de434b8a93dd12b13c75f33ffb1053991887d117d8ca465a53ba79ad928611a22599296889d2ae3a11d2ed6d564bd6
df7a5b939c1fe67e98637d4d4beea5dc71897d28336fa8ad1be137a9e5d8697d29072dc94cfe731caf4138d171bfdadd8aad52564bfc71897548f7da1ecf5e4b
414b3253a0554dcaa9bd44c9f0526eeb12778e23a757babf96819664a6c1b6d75768496668492406cef2ba002da9195a9299fc67c2f6b0a3772daa6789867bb6
1b2dc94c99f692c1b5ce9fbef9415beb8739b6af69c9bd146a551b7c039a12663ac719e53098518970ee2bdda51ca1647fadb98496e4a69025a199d54910aee3
28e52fee85a65769cba572ef9e5e3afe34c7e6352db997a296b8dfc2751cd73032cc65bebc5f7ef36bf5a3092268c9cd14b764731d676789d85af2d39cb4e45e
ca586286d592b5345e97fc34272db99772e7389325e13a8ebb06d86f8f4b94a225f552a4bd6408ed2521d5748e23ed39cea886cd39ce484b6ae557b4bd1ea125
37434be6021c353d6d72884aa12573018e9a9e363944a594baa3711cc31daeefb87877c949ce562c696566d0829694fb9fd68e25c92bf10c252c19940c176ddc
498deb7ce3bae3f88b3ae1bc46a8c19d05f905eec9d98c25ff0e33ddc39578861296581d8c6f1c19b5f40d26ee8acedc23c75b12da4cfe605df2ef30d33d5c89
672862c9f2e42b8b61299c2d594b97b5fa21f06bd29214ca5ae29ad8a438b5447cf287babe162d5a22ce3e92bc567750d692615fb8b5a4a725b4243cb9ce375a
ae9658354cb8ef44dd795c72b216ed58d23bccb2b4af81fb4ecf5b51fb7765ef2e70d865af76614aa3a025ca75270f7d73664b8c3de591ee2e357fa567802d2a
d7d7a21d4b0e4b87a3fff5eab9fd67d410ce0706edefe5ca4f0d0d390556a16d4bc68d2552d8d341612b94f5bf5f7e68c9c72bf1dc1e67dc58626b126fc8bcc0
9fb1a4000d59b2e29b1a878d25665646aad174ee66e1dfb2c771a7be7eb4a34769d29271e8bb619c2dd19d3f54b54ff650d6be63fc02fdefb0642c5429825568
d2926a286589bf6c136e500b7d71e64b3a65a0253fa29825a14dc49dbf85be38f3259d32546b09aff62d39a6c7d45b38f4c5992fe994a1564bbe59972c39c679
fb6835b7a72d9774d615c90bfadecf5882ae525642d1ba44eaf5a2deb11af99396b442494ba633fed01767bea4f310b424859296e85eba46a2b92f8e8c0c4f5f
045a9242b5bbc2ccd0921468c95c803f921c333d44a5d092b9007f2439667a884aa1257301fe4872ccf41095424be602fc91e498e9212a25bf25721d2cba2268
490ad92d7127bd46de3316e38dd09214b25be207d40bf7f68e61b0aceb6331de082d4921bb25aa73f39d84167a3dea70c7fc3a1663ee86f9cf9bece137a12519
31528409fabc1b9b91d4a6fcb4a47e8a9ce39870f5373cf69654032d7943764bfa35cd595d520db4e40df9ef8e76f71e69b9392e19abdc5ab4e40df9f738aa9f
4760b4e7388a96b448c9b657d77272dba85877434bde50d4926986be2aa1256ff8abd7715ea0256fc86d89ab3f64576f15b2404bde50a42ee96abb8a73022d79
43094bfce024ebe88c61d8f9daa0256f286089bf237a333a63985a6bc95f0bf07bd0928c187f69ef383ae37c46fcb41b2bf08bd0928c848392b3d1191b8396e4
636a22398ece586deb5a1c5a920d3de9b0199d314cad95376d0e6849bef8bd0c37beaea333d6798e83a12504434b088696100c2d21185a4230b484606809c1d0
1282a12504434b088696100c2d21185a4230b484606809c1d0929c0caff7a56d6e6d7cc5c84747958e424b72e2e74cdae3a73e8d8db5e6a432ddf97b4f424b32
a29456e33cd2801efc2cb84b5d1286a4174af4cacd2eec96975e1e3ff29a7f779aa54bb872fde43d6eb42423ddb277718f41eb61dde34cb36f8969122eefc7ba
7f0aefba71d8fc12320cf818d6bac6be18b4e432ae8290cbfceb76571246449a2c597e777284bdccba42e1dda5638678ba170ffaaab4e432b297b2efd7b16d86
69eed3498e65f62da54c3864dd1eeb6ab5b1449a477738185a723d81fbd199d9123d0c7a53976c66dfeac30e673a2e0933e8e86d5d622a1efdc4434bae12a6d3
52aa0ff36c595f4cb75a22d6f9b6c77eaa44cc728e13de5d2c19bbcabb7ad192ab84e34d23f420950cbdc8955c2c9966dff2ebb0ec4eeca2bd772bbcbb5a527b
2f1e5a921f090739a9bc2aa125f91950456186e747af7f0f2d21185a4230b484606809c1d01282a12504434b088696100c2d21185a4230b484606809c1d01282
a125d713b8e15ef77d2dc43a94f4af82965c4fe07e98ddbd88a6ddcdf5165a723dc1f4530ebdab50dc94056254428e8ff7afb91d5a723d81fba1a50e5d6e7cef
9a703fe3b67fcdef80965c4f207db7dfa9e7cdfc38f4afa9689a9c1f013746beed9c95427b9c71ea79b3b564dbbfe6e93fef4d7cbc311aa394256ad3bf4f34d2
bfe67e68492c4178eaa6fe381b4baaef5f733fb42496203c99c1f7bc992df1bfd7debfe67e68493a7fae2aa125c9d4dfbfe67e6809c1b4bab16949495addd8b4
a424ad6e6c5a52925637362d2949ab1b9b9694a4d58d4d4b4ad2eac6a62525697563d39292b4bab16949495addd8b4a424ad6e6c5a52925637362d2949ab1b3b
bf25464ec3b7125a12c34f67a22b9ceee60968498430d8af1f325afa1bd4a40833defcbaee381f404b6209a6673720bd7b081d66bcf97ddd713e8096c4124ccf
7ec60ab1de1afdfc74374f907963e7a25c7f9cd1cc73e184a24d779ca7ff76e5c8bcb17351e8b864304a6ab3ab4bfe60779c6629748ed3fbe9d6f4d6923fd81d
a759f257827a906ebe0ad34ba9bbad257faf3b4eb33cb8ab6455d20c8f59f217bbe3344bb387dda420b484606809c1d01282a12504434b088696100c2d21185a
4230b484606809c1d01282a12504434b088696100c2d21185a4230b484606809c1d01282a12504434b088696100c2d21185a4230b484606809c1d01282a12504
434b088696100c2d21185a4230b484606809c1d01282a1250493c712baf7bba02504c3bf27c1d01282a12504434b088696100c2d2198a7a728234df03f6eab89
bba2fb80920000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igutr 6.1 Le registre Flags 80x86}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les drapeaux }{\rtlch \ltrch\i\loch
carry}{\loch
, }{\rtlch \ltrch\i\loch
parity}{\loch
, }{\rtlch \ltrch\i\loch
zero}{\loch
, }{\rtlch \ltrch\i\loch
sign}{\loch
 et }{\rtlch \ltrch\i\loch
overflow}{{\super \rtlch \ltrch\i\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Afin de varier le style d'\u233\'e9criture et d'habituer le lecteur aux deux terminologies, les noms fran\u231\'e7ais et anglais des drapeaux }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
individuels }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
seront utilis\u233\'e9s interchangeablement. Il en va de m\u234\'eame pour ce qui concerne les termes "drapeaux" et "flags" ; le lecteur doit s'habituer d\u232\'e8s le d\u233\'e9but \u224\'e0 conna\u238\'eetre la terminologie anglaise, car on la voit partout dans les codes sources et m\u234\'eame dans d'autres ouvrages, n.d.t.}
}}
}{\loch
 sont sp\u233\'e9ciaux parce que vous pouvez tester leur \u233\'e9tat (z\u233\'e9ro ou un) avec les instructions }{\rtlch \ltrch\i\loch
setcc}{\loch
 et les instructions de saut (voir les paragraphes 6.6.5 et 6.9.4). Les CPU 80x86 utilisent ces bits (les }{\rtlch \ltrch\i\loch
codes de condition}{\loch
) pour prendre des d\u233\'e9cisions durant l'ex\u233\'e9cution d'un programme. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Plusieurs instructions arithm\u233\'e9tiques, logiques etc., affectent le drapeau }{\rtlch \ltrch\i\loch
overflow}{\loch
 (d\u233\'e9passement de capacit\u233\'e9). Apr\u232\'e8s une op\u233\'e9ration arithm\u233\'e9tique, il peut contenir }{\rtlch \ltrch\lang3084\loch
la valeur }{\loch
un si le r\u233\'e9sultat d\u233\'e9passe la capacit\u233\'e9 de la destination sign\u233\'e9e. Par exemple, si vous essayez d'additionner les nombres sign\u233\'e9s de 16 bits 7FFFh et 0001h, le r\u233\'e9sultat est trop grand (pour un nombre sign\u233\'e9) et le CPU active le drapeau. Si le r\u233\'e9sultat d'une op\u233\'e9ration ne produit pas de d\u233\'e9passement, alors le drapeau est mis \u224\'e0 z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les op\u233\'e9rations logiques s'appliquent g\u233\'e9n\u233\'e9ralement \u224\'e0 des valeurs non sign\u233\'e9es, ce drapeau est automatiquement mis \u224\'e0 z\u233\'e9ro pour toute instruction impliquant ces op\u233\'e9rations. D'autres instructions y laissent simplement une valeur arbitraire (autrement dit, ne le modifient pas).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions 80x86 de manipulation de cha\u238\'eenes se servent du }{\rtlch \ltrch\i\loch
drapeau de direction}{\loch
 (}{\rtlch \ltrch\i\loch
direction flag}{\loch
). Quand ce drapeau est \u224\'e0 z\u233\'e9ro, les \u233\'e9l\u233\'e9ments d'une cha\u238\'eene sont interpr\u233\'e9t\u233\'e9s selon un ordre de stockage croissant (d'une adresse inf\u233\'e9rieure \u224\'e0 une adresse sup\u233\'e9rieure) ; quand il est \u224\'e0 1, alors le CPU traite ces \u233\'e9l\u233\'e9ments en sens inverse. Pour plus de d\u233\'e9tails, voir le paragraphe 6.8. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le drapeau d'activation des interruptions (}{\rtlch \ltrch\i\loch
interrupt flag}{\loch
) contr\u244\'f4le la capacit\u233\'e9 du CPU de r\u233\'e9pondre \u224\'e0 des \u233\'e9v\u233\'e9nements externes, connus comme \u171\'ab requ\u234\'eates d'interruption \u187\'bb. Certains programmes peuvent contenir des s\u233\'e9quences d'instructions que le CPU ne doit pas interrompre. Ce drapeau peut activer ou d\u233\'e9sactiver les interruptions pour garantir que le CPU n'interrompra pas ces sections de code critiques. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le drapeau de trace (}{\rtlch \ltrch\i\loch
trace flag}{\loch
) active ou d\u233\'e9sactive le mode trace. Les d\u233\'e9bogueurs (comme CodeView) utilisent ce bit pour activer ou d\u233\'e9sactiver l'op\u233\'e9ration de trace pas \u224\'e0 pas. Quand il est activ\u233\'e9, le CPU s'interrompt apr\u232\'e8s chaque instruction et passe le contr\u244\'f4le au logiciel de d\u233\'e9bogage, permettant au d\u233\'e9bogueur de faire la trace pas \u224\'e0 pas \u224\'e0 travers l'application. S'il est mis \u224\'e0 z\u233\'e9ro, alors les instructions seront ex\u233\'e9cut\u233\'e9es sans interruption. Les CPU 80x86 ne fournissent aucune instruction permettant de manipuler directement ce flag. Pour le faire, vous devez : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95}{\loch
 Placer le registre flags dans la pile 80x86}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95}{\loch
 D\u233\'e9sempiler la valeur dans un autre registre}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95}{\loch
 Modifier la valeur}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95}{\loch
 Empiler le r\u233\'e9sultat, puis}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95}{\loch
 D\u233\'e9sempiler flags}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le r\u233\'e9sultat d'un calcul est n\u233\'e9gatif, alors le CPU active le }{\rtlch \ltrch\i\loch
drapeau de signe}{\loch
 (}{\rtlch \ltrch\i\loch
sign flag}{\loch
). Vous pouvez tester ce drapeau apr\u232\'e8s une op\u233\'e9ration arithm\u233\'e9tique pour v\u233\'e9rifier s'il y a un r\u233\'e9sultat n\u233\'e9gatif. Souvenez-vous qu'une valeur est n\u233\'e9gative si son bit le plus significatif est \u233\'e9gal \u224\'e0 1. Par cons\u233\'e9quent, les op\u233\'e9rations sur des valeurs non sign\u233\'e9es activent ce drapeau si le r\u233\'e9sultat contient 1 dans le bit de poids fort.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Diverses instructions affectent le drapeau de z\u233\'e9ro (}{\rtlch \ltrch\i\loch
zero flag}{\loch
) quand elles g\u233\'e9n\u232\'e8rent un r\u233\'e9sultat nul. Vous utiliserez souvent ce drapeau pour voir si deux valeurs sont \u233\'e9gales (par exemple, deux nombres sont \u233\'e9gaux si apr\u232\'e8s leur soustraction le r\u233\'e9sultat est z\u233\'e9ro). Ce drapeau est \u233\'e9galement utile apr\u232\'e8s diverses op\u233\'e9rations logiques pour voir si un bit sp\u233\'e9cifique dans un registre ou dans la m\u233\'e9moire contient z\u233\'e9ro ou un. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le drapeau de retenue auxiliaire (}{\rtlch \ltrch\i\loch
auxiliary carry flag}{\loch
) supporte les op\u233\'e9rations sp\u233\'e9ciales du mode binaire cod\u233\'e9 d\u233\'e9cimal (BCD). Puisque la plupart des programmes n'ont rien \u224\'e0 faire avec ces nombres, vous n'utiliserez que rarement ce drapeau, et m\u234\'eame, vous ne pourrez pas non plus y acc\u233\'e9der directement. Aucun des CPU 80x86 ne fournit d'instructions sp\u233\'e9cifiques pour manipuler ce bit, le tester, l'activer ou le d\u233\'e9sactiver. Seules les instructions BCD et les instructions add, adc, sub, sbb, mul, imul, div et idiv le manipulent. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le drapeau de parit\u233\'e9 (}{\rtlch \ltrch\i\loch
parity flag}{\loch
) est activ\u233\'e9 par la parit\u233\'e9 des huit octets faibles de toute op\u233\'e9ration de donn\u233\'e9es. Si une op\u233\'e9ration produit un nombre pair de bits ayant la valeur 1, le CPU active ce bit. Et il le d\u233\'e9sactive dans le cas contraire. Ce drapeau est utile dans certains programmes de communication de donn\u233\'e9es, cependant Intel l'a ins\u233\'e9r\u233\'e9 principalement pour des raisons de compatibilit\u233\'e9 avec les vieux processeurs 8080 }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61549\'3f}{\loch
P.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le drapeau de retenue (}{\rtlch \ltrch\i\loch
carry flag}{\loch
) a diverses fonctions. D'abord il indique un d\u233\'e9passement de capacit\u233\'e9 non sign\u233\'e9 (de la m\u234\'eame mani\u232\'e8re que le drapeau de d\u233\'e9passement de capacit\u233\'e9 indique un d\u233\'e9passement sign\u233\'e9). Vous l'utiliserez aussi lors d'op\u233\'e9rations logiques et arithm\u233\'e9tiques \u224\'e0 pr\u233\'e9cision multiple. Certaines instructions qui testent, positionnent, effacent ou inversent des bits, affectent directement ce drapeau. Finalement, puisque vous pouvez le manipuler facilement, il est utile pour diverses op\u233\'e9rations bool\u233\'e9ennes. Ce drapeau a diverses fonctions et savoir quand l}{\rtlch \ltrch\lang3084\loch
'utiliser, et pour quelle raison, peut embrouiller les programmeurs novices. Heureusement, pour toute instruction donn\u233\'e9e, la signification du drapeau de retenue est claire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans les sections et les chapitres qui suivent, l'usage de ces flags deviendra plus \u233\'e9vident. Cette section est principalement une introduction formelle aux drapeaux individuels du registre flags au lieu d\u8217\'92une tentative d'expliquer l'exacte fonction de chacun d'eux. Pour plus de d\u233\'e9tails sur ceci, continuez \u224\'e0 lire...}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.2\tab Encodage des }{{\*\bkmkstart p6_02}{\*\bkmkend p6_02}\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\b\loch
nstructions}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80x86 utilisent un encodage binaire pour chacune des op\u233\'e9rations machine. Alors que c'est important d'avoir une compr\u233\'e9hension g\u233\'e9n\u233\'e9rale sur comment un microprocesseur encode les instructions, vous n'avez pas \u224\'e0 m\u233\'e9moriser l'encodage de chacune des instructions du jeu. Si vous deviez \u233\'e9crire un assembleur ou un d\u233\'e9sassembleur (d\u233\'e9bogueur), vous devriez d\u233\'e9finitivement conna\u238\'eetre exactement les encodages. Pour la programmation en assembleur de tous les jours, vous n'avez pas besoin de conna\u238\'eetre l'encodage exact. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
N\u233\'e9anmoins, \u224\'e0 mesure que vous devenez plus expert, vous voudrez probablement \u233\'e9tudier plus \u224\'e0 fond les encodages du jeu d'instructions du CPU. Certainement, vous devriez d\u233\'e9j\u224\'e0 \u234\'eatre parfaitement au courant de termes comme }{\rtlch \ltrch\i\loch
opcode}{\loch
, }{\rtlch \ltrch\i\loch
octet mod-reg-r/m}{\loch
, }{\rtlch \ltrch\i\loch
valeur de d\u233\'e9placement}{\loch
 et ainsi de suite. Bien que vous }{\rtlch \ltrch\lang3084\loch
n'ayez}{\loch
 pas besoin de m\u233\'e9moriser les param\u232\'e8tres de chaque instruction, c'est toujours une bonne id\u233\'e9e de conna\u238\'eetre les longueurs et les cycles d'horloge pour les instructions que vous utilisez le plus souvent, puisque ceci vous aidera \u224\'e0 \u233\'e9crire de meilleurs programmes. Les chapitres trois et quatre ont offert une vue }{\rtlch \ltrch\lang3084\loch
d\u8217\'92ensemble }{\loch
d\u233\'e9taill\u233\'e9e des encodages de diverses instructions (80x86 et x86) ; une telle discussion a \u233\'e9t\u233\'e9 importante afin que vous compreniez comment le CPU les encode et les ex\u233\'e9cute. Ce chapitre ne se penchera pas sur ces d\u233\'e9tails, mais pr\u233\'e9sentera une vue de haut niveau de chaque instruction en pr\u233\'e9sumant que vous ne vous pr\u233\'e9occupez pas de la fa\u231\'e7on dont la machine traite les bits en m\u233\'e9moire. Pour ces quelques occasions o\u249\'f9 vous aurez besoin de conna\u238\'eetre l'encodage binaire d'une instruction particuli\u232\'e8re, une liste compl\u232\'e8te des encodages appara\u238\'eet \u224\'e0 l'annexe D. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3\tab instructions de }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ransfert de }{{\*\bkmkstart p6_03}{\*\bkmkend p6_03}\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les instructions de transfert de donn\u233\'e9es copient des valeurs d'un emplacement \u224\'e0 un autre. Ces instructions comprennent mov, xchg, lds, lea, les, lfs, lgs, lss, push, pusha, pushad, pushf, pushfd, pop, popa, popad, popf, popfd, lahf et sahf. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.1\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{{\*\bkmkstart p6_03_01}{\*\bkmkend p6_03_01}\rtlch \ltrch\fs23\b\loch
 MOV}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction mov existe en diff\u233\'e9rentes versions : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab reg, reg}{{\super \rtlch\dbch\af15 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Ce chapitre utilise "reg" indiff\u233\'e9remment pour indiquer un registre g}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
\u233\'e9n\u233\'e9ral de huit, seize ou (sur 80386 et ult\u233\'e9rieur) 32 bits (AL/AX/EAX, BL/BX/EBX, SI/ESI, etc.).}
}}
}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab mem, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab reg, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax/al, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab mem, ax/al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab regseg, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab regseg, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, regseg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, regseg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le dernier chapitre a parl\u233\'e9 de cette instruction en d\u233\'e9tail et seulement quelques aspects additionnels restent \u224\'e0 mentionner ici. D'abord, il y a des }{\rtlch \ltrch\lang3084\loch
variantes }{\loch
qui sont plus rapides et courtes que d'autres qui font le m\u234\'eame travail. Par exemple, }{\rtlch \ltrch\i\loch
mov ax, mem}{\rtlch \ltrch\lang3084\i\loch
 }{\rtlch\ai0 \ltrch\lang3084\i0\loch
et}{\loch
 }{\rtlch \ltrch\i\loch
mov reg, mem}{\loch
 chargent le registre AX }{\rtlch \ltrch\lang3084\loch
avec le contenu d\u8217\'92un }{\loch
emplacement de m\u233\'e9moire. Dans tous les processeurs, la premi\u232\'e8re instruction est plus courte et, }{\rtlch \ltrch\lang3084\loch
dans}{\loch
 les premiers membres de la famille 80x86, elle \u233\'e9tait \u233\'e9galement plus rapide. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a deux d\u233\'e9tails tr\u232\'e8s importants \u224\'e0 noter \u224\'e0 propos de l'instruction mov. Tout d'abord il n'y a pas d}{\rtlch \ltrch\lang3084\loch
'instruction }{\loch
de transfert entre deux emplacements de m\u233\'e9moire. L'octet du mode d'adressage de l'encodage mod-reg-r/m permet seulement comme op\u233\'e9randes deux registres ou bien un registre et un emplacement de m\u233\'e9moire. Il n'existe pas de version de mov permettant d'encoder }{\rtlch \ltrch\i\loch
deux}{\loch
 adresses de m\u233\'e9moire dans la m\u234\'eame instruction. Deuxi\u232\'e8mement, on ne peut pas transf\u233\'e9rer une donn\u233\'e9e imm\u233\'e9diate dans un registre de segment. Les seules instructions qui transf\u232\'e8rent des donn\u233\'e9es dans ou depuis un registre de segment ont un octet mod-reg-r/m associ\u233\'e9 avec elles et il n'y a pas de format permettant de d\u233\'e9placer une constante dans ces registres. }{\rtlch \ltrch\lang3084\loch
Effectuer un mov entre deux addresses de m\u233\'e9moire ou placer une constante dans un registre de segment, ce sond deux erreurs communes des programmeurs d\u233\'e9butants}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9randes d'une instruction mov peuvent \u234\'eatre des octets, des mots ou des doubles-mots}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Sans oublier que les op\u233\'e9randes de 32 bits sont valides seulement sur des processeurs 80386 ou sup\u233\'e9rieurs. }
}}
}{\loch
. Les deux op\u233\'e9randes doivent avoir la m\u234\'eame taille ou MASM \u233\'e9mettra un message d'erreur. Ceci s'applique aussi bien aux op\u233\'e9randes de m\u233\'e9moire, qu'aux registres. Si vous d\u233\'e9clarez une variable B en utilisant }{\rtlch \ltrch\i\loch
byte}{\loch
 et que vous essayez de charger cette variable dans le registre ax, MASM se plaindra d'un conflit de types. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le CPU \u233\'e9largit les donn\u233\'e9es imm\u233\'e9diates selon la taille de l'op\u233\'e9rande de destination (sauf dans les cas o\u249\'f9 elles sont trop grandes pour leur destination ; }{\rtlch \ltrch\lang3082\loch
dans}{\loch
 ces cas, il s'agit d'une erreur). Notez que vous pouvez placer des valeurs imm\u233\'e9diates dans un emplacement de m\u233\'e9moire et que la m\u234\'eame r\u232\'e8gle concernant les tailles s'applique. N\u233\'e9anmoins, MASM ne peut d\u233\'e9terminer la taille de certaines op\u233\'e9randes de m\u233\'e9moire. Par exemple, l'instruction mov [bx], 0 affecte-t-elle une valeur de huit, seize ou trente-deux bits ? MASM ne peut pas d\u233\'e9terminer la taille exacte d'une constante, donc, dans un }{\rtlch \ltrch\lang3082\loch
pareil }{\loch
cas, il \u233\'e9mettra une erreur. Ce probl\u232\'e8me }{\rtlch \ltrch\i\loch
n'existe pas}{\loch
 quand vous placez une valeur imm\u233\'e9diate dans une variable que vous avez d\u233\'e9j\u224\'e0 d\u233\'e9clar\u233\'e9e dans votre programme. Par exemple, si vous avez d\u233\'e9clar\u233\'e9 B comme une variable de type }{\rtlch \ltrch\i\loch
byte}{\loch
, MASM }{\rtlch \ltrch\lang3082\loch
sera en mesure de}{\loch
 placer un z\u233\'e9ro de huit bits dans B, pour l'instruction mov B, 0. Seules les op\u233\'e9randes concernant les pointeurs qui ne sont pa}{\rtlch \ltrch\lang3082\loch
s}{\loch
 r\u233\'e9f\u233\'e9renc\u233\'e9s par une variable souffrent de ce probl\u232\'e8me. La solution est d'indiquer explicitement \u224\'e0 l'assembleur quand une op\u233\'e9rande est un octet, un mot ou un double-mot. Vous pouvez le faire comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab byte ptr [bx], 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab word ptr [bx], 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab dword ptr[bx], 0 ;sur des CPU 80386 ou sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Pour plus de d\u233\'e9tails \u224\'e0 propos de l'op\u233\'e9rateur }{\rtlch \ltrch\i\loch
type}{\loch
 }{\rtlch \ltrch\i\loch
ptr}{\loch
, voir le }{\rtlch \ltrch\lang3082\loch
C}{\loch
hapitre }{\rtlch \ltrch\lang3082\loch
H}{\loch
uit. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions mov avec des registres de segment sont toujours de 16 bits ; l'op\u233\'e9rande mod-reg-r/m doit \u234\'eatre de cette taille ou MASM g\u233\'e9n\u233\'e9rera une erreur. Puisque vous ne pouvez pas placer une constante dans un de ces registres, une solution commune consiste en charger }{\rtlch \ltrch\lang3082\loch
celle-ci}{\loch
 dans un registre g\u233\'e9n\u233\'e9ral et ensuite le copier dans un registre de segment. Par exemple, les deux instructions suivantes chargent le registre }{\rtlch \ltrch\i\loch
es}{\loch
 avec la valeur 40h :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, 40h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab es, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Remarquez que tout registre g\u233\'e9n\u233\'e9ral pourrait faire l'affaire et qu'ici ax a \u233\'e9t\u233\'e9 choisi arbitrairement. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions mov n'affectent aucunement le registre flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.2\tab }{\rtlch \ltrch\fs23\lang3082\b\loch
L'i}{{\*\bkmkstart p6_03_02}{\*\bkmkend p6_03_02}\rtlch \ltrch\fs23\lang3082\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 XCHG}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction xchg (}{\rtlch \ltrch\i\loch
exchange}{\loch
) permute deux valeurs. La forme g\u233\'e9n\u233\'e9rale est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Et il y a quatre versions sp\u233\'e9cifiques de cette instruction sur le 80x86 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab ax, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab eax, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
  ;seulement sur des CPU 80386 ou sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux premi\u232\'e8res versions requi\u232\'e8rent deux octets ou plus pour l'opcode et les octets mod-reg-r/m (un d\u233\'e9placement, si n\u233\'e9cessaire, requiert encore plus d'octets). Les deux derni\u232\'e8res sont des versions sp\u233\'e9ciales de la seconde et permutent des donn\u233\'e9es entre le registre (e)ax et un autre registre de 16 ou 32 bits. Avec la version 16 bits, un seul octet d'opcode est utilis\u233\'e9, alors que les deux autres formes requi\u232\'e8rent un octet mod-reg-r/m additionnel. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3082\loch
V}{\loch
ous pouvez }{\rtlch \ltrch\lang3084\loch
d\u233\'e9j\u224\'e0 remarquer}{\loch
 un sch\u233\'e9ma qui se d\u233\'e9veloppe : la famille 80x86 fournit souvent des versions plus courtes et plus rapides d'une instruction, par l'entremise du registre ax. Par cons\u233\'e9quent, vous devriez arranger vos instructions de telle sorte que le registre (e)ax, y soit impliqu\u233\'e9 le plus possible. L'instruction xchg en est un exemple parfait, fournissant une version qui permute deux valeurs de 16 bits en employant seulement un octet. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que l'ordre d'apparition des op\u233\'e9randes ne fait pas de diff\u233\'e9rence, en ce sens que }{\rtlch \ltrch\i\loch
xchg mem, reg}{\loch
 ou }{\rtlch \ltrch\i\loch
xchg reg, mem}{\loch
 produisent le m\u234\'eame r\u233\'e9sultat. Et si vous codez }{\rtlch \ltrch\i\loch
xchg reg, ax}{\loch
, la plupart des assembleurs modernes \u233\'e9mettront automatiquement l'opcode de l'instruction plus courte }{\rtlch \ltrch\i\loch
xchg ax, reg}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux op\u233\'e9randes doivent avoir la m\u234\'eame taille. Les op\u233\'e9randes peuvent \u234\'eatre de huit ou seize bits sur des processeurs ant\u233\'e9rieurs au 80386 et de huit, seize ou trente-deux bits sur des microprocesseurs sup\u233\'e9rieurs. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction xchg, ne modifie pas le registre flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s LDS, LES, LFS, LGS et LSS}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions vous permettent de charger un registre g\u233\'e9n\u233\'e9ral et un registre de segment en une seule instruction. Sur des processeurs anciens, les instructions }{\rtlch\ai \ltrch\i\loch
lds}{\loch
 et }{\rtlch\ai \ltrch\i\loch
les}{\loch
 sont les seules permettant de manipuler directement des valeurs }{\rtlch \ltrch\lang3084\loch
plus grandes que}{\loch
 32 bits. La forme g\u233\'e9n\u233\'e9rale est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
LxS\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Et ces instructions ont aussi, naturellement, leurs variations sp\u233\'e9cifiques :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lds\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
les\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lfs\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32  }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;seulement sur des CPU 80386 ou sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lgs\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32  }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lss\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32  }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Reg}{\rtlch \ltrch\sub\loch
16}{\loch
 est n'importe quel registre g\u233\'e9n\u233\'e9ral de 16 bits et mem}{\rtlch \ltrch\sub\loch
32}{\loch
 est un emplacement de m\u233\'e9moire d'un double-mot (d\u233\'e9clar\u233\'e9 avec l'instruction dword).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions chargent le double-mot de l'adresse sp\u233\'e9cifi\u233\'e9e par mem}{\rtlch \ltrch\sub\loch
32}{\loch
 dans reg}{\rtlch \ltrch\sub\loch
16}{\loch
 et l'un des registres ds, es, fs, gs ou ss. Le registre g\u233\'e9n\u233\'e9ral recevra le mot }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 de l'op\u233\'e9rande de m\u233\'e9moire, tandis que le registre de segment se verra attribuer le mot }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 de celle-ci. L'algorithme suivant en d\u233\'e9crit le fonctionnement exact : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lds reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ds := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 + 2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
les reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab es := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 + 2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lfs reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab fs := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 + 2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lgs reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab gs := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 + 2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lss reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ss := [mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 + 2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les instructions LxS chargent les registres de segment, vous ne }{\rtlch \ltrch\lang3084\loch
devriez}{\loch
 pas les utiliser pour n'importe quel but. Utilisez-les pour d\u233\'e9finir des pointeurs (\u233\'e9loign\u233\'e9s) sur certains objets de donn\u233\'e9es, comme il a \u233\'e9t\u233\'e9 vu au chapitre 5}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
L'original cite le chapitre 4, mais, puisque ces sujets font en r\u233\'e9alit\u233\'e9 l'objet du chapitre 5, il s'agit d'une autre des diverses erreurs apparaissant dans la version originale et jamais corrig\u233\'e9es, n.d.t.}
}}
}{\loch
. Tout usage impropre peut causer des probl\u232\'e8mes avec votre code, surtout si vous utilisez Windows, OS/2 ou UNIX. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
G}{\loch
ardez \u224\'e0 l'esprit que ces instructions chargent une valeur de 32 bits dans une paire de registres et }{\rtlch \ltrch\i\loch
ne chargent pas}{\loch
 l'adresse d'une variable dans cette paire (c'est-\u224\'e0-dire que ces instructions n'ont pas de mode imm\u233\'e9diat). Pour savoir comment charger une adresse dans une paire de registres, voir le }{\rtlch \ltrch\lang3084\loch
C}{\loch
hapitre }{\rtlch \ltrch\lang3084\loch
H}{\loch
uit. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions LxS n'affectent pas non plus le registre flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.4\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_03_04}{\*\bkmkend p6_03_04}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 LEA}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction LEA (}{\rtlch \ltrch\i\loch
Load Effective Address}{\loch
) est une autre instruction utilis\u233\'e9e pour pr\u233\'e9parer des valeurs de pointeur. Elle prend la forme : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lea \tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Et les formes sp\u233\'e9cifiques de cette instruction sur le 80x86 sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lea\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16, \-}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lea\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem  ;seulement sur des CPU 80386 ou sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction charge le registre g\u233\'e9n\u233\'e9ral de 16 ou de 32 bits avec l'}{\rtlch \ltrch\i\loch
adresse r\u233\'e9elle (effective)}{\loch
 de l'emplacement de m\u233\'e9moire sp\u233\'e9cifi\u233\'e9e ; cette adresse est l'adresse finale obtenue apr\u232\'e8s tous les calculs des modes d'adressage. Par exemple, lea ax, ds:[1234h] charge le registre ax avec l'adresse de l'emplacement 1234h ; ici, le registre ax est charg\u233\'e9 simplement avec la valeur 1234h. Si vous y r\u233\'e9fl\u233\'e9chissez un moment, ce n'est pas une op\u233\'e9ration tr\u232\'e8s excitante. Apr\u232\'e8s tout, }{\rtlch\ai \ltrch\i\loch
mov ax, valeur_immediate}{\loch
 pourrait le faire \u233\'e9galement. Donc, pourquoi s'emb\u234\'eater avec l'instruction lea ? Parce qu'il y a aussi d'autres formes d'op\u233\'e9randes de m\u233\'e9moire en plus du d\u233\'e9placement seul. Consid\u233\'e9rez les instructions lea suivantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lea\tab ax, [bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lea\tab bx, 3[bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lea\tab ax, 3[bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lea\tab bx, 4[bp+si]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lea\tab ax, -123[di]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
L}{\rtlch \ltrch\lang3084\loch
a premi\u232\'e8re de ces instructions copie l'adresse de l'expression [bx] dans le registre ax. Puisque l'adresse r\u233\'e9elle est la valeur du registre bx, l'instruction copie la valeur de bx dans le registre ax. Encore une fois, l'instruction n'est pas tr\u232\'e8s int\u233\'e9ressante, parce que mov peut faire la m\u234\'eame chose, m\u234\'eame plus rapidement. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'instruction lea bx, 3[bx] copie l'adresse effective de 3[bx] dans le registre bx. Puisque cette adresse est \u233\'e9gale \u224\'e0 la valeur courante de bx plus trois, alors lea additionne simplement trois au registre bx. L'instruction add permet de le faire, donc, lea est encore superflue. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La troisi\u232\'e8me instruction ci-dessus montre o\u249\'f9 lea commence \u224\'e0 briller. lea ax, 3[bx] copie l'adresse de l'emplacement 3[bx] dans le registre ax ; c'est-\u224\'e0-dire, elle additionne trois \u224\'e0 la valeur du registre bx et d\u233\'e9place la somme dans ax. Il s'agit d'un excellent exemple montrant comment vous pouvez effectuer une op\u233\'e9ration mov et une addition avec une seule instruction. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les deux instructions finales, lea bx, 4}{\loch
[bp+si] et lea ax, -123[di]}{\rtlch \ltrch\lang3084\loch
 donnent des exemples suppl\u233\'e9mentaires d'instructions lea plus efficaces que leurs \u233\'e9quivalents mov/add. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Sur des processeurs 80386 et sup\u233\'e9rieurs, vous pouvez utiliser le mode d'adressage scalaire index\u233\'e9 pour multiplier par deux, quatre ou huit et additionner des registres et des d\u233\'e9placements. Intel, sugg\u232\'e8re fortement l'usage d'instructions lea, parce que ces instructions sont beaucoup plus rapides qu'une s\u233\'e9quence d'instructions produisant les m\u234\'eames r\u233\'e9sultats. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La fonction (r\u233\'e9elle) de lea est de charger un registre avec une adresse de m\u233\'e9moire. Par exemple, lea bx, 128[bp+di] charge bx avec l'adresse de l'octet r\u233\'e9f\u233\'e9renc\u233\'e9 par 128[BP+DI]. Il s'av\u232\'e8re qu'une instruction de la forme mov al, [bx] s'ex\u233\'e9cute plus rapidement qu'une de la forme mov al, 128[bp+di]. Si cette instruction s'ex\u233\'e9cute plusieurs fois, c'est probablement plus efficace de charger l'adresse r\u233\'e9elle de 128[bp+di] dans le registre bx et d'utiliser le mode d'adressage [bx]. Il s'agit d'une optimisation commune pour des programmes \u224\'e0 hautes performances. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'instruction lea n'affecte pas les drapeaux. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.5\tab Les instructions PUSH et POP}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions push (empiler) et pop (d\u233\'e9sempiler) manipulent les donn\u233\'e9es dans la pile mat\u233\'e9rielle du 80x86. Il y a 19 variantes de ces instructions}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Et il faut ajouter aussi divers synonymes. }
}}
}{\loch
 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pop\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pop\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32\tab \tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;(3)}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab regseg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pop\tab regseg\tab \tab \tab ;sauf cs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pop\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab donnee_immediate\tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pusha\tab \tab \tab \tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
popa\tab \tab \tab \tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pushad\tab \tab \tab \tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
popad\tab \tab \tab \tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pushf\tab \tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
popf}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
pushfd\tab \tab \tab \tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
popfd\tab \tab \tab \tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
enter\tab imm, imm\tab \tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
leave\tab \tab \tab \tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (2) - Disponible seulement sur des CPU 80286 et sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3) - Disponible seulement sur des CPU 80386 et sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les premi\u232\'e8res deux instructions empilent et d\u233\'e9sempilent un registre g\u233\'e9n\u233\'e9ral de 16 bits. C'est une version compacte (d'un octet) con\u231\'e7ue sp\u233\'e9cialement pour les registres. Notez qu'il y a une seconde version qui fournit un octet mod-reg-r/m permettant d'empiler des registres ; beaucoup d'assembleurs utilisent seulement celle-ci pour empiler une valeur stock\u233\'e9e en m\u233\'e9moire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La }{\rtlch \ltrch\lang3084\loch
troisi\u232\'e8me et quatri\u232\'e8me instruction }{\loch
empile}{\rtlch \ltrch\lang3084\loch
nt}{\loch
 }{\rtlch \ltrch\lang3084\loch
et}{\loch
 d\u233\'e9sempile}{\rtlch \ltrch\lang3084\loch
nt}{\loch
 un registre g\u233\'e9n\u233\'e9ral de 32 bits et ce n'est rien de plus qu'une version de trente-deux bits des deux premi\u232\'e8res instructions, avec un octet de pr\u233\'e9fixe indiquant la taille. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La }{\rtlch \ltrch\lang3084\loch
cinqui\u232\'e8me et sixi\u232\'e8me }{\loch
instruction permet}{\rtlch \ltrch\lang3084\loch
tent}{\loch
 d'empiler }{\rtlch \ltrch\lang3084\loch
et d\u233\'e9sempiler }{\loch
un registre de segment. Notez que les instructions qui empilent fs et gs sont plus longues que }{\rtlch \ltrch\lang3084\loch
les instructions}{\loch
 qui empilent cs, ds, es et ss ; voir l'annexe D pour des d\u233\'e9tails plus pr\u233\'e9cis. Pour ce qui concerne le registre cs, vous pouvez uniquement l'empiler ; le d\u233\'e9sempiler donnerait lieu \u224\'e0 des probl\u232\'e8mes int\u233\'e9ressants de contr\u244\'f4le de flux de programme. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
La quatri\u232\'e8me paire d'instructions push/pop vous permet d'empiler et de d\u233\'e9sempiler le contenu d'un emplacement de m\u233\'e9moire. Dans les processeurs 80286 et ant\u233\'e9rieurs, cette valeur devait \u234\'eatre de 16 bits. Pour les op\u233\'e9rations de m\u233\'e9moire sans type explicite (par exemple, [bx]), il faut utiliser soit la version pushw, soit indiquer explicitement la taille en se servant d'une instruction comme push word ptr [bx]. Dans les processeurs 80386 et sup\u233\'e9rieurs vous pouvez empiler et d\u233\'e9sempiler des donn\u233\'e9es de 16 et de 32 bits}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Vous pouvez utiliser les syntaxes pushw et pushd pour indiquer les tailles des constantes de 16 ou de 32 bits. }
}}
}{\loch
. Vous pouvez utiliser des op\u233\'e9randes de m\u233\'e9moire de type dword, utiliser la syntaxe pushd, ou vous servir de l'op\u233\'e9rateur dword ptr pour imposer des op\u233\'e9rations de 32 bits.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{
 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi180\sb0\sa120{\loch
Exemples : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push \tab DblWordVar}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push \tab dword ptr [bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab pushd \tab dword}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions pusha (}{\rtlch \ltrch\i\loch
push all}{\loch
) et popa (}{\rtlch \ltrch\i\loch
pop all}{\loch
) (disponibles sur un CPU 80286 ou sup\u233\'e9rieur) empilent et d\u233\'e9sempilent }{\rtlch \ltrch\i\loch
tous}{\loch
 les registres g\u233\'e9n\u233\'e9raux de 16 bits. pusha empile les registres dans l'ordre suivant : ax, cx, dx, bx, sp, bp, si et di. popa d\u233\'e9sempile les registres dans l'ordre inverse dans lequel ils ont \u233\'e9t\u233\'e9 empil\u233\'e9s. pushad et popad (disponibles sur un 80386 ou sup\u233\'e9rieur) font la m\u234\'eame chose sur un jeu de registres de 32 bits du 80386 (ou ult\u233\'e9rieur). Notez que les instructions pusha et popa ne }{\rtlch \ltrch\i\loch
placent (ou d\u233\'e9placent) pas}{\loch
 dans la pile les registres de segment ou le registre flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce sont les instructions pushf et popf qui permettent d'empiler/d\u233\'e9sempiler le registre flags. Notez que ces instructions offrent un m\u233\'e9canisme pour modifier le drapeau de trace (voir la description de ce processus au d\u233\'e9but de ce chapitre). Bien s\u251\'fbr, vous pouvez aussi activer et d\u233\'e9sactiver tous les autres drapeaux de cette fa\u231\'e7on. N\u233\'e9anmoins, la plupart des autres drapeaux qu'on peut vouloir modifier (sp\u233\'e9cialement les codes de condition), fournissent des instructions sp\u233\'e9cifiques ou d'autres s\u233\'e9quences d'instructions plus simples. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions enter et leave empilent et d\u233\'e9sempilent le registre bp et allouent de l'espace dans la pile pour des variables locales. Vous en saurez plus dans un chapitre ult\u233\'e9rieur. Ici, on ne les abordera pas, puisqu'elles ne sont pas tr\u232\'e8s utiles hors du contexte d'entr\u233\'e9e ou de sortie d'une proc\u233\'e9dure. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\u171\'ab Et alors qu'est-ce que ces instructions font ? \u187\'bb vous demanderez-vous. Les instructions push placent des donn\u233\'e9es dans la pile mat\u233\'e9rielle 80x86 et les instructions pop r\u233\'e9cup\u232\'e8rent les donn\u233\'e9es de la pile et les placent dans la m\u233\'e9moire ou dans des registres. Ce qui suit, est une description algorithmique de chacune :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
instructions push (16 bits) :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
SP := SP - 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab [SS:SP] := Operande16Bits    ; stocke le r\u233\'e9sultat \u224\'e0 l'emplacement SS:SP}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
instructions pop (16 bits) :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Operande16Bits := [SS:SP]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab SP := SP + 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
instructions push de 32 bits : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
SP := SP - 4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab [SS:SP] := Operande32Bits}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
instructions pop de 32 bits :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Operande32Bits := [SS:SP]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab SP := SP + 4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Vous pouvez consid\u233\'e9rer aussi les instructions pusha/pushad et popa/popad de la m\u234\'eame fa\u231\'e7on, c'est-\u224\'e0-dire correspondant \u224\'e0 une s\u233\'e9quence d'op\u233\'e9ration push/pop sur les registres g\u233\'e9n\u233\'e9raux 16 ou 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Trois choses \u224\'e0 noter \u224\'e0 propos de la pile mat\u233\'e9rielle : en premier lieu, elle se trouve toujours dans le segment de pile (peu importe o\u249\'f9 ss pointe). En second lieu, la pile cro\u238\'eet vers le bas en m\u233\'e9moire, autrement dit, \u224\'e0 mesure que l'on empile des valeurs, le CPU les place dans la pile \u224\'e0 des adresses successives qui d\u233\'e9croissent apr\u232\'e8s chaque empilage. Et, finalement, le pointeur mat\u233\'e9riel de pile (ss:sp) contient toujours l'adresse du sommet de la pile (qui correspond \u224\'e0 la derni\u232\'e8re valeur empil\u233\'e9e). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez utiliser la pile mat\u233\'e9rielle pour sauvegarder temporairement des registres et des variables, pour passer des param\u232\'e8tres \u224\'e0 une proc\u233\'e9dure, pour allouer de l'espace pour des variables locales et pour d'autres usages. Les instructions push et pop ont une grande utilit\u233\'e9, car elles permettent de manipuler ces objets dans la pile. Vous aurez l}{\rtlch \ltrch\lang3084\loch
'occasion de voir comment les utiliser, plus tard dans ce livre. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La plupart des instructions push et pop n'affectent aucunement les drapeaux du registre flags. Les instructions popf/popfd, par leur nature intrins\u232\'e8que, permettent de modifier tous les drapeaux. pushf/pushfd poussent flags dans la pile, mais ne changent aucun drapeau en le faisant. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Tous les empilages et les d\u233\'e9sempilages sont des op\u233\'e9rations de 16 ou de 32 bits. Il n'y a pas de moyen (facile) de placer dans la pile une valeur de huit bits. Pour le faire, il faudrait la charger dans l'octet le plus significatif d'un registre de 16 bits, empiler le registre et puis additionner 1 au pointeur de pile. Dans tous les processeurs, sauf le 8088, ceci ralentirait les acc\u232\'e8s futurs \u224\'e0 la pile, puisque la valeur actuelle de sp serait une adresse impaire, d\u233\'e9salignant tous les empilages et les d\u233\'e9sempilages ult\u233\'e9rieurs. Par cons\u233\'e9quent, la plupart des programmes empilent et d\u233\'e9sempilent des valeurs de 16 bits, m\u234\'eame s'ils sont en train de travailler avec des valeurs de huit bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Malgr\u233\'e9 que ce soit relativement s\u233\'e9curitaire d'empiler une variable de huit bits, il faut faire attention quand on d\u233\'e9sempile dans un emplacement de m\u233\'e9moire de cette taille. Empiler une variable de huit bits avec }{\rtlch \ltrch\lang3084\i\loch
push word ptr ByteBar}{\rtlch \ltrch\lang3084\loch
 empile deux octets, \u224\'e0 savoir l'octet de la variable ByteVar et l'octet qui la suit. Votre code pourra simplement ignorer l'octet en trop que l'instruction empile dans la pile. Mais d\u233\'e9sempiler de telles valeurs n'est pas aussi simple. G\u233\'e9n\u233\'e9ralement, empiler ces deux octets ne devrait pas poser de probl\u232\'e8me. Cependant, il peut arriver un d\u233\'e9sastre si vous d\u233\'e9pilez une valeur et que vous \u233\'e9crasez l'octet successif dans la m\u233\'e9moire. Il existe seulement deux solutions \u224\'e0 ce probl\u232\'e8me. D'abord vous pouvez d\u233\'e9sempiler la valeur de 16 bits et la stocker dans un registre comme ax et ensuite sauver l'octet le moins significatif dans la variable byte. La seconde solution consiste \u224\'e0 r\u233\'e9server un octet additionnel de remplissage apr\u232\'e8s la variable byte pour contenir le mot entier que vous d\u233\'e9sempilez. Beaucoup de programmes utilisent cette approche.  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.3.6\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s LAHF et SAHF}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
lahf (load ah from flags) et sahf (store ah into flags) sont des instructions archa\u239\'efques, que le jeu 80x86 a inclus pour des questions de compatibilit\u233\'e9 avec les vieux programmes de la puce Intel 8080 }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61549\'3f}{\loch
P. De ce fait, ces instructions sont tr\u232\'e8s peu }{\rtlch \ltrch\lang3084\loch
utilis\u233\'e9es }{\loch
dans les programmes 80x86 d'aujourd'hui. L'instruction lahf n'affecte aucun des drapeaux du registre flags. L'instruction sahf, par sa nature m}{\rtlch \ltrch\lang3084\loch
\u234\'eame,}{\loch
 modifie les bits S, Z, A, P et C de flags. Ces instructions ne requi\u232\'e8rent aucune op\u233\'e9rande et on }{\rtlch \ltrch\lang3084\loch
les utilise}{\loch
 de la mani\u232\'e8re suivante : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sahf}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi0\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab lahf}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
sahf affecte uniquement l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du registre flags, alors que lahf, charge uniquement l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 de flags dans le registre AH. Ces instructions n}{\rtlch \ltrch\lang3084\loch
'agissent pas sur les drapeaux }{\rtlch \ltrch\lang3084\i\loch
overflow}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\lang3084\i\loch
direction}{\rtlch \ltrch\lang3084\loch
, }{\rtlch \ltrch\lang3084\i\loch
interrupt disable }{\rtlch \ltrch\lang3084\loch
ou }{\rtlch \ltrch\lang3084\i\loch
trace}{\rtlch \ltrch\lang3084\loch
. Le seul fait que ces instructions ne peuvent pas agir sur le drapeau }{\rtlch \ltrch\lang3084\i\loch
overflow}{\rtlch \ltrch\lang3084\loch
 est une limitation consid\u233\'e9rable. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Cependant, sahf a une une utilisation majeure : quand vous utilisez un coprocesseur \u224\'e0 virgule flottante (8087, 80287, 80387, 80486, Pentium, etc.) vous pouvez vous en servir pour copier le registre flags d'\u233\'e9tat de virgule flottante dans le registre flags 80x86. Vous verrez cette utilisation dans le chapitre sur l'arithm\u233\'e9tique \u224\'e0 virgule flottante (chapitre 14). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.4\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions de }{{\*\bkmkstart p6_04}{\*\bkmkend p6_04}\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
onversion}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le jeu d'instructions 80x86 fournit diverses instructions de conversion. Celles-ci incluent movzx, movsx, cbw, cwd, cwde, cdq, bswap et xlat. La plupart de ces instructions \u233\'e9tendent des valeurs \u224\'e0 z\u233\'e9ro ou avec le signe, les deux derni\u232\'e8res convertissent entre formats de stockage et traduisent les valeurs \u224\'e0 l'aide d'une table de r\u233\'e9f\u233\'e9rence. Ces instructions prennent la forme g\u233\'e9n\u233\'e9rale : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movzx\tab dest, src ;la taille de dest doit \u234\'eatre le double de src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab dest, src ;la taille de dest doit \u234\'eatre le double de src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cbw}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwd}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwde}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cdq}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bswap\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi0\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab xlat\tab \tab ;une forme sp\u233\'e9ciale permet une op\u233\'e9rande}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi0\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.4.1\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s MOVZX, MOVSX, CBW, CWD, CWDE et CDQ}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions effectuent des extensions sign\u233\'e9es et non sign\u233\'e9es}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Voir le chapitre 1 pour un rappel sur cette sorte d'extensions, n.d.t.}
}}
}{\loch
. cwb et cwd sont disponibles sur tous les processeurs de la famille 80x86, alors que movzx, movsx, cwde et cdq sont disponibles seulement sur les CPU 80386 ou sup\u233\'e9rieurs. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cbw (convert byte to word) effectue une extension sign\u233\'e9e de la valeur de al \u224\'e0 ax, autrement dit, elle copie le bit sept de al dans tous les bits de 8 \u224\'e0 15 de ax. Cette instruction est particuli\u232\'e8rement importante avant d'effectuer une division entre valeurs de huit bits (comme vous verrez au paragraphe 6.5). L'instruction ne requiert pas d'op\u233\'e9rande et on l'utilise comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cbw}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cwd (convert word to double word) effectue une extension sign\u233\'e9e de la valeur de ax \u224\'e0 une valeur de 32 bits qui sera stock\u233\'e9e dans dx:ax. Cette extension se r\u233\'e9alise en copiant le bit 15 de ax dans tous les bits de DX. Le fait que cette valeur ne soit pas plac\u233\'e9e dans eax en d\u233\'e9montre la compatibilit\u233\'e9 dans tous les processeurs. Tout comme cbw, cette instruction est tr\u232\'e8s importante pour les op\u233\'e9rations de division. L'instruction ne requiert pas d'op\u233\'e9rande et on l'utilise comme suit : }
\par \pard\plain \s39\dbch\af15\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\sb0\sa120\ltrpar\cf0\loch\f9\fs18\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab cwd}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
L'instruction cwde \u233\'e9tend une valeur de 16 bits \u224\'e0 une valeur de 32 bits, mais cette fois en la pla\u231\'e7ant dans le registre eax, }{\rtlch \ltrch\lang3084\loch
moyennant la copie du bit }{\loch
15 de ax dans tous les bits de 16 \u224\'e0 31 de eax. Comme cbw et cwd, cette instruction n'a pas d'op\u233\'e9randes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwde}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cdq effectue une extension sign\u233\'e9e de la valeur de 32 bits de eax \u224\'e0 une valeur de 64 bits et place le r\u233\'e9sultat dans edx:eax en copiant le bit 31 de eax dans tous les bits de edx. Cette instruction }{\rtlch \ltrch\lang3084\loch
n\u8217\'92est disponible \u233\'e9videmment que sur les }{\loch
processeurs de 32 bits. On l'utilise normalement avant une op\u233\'e9ration de division de}{\rtlch \ltrch\lang3084\loch
 valeurs de type }{\rtlch \ltrch\i\loch
long}{\loch
. Comme cbw, cwd et cwde, elle n'a pas d'op\u233\'e9randes et on l'utilise comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cdq}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous voulez \u233\'e9tendre une valeur de huit bits \u224\'e0 une valeur de 32 ou de 64 bits, on pourra utiliser une s\u233\'e9quence}{\rtlch \ltrch\lang3084\loch
 comme}{\loch
 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
tendre al \u224\'e0 dx:ax avec le signe}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cbw}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cwd}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
tendre al \u224\'e0 eax avec le signe}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cbw}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cwde}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u201\'c9}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
tendre al \u224\'e0 edx:eax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cbw}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwde}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cdq}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez utiliser \u233\'e9galement movsx pour effectuer des extensions sign\u233\'e9es de huit \u224\'e0 seize ou trente-deux bits ; movsx est une forme g\u233\'e9n\u233\'e9ralis\u233\'e9e de cbw, cwd et cwde. Comme elle peut \u233\'e9tendre une valeur de huit bits \u224\'e0 une de seize ou trente-deux bits, elle peut le faire aussi d'une valeur de seize bits \u224\'e0 une de trente-deux }{\rtlch \ltrch\lang3084\loch
bits}{\loch
. Cette instruction utilise un octet mod-reg-r/m pour sp\u233\'e9cifier les deux op\u233\'e9randes. Les formes disponibles sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab movsx\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que tout ce que vous pouvez faire avec cbw et cwde, vous le pouvez aussi avec movsx : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab ax, al\tab \tab ;CBW}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movsx\tab eax, ax\tab \tab ;CWDE}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab movsx\tab eax, al\tab \tab ;CBW suivi par CWDE}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cependant cbw et cwde sont plus courtes et parfois plus rapides. Cette instruction n}{\rtlch \ltrch\lang3084\loch
'est disponible que sur le 80386 ou ult\u233\'e9rieur. }{\loch
Notez qu'il n'y a pas d'\u233\'e9quivalent direct de movsx pour cwd et cdq. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction movzx fonctionne exactement comme movsx, sauf que ses extensions sont non sign\u233\'e9es (les bits nouveaux sont remplis par des z\u233\'e9ros). La syntaxe aussi est la m\u234\'eame que movsx, mais il faut remplacer naturellement movsx par movzx. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que si vous voulez effectuer une extension non sign\u233\'e9e d'une valeur de huit bits \u224\'e0 seize (par exemple, de al \u224\'e0 ax), un simple mov est plus rapide et plus court que movzx. Par exemple : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab bh, 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
est plus rapide et court que : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movzx\tab bx, bl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Sans doute, si vous convertissez les donn\u233\'e9es entre diff\u233\'e9rents registres (par exemple, movzx bx, al), alors movzx est mieux. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
movsx et movzx, et toute autre instruction diff\u233\'e9rente de cbw et cwd, sont disponibles seulement sur des processeurs de 32 bits. Aucune de ces instructions n'affecte les flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.4.2\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_04_02}{\*\bkmkend p6_04_02}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 BSWAP}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction, disponible seulement sur des processeurs 80486 (oui, 486) et sup\u233\'e9rieurs convertit les valeurs de 32 bits entre }{\rtlch \ltrch\i\loch
little endian }{\loch
et }{\rtlch \ltrch\i\loch
big endian}{\loch
. C'est-\u224\'e0-dire qu'elle accepte uniquement un registre de 32 bits comme op\u233\'e9rande et qu'elle permute le premier octet avec le quatri\u232\'e8me et le second avec le troisi\u232\'e8me. La syntaxe de l'instruction est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bswap\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 reg}{\rtlch \ltrch\sub\loch
32}{\loch
 est un registre g\u233\'e9n\u233\'e9ral de 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille des processeurs Intel se sert d'une organisation de la m\u233\'e9moire appel\u233\'e9e }{\rtlch \ltrch\i\loch
little endian byte organization. }{\loch
Selon cette organisation, l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 d'une s\u233\'e9quence multioctets appara\u238\'eet \u224\'e0 l'adresse m\u233\'e9moire la plus basse de la s\u233\'e9quence. Par exemple, les bits 0 \u224\'e0 7 d'une valeur de 32 bits apparaissent \u224\'e0 l'adresse la plus basse ; les octets 8 \u224\'e0 15 apparaissent \u224\'e0 }{\rtlch \ltrch\lang3084\loch
l\u8217\'92adresse du second octet}{\loch
 ; les bits 16 \u224\'e0 23 forment le troisi\u232\'e8me octet et les bits 24 \u224\'e0 31 }{\rtlch \ltrch\lang3084\loch
le }{\loch
dernier. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre organisation populaire est appel\u233\'e9e }{\rtlch \ltrch\i\loch
big endian}{\loch
. Dans ce sch\u233\'e9ma les bits 24 \u224\'e0 31 apparaissent dans le premier octet, les bits 16 \u224\'e0 23 }{\rtlch \ltrch\lang3084\loch
figurent au second }{\loch
octet, les bits 8 \u224\'e0 15 }{\rtlch \ltrch\lang3084\loch
au }{\loch
troisi\u232\'e8me et les bits 0 \u224\'e0 7 }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l\u8217\'92octet le plus haut}{\loch
. Les CPU comme la famille Motorola 68000 utilis\u233\'e9s par Apple dans leur Macintosh, et aussi diverses puces RISC, emploient ce sch\u233\'e9ma}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
\u201\'c9}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
videmment, les adresses de m\u233\'e9moire dans ces machines sont organis\u233\'e9es en ordre d\u233\'e9croissant, ce qui r\u233\'e9sulte plus naturel. Si vous observez la m\u233\'e9moire de n'importe quel programme dans le syst\u232\'e8me little endian vous verrez que tous les nombres que vous avez entr\u233\'e9s dans vos variables, sont \u233\'e9crits \u224\'e0 l'inverse, car les hommes lisent les nombres de gauche \u224\'e0 droite alors que les emplacements de m\u233\'e9moire se lisent de droite \u224\'e0 gauche. Le syst\u232\'e8me big endian est donc plus lisible par un oeil humain, n.d.t.}
}}
}{\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Normalement, vous n'avez pas \u224\'e0 vous inqui\u233\'e9ter de l'organisation des octets dans la m\u233\'e9moire, car les programmes \u233\'e9crits par un processeur Intel, ne fonctionnent pas sur un processeur 68000. Cependant, il est tr\u232\'e8s commun d'\u233\'e9changer des donn\u233\'e9es entre machines employant des organisations diff\u233\'e9rentes. Malheureusement, les valeurs de 16 et de 32 bits dans des machines de type big endian ne produisent pas des r\u233\'e9sultats corrects quand vous les utilisez dans une machine de type little endian. Et c'est en ceci que l'instruction bswap est utile. Elle vous permet de convertir facilement des valeurs big endian de 32 bits en des valeurs little endians de la m\u234\'eame taille. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un usage int\u233\'e9ressant de bswap est de }{\rtlch \ltrch\lang3084\loch
donner}{\loch
 acc\u232\'e8s \u224\'e0 un second jeu de registres g\u233\'e9n\u233\'e9raux de 16 bits. Si, dans votre code, vous \u234\'eates en train d'utiliser uniquement des registres de 16 bits, vous pouvez doubler le nombre de registres disponibles en utilisant l'instruction bswap pour permuter les donn\u233\'e9es d'un registre de 16 bits avec le mot }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 d'un registre de 32 bits. Par exemple, vous pouvez garder deux valeurs de 16 bits dans eax et d\u233\'e9placer la valeur appropri\u233\'e9e dans ax comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Quelques }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
op\u233\'e9rations}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 qui laissent leur r\u233\'e9sultat dans le registre ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bswap \tab eax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Quelques }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
op\u233\'e9rations}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 suppl\u233\'e9mentaires qui impliquent ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bswap \tab eax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Quelques }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
op\u233\'e9rations}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 impliquant la valeur originale de ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bswap \tab eax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
Op\u233\'e9rations}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 impliquant la seconde copie de ax ci-dessus}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez utiliser cette technique pour obtenir deux copies de ax, bx, cx, dx, si, di et bp. Vous devez }{\rtlch \ltrch\lang3084\loch
avoir}{\loch
 une attention extr\u234\'eame en employant cette technique avec le registre sp !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Note : pour convertir une valeur big endian de 16 bits en une valeur little endian de la m\u234\'eame taille, il vous suffira d'utiliser simplement l'instruction xchg conventionnelle. Par exemple, si ax contient une valeur big endian de 16 bits, vous pouvez la convertir en une valeur little endian (ou vice-versa) via : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xchg\tab al, ah}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction bswap n'affecte pas les drapeaux du registre flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.4.3\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_04_03}{\*\bkmkend p6_04_03}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 XLAT}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction xlat traduit la valeur du registre al en se basant sur une table de correspondance en m\u233\'e9moire. Elle fait ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
temp := al+bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab al := ds:[temp]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
C}{\loch
'est-\u224\'e0-dire, bx pointe sur une table dans le segment de donn\u233\'e9es courant. xlat remplace la valeur de al avec l'octet \u224\'e0 l'offset qui \u233\'e9tait \u224\'e0 l'origine dans al. Si al contient 4, xlat remplace la valeur de al avec le cinqui\u232\'e8me \u233\'e9l\u233\'e9ment (l'offset quatre) \u224\'e0 l'int\u233\'e9rieur de la table point\u233\'e9e par ds:bx. Cette instruction a la syntaxe : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xlat}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Normalement elle n'a pas d'op\u233\'e9randes, vous pouvez en sp\u233\'e9cifier une, mais l'assembleur l'ignore virtuellement. Le seul int\u233\'e9r\u234\'eat du fait de sp\u233\'e9cifier une op\u233\'e9rande est de pouvoir fournir un pr\u233\'e9fixe de surcharge du registre de segment :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xlat\tab es:Table}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Ceci indique \u224\'e0 l'assembleur d'\u233\'e9mettre un octet de pr\u233\'e9fixe es: avant l'instruction. Vous devez encore charger bx avec l'adresse de la table et la forme ci-dessus ne fournit pas l'adresse de la table. Seulement le segment de pr\u233\'e9fixe de surcharge de segment est significatif. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction n'affecte pas les flags. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_05}{\*\bkmkend p6_05}\rtlch \ltrch\fs23\b\loch
6.5\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions arithm\u233\'e9tiques}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80x86 permettent de nombreuses op\u233\'e9rations arithm\u233\'e9tiques : addition, soustraction, n\u233\'e9gation, multiplication, division / modulo (reste), et comparaisons. Les instructions qui se chargent de ces op\u233\'e9rations sont add, adc, sub, sbb, mul, imul, div, idiv, cmp, neg, inc, dec, xadd, cmpxchg et diverses instructions de conversion : aaa, aad, aam, aas, daa et das. La section suivante les d\u233\'e9crit en d\u233\'e9tail. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les formes g\u233\'e9n\u233\'e9riques pour ces instructions sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab dest, src\tab \tab ;dest := dest + src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
adc\tab dest, src\tab \tab ;dest := dest + src + C}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab dest, src\tab \tab ;dest := dest - src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sbb\tab dest, src\tab \tab ;dest := dest - src - C}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mul\tab src\tab \tab \tab ;acc  := acc * src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab src\tab \tab \tab ;acc  := acc * src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab dest, src}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, imm_src\tab ;dest := src}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 * imm_src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab dest, imm_src\tab \tab ;dest := dest * imm_src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab dest, src\tab \tab ;dest := dest * src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
div\tab src\tab \tab \tab ;acc := xacc /-mod src }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab src\tab \tab \tab ;acc := xacc /-mod src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab dest, src\tab \tab ;dest - src (et ajuster les flags)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
neg\tab dest\tab \tab \tab ;dest := -dest}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
inc \tab dest\tab \tab \tab ;dest := dest + 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dec \tab dest\tab \tab \tab ;dest := dest - 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xadd\tab dest, src\tab \tab ;(voir plus loin)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2\tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg8 ax, operande\tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aaa\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aad\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aam\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aas\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
daa\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
das\tab \tab \tab \tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.1\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\lang3084\b\loch
ddition}{{\*\bkmkstart p6_05_01}{\*\bkmkend p6_05_01}\rtlch \ltrch\fs23\b\loch
 : ADD, ADC, INC, XADD, AAA et DAA}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions prennent les formes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab reg, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab mem, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab eax/ax/al, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;les formes adc sont identiques \u224\'e0 add}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
inc\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
inc\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
inc\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xadd\tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xadd\tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aaa}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
daa}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que aaa et daa utilisent des modes d'adressage implicites et ne permettent pas d'op\u233\'e9randes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.1.1\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s ADD et ADC}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La syntaxe de add et adc (}{\rtlch \ltrch\i\loch
add with carry}{\loch
, (additionner avec retenue)), est semblable \u224\'e0 mov. Comme pour mov, il y a des formes sp\u233\'e9ciales pour les registres ax et eax qui sont plus efficaces. Contrairement }{\rtlch \ltrch\lang3084\loch
\u224\'e0 mov, }{\loch
vous ne pouvez pas additionner une valeur et un registre de segment }{\rtlch \ltrch\lang3084\loch
avec des instructions}{\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction add }{\rtlch \ltrch\lang3084\loch
additionne}{\loch
 le contenu de l'op\u233\'e9rande source \u224\'e0 l'op\u233\'e9rande de destination. Par exemple, add ax, bx }{\rtlch \ltrch\lang3084\loch
additionne}{\loch
 bx \u224\'e0 ax en laissant le r\u233\'e9sultat dans ax. add calcule dest:=dest+source, alors que adc calcule dest:=dest+source+C, o\u249\'f9 C repr\u233\'e9sente la valeur du drapeau }{\rtlch \ltrch\i\loch
carry}{\loch
 (retenue). Par cons\u233\'e9quent si ce drapeau est d\u233\'e9sactiv\u233\'e9 avant l'ex\u233\'e9cution, adc se comporte exactement comme add. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux instructions affectent les flags de mani\u232\'e8re identique. Elles les activent comme suit :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
overflow}{\rtlch \ltrch\lang3084\loch
 indique un d\u233\'e9passement de capacit\u233\'e9 sign\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
carry}{\rtlch \ltrch\lang3084\loch
 indique un d\u233\'e9passement de capacit\u233\'e9 non sign\u233\'e9}{\loch
\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\lang3084\loch
\u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
sign}{\rtlch \ltrch\lang3084\loch
 indique un r\u233\'e9sultat n\u233\'e9gatif (c'est-\u224\'e0-dire que le bit le plus significatif du r\u233\'e9sultat est 1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
zero}{\rtlch \ltrch\lang3084\loch
 est activ\u233\'e9 si le r\u233\'e9sultat de l'addition est z\u233\'e9ro}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
auxiliary carry }{\rtlch \ltrch\lang3084\loch
contient 1 si un BCD d\u233\'e9passe la capacit\u233\'e9 du quartet}{{\super \rtlch \ltrch\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
Nibble}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 en anglais, qui correspond \u224\'e0 un groupe de 4 bits, soit la moiti\u233\'e9 d'un octet (voir chapitre 1), n.d.t.}
}}
}{\rtlch \ltrch\lang3084\loch
 le moins significatif.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
parity}{\rtlch \ltrch\lang3084\loch
 est activ\u233\'e9 ou d\u233\'e9sactiv\u233\'e9 selon la parit\u233\'e9 des huit bits de l'octet le moins significatif du r\u233\'e9sultat. Si le r\u233\'e9sultat contient un nombre pair de bits, l'instruction add mettra le drapeau de parit\u233\'e9 \u224\'e0 1 (pour indiquer la parit\u233\'e9). Dans le cas contraire, s'il y a un nombre impair de bits dans le r\u233\'e9sultat, l'instruction add met \u224\'e0 z\u233\'e9ro le flag (pour indiquer la non-parit\u233\'e9).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions add et adc n'affectent pas les autres drapeaux. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces deux instructions admettent des op\u233\'e9randes de huit, seize et (sur des processeurs qui les supportent) trente-deux bits. Les deux op\u233\'e9randes de source et de destination doivent avoir la m\u234\'eame taille. Voir le chapitre neuf pour savoir comment additionner des op\u233\'e9randes de tailles diff\u233\'e9rentes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisqu'il n'y a pas d'additions de m\u233\'e9moire \u224\'e0 m\u233\'e9moire, pour effectuer la somme de deux variables, vous devez charger au moins }{\rtlch \ltrch\lang3084\loch
un registre avec une des op\u233\'e9randes}{\loch
. }{\rtlch \ltrch\lang3084\loch
L'exemple suivant, d\u233\'e9montre des variations possibles : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := K + M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour additionner plusieurs valeurs, vous pouvez facilement calculer la somme dans un seul registre : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := K + M + N + P}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, N}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, P}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour r\u233\'e9duire le nombre d'effets de bord sur des processeurs 80486 et Pentium, vous pouvez utiliser un code comme le suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab bx, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, N}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, P}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'une des choses que les d\u233\'e9butants en assembleur oublient le plus souvent est qu'on peut additionner un registre \u224\'e0 un emplacement de m\u233\'e9moire. Parfois, les d\u233\'e9butants }{\rtlch \ltrch\lang3084\loch
arrivent m\u234\'eame \u224\'e0 croire }{\loch
que les deux op\u233\'e9randes doivent se trouver dans des registres, en oubliant compl\u232\'e8tement la le\u231\'e7on du chapitre quatre. Les processeurs 80x86 sont des processeurs CISC permettant d'utiliser des modes d'adressage de m\u233\'e9moire avec diverses instructions, dont add. Et, souvent, c'est m\u234\'eame plus efficace de profiter de ces avantages. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
J := K + J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, K\tab ;ceci fonctionne parce que l'addition est }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab J, ax\tab ;commutative !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Souvent, les d\u233\'e9butants codent le}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
s op\u233\'e9rations }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ci-dessus }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
selon}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 l'une ou l'autre}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;des s\u233\'e9quences suivantes. Ceci est inutile !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, J\tab ;Une tr\u232\'e8s MAUVAISE mani\u232\'e8re d'effectuer J:=J+K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab bx, K\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, J\tab ;Un peu mieux, mais pas encore un bon moyen }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, K\tab ;d'effectuer J:=J+K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien s\u251\'fbr, pour additionner une constante \u224\'e0 un emplacement de m\u233\'e9moire, une seule instruction suffit. En effet, un CPU 80x86 vous permet d'effectuer directement une addition entre une constante et une variable :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
J := J + 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab J, 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a des versions sp\u233\'e9ciales des instructions add et adc qui permettent d'additionner une constante imm\u233\'e9diate aux registres al, ax ou eax. Ces versions sont plus courtes que les instructions standard de type add reg, imm. D'autres instructions fournissent aussi des formes plus courtes quand vous utilisez ces registres ; par cons\u233\'e9quent, essayez de garder les op\u233\'e9rations dans le registre accumulateur (al, ax, eax) aussi souvent que possible. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, 2\tab ;3 octets de long}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab al, 2\tab ;2 octets de long}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, 2\tab ;4 octets de long}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, 2\tab ;3 octets de long}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une autre optimisation avec les instructions add et adc consiste en l'utilisation de petites constantes sign\u233\'e9es. Si une valeur est dans la plage -128,+127, les instructions add et adc effectueront une extension sign\u233\'e9e pour toute constante de huit bits jusqu'\u224\'e0 la taille n\u233\'e9cessaire pour la destination (huit, seize ou trente-deux bits). Par cons\u233\'e9quent, avec add et adc, utilisez de petites constantes (si possible). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.1.2\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_05_01_02}{\*\bkmkend p6_05_01_02}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 INC}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction inc (incr\u233\'e9ment) additionne 1 \u224\'e0 son op\u233\'e9rande. Sauf pour le drapeau de retenue, inc affecte les flags de la m\u234\'eame fa\u231\'e7on que le ferait }{\rtlch\ai \ltrch\i\loch
add operande, 1.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez qu'il y a deux formes de }{\rtlch\ai \ltrch\i\loch
inc}{\loch
 pour les registres de 16 et de 32 bits. Il y a inc reg et inc reg}{\rtlch \ltrch\sub\loch
16}{\loch
. inc reg et inc mem sont la m\u234\'eame chose. Cette instruction consiste en un opcode byte suivi par mod-reg-r\u233\'e9m byte (voir l'annexe D pour les d\u233\'e9tails). L'instruction inc reg}{\rtlch \ltrch\sub\loch
16}{\loch
 a un }{\rtlch \ltrch\lang3084\loch
seul opcode byte}{\loch
 ; par cons\u233\'e9quent, elle est plus courte et souvent plus rapide. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'op\u233\'e9rande de l'instruction inc peut \u234\'eatre un registre ou un emplacement de m\u233\'e9moire de 8, 16 ou (sur des processeurs qui le supportent) 32 bits.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction inc est plus compacte et souvent plus rapide que add reg, 1 ou add mem, 1. En fait, inc reg}{\rtlch \ltrch\sub\loch
16}{\loch
 a seulement un octet de long, ce qui fait que deux de ces instructions sont plus courtes que l'instruction comparable add reg, 2 ; n\u233\'e9anmoins, les deux instructions d'incr\u233\'e9mentation sont moins rapides dans certains membres modernes de la famille 80x86. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction inc est tr\u232\'e8s importante parce }{\rtlch \ltrch\lang3084\loch
qu'elle ajoute}{\loch
 1 \u224\'e0 un registre, est une op\u233\'e9ration tr\u232\'e8s commune, comme l'incr\u233\'e9mentation des variables de contr\u244\'f4le de boucle ou celle des index des tableaux, un cas parfait pour l'instruction inc. Et le fait qu'inc n'affecte pas le drapeau de retenue est aussi tr\u232\'e8s important, car ceci permet d'incr\u233\'e9menter les index des tableaux sans affecter le r\u233\'e9sultat d'une op\u233\'e9ration arithm\u233\'e9tique \u224\'e0 pr\u233\'e9cision multiple (voir le d\u233\'e9but du chapitre 9 pour plus de d\u233\'e9tails }{\rtlch \ltrch\lang3084\loch
sur}{\loch
 cette arithm\u233\'e9tique). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.1.3\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_05_01_03}{\*\bkmkend p6_05_01_03}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 XADD}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
XADD}{\loch
 (Exchange and Add) est une autre instruction disponible seulement \u224\'e0 partir du microprocesseur 80486. Cette instruction additionne l'op\u233\'e9rande de source et l'op\u233\'e9rande de destination et garde le r\u233\'e9sultat dans la destination. Cependant, juste avant de stocker la somme, elle copie la valeur originale de l'op\u233\'e9rande de destination dans l'op\u233\'e9rande de source. L'algorithme suivant d\u233\'e9crit l'op\u233\'e9ration : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xadd\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
temp := dest}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dest := dest + source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
source := temp}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
XADD}{\loch
 modifie les flags exactement comme }{\rtlch \ltrch\lang3084\loch
ADD}{\loch
 ; elle admet des op\u233\'e9randes de huit, seize et trente-deux bits, mais la source et la destination doivent avoir la m\u234\'eame taille. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.1.4\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s AAA et DAA}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
AAA}{\loch
 (}{\rtlch \ltrch\i\loch
ASCII adjust after addition}{\loch
) et }{\rtlch \ltrch\lang3084\loch
DAA}{\loch
 (}{\rtlch \ltrch\i\loch
decimal adjust for addition}{\loch
) supportent l'arithm\u233\'e9tique }{\rtlch \ltrch\i\loch
D\u233\'e9cimal Cod\u233\'e9 Binaire}{\loch
. Au-del\u224\'e0 de ce chapitre, on ne couvrira pas les arithm\u233\'e9tiques BCD et ASCII, puisque ces notations sont destin\u233\'e9es \u224\'e0 des application}{\rtlch \ltrch\lang3084\loch
s}{\loch
 de contr\u244\'f4le et non }{\rtlch \ltrch\lang3084\loch
\u224\'e0 }{\loch
des techniques g\u233\'e9n\u233\'e9rales de programmation. Les valeurs BCD sont des entiers d\u233\'e9cimaux cod\u233\'e9s en forme binaire, repr\u233\'e9sentant un nombre d\u233\'e9cimal (0...9) par quartet. Les valeurs num\u233\'e9riques ASCII contiennent un nombre d\u233\'e9cimal par octet et le quartet le plus significatif doit \u234\'eatre \u224\'e0 z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions aaa et daa modifient le r\u233\'e9sultat d'une addition binaire pour le corriger selon l'arithm\u233\'e9tique d\u233\'e9cimale ou ASCII. Par exemple, pour additionner deux valeurs BCD, on doit les additionner comme si elles \u233\'e9taient des nombres binaires et ensuite on doit ex\u233\'e9cuter daa afin de corriger le r\u233\'e9sultat. De la m\u234\'eame fa\u231\'e7on, vous pouvez utiliser aaa pour ajuster le r\u233\'e9sultat selon le mode ASCII apr\u232\'e8s avoir effectu\u233\'e9 une instruction add. Veuillez noter que ces deux instructions prennent pour acquis que les op\u233\'e9randes de add sont des valeurs d\u233\'e9cimales ou ASCII correctes. Si vous additionnez des valeurs binaires (non d\u233\'e9cimales ou non ASCII) et vous essayez de les ajuster \u224\'e0 l'aide de ces instructions, vos r\u233\'e9sultats seront erron\u233\'e9s.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le choix du nom }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
arithm\u233\'e9tique ASCII }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
 est malheureux, car ces valeurs ne sont pas de vrais caract\u232\'e8res ASCII. Un nom comme }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
BCD d\u233\'e9compact\u233\'e9 }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
 serait plus appropri\u233\'e9. N\u233\'e9anmoins Intel utilise le nom ASCII, donc ce livre le fait aussi pour ne pas cr\u233\'e9er des confusions inutiles. }{\rtlch \ltrch\lang3084\loch
N\u233\'e9anmoins,}{\loch
 vous entendrez souvent le terme }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
BCD d\u233\'e9compact\u233\'e9 }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
 pour d\u233\'e9crire ce type de donn\u233\'e9e. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction aaa, que vous ex\u233\'e9cutez g\u233\'e9n\u233\'e9ralement apr\u232\'e8s une instruction add, adc ou xadd, v\u233\'e9rifie la valeur de al pour voir si un overflow de type BCD s'est produit. Elle fonctionne selon l'algorithme }{\rtlch \ltrch\lang3084\loch
de base}{\loch
 suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if((al and 0Fh) > 9 or (AuxC}{{\super \rtlch\dbch\af15 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
AuxC indique le drapeau }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
auxiliary carry }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
dans le registre flags. }
}}
}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 = 1) then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if(8088 or 8086)}{{\super \rtlch\dbch\af15 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Les processeurs 8086}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
/8088 fonctionnent diff\u233\'e9remment par rapport aux microprocesseurs plus modernes, mais pour toutes les op\u233\'e9randes valides, tous les membres de la famille 80x86 produisent des r\u233\'e9sultats corrects. }
}}
}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := al + 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab else}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ax := ax + 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ah := ah + 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AuxC := 1\tab ;Active le drapeau de retenue auxiliaire}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Carry := 1\tab ;et le drapeau de retenue simple}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
else}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab AuxC := 0\tab ;D\u233\'e9sactive le drapeau de retenue auxiliaire}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab Carry := 0\tab ;et le drapeau de retenue simple}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := al and 0Fh}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction aaa est principalement utile pour additionner des cha\u238\'eenes de chiffres quand il y a exactement un chiffre d\u233\'e9cimal par octet dans une cha\u238\'eene de nombres. Ce livre ne s'occupera pas des cha\u238\'eenes num\u233\'e9riques BCD ou ASCII, donc vous pouvez tranquillement les ignorer pour l'instant. Vous pourrez sans doute utiliser l'instruction aaa toutes les fois }{\rtlch \ltrch\lang3084\loch
que vous avez }{\loch
besoin de l'algorithme ci-dessus, mais ce sera probablement une situation rare. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction daa fonctionne comme aaa, mais elle traite des valeurs BCD compact\u233\'e9es et non les valeurs d\u233\'e9compact\u233\'e9es correspondant \u224\'e0 un chiffre d\u233\'e9cimal par octet que aaa traite. Tout comme pour aaa, la fonction principale de daa est d'additionner des cha\u238\'eenes de chiffres BCD (avec deux chiffres par octet). L'algorithme de daa est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if ((al and 0Fh) > 9 or (AuxC = 1)) then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab al := al + 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab AuxC := 1\tab \tab ;Active le drapeau auxiliary carry}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if ((al > 9Fh) or (Carry = 1)) then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab al := al + 60h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab Carry := 1\tab \tab ;Active le drapeau carry}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.2\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s de }{{\*\bkmkstart p6_05_02}{\*\bkmkend p6_05_02}\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
oustraction : SUB, SBB, DEC, AAS et DAS}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions sub (substract), sbb (substract with borrow (soustraire avec retenue)), dec (d\u233\'e9cr\u233\'e9ment), aas (ASCII adjust for substraction), and das (decimal adjust for substraction), fonctionnent exactement comme vous vous attendez. Leur syntaxe est tr\u232\'e8s semblable \u224\'e0 celle de l'instruction add : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub \tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab reg, val_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab mem, val_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub \tab eax/ax/al, val_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ;Les formes de sbb sont identiques \u224\'e0 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
la forme}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 de sub. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dec\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dec \tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dec\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aas}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
das}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction sub calcule la valeur dest := dest - src. sbb effectue dest := dest - src - C. Comme vous savez, la soustraction n'est pas commutative. Si vous voulez avoir le r\u233\'e9sultat de dest := src - dest, vous aurez besoin d'utiliser plusieurs instructions, en }{\rtlch \ltrch\lang3084\loch
supposant}{\loch
 que vous voulez pr\u233\'e9server l'op\u233\'e9rande de source. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un dernier sujet qui vaut la peine }{\rtlch \ltrch\lang3084\loch
de mentionner }{\loch
est comment l'instruction sub affecte les flags}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
SBB les affecte de mani\u232\'e8re similaire, sans pourtant oublier que SBB effectue dest - src - C. }
}}
}{\loch
. Les instructions sub, sbb et dec affectent les drapeaux de la mani\u232\'e8re suivante :  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles activent le flag z\u233\'e9ro si le r\u233\'e9sultat est nul, ce qui arrive seulement si les op\u233\'e9randes sont \u233\'e9gales pour sub et sbb, alors que dec active ce drapeau seulement lorsqu'elle d\u233\'e9cr\u233\'e9mente la valeur 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Toutes ces instructions activent le drapeau }{\rtlch \ltrch\lang3084\i\loch
sign}{\rtlch \ltrch\lang3084\loch
 seulement si elles produisent un r\u233\'e9sultat n\u233\'e9gatif. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles activent le flag }{\rtlch \ltrch\lang3084\i\loch
overflow }{\rtlch \ltrch\lang3084\loch
s'il se produit un d\u233\'e9passement sign\u233\'e9 de capacit\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag }{\rtlch \ltrch\lang3084\i\loch
auxiliary carry}{\rtlch \ltrch\lang3084\loch
 est activ\u233\'e9 en accord avec les syst\u232\'e8mes BCD/ASCII. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de parit\u233\'e9 est affect\u233\'e9 selon que le nombre de bits valant 1 dans le r\u233\'e9sultat est pair ou impair. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab sub et sbb activent le drapeau de retenue (}{\rtlch \ltrch\lang3084\i\loch
carry}{\rtlch \ltrch\lang3084\loch
) si un d\u233\'e9passement non sign\u233\'e9 de capacit\u233\'e9 a lieu. Notez que dec ne l'affecte jamais. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
aas, tout comme sa correspondante aaa, permet d'effectuer des op\u233\'e9rations sur des cha\u238\'eenes de nombres ASCII avec un chiffre d\u233\'e9cimal de 0 \u224\'e0 9 pour chaque octet. Vous pouvez utiliser cette instruction apr\u232\'e8s un sub ou un sbb sur une valeur ASCII. Elle utilise l'algorithme suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
if ((al and 0Fh) }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
> 9 or AuxC = 1) then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := al - 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ah := ah - 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AuxC := 1\tab ;Active le drapeau de retenue auxiliaire}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Carry := 1\tab ;et le drapeau de retenue simple}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
else}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AuxC := 0\tab ;D}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u233\'e9sactive le flag auxiliary carry}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
Carry := 0\tab ;et carry}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
al := al and 0Fh}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction das fait la m\u234\'eame chose, mais pour des valeurs BCD, et }{\rtlch \ltrch\lang3084\loch
elle }{\loch
utilise l'algorithme suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
if ((al and 0Fh) }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
> 9 or AuxC = 1) then}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := al - 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AuxC := 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if (al > 9Fh or Carry = 1) then }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := al - 60h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
Carry := 1\tab ;active le drapeau de retenue}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque la soustraction n}{\rtlch \ltrch\lang3084\loch
'est pas commutative, vous ne pouvez pas utiliser sub aussi librement que add. Les exemples qui suivent montrent certains des probl\u232\'e8mes que vous pourriez rencontrer : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
;J := K - J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab mov\tab ax, K\tab ;Bon essai, mais il calcule J:=J-K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab sub \tab J, ax\tab ;et la soustraction n'est pas commutative !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mov\tab ax, K\tab ;Solution correcte. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
sub\tab ax, J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
;J := J - (K + M) -- n'oubliez pas que c'est \u233\'e9quivalent \u224\'e0 J := J - K - M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mov \tab ax, K\tab ;Effectue AX := K + M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
add\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
sub\tab J, ax\tab ;Effectue J := J - (K + M)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mov \tab ax, J\tab ;Une autre solution, mais moins efficace}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
sub\tab ax, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
sub\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les instructions sub et sbb, comme add et adc, fournissent des formes courtes pour soustraire une constante du registre accumulateur (al, ax ou eax). Pour cette raison, essayez de garder les soustractions arithm\u233\'e9tiques dans l'accumulateur autant que possible. Ces instructions fournissent \u233\'e9galement une forme plus courte quand vous soustrayez des constantes dans la plage -128...127 \u224\'e0 un registre ou \u224\'e0 un emplacement de m\u233\'e9moire. L'instruction fait automatiquement une extension sign\u233\'e9e pour ces constantes selon la taille de destination avant d'effectuer la soustraction. Lisez l'annexe D pour les d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En pratique, on n'a pas vraiment besoin d'une instruction qui soustrai}{\rtlch \ltrch\lang3084\loch
t}{\loch
 une constante d'un registre ou d'une variable : additionner une valeur n\u233\'e9gative produit le m\u234\'eame r\u233\'e9sultat. N\u233\'e9anmoins, Intel fournit des instructions de soustraction directe}{\rtlch \ltrch\lang3084\loch
s}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Apr\u232\'e8s une soustraction, les drapeaux de contr\u244\'f4le de code (}{\rtlch \ltrch\i\loch
carry}{\loch
, }{\rtlch \ltrch\i\loch
sign}{\loch
, }{\rtlch \ltrch\i\loch
overflow}{\loch
 et }{\rtlch \ltrch\i\loch
zero}{\loch
) contiennent des valeurs que vous pouvez tester pour voir si une op\u233\'e9rande est \u233\'e9gale, diff\u233\'e9rente, inf\u233\'e9rieure, inf\u233\'e9rieure ou \u233\'e9gale, sup\u233\'e9rieure, ou sup\u233\'e9rieure/\u233\'e9gale \u224\'e0 l'autre op\u233\'e9rande. Voyez le paragraphe suivant pour plus de d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.3\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_05_03}{\*\bkmkend p6_05_03}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 CMP}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cmp (compare) est identique \u224\'e0 l'instruction sub, avec une diff\u233\'e9rence cruciale : elle ne garde pas le r\u233\'e9sultat dans l'op\u233\'e9rande de destination. La syntaxe est tr\u232\'e8s similaire \u224\'e0 celle de sub, sa forme g\u233\'e9n\u233\'e9rale est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab dest, src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les formes sp\u233\'e9cifiques sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp \tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp \tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab reg, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab mem, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab eax/ax/al, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction met \u224\'e0 jour les drapeaux du registre flags, selon le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
de l'o}{\loch
p\u233\'e9ration de soustraction }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92elle effectue }{\loch
(destination - source). Vous pouvez tester les r\u233\'e9sultats en contr\u244\'f4lant les drapeaux appropri\u233\'e9s du registre flags. Pour des d\u233\'e9tails sur cette op\u233\'e9ration voir les paragraphes 6.6.5 (instructions }{\rtlch \ltrch\lang3084\loch
d'\u171\'ab Activation}{\loch
 sous Condition }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
) et 6.9.4 (instructions de }{\rtlch \ltrch\lang3084\loch
\u171\'ab }{\loch
Saut }{\rtlch \ltrch\lang3084\loch
c}{\loch
onditionnel }{\rtlch \ltrch\lang3084\loch
\u187\'bb}{\loch
). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Normalement, on effectue un saut conditionnel apr\u232\'e8s une instruction cmp. Ce proc\u233\'e9d\u233\'e9 (comparer deux valeurs et ajuster les flags, puis les tester avec les instructions conditionnelles de saut), constitue un m\u233\'e9canisme tr\u232\'e8s efficace pour faire prendre des d\u233\'e9cisions \u224\'e0 un programme. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Probablement, le meilleur point de d\u233\'e9part,}{\rtlch \ltrch\lang3084\loch
 \u224\'e0 l\u8217\'92heure d\u8217\'92}{\loch
explorer les instructions de comparaison est voir exactement comment cmp affecte les flags. Consid\u233\'e9rez l'instruction suivante : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab ax, bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction calcule ax-bx et modifie les drapeaux selon le r\u233\'e9sultat de l'op\u233\'e9ration. Les flags sont modifi\u233\'e9s comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
Z : \tab Le flag }{\rtlch\ai \ltrch\lang3084\i\loch
zero}{\loch
 est activ\u233\'e9 si et seulement si ax = bx. C'est le seul cas o\u249\'f9 ax - bx produit un r\u233\'e9sultat nul. Donc, vous pouvez utiliser le flag z\u233\'e9ro pour v\u233\'e9rifier l'\u233\'e9galit\u233\'e9 ou l'in\u233\'e9galit\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
S : \tab Le flag }{\rtlch\ai \ltrch\i\loch
sign}{\loch
 est activ\u233\'e9 si le r\u233\'e9sultat est n\u233\'e9gatif. De premier abord, on pourrait croire que ce drapeau est activ\u233\'e9 si ax est inf\u233\'e9rieur \u224\'e0 bx, mais ce n'est pas toujours le cas. Si ax=7FFFh et bx=-1 (0FFFFh), }{\rtlch \ltrch\lang3084\loch
le fait de }{\loch
soustraire ax de bx produit 8000h, lequel est n\u233\'e9gatif (et donc le drapeau de signe est mis). }{\rtlch \ltrch\lang3084\loch
Par cons\u233\'e9quent}{\loch
, pour des comparaisons sign\u233\'e9es, le drapeau de signe ne contient pas l'\u233\'e9tat correct. Pour des op\u233\'e9randes non sign\u233\'e9es, consid\u233\'e9rez ax = 0FFFFh et bx=1. ax est plus grand que bx, mais leur diff\u233\'e9rence est 0FFFEh, laquelle est encore n\u233\'e9gative. En v\u233\'e9rit\u233\'e9, les drapeaux de signe et de d\u233\'e9passement de capacit\u233\'e9, pris ensemble, peuvent \u234\'eatre utilis\u233\'e9s pour comparer deux valeurs sign\u233\'e9es. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
O :\tab Le drapeau de d\u233\'e9passement de capacit\u233\'e9 (}{\rtlch\ai \ltrch\i\loch
overflow}{\loch
) est activ\u233\'e9 apr\u232\'e8s une op\u233\'e9ration de comparaison si, la diff\u233\'e9rence entre ax et bx produit un d\u233\'e9passement de capacit\u233\'e9 (n\u233\'e9gatif ou positif). Comme mentionn\u233\'e9 ci-dessus, le drapeau }{\rtlch\ai \ltrch\i\loch
sign}{\loch
 et le drapeau }{\rtlch\ai \ltrch\i\loch
overflow}{\loch
 sont utilis\u233\'e9s ensemble pour effectuer des comparaisons sign\u233\'e9es. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
C : \tab Le drapeau de retenue est mis apr\u232\'e8s une op\u233\'e9ration de comparaison si le fait de soustraire bx de ax requiert une retenue. Ce qui arrive seulement quand ax est plus petit que bx, \u233\'e9tant ax et bx non sign\u233\'e9s.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cmp affecte aussi le drapeau de parit\u233\'e9 et le drapeau de retenue auxiliaire, mais on teste rarement ces drapeaux apr\u232\'e8s une op\u233\'e9ration de comparaison. Etant donn\u233\'e9 que cmp active les flags de cette mani\u232\'e8re, vous pouvez tester la comparaison des deux op\u233\'e9randes avec les drapeaux suivants : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp Oper}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, Oper}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\-}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tableau 27 : codes de condition des flags apr\u232\'e8s CMP }
\par \trowd\trql\trleft841\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4172\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7512\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Op\u233\'e9randes non sign\u233\'e9es : }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\sb60\sa60{\loch
Op\u233\'e9randes sign\u233\'e9es : }\cell\row\pard\trowd\trql\trleft841\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4172\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7512\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
Z : \u233\'e9galit\u233\'e9 / in\u233\'e9galit\u233\'e9}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
Z : \u233\'e9galit\u233\'e9 / in\u233\'e9galit\u233\'e9}\cell\row\pard\trowd\trql\trleft841\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4172\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7512\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
C : oper}{\rtlch \ltrch\sub\loch
1}{\loch
 < oper}{\rtlch \ltrch\sub\loch
2}{\loch
 (C=1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{
      }{\loch
oper}{\rtlch \ltrch\sub\loch
1}{\loch
 >= oper}{\rtlch \ltrch\sub\loch
2}{\loch
 (C=0)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
C : pas de signification}\cell\row\pard\trowd\trql\trleft841\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4172\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7512\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
S : pas de signification}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
S : voir ci-dessous}\cell\row\pard\trowd\trql\trleft841\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4172\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7512\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
O : pas de signification}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\loch
O : voir ci-dessous}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb115\sa115{\rtlch\dbch\af12\dbch\af12\hich\af6 \ltrch\expnd-2\expndtw-12\loch\f6\loch
\tab }{\rtlch \ltrch\expnd0\expndtw0\loch
Pour des comparaisons sign\u233\'e9es, S (sign) et O (overflow), pris ensemble, ont la signification suivante : Si ((S=0) et (O=1)) ou ((S=1) et (O=0)) alors oper1<oper2 quand il s'agit d'une comparaison sign\u233\'e9e. Si ((S=0) et (O=0)) ou ((S=1) et (O=1)) alors oper1>=oper2 quand il s'agit d'une comparaison sign\u233\'e9e.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprendre pourquoi ces drapeaux sont activ\u233\'e9s de cette fa\u231\'e7on, consid\u233\'e9rez les exemples suivants : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
oper1\tab \tab moins\tab \tab oper2\tab \tab S\tab O}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
-----\tab \tab -----\tab \tab -----\tab \tab -\tab -}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
0FFFF (-1)\tab   -\tab \tab 0FFFE (-2)\tab 0\tab 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
08000 (-32768)\tab   -\tab \tab 00001 \tab \tab 0\tab 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
0FFFE (-2)\tab   -\tab \tab 0FFFF (-1)\tab 1\tab 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
07FFF (32767)\tab   -\tab \tab 0FFFF (-1)\tab 1\tab 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Rappellez}{\loch
-vous que l'op\u233\'e9ration cmp est r\u233\'e9ellement une soustraction, par cons\u233\'e9quent, le premier exemple ci-dessus effectue (-1)-(-2) et on a (+1). Le r\u233\'e9sultat est positif et un d\u233\'e9passement ne se produit pas, donc les deux  drapeaux S et O sont \u224\'e0 z\u233\'e9ro. Puisque (S xor O)}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Se souvenir que xor a, b = (a and b') or (a' and b), n.d.t.}
}}
}{\loch
 vaut z\u233\'e9ro, alors oper1 est sup\u233\'e9rieure ou \u233\'e9gale \u224\'e0 oper2. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans le second exemple, cmp effectue (-32768)-(+1) = (-32769). Puisqu'un entier de 16 bits ne peut  repr\u233\'e9senter ce nombre, le r\u233\'e9sultat fait le tour pour devenir 7FFFh (+32767) et }{\rtlch \ltrch\lang3084\loch
il }{\loch
active le drapeau de d\u233\'e9passement de capacit\u233\'e9. Puisque le r\u233\'e9sultat est positif (au moins dans les limites de 16 bits), le drapeau de signe est nettoy\u233\'e9 (mis \u224\'e0 z\u233\'e9ro). Puisque (S xor O) vaut 1 ici, alors oper1 est inf\u233\'e9rieur}{\rtlch \ltrch\lang3084\loch
e}{\loch
 \u224\'e0 oper2. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans le troisi\u232\'e8me exemple, cmp effectue (-2)-(-1), ce qui donne -1. Il n'y a pas de d\u233\'e9passement de capacit\u233\'e9 (le flag O vaut 0), mais le r\u233\'e9sultat est n\u233\'e9gatif, donc le flag sign est mis \u224\'e0 1. Et puisque (S xor O) vaut 1, alors oper1 est encore inf\u233\'e9rieur}{\rtlch \ltrch\lang3084\loch
e}{\loch
 \u224\'e0 oper2. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Finalement, dans le dernier exemple, cmp calcule (32767) - (-1), ce qui donne (+32768). Ceci active overflow. De plus, la valeur fait le tour et devient 8000h (-32768) et le drapeau de signe est \u233\'e9galement activ\u233\'e9. Et, puisque (S xor O) vaut z\u233\'e9ro }{\rtlch \ltrch\lang3084\loch
ici}{\loch
, alors oper1 est sup\u233\'e9rieur}{\rtlch \ltrch\lang3084\loch
e}{\loch
 ou \u233\'e9gal}{\rtlch \ltrch\lang3084\loch
e}{\loch
 \u224\'e0 oper2. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.4\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s CMPXCHG et CMPXCHG8B}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cmpxchg (compare and exchange) est disponible seulement sur les processeurs 80486 et sup\u233\'e9rieurs et }{\rtlch \ltrch\lang3084\loch
elle }{\loch
supporte la syntaxe suivante : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg\tab \tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg\tab \tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9randes doivent avoir la m\u234\'eame taille (huit, seize ou trente-deux bits). Cette instruction utilise aussi le registre accumulateur en choisissant automatiquement al, ax ou eax pour satisfaire la taille des op\u233\'e9randes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction compare al, ax ou eax avec la premi\u232\'e8re op\u233\'e9rande et active le flag z\u233\'e9ro si elles sont \u233\'e9gales. Si c'est le cas, cmpxchg copie la seconde op\u233\'e9rande dans la premi\u232\'e8re, sinon, la premi\u232\'e8re op\u233\'e9rande est copi\u233\'e9e dans l'accumulateur. L'algorithme suivant d\u233\'e9crit l'op\u233\'e9ration : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg\tab \tab oper1, oper2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if(\{al/ax/eax\} = oper1) then}{{\super \rtlch\dbch\af15 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Le choix de al, ax ou eax sera fait en vertu de la taille des op\u233\'e9randes et les deux doivent avoir la m\u234\'eame taille. }
}}
}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
zero := 1\tab \tab ;Active le flag z\u233\'e9ro}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
oper1 := oper2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
else}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
zero := 0\tab \tab ;Nettoie le flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li2553\ri0\lin2553\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\{al/ax/eax\} := oper1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
cmpxchg supporte des structures de donn\u233\'e9es de certains syst\u232\'e8mes d'exploitation requ\u233\'e9rant des }{\rtlch\ai \ltrch\i\loch
op\u233\'e9rations atomiques}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Une op\u233\'e9ration atomique est une op\u233\'e9ration que le syst\u232\'e8me d'exploitation ne peut pas interrompre. }
}}
}{\loch
 et les }{\rtlch \ltrch\i\loch
s\u233\'e9maphores}{\loch
. Sans doute, si vous pouvez ins\u233\'e9rer cet algorithme dans votre programme, alors vous pouvez utiliser cmpxchg de fa\u231\'e7on appropri\u233\'e9e. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Note : contrairement \u224\'e0 l'instruction cmp, cmpxchg affecte seulement le drapeau z\u233\'e9ro. Vous ne pouvez pas tester les autres flags comme vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 le faire avec cmp. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le processeur Pentium supporte une instruction de comparaison et permutation de 64 bits : cmpxchg8b. La syntaxe est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmpxchg8b\tab ax, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
64}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction compare la valeur de 64 bits dans edx:eax avec la valeur en m\u233\'e9moire. Si elles sont \u233\'e9gales, alors le Pentium stocke la valeur de ecx:ebx dans la m\u233\'e9moire, sinon, il charge la paire edx:eax avec le contenu de cet emplacement. Cette instruction affecte le drapeau z\u233\'e9ro selon le r\u233\'e9sultat et n'affecte aucun autre flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.5\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_05_05}{\*\bkmkend p6_05_05}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 NEG}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
neg (negate) prend le compl\u233\'e9ment \u224\'e0 deux d'un octet ou d'un mot. Elle comporte une seule op\u233\'e9rande (destination) et la nie. La syntaxe est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
neg\tab dest}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch \ltrch\lang3082\loch
E}{\loch
lle calcule ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
dest := 0 - dest}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Ce qui inverse effectivement le signe de l'op\u233\'e9rande. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si l'op\u233\'e9rande est z\u233\'e9ro, le signe ne change pas, m\u234\'eame si ceci met \u224\'e0 z\u233\'e9ro le drapeau de retenue. Nier toute autre valeur affecte ce drapeau. }{\rtlch \ltrch\lang3082\loch
Alors que soumettre}{\rtlch \ltrch\lang3084\loch
 \u224\'e0}{\rtlch\ai \ltrch\lang3084\i\loch
 }{\rtlch\ai \ltrch\lang3082\i\loch
not}{\rtlch\ai \ltrch\i\loch
 }{\rtlch\ai0 \ltrch\lang3084\i0\loch
un }{\loch
octet contenant -128, un mot contenant -32768 ou un double-mot contenant -2 147 483 648 ne change pas l'op\u233\'e9rande, mais active le drapeau overflow. }{\rtlch\ai \ltrch\i\loch
neg}{\loch
 met toujours \u224\'e0 jour les drapeaux A, S, P et Z comme si vous utilisiez l'instruction sub. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les formes possibles sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
neg\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab neg \tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Les op\u233\'e9randes peuvent \u234\'eatre de huit, seize ou trente-deux bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Quelques exemples :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := -J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab neg\tab J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := -K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab neg \tab ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.6\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s de }{{\*\bkmkstart p6_05_06}{\*\bkmkend p6_05_06}\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ultiplication : MUL, IMUL et AAM}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de multiplication vous offrent un premier exemple d'irr\u233\'e9gularit\u233\'e9 du jeu 80x86. Des instructions comme add, adc, sub, sbc et beaucoup d'autres utilisent un octet mod-reg-r/m pour admettre deux op\u233\'e9randes. Malheureusement, il n'y a pas assez de bits dans l'octet d'opcode du 8086 pour supporter toutes les instructions ; le 8086 utilise donc les bits de reg dans l'octet mod-reg-r/m comme extension }{\rtlch \ltrch\lang3084\loch
de l'opcode}{\loch
. Par exemple, inc, dec et neg ne requi\u232\'e8rent pas deux op\u233\'e9randes et les CPU 80x86 utilisent les }{\rtlch\ai \ltrch\i\loch
bits reg}{\loch
 comme extension pour les huit bits de l'opcode traditionnel. Ceci fonctionne merveilleusement avec des instructions ayant une seule op\u233\'e9rande, permettant aux concepteurs Intel d'encoder diverses instructions (huit, en fait) avec un seul opcode. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Mais l'instruction de multiplication requiert un traitement sp\u233\'e9cial et les concepteurs Intel, \u233\'e9tant encore \u224\'e0 court d'opcodes, ont con\u231\'e7u une instruction de multiplication comprenant une seule op\u233\'e9rande. Le champ reg contient une extension de l'opcode au lieu d'une valeur de registre et la multiplication est, sans aucun doute, une op\u233\'e9ration \u224\'e0 deux op\u233\'e9randes. Le 8086 sous-entend toujours l'accumulateur (al, ax, eax) comme registre de destination. Cette irr\u233\'e9gularit\u233\'e9 rend l'instruction de multiplication du 8086 une op\u233\'e9ration un peu plus difficile que les autres, parce que une des deux op\u233\'e9randes doit se trouver dans l'accumulateur. Si Intel a adopt\u233\'e9 cette approche non orthodoxe c'est que ses concepteurs estimaient que l'instruction de multiplication allait \u234\'eatre utilis\u233\'e9e beaucoup moins souvent }{\rtlch \ltrch\lang3084\loch
que }{\rtlch\ai \ltrch\i\loch
add}{\loch
 et }{\rtlch\ai \ltrch\i\loch
sub}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un probl\u232\'e8me qui surgit en rendant disponible seulement une forme mod-reg-r/m est qu'on ne peut pas multiplier l'accumulateur par une constante, car l'octet mod-reg-r/m ne supporte pas le mode d'adressage imm\u233\'e9diat. Intel }{\rtlch \ltrch\lang3084\loch
a bient\u244\'f4t d\u233\'e9couvert }{\loch
le besoin de multiplier l'accumulateur par une constante et }{\rtlch \ltrch\lang3084\loch
ils ont donn\u233\'e9}{\loch
 un support pour ce probl\u232\'e8me \u224\'e0 partir du processeur 80286}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Dans la puce originale du 8086, la multiplication par une constante \u233\'e9tait toujours plus rapide \u224\'e0 l'aide des d\u233\'e9calages, des additions et des soustractions. Ce fut peut-\u234\'eatre pour cette raison que Intel ne donna pas trop d'importance \u224\'e0 ce type de multiplication. Cependant, la version de mul pour le 80286 \u233\'e9tait plus rapide que celle d\u233\'e9velopp\u233\'e9e pour le 8086, donc elle pouvait d\u233\'e9sormais remplacer les instructions de d\u233\'e9calage, addition et soustraction correspondantes. }
}}
}{\loch
. C'\u233\'e9tait sp\u233\'e9cialement important pour l'acc\u232\'e8s aux tableaux \u224\'e0 plusieurs dimensions. A partir du 80386, Intel a g\u233\'e9n\u233\'e9ralis\u233\'e9 une forme de multiplication permettant des op\u233\'e9randes mod-reg-r/m standard. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a maintenant deux formes d'instruction de multiplication : une forme non sign\u233\'e9e (mul) et une sign\u233\'e9e (imul). Contrairement aux additions et aux soustractions, on a besoin d'instructions s\u233\'e9par\u233\'e9es pour ces deux op\u233\'e9rations. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La multiplication admet les syntaxes suivantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
;Multiplications non sign\u233\'e9es : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
mul\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mul\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
;Multiplications sign\u233\'e9es : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab reg, reg, immediate\tab (2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab reg, mem, immediate\tab (2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab reg, immediate\tab \tab (2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
imul\tab reg, reg\tab \tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab imul\tab reg, mem\tab \tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
;Multiplications BCD : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab aam}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;2- Disponible seulement sur processeurs 80286 et sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;3- Disponible seulement sur processeurs 80386 et sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous pouvez le voir, les instructions de multiplication constituent un vrai d\u233\'e9sordre. Et, pire, ce n'est qu'en utilisant au moins un 80386 que vous pouvez en exploiter pleinement les fonctionnalit\u233\'e9s. Et, finalement, il y a m\u234\'eame certaines restrictions \u224\'e0 ces instructions qui ne sont pas \u233\'e9videntes ci-dessus. H\u233\'e9las, le seul moyen de s}{\rtlch \ltrch\lang3084\loch
'}{\loch
y retrouver est de m\u233\'e9moriser leur fonctionnement. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\ai \ltrch\i\loch
mul}{\loch
, disponible dans tous les processeurs, multiplie des op\u233\'e9randes de huit, seize ou trente-deux bits. Notez qu'en multipliant deux valeurs de }{\rtlch \ltrch\i\loch
n}{\loch
 bits, le r\u233\'e9sultat peut exiger jusqu'\u224\'e0 2*n bits. Par cons\u233\'e9quent, si l'op\u233\'e9rande est une quantit\u233\'e9 de huit bits, le r\u233\'e9sultat peut demander seize bits. De la m\u234\'eame fa\u231\'e7on, une op\u233\'e9rande de 16 bits produit un r\u233\'e9sultat de 32 bits et une op\u233\'e9rande de 32 bits peut engendrer un r\u233\'e9sultat de 64 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction mul, avec une op\u233\'e9rande de huit bits, multiplie le registre al par l'op\u233\'e9rande et garde le r\u233\'e9sultat de 16 bits dans ax. Donc : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab mul\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;ou\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab imul\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;produit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ax := al * operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
"*" }{\loch
repr\u233\'e9sente une multiplication non sign\u233\'e9e pour mul et une multiplication sign\u233\'e9e pour imul. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous sp\u233\'e9cifiez une op\u233\'e9rande de 16 bits, mul et imul calculent : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab dx:ax := ax * operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
"*"}{\loch
 a la m\u234\'eame signification que ci-dessus et dx:ax veut dire que dx contient le mot }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 du r\u233\'e9sultat de 32 bits et ax contient le mot }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du m\u234\'eame r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous sp\u233\'e9cifiez une op\u233\'e9rande de 32 bits, alors mul et imul effectuent : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
edx:eax := eax * operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 edx correspond au double-mot }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 du r\u233\'e9sultat et eax au double-mot }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 de ce dernier. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si un produit 8x8, 16x16 ou 32x32 requiert plus de huit, seize ou trente-deux bits (respectivement), les instructions mul et imul activent les drapeaux }{\rtlch \ltrch\i\loch
carry}{\loch
 et }{\rtlch \ltrch\i\loch
overflow}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\ai \ltrch\i\loch
mul}{\loch
 et }{\rtlch\ai \ltrch\i\loch
imul}{\loch
 affectent les flags A, P, S et Z. Notez }{\rtlch \ltrch\lang3084\loch
particuli\u232\'e8rement}{\loch
 que les drapeaux }{\rtlch \ltrch\i\loch
sign}{\loch
 et }{\rtlch \ltrch\i\loch
zero}{\loch
 ne contiennent pas des valeurs significatives apr\u232\'e8s avoir effectu\u233\'e9 ces deux instructions. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
imul (multiplication enti\u232\'e8re) fonctionne sur des op\u233\'e9randes sign\u233\'e9es. Il y a diverses formes de cette instruction au fur et \u224\'e0 mesure qu'Intel \u224\'e0 essay\u233\'e9 de g\u233\'e9n\u233\'e9raliser cette instruction avec des processeurs successifs. Les paragraphes pr\u233\'e9c\u233\'e9dents d\u233\'e9crivent la premi\u232\'e8re forme de cette instruction, }{\rtlch \ltrch\lang3084\loch
la version}{\loch
 avec une seule op\u233\'e9rande. Trois autres formes sont disponibles seulement \u224\'e0 partir du 80286 et elles fournissent la capacit\u233\'e9 de multiplier un registre par une valeur imm\u233\'e9diate. Les deux derni\u232\'e8res formes, disponibles seulement \u224\'e0 partir du 80386 permettent de multiplier un registre arbitraire avec un autre registre arbitraire ou un emplacement de m\u233\'e9moire. Ces versions (en accord aussi avec les tailles respectives) sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab imul\tab oper1, oper2, immed\tab ;Forme g\u233\'e9n\u233\'e9rale}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, idded}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, idded}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg\-}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, immed}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32\tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab (3)\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;3- Disponible seulement sur des processeurs 80386 et sup\u233\'e9rieurs. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Les instructions imul reg, immed, constituent des syntaxes sp\u233\'e9ciales que l'assembleur fournit ; les encodages de ces instructions sont les m\u234\'eames que imul reg, reg, immed. L'assembleur fournit simplement la m\u234\'eame valeur de registre pour les deux op\u233\'e9randes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Ces instructions effectuent }{\rtlch \ltrch\lang3084\loch
:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 * valeur_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 := operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 * valeur_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0 part le nombre d'op\u233\'e9randes, il y a plusieurs diff\u233\'e9rences entre ces formes et les versions de mul/imul \u224\'e0 une seule op\u233\'e9rande :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Il n'y a pas de multiplication 8x8 bits disponible (l'op\u233\'e9rande }{\rtlch \ltrch\lang3084\i\loch
immediate}{\rtlch \ltrch\sub\lang3084\i\loch
8}{\rtlch \ltrch\lang3084\loch
 constitue simplement une forme plus courte de l'instruction. \u192\'c0 l\u8217\'92int\u233\'e9rieur, le CPU effectue une extension sign\u233\'e9e de l'op\u233\'e9rande \u224\'e0 16 ou \u224\'e0 32 bits, selon la n\u233\'e9cessit\u233\'e9). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Ces instructions ne produisent pas un r\u233\'e9sultat de 2*n bits c-\u224\'e0-d, une multiplication 16x16 produit un r\u233\'e9sultat de 16 bits ; de m\u234\'eame, une multiplication 32x32 produit un r\u233\'e9sultat de 32 bits. Ces instructions modifient seulement les drapeaux de retenue et de d\u233\'e9passement de capacit\u233\'e9 si le r\u233\'e9sultat est trop grand pour le registre de destination.   }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab La version 80286 d\u8217\'92imul permet une constante comme op\u233\'e9rande, alors que les versions standard de mul/imul non. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les deux derni\u232\'e8res versions de imul sont disponibles seulement \u224\'e0 partir du 80386. Avec ces formats additionnels, l'instruction imul est }{\rtlch \ltrch\lang3084\i\loch
presque}{\rtlch \ltrch\lang3084\loch
 aussi g\u233\'e9n\u233\'e9rale que l'instruction add}{{\super \rtlch \ltrch\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Mais, il y a encore certaines restrictions pour ce qui concerne la taille des op\u233\'e9randes qu'il faut tenir en consid\u233\'e9ration, par exemple, le non support pour les op\u233\'e9randes de huit bits. }
}}
}{\rtlch \ltrch\lang3084\loch
:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions effectuent : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
reg := reg * reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
reg := reg * mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux op\u233\'e9randes doivent avoir la m\u234\'eame taille. Par cons\u233\'e9quent, comme pour la version 80286 de l'instruction imul, vous devez tester les flags }{\rtlch \ltrch\i\loch
carry}{\loch
 et }{\rtlch \ltrch\i\loch
overflow}{\loch
 pour d\u233\'e9tecter tout d\u233\'e9passement \u233\'e9ventuel. Si cela a lieu, le CPU perd les bits forts du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Note importante :}{\loch
 gardez \u224\'e0 l'esprit que le drapeau z\u233\'e9ro contient une valeur ind\u233\'e9termin\u233\'e9e apr\u232\'e8s une instruction de multiplication et que vous ne pouvez pas le tester pour voir si le r\u233\'e9sultat est nul. L'effet est le m\u234\'eame avec le drapeau de signe. Si vous avez besoin de tester ces flags, vous pouvez comparer le r\u233\'e9sultat avec z\u233\'e9ro apr\u232\'e8s avoir test\u233\'e9 les drapeaux de retenue et de d\u233\'e9passement de capacit\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
aam (ASCII Adjust after Multiplication), comme aaa et aas, }{\rtlch \ltrch\lang3084\loch
permet d\u8217\'92ajuster une valeur }{\loch
d\u233\'e9cimal}{\rtlch \ltrch\lang3084\loch
e}{\loch
 d\u233\'e9compact\u233\'e9}{\rtlch \ltrch\lang3084\loch
e}{\loch
 apr\u232\'e8s une multiplication. Cette instruction op\u232\'e8re directement sur le registre ax et }{\rtlch \ltrch\lang3084\loch
suppose}{\loch
 que vous avez multipli\u233\'e9 deux valeurs de huit bits de la plage 0..9 et que le r\u233\'e9sultat a \u233\'e9t\u233\'e9 plac\u233\'e9 dans ax (en r\u233\'e9alit\u233\'e9, le r\u233\'e9sultat sera gard\u233\'e9 dans al, puisque 9*9 = 81, la plus grande valeur possible ; ah doit contenir z\u233\'e9ro). Cette instruction divise ax par 10, laisse le quotient dans ah et le reste dans al : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ah := ax div 10}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := ax mod 10}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Contrairement aux autres instructions de mise en format d\u233\'e9cimal/ASCII, les programmes utilisent aam r\u233\'e9guli\u232\'e8rement, puisque les conversions entre bases utilisent cet algorithme.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Note : aam contient un opcode de deux octets, le second \u233\'e9tant la constante imm\u233\'e9diate 10. Les programmeurs ont d\u233\'e9couvert que si l'on substitue une autre valeur imm\u233\'e9diate \u224\'e0 cette constante, vous pouvez changer le diviseur de l'algorithme ci-dessus. Cette caract\u233\'e9ristique, cependant, n'est pas document\u233\'e9e. Elle fonctionne sur tous les types de processeurs qu\u8217\'92Intel a produits jusqu'\u224\'e0 pr\u233\'e9sent ; cependant, il n'y a pas de garantie que les processeurs \u224\'e0 venir continuent \u224\'e0 }{\rtlch \ltrch\lang3084\loch
lui donner du support}{\loch
. Bien s\u251\'fbr, avec des processeurs 80286 et sup\u233\'e9rieurs vous pouvez effectuer la multiplication avec une constante, }{\rtlch \ltrch\lang3084\loch
mais}{\loch
 }{\rtlch \ltrch\lang3084\loch
cette astuce}{\loch
 n'est gu\u232\'e8re n\u233\'e9cessaire sur des syst\u232\'e8mes modernes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sur les processeurs 80x86, il n'y a pas d'instruction }{\rtlch\ai \ltrch\i\loch
dam }{\loch
(Decimal Adjust for Multiplication). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'usage le plus fr\u233\'e9quent de l'instruction imul est de calculer les offsets des tableaux multidimensionnels et celle-ci a \u233\'e9t\u233\'e9 s\u251\'fbrement la raison principale pour laquelle Intel a int\u233\'e9gr\u233\'e9 dans les 80286 la capacit\u233\'e9 de multiplier un registre par une constante. Dans le chapitre quatre, on a utilis\u233\'e9 l'instruction mul standard pour les calculs des index des tableaux ; cependant, cette syntaxe \u233\'e9tendue d\u8217\'92imul constitue un meilleur choix, comme on montre dans cet exemple : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
MonTableau\tab word\tab 8 dup ( 7 dup ( 6 dup (?)))\tab ;tableau 8x7x6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
J\tab \tab word\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
K\tab \tab word\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
M\tab \tab word\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab   .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
   }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab   .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;MonTableau[J, K, M] := J + K - M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, J}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab ax, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sub\tab ax, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab bx, J\tab ;index := ((J*7 + K) * 6 + M) * 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab bx, 7}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, K}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul\tab bx, 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, bx\tab ;BX := BX * 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab MonTableau[bx], ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
N'oubliez pas que les instructions de multiplication sont tr\u232\'e8s lentes, souvent dix fois plus }{\rtlch \ltrch\lang3084\loch
lentes }{\loch
qu'une instruction d'addition. En d\u233\'e9finitive, il y a des moyens plus rapides de multiplier une valeur par une constante. Regardez le paragraphe 9.5.1  (chapitre neuf) pour tous les d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.5.7\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s de }{{\*\bkmkstart p6_05_07}{\*\bkmkend p6_05_07}\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
ivision : DIV, IDIV et AAD}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions effectuent une division 64/32 bits (pas disponible sur des processeurs ant\u233\'e9rieurs au 80386), de 32/16 bits ou de 16/8 bits. Elles admettent les formes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Pour divisions non sign\u233\'e9es :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
div\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
div \tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Pour divisions sign\u233\'e9es : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Ajustement pour division ASCII : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
aad}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction div effectue une division non sign\u233\'e9e. Si l'op\u233\'e9rande est de huit bits, div divise le registre ax par l'op\u233\'e9rande, en laissant le quotient dans al et reste (modulo) dans ah. Si l'op\u233\'e9rande est une quantit\u233\'e9 de 16 bits, alors l'instruction de 32 bits divise le contenu de dx:ax par l'op\u233\'e9rande en laissant le quotient dans ax et le reste dans dx. Avec des op\u233\'e9randes de 32 bits, div divise la valeur de 64 bits dans edx:eax par l'op\u233\'e9rande, en laissant le quotient dans eax et le reste dans edx. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous ne pouvez pas }{\rtlch \ltrch\lang3084\loch
juste }{\loch
diviser une valeur de huit bits par une autre. Si le d\u233\'e9nominateur est une valeur de huit bits, le num\u233\'e9rateur doit \u234\'eatre de seize bits. Si vous avez besoin de diviser une valeur non sign\u233\'e9e de huit bits par une autre, vous devez d'abord effectuer une extension non sign\u233\'e9e sur le num\u233\'e9rateur, en l'\u233\'e9largissant \u224\'e0 16 bits ; vous pouvez le faire en chargeant le num\u233\'e9rateur dans al et z\u233\'e9ro dans ah ; ensuite, vous pouvez diviser ax par le d\u233\'e9nominateur pour produire le r\u233\'e9sultat correct. }{\rtlch \ltrch\i\loch
Ne pas effectuer cette extension \u224\'e0 16 bits avant d'effectuer la division peut amener le 80x86 }{\rtlch \ltrch\lang3084\i\loch
\u224\'e0}{\rtlch \ltrch\i\loch
 produire des r\u233\'e9sultats erron\u233\'e9s !}{{\super \rtlch \ltrch\i\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Les erreurs de logique ne sont pas des erreurs de syntaxe, ils sont accept\u233\'e9s par l'assembleur, mais }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
ils }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
produisent des r\u233\'e9sultats incorrects. Ce sont, ce qu'on appelle populairement "bogues" (anglicisation de "bug"), n.d.t.}
}}
}{\loch
 Si vous devez }{\rtlch \ltrch\lang3084\loch
diviser }{\loch
deux valeurs de 16 bits, vous }{\rtlch \ltrch\lang3084\loch
emploierez le }{\loch
m\u234\'eame syst\u232\'e8me, vous \u233\'e9largissez le registre AX (qui contient le num\u233\'e9rateur) en pla\u231\'e7ant z\u233\'e9ro dans le registre dx}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Sur des processeurs 80386 ou ult\u233\'e9rieurs, vous pouvez utiliser l'instruction movzx. }
}}
}{\loch
. Si vous avez besoin de diviser deux valeurs de 32 bits, }{\rtlch \ltrch\lang3084\loch
il en sera de m\u234\'eame, }{\loch
en "\u233\'e9largissant" le registre eax dans edx (en chargeant z\u233\'e9ro dans edx) avant la division. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En travaillant avec des entiers sign\u233\'e9s, vous aurez besoin d'effectuer une extension sign\u233\'e9e de al, dans ax, de ax dans eax ou de eax dans edx, avant d'utiliser idiv, }{\rtlch \ltrch\lang3084\loch
selon la taille de l\u8217\'92op\u233\'e9rande}{\loch
. Pour ce faire, utilisez cbw, cwd, cdq ou movsx. Si vous n'effectuez pas d'extension sign\u233\'e9e avant div, vos r\u233\'e9sultats seront }{\rtlch \ltrch\lang3084\loch
probablement}{\loch
 incorrects. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a un autre fait \u224\'e0 noter \u224\'e0 propos des instructions de division : elles peuvent \u233\'e9galement causer des erreurs fatales. D'abord il y a la fameuse division par z\u233\'e9ro ; ensuite le quotient peut \u234\'eatre trop grand pour les registres eax, ax ou al. Par exemple, la division 16/8 bits de "8000h / 2" produit le quotient 4000h avec un reste de z\u233\'e9ro, mais 4000h est trop grand pour huit bits ! Si ceci arrive, ou si vous essayez de diviser une valeur par z\u233\'e9ro, le processeur g\u233\'e9n\u233\'e9rera l'exception }{\rtlch \ltrch\i\loch
int 0}{\loch
, ce qui veut dire que le BIOS affichera }{\rtlch \ltrch\i\loch
"division by zero"}{\loch
 ou }{\rtlch \ltrch\i\loch
"divide error"}{\loch
 et le programme sera interrompu. Si cela arrive, il }{\rtlch \ltrch\lang3084\loch
se peut que }{\loch
vous n'avez pas \u233\'e9tendu votre num\u233\'e9rateur avant l'ex\u233\'e9cution de la division. Puisque cette erreur fait planter les programmes, il faut faire }{\rtlch \ltrch\lang3084\loch
beaucoup d\u8217\'92}{\loch
attention aux valeurs qu'on emploie quand on effectue des divisions. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les flags }{\rtlch \ltrch\i\loch
auxiliary carry, carry, overflow, parity, sign }{\loch
et}{\rtlch \ltrch\i\loch
 zero}{\loch
 sont ind\u233\'e9finis apr\u232\'e8s une op\u233\'e9ration de division. Si un d\u233\'e9passement de capacit\u233\'e9 }{\rtlch \ltrch\lang3084\loch
a lieu}{\loch
 (ou si vous encourez \u224\'e0 la division par z\u233\'e9ro), le 80x86 ex\u233\'e9cut\u233\'e9 une INT 0 (}{\rtlch \ltrch\i\loch
interrupt zero}{\loch
).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les processeurs 80286 et ult\u233\'e9rieurs ne fournissent pas de formes sp\u233\'e9ciales de idiv, comme ils le font pour imul. La plupart des programmeurs utilisent la division encore moins que la multiplication, par cons\u233\'e9quent, les concepteurs d\u8217\'92Intel ne se sont pas pr\u233\'e9occup\u233\'e9s de cr\u233\'e9er des instructions sp\u233\'e9ciales pour cette op\u233\'e9ration. Notez qu'il n'y a pas de moyen de diviser un registre par une valeur imm\u233\'e9diate, vous devrez la charger dans un registre ou dans un emplacement de m\u233\'e9moire avant d'effectuer la division. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction aad (}{\rtlch \ltrch\i\loch
ASCII adjust before division}{\loch
) est une autre op\u233\'e9ration d\u233\'e9cimale non compact\u233\'e9e. Elle d\u233\'e9compose les valeurs d\u233\'e9cimales cod\u233\'e9es binaires d\u233\'e9compact\u233\'e9es avant une op\u233\'e9ration de division ASCII. Bien que ce livre ne couvre pas d'arithm\u233\'e9tique BCD, aad reste utile pour d'autres op\u233\'e9rations. L'algorithme qui la d\u233\'e9crit est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
al := ah*10 + al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ah := 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
Cette instruction est utile pour convertir des cha\u238\'eenes de chiffres en valeurs enti\u232\'e8res (voir les questions \u224\'e0 la fin de ce chapitre). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les exemples suivants montrent comment diviser une valeur de seize bits par une autre : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := K / M (non sign\u233\'e9)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, K\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab dx, 0\tab ;Extension non sign\u233\'e9e}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;En pratique, on devrait v\u233\'e9rifier que M est diff\u233\'e9rent de 0 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;ici }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
qu\u8217\'92il est }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
div \tab M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := K / M (sign\u233\'e9)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, K\tab ; charger la dividende}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwd\tab \tab ;Extension sign\u233\'e9e de AX dans DX}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;En pratique, on devrait v\u233\'e9rifier que M soit diff\u233\'e9rent de 0 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;ici }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
qu\u8217\'92il est }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab M}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;J := (K * M) / P}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, K\tab ;Notez que l'instruction imul produit}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
imul \tab M\tab ;un r\u233\'e9sultat de 32 bits dans DX:AX, donc}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab P\tab ;on n'a pas besoin d'\u233\'e9largir ax ici.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab J, ax\tab ;Esp\u233\'e9rez et priez que le r\u233\'e9sultat}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li3402\ri0\lin3402\rin0\fi0\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;tienne dans 16 bits !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions logiques et de }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
anipulation de }{{\*\bkmkstart p6_06}{\*\bkmkend p6_06}\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
its}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille 80x86 fournit cinq instructions logiques, quatre de rotation et trois de d\u233\'e9calage. Les instructions logiques sont and, or, xor, test et not ; les instructions de rotation sont ror, rol, rcr et rcl ; de d\u233\'e9calage sont shl/sal, shr et sar. Les processeurs 80386 et ult\u233\'e9rieurs fournissent un jeu d'op\u233\'e9rations encore plus riche : il y a bt, bts, btr, btc, bsf, bsr, shld, shrd et l'ensemble d'instructions set (set}{\rtlch \ltrch\i\loch
cc}{\loch
). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions peuvent manipuler des bits, convertir des valeurs, effectuer des op\u233\'e9rations logiques, compacter/d\u233\'e9compacter des donn\u233\'e9es et effectuer des op\u233\'e9rations arithm\u233\'e9tiques. Les paragraphes suivants d\u233\'e9crivent chacune de ces instructions en d\u233\'e9tail. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.1\tab Les instructions logiques : AND, OR, XOR et NOT}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions logiques 80x86 fonctionnent sur une base bit-\u224\'e0-bit (}{\rtlch \ltrch\i\loch
bitwise}{\loch
) ; elles s'appliquent autant sur des donn\u233\'e9es de 8 bits que sur des donn\u233\'e9es de 16 ou de 32 bits. }{\rtlch \ltrch\i\loch
and}{\loch
, }{\rtlch \ltrch\i\loch
not}{\loch
, }{\rtlch \ltrch\i\loch
or}{\loch
 et }{\rtlch \ltrch\i\loch
xor}{\loch
 font ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab and\tab dest, src\tab ;dest := dest and src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
or\tab dest, src\tab ;dest := dest or src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xor\tab dest, src\tab ;dest := dest xor src}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
not\tab dest\tab \tab ;dest := not dest}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Les variantes sp\u233\'e9cifiques sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and \tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab mem, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and \tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab reg, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab mem, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and \tab eax/ax/al, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;or et xor utilisent les m\u234\'eames formats que and}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
not\tab reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
not\tab mem\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sauf pour not, elles affectent les flags comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles nettoient carry.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles nettoient overflow.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles activent le drapeau z\u233\'e9ro si le r\u233\'e9sultat est z\u233\'e9ro, et le nettoient sinon. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles copient l'octet }{\loch
le plus significatif}{\rtlch \ltrch\lang3084\loch
 du r\u233\'e9sultat dans le drapeau de signe.  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles ajustent }{\loch
le drapeau }{\rtlch\ai \ltrch\lang3084\i\loch
parity}{\rtlch \ltrch\lang3084\loch
 selon la parit\u233\'e9 (du nombre de bits) du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elles affectent aussi le flag de retenue auxiliaire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction not n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tester le flag }{\rtlch \ltrch\i\loch
zero}{\loch
 apr\u232\'e8s ces instructions est particuli\u232\'e8rement utile. }{\rtlch\ai \ltrch\i\loch
and}{\loch
 active ce flag si }{\rtlch \ltrch\i\loch
les deux op\u233\'e9randes n'ont aucun 1 dans les positions de bits correspondantes }{\loch
(puisque ceci produirait un r\u233\'e9sultat de 0). Par exemple, si l'op\u233\'e9rande de source contient un seul bit \u224\'e0 1, alors le flag }{\rtlch \ltrch\i\loch
zero}{\loch
 sera activ\u233\'e9 si le bit correspondant dans la destination est z\u233\'e9ro ; sinon le r\u233\'e9sultat sera 1. L'instruction }{\rtlch\ai \ltrch\i\loch
or}{\loch
 vaudra z\u233\'e9ro seulement si les deux op\u233\'e9randes contiennent z\u233\'e9ro. Alors que }{\rtlch\ai \ltrch\i\loch
xor}{\loch
 produit un r\u233\'e9sultat de z\u233\'e9ro si et seulement si les deux op\u233\'e9randes sont \u233\'e9gales. Les programmeurs exploitent souvent ce fait pour nettoyer un registre de 16 ou 32 bits, puisqu'une instruction de la forme }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
xor\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
est plus rapide que l'instruction mov reg, 0 comparable. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme les instructions d'addition et de soustraction, and, or et xor admettent aussi des formes sp\u233\'e9ciales avec le registre accumulateur et les donn\u233\'e9es imm\u233\'e9diates (constantes). Ces formes sont plus courtes et parfois plus rapides que la forme g\u233\'e9n\u233\'e9rale "mov reg, imm". Bien que g\u233\'e9n\u233\'e9ralement avec ces instructions, on ne pense pas en termes de valeurs sign\u233\'e9es, toutefois la technologie 80x86 fournit des versions de "reg/mem, imm" qui font des extensions de signe de valeurs de la plage -128..127 \u224\'e0 des valeurs de 16 ou 32 bits si n\u233\'e9cessaire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme toujours, les op\u233\'e9randes doivent avoir la m\u234\'eame taille. Sur des processeurs ant\u233\'e9rieurs au 80386, cette taille pouvait \u234\'eatre de 8 ou de 16 bits ; sur des processeurs \u224\'e0 partir du 80386, la taille peut atteindre 32 bits. Ces instructions effectuent l'op\u233\'e9ration logique bit-\u224\'e0-bit indiqu\u233\'e9e sur leurs op\u233\'e9randes. Pour des d\u233\'e9tails sur ces op\u233\'e9rations, revoir le chapitre 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut utiliser l'op\u233\'e9ration }{\rtlch\ai \ltrch\i\loch
and}{\loch
 pour mettre \u224\'e0 z\u233\'e9ro des bits s\u233\'e9lectionn\u233\'e9s dans l'op\u233\'e9rande de destination. Ceci est connu comme }{\rtlch \ltrch\i\loch
masquage des donn\u233\'e9es }{\loch
(}{\rtlch \ltrch\i\loch
masking out data}{\loch
). De m\u234\'eame, vous pouvez utiliser l'instruction }{\rtlch\ai \ltrch\i\loch
or}{\loch
 pour forcer certains bits \u224\'e0 1 dans l'op\u233\'e9rande de destination (voir la section 9.6 pour plus de d\u233\'e9tails). Vous pouvez utiliser ces instructions avec les instructions de d\u233\'e9calage et de rotation pour compacter et d\u233\'e9compacter des donn\u233\'e9es (voir encore la section 9.6). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.2\tab Les instructions de }{{\*\bkmkstart p6_06_02}{\*\bkmkend p6_06_02}\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
\u233\'e9calage : SHL/SAL, SHR, SAR, SHLD et SHRD}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80x86 supportent trois diff\u233\'e9rents types de d\u233\'e9calages (shl et sal sont la m\u234\'eame instruction) : shl (shift left), sal (shift arithmetic left), shr (shift right) et sar (shift arithmetic right). Les processeurs 80386 et ult\u233\'e9rieurs fournissent deux d\u233\'e9calages additionnels : shld et shrd. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de d\u233\'e9calage d\u233\'e9placent les bits}{\rtlch \ltrch\lang3084\loch
 \u224\'e0 l\u8217\'92int\u233\'e9rieur }{\loch
d'un registre ou d'un emplacement de m\u233\'e9moire. Le format g\u233\'e9n\u233\'e9ral est :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sal\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
dest}{\loch
 est la valeur \u224\'e0 d\u233\'e9caler et }{\rtlch \ltrch\i\loch
nb_fois}{\loch
 sp\u233\'e9cifie le nombre de positions binaires \u224\'e0 d\u233\'e9caler. Par exemple, shl d\u233\'e9cale les bits dans la destination vers la gauche }{\rtlch \ltrch\lang3084\loch
selon un}{\loch
 nombre de positions sp\u233\'e9cifi\u233\'e9 par l'op\u233\'e9rande }{\rtlch \ltrch\i\loch
nb_fois}{\loch
. Les instructions shld et shrd ont le format : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab dest, source, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shrd\tab dest, source, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les formes sp\u233\'e9cifiques de ces instructions sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab reg, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab mem, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab reg, imm\tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab mem, imm\tab ;(2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab reg, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab mem, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;sal est un synonyme de shl et utilise le m\u234\'eame format.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;shr a le m\u234\'eame format que shl.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;sar a le m\u234\'eame format que shl.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab reg, reg, imm\tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab mem, reg, imm\tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab reg, reg, cl\tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab mem, reg, cl\tab ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;shrd a le m\u234\'eame format que shld.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;(2)- Disponible seulement sur des processeurs 80286 ou ult\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;(3)- Disponible seulement sur des processeurs 80386 ou ult\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour les processeurs 8088 et 8086, le nombre de bits \u224\'e0 d\u233\'e9caler est soit 1, soit la valeur de cl. Sur des processeurs 80286 et sup\u233\'e9rieurs vous pouvez utiliser toute constante imm\u233\'e9diate de huit bits. Il va de soi que cette valeur doit \u234\'eatre inf\u233\'e9rieure ou \u233\'e9gale au nombre de bits de l'op\u233\'e9rande de destination. Ce serait une perte de temps d\u233\'e9caler vers la gauche al de neuf bits (car huit produiraient le m\u234\'eame r\u233\'e9sultat, comme vous verrez bient\u244\'f4t). Algorithmiquement, vous pouvez imaginer l'op\u233\'e9ration de d\u233\'e9calage de plus d'une position comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
for temp := 1 to nb_fois do}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shift dest, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a des diff\u233\'e9rences mineures dans la fa\u231\'e7on dont les instructions de d\u233\'e9calage traitent le drapeau overflow quand }{\rtlch \ltrch\i\loch
nb_fois }{\loch
est diff\u233\'e9rent de 1, mais vous pouvez ignorer ce fait la plupart du temps. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions shl, sal, shr et sar fonctionnent avec des op\u233\'e9randes de huit, seize ou trente-deux bits, alors que shld et shrd fonctionnent seulement avec des op\u233\'e9randes de destination de 16 ou de 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_02_01}{\*\bkmkend p6_06_02_01}\rtlch \ltrch\fs23\b\loch
6.6.2.1\tab SHL/SAL}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les termes shl et sal sont synonymes, repr\u233\'e9sentent la m\u234\'eame instruction et utilisent le m\u234\'eame encodage binaire. Ces instructions d\u233\'e9placent chaque bit de l'op\u233\'e9rande de destination d'une position binaire vers la gauche }{\rtlch \ltrch\lang3084\loch
selon }{\loch
le nombre de fois sp\u233\'e9cifi\u233\'e9 par la seconde op\u233\'e9rande. Apr\u232\'e8s chaque d\u233\'e9calage, le bit }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 re\u231\'e7oit la valeur z\u233\'e9ro et le bit }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 finit dans le drapeau de retenue (voir Figure 6.2).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1080\shpbxcolumn\shpbxignore\shpleft0\shpright8250{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw550\pich72\picwgoal8250\pichgoal1080\pngblip
89504e470d0a1a0a0000000d4948445200000226000000480803000000f571ce7700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000001624b47440088051d480000052b4944
4154789ced9cdd99ab20108629c6662cc66628866668602bc82d1b017fd099718271c57dbef7e624419839f08a48cc1a03c031018023a00950004d8002680214
4013a0009a0005d004288026400134010aa00950004d80026802144013a0009a0005d00428685e133725685c7ee16d67cce09743d20311839b8e722ed4e2d8ee
705d11b3c05bc317be198484de55ad32b91b799e26f63d22fe3d30c37cc8db9037433c601c2d53ad8967bb63e8bc778656c18f190d4c61cc984f6818ab0e6c71
2b3c4e9379acbab97373c9dcdbf59af41dd31d3e39488fa7ed035f18e70b36211fe3f186b5c2e33499a7e8e5dc9e054aafeb1fc9733d77d1f1b6c8a5c43aa130
749de735b1d1ada1f9cbced334594dfcb330d36c62d36b6f6cddd9e98de7d7267304b690994d9c34bda5166df3579d0768e212a9afed92efd0e517796d12df1a
7154647a272c61e3d259a82c4c194242469c88dae1019a4cc41e1d569accf34ca21fe790139ab85e1cb07722d249df0985d0e47236179d819a4df245c7f8339a
f8b1fac145879d4ebc640934b91efdda247e50af499feeb3c5650dd7b217271aac4dae477fa713c6b1aad764bab69143e65d11695b7ab043863b9dcbd1ef9bb8
4991fa7d1376fa4f513d3dd71c592224847d932fb1d2c44531b85d586bba9046a4efab3d6157097117965980f4f9668c6d15bbb097b3d2242f5fbdeda9ef747a
9b8e1ad793d5a727bf98b49d61ecf3873fb395a6377ca703fe0dd004288026400134010aa00950004d8082876822fdb5a7f37f0aeaa3bf2ea50a5cd964b383d1
6e6605c29e045fa6eef69a160c1fd8c8651545b7d36e660526fc308c23e2693ed04468a122b07f97b1d58c50add9c1b83533fdcc2b8f16dfbc320fa9859f1789
14386a42577b454db86ad0840caefef44013f2dcfc4813be859f1715f625054e9a90e9664d986ad0840caefe149adccb43340987179db39a506d4c9a10e1674d
887ab32644de8b26bb7aac26aeebea1f8df80eff4093cc394dc826d62dd09a90f592264cbd626da2d2647c7e42fadde05ff0044d628e8c25cb017b4d9632452a
86b884e454a8f8afc94f22767ed828b5496942d75b3429731e1f05f7bdea7f71196d68e27ad3d9dda7e95dbef7612599ee8e2849b45b568a26b6c35d14d27ed2
9ab039072667b3ef943fa7094de2e35bf3af605619ad6e91d98984eaf26d65390bb209bf2eda0ef7b67d21f6e99c9b780eb2054df28c3a3d1c363fae56eca448
8e6cba9ca8cda7501c2634a18b2d265e973334c9b137ebb3f9c24e741adddfcb11fbfe2ecbf20dc614890e22941dc766da14ea0521e7004d664d365d307e6a18
384b8adee52a9bb1a85829b28d0845f2e67145c5c35c565d75178d6ac2751b3b9b64a8337adde7852615e3bd5e35ef624b6d4a6e4b3907dce94c9a74842681be
520bd7f9087599ff606d3237c235414a2ac40e52c54d3c2e67ec9ba47f721fb8cd123628ee7456ddfa853b9dc03571e24e675ff1e39cb10b1b71f94ec7169f4e
c7b09a14a3756adf44d3c426f4e1be09a957514fbb6fd2022d68927ee749ed9ba4f7677661b55d4e69a2d985253539b90b0b4d36c1a717b663776127184de4ef
743ecc8368a158956c34e1427ff93b9d16684313c5a7bc26e9f89d25dffb86980aff97df1037c04334c1f326f7024d023439069a046872ccbd9ad0504736f9c8
3457efe09169eefb196872165113439ed39ffc00436881ff25055fede007187cb56607a3ddcc0a987927ce3d42995a9356b8b617eb6937b302a967cf77fb97c7
fa04d7f6623ded66061a029a0005d004288026400134010aa00950004d8002680214dcbd9f049ec12fcc663f1ff9394a3c0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 6.2 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 gauche}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shl/sal affecte les drapeaux comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de fois est z\u233\'e9ro, l'instruction shl n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit d\u233\'e9cal\u233\'e9 en dehors du bit }{\loch
le plus haut }{\rtlch \ltrch\lang3084\loch
de l'op\u233\'e9rande. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Overflow contient 1 si le bit fort avant le d\u233\'e9calage \u233\'e9tait diff\u233\'e9rent du bit }{\loch
le plus haut}{\rtlch \ltrch\lang3084\loch
 actuel. Si le nombre de d\u233\'e9calages est sup\u233\'e9rieur \u224\'e0 1, alors overflow est ind\u233\'e9fini. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de z\u233\'e9ro vaut 1 si le d\u233\'e9calage produit z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de signe contiendra le bit }{\loch
le plus haut}{\rtlch \ltrch\lang3084\loch
 du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag parity contiendra 1 si l'octet }{\loch
le moins significatif}{\rtlch \ltrch\lang3084\loch
 du r\u233\'e9sultat a un nombre pair de bits valant 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag de retenue auxiliaire est toujours ind\u233\'e9fini apr\u232\'e8s une instruction de d\u233\'e9calage. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
L'instruction de d\u233\'e9calage \u224\'e0 gauche est particuli\u232\'e8rement utile pour compacter des donn\u233\'e9es. Par exemple, supposez que vous avez deux quartets dans al et ah que vous voulez combiner en un octet ; vous pouvez utiliser le code suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ah, 4\tab ;Forme qui demande un 80286 ou sup\u233\'e9rieur}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
or\tab al, ah\tab ;Fusionne ah dans les quatre bits forts de al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il va sans dire que, pour que ce code fonctionne correctement, al doit contenir une valeur de la plage 0..F, (l'instruction de d\u233\'e9calage \u224\'e0 gauche nettoie automatiquement le quartet fort de ah avant l'ex\u233\'e9cution de or). Si, avant cette op\u233\'e9ration, les quatre bits les plus hauts de al sont diff\u233\'e9rents de z\u233\'e9ro, vous pouvez les nettoyer facilement avec un and :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ah, 4\tab ;D\u233\'e9place les bits les plus bas en position haute}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab al, 0Fh ;Nettoie les 4 bits les plus hauts (avec 0)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
or\tab al, ah\tab ;Fusionne les bits}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque le fait de d\u233\'e9caler une valeur enti\u232\'e8re }{\rtlch \ltrch\lang3084\loch
d\u8217\'92une position vers}{\loch
 la gauche \u233\'e9quivaut \u224\'e0 la multiplier par deux, il va de soi que vous pouvez utiliser cette instruction pour multiplier une valeur par des puissances de deux : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 1\tab ;AX*2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 2\tab ;AX*4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 3\tab ;AX*8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 4\tab ;AX*16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 5\tab ;AX*32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 6\tab ;AX*64}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 7\tab ;AX*128}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shl\tab ax, 8\tab ;AX*256}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Notez que shl ax, 8 \u233\'e9quivaut aux deux instructions suivantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ah, al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab al, 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shl/sal peut multiplier }{\rtlch \ltrch\lang3084\loch
par deux }{\loch
des valeurs }{\rtlch \ltrch\lang3084\loch
aussi }{\loch
non sign\u233\'e9es que sign\u233\'e9es, pour chaque d\u233\'e9calage. Cette instruction affecte le drapeau de retenue si le r\u233\'e9sultat est trop grand pour l'op\u233\'e9rande de destination (c'est-\u224\'e0-dire qu'un d\u233\'e9passement de capacit\u233\'e9 non sign\u233\'e9 se produit). De m\u234\'eame, cette instruction affecte overflow si la taille du r\u233\'e9sultat sign\u233\'e9 d\u233\'e9passe la capacit\u233\'e9 de la destination. Ceci se produit si, apr\u232\'e8s un d\u233\'e9calage, vous placez un 0 dans le bit }{\rtlch \ltrch\lang3084\loch
le plus haut}{\loch
 d'un nombre n\u233\'e9gatif ou bien un 1 dans le bit }{\rtlch \ltrch\lang3084\loch
le plus haut}{\loch
 d'un nombre positif. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_02_02}{\*\bkmkend p6_06_02_02}\rtlch \ltrch\fs23\b\loch
6.6.2.2\tab SAR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction SAR d\u233\'e9cale les bits de la destination vers la droite, en pr\u233\'e9servant la valeur originale du bit }{\rtlch \ltrch\lang3084\loch
le plus haut}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Autrement dit, il s'agit d'un d\u233\'e9calage sign\u233\'e9, n.d.t.}
}}
}{\loch
 (voir la figure 6.3).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1335\shpbxcolumn\shpbxignore\shpleft0\shpright8265{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw551\pich89\picwgoal8265\pichgoal1335\pngblip
89504e470d0a1a0a0000000d4948445200000227000000590803000000d239747700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000005bb49444154789ced9cdb81ac2a104549
cf60341883311849c008ce2f57f1d1a2b5abcbc7a87dddeb63ce345814036b50d139ce11622110f20d7a422cd01362819e100bf48458a027c4023d2116e809b1
404f88057a422cd01362819e100bf48458a027c4023d2116eef6c40fe99d9f8aeac2b9a2fe1c125f7ec8aaf1e03afc35351a92b2ef861c54b8acc46de251ae73
a7c43d85e7795294edb7be28a6435cedbdafe30cd59f8083595be0ec642045d785128852676dafcb7c6b939d265d30aa7d0c8ff3a41a0429a609e9ab7c96061c
a22e5af5506551ca297ca9a4ef174027375abb02f63aef42907dcfe1719e8cdf7c2664f0a48865dd4a0067d84ca99cbcaa5253b1506714742df7b8c958513ffe
cc73bf273e82f408d379c7f795a7ac2759092f0ada750ba7c85da6495ac1f30e6cb2aff08f3ff1dcefc980e249240f277ae2daf5a42cc4aa56042d85cff05254
e195ee9b278fbfe9bcdf93a11f8a27f19b2a3bd193be5da9b0bb525053e05344a99c10b99e1cc47c7dd2fd73b227c2b48ecb9bb868f8b45f0b726dae797d7210
f3fdce999ef46dc086508a684f05a654db3cd17acdfb1d13734f7cfc2d2e0a69ffc417f999d7b19576e7825254f1da453eb99479bc1cdfda24f74f8ccc3d19f6
41e5fdd869f322974f0adbd07656f1a4d6b92b800ae9d5b8bd49eec792ff13f48458a027c4023d2116e809b1404f88057a422cd01362819e100b3fecc9253d57
726855e787ddcc233cd1fef3b8d3fe67b9bd492e0dfba3013ece23fae642036807357899ad3d5793801c31c9cebeed087bf0eb4a3fe0090adaecc93f99e88992
a4c1615adf7684d1932f9dd03d117ff5f67822a6183cc1491a31eedfb7beed08832fbedc7f92a227bfe0c986d23fe2a99eb4a5c893104b4ef1a4cb023c8959d0
84b79578c243c09ec47ed093bd9d5879d297434f6290b5e7c37182274316e44980133ef51b78129b153cd1c2e8899a3e7e953c195f74133c99667e46573eae02
cb1ce30f09b3889e8c23237a325682e5a4ab923d71208c9e7c491f3b200da80373319ff909df15b8f8aeb513528c01388be489e6d758297b02031d4c484ff4f4
a2299fe98d8709f3b0e8b8c193f5dcd9b3c89e8833ae45a609654f843b197a92cca138a0ab315d46d953ace66e5316d1134115cd4c2d6eeec9e227fb7ca8c5d2
0bb8c1138788232a1e154bbcdcc2d6345d9d96c5e33ad03b3530cd2726143d99ff60e3f9b72bcd97a5d7a00cf41fa6c473d828b38ba3ec696255a3655177b5d4
2e68955adcb880ad1b19cbfac35c3e7c99975e84bbc193347d3a2c3b3cf9966e71683c01684d29556a9cd72a95ba7e310107cc5795f87dfdf93bc9dd33b00377
c77a92a49f8d4803ce3bb1c0cbe71d43ba64a6a72b0c9445fccd1e43a52e8c713030c871e969c7e0c9e22fd35ee9099ec1f829599aa553b89a6f21899e653ddd
b358b90bfe6b20e8faec225693a45f48967f07f93e4fc26aa721b9ec5fde3e866410adf9c4fd58639655dcbc7215882395b8c590a42b49f7e5ed9e745fd3dff4
69268683a419dc9156dcb79f9af230cb7a3f7616b70c9b1eef84b0de666b3ebb23ebb8f47e67d1f5f0724f8692d9883a97dc1d6bcf7736a645cf77ba3af47ca7
cb72faf39da0eedb0b4b656fd69baf4f8692952771441be539a03fc39398053f2f0e417b0ea83d2f067a1d7b0e382e4469e9453cd693e19334a8fdcdc5299e34
f8fd93e9e505d113e5459200f56a030fbc7f52c5ffffe245fb27164fc64fdabb401bd3fefc7b4a557ae5424fe8c9b2eb0375ed85d22ba027473c016fceef0de3
7b0569ca5589e609eadf0e4f76bd6fef9417e771df7685d19334a5d089f92624fcb0606b5adc9052772d9bbabe67f0f77271ba3ea5d089f98f0f3f1c1a27ad21
cb145ec259637c3a37f44dcff8e0b17a33f48458a027c4023d2116e809b1404f88057a422cd01362819e100bf48458a027c4023d2116e809b1708b273ffaccf4
cdd0136281f3422cd01362819e100bf48458a027c4023d2116e809b1404f88858d7f5f425ecbdda6929fe03f9980889817b315dd0000000049454e44ae426082
}}}}}
}{\loch
F}{\loch
igure 6.3 D\u233\'e9calage \u224\'e0 droite arithm\u233\'e9tique}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction modifie les drapeaux comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab S\u8217\'92il n\u8217\'92y a pas de d\u233\'e9calage, l'instruction n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit d\u233\'e9cal\u233\'e9 en dehors du bit les plus bas de l'op\u233\'e9rande. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Overflow contient 0 si le nombre de d\u233\'e9calages est \u233\'e9gal \u224\'e0 1. Un d\u233\'e9passement de capacit\u233\'e9 ne peut jamais se produire avec sar. Cependant, si le nombre des d\u233\'e9calages est sup\u233\'e9rieur \u224\'e0 1, la valeur de overflow est ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de z\u233\'e9ro vaut 1 si le dernier d\u233\'e9calage a produit z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de signe contiendra le bit haut du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de parit\u233\'e9 contiendra 1 si l'octet le moins significatif du r\u233\'e9sultat a un nombre pair de bits valant 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag de retenue auxiliaire est toujours ind\u233\'e9fini apr\u232\'e8s une instruction de d\u233\'e9calage. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La fonction principale de sar est effectuer une division sign\u233\'e9e de l'op\u233\'e9rande par une puissance de deux. Chaque d\u233\'e9calage vers la droite \u233\'e9quivaut \u224\'e0 diviser la valeur par deux. Des d\u233\'e9calages \u224\'e0 droite multiples ont }{\rtlch \ltrch\lang3084\loch
pour}{\loch
 effet de diviser le r\u233\'e9sultat pr\u233\'e9c\u233\'e9dent par deux, donc plusieurs d\u233\'e9calages produisent les r\u233\'e9sultats suivants : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 1\tab ;AX/2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 2\tab ;AX/4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 3\tab ;AX/8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 4\tab ;AX/16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 5\tab ;AX/32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 6\tab ;AX/64}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 7\tab ;AX/128}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ax, 8\tab ;AX/256}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a une tr\u232\'e8s importante diff\u233\'e9rence entre sar et idiv. idiv arrondit toujours \u224\'e0 z\u233\'e9ro, alors que sar arrondit toujours \u224\'e0 l'entier le plus proche inf\u233\'e9rieur ou \u233\'e9gal au r\u233\'e9sultat. Pour des r\u233\'e9sultats positifs, un d\u233\'e9calage arithm\u233\'e9tique d'une position produit le m\u234\'eame r\u233\'e9sultat d'une division enti\u232\'e8re par deux. Cependant, si le quotient est n\u233\'e9gatif, idiv arrondit vers z\u233\'e9ro et sar vers moins l'infini. Les exemples suivants d\u233\'e9montrent la diff\u233\'e9rence : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, -15}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cwd}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab bx, 2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
idiv\tab \tab ;Produit -7}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, -15}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sar\tab ax, 1\tab ;Produit -8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Gardez ceci \u224\'e0 l'esprit si vous utilisez sar pour des divisions enti\u232\'e8res. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction sar ax, 8 copie en fait ah dans al et effectue une extension sign\u233\'e9e de al dans ax. Ceci parce que sar ax, 8 d\u233\'e9cale enti\u232\'e8rement ah dans al et copie le bit le plus haut de ah dans toutes les positions de cet octet}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
En effet, huit d\u233\'e9calages d'une position viennent de se produire, n.d.t.}
}}
}{\loch
. Il en r\u233\'e9sulte que, sur des processeurs 80286 ou sup\u233\'e9rieurs, vous pouvez utiliser sar pour \u233\'e9tendre avec signe un registre dans un autre.  Les s\u233\'e9quences d'instructions suivantes fournissent des exemples de cet usage : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Equivalent \u224\'e0 CBW :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ah, al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sar\tab ah, 7}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Equivalent \u224\'e0 CWD :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab dx, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sar\tab dx, 15}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Equivalent \u224\'e0 CDQ :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab edx, eax\tab \tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sar\tab edx, 31}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il peut para\u238\'eetre b\u234\'eate d'utiliser deux instructions quand une seule suffirait, mais cbw, cwd et cdq \u233\'e9tendent uniquement al vers ax, ax vers dx:ax et eax vers edx:eax. De m\u234\'eame, movsx copie son op\u233\'e9rande sign\u233\'e9e dans une destination dont la taille est deux fois plus grande que la source. L'instruction sar, au contraire, permet d'effectuer une extension sign\u233\'e9e d'un registre dans un autre registre ayant la m\u234\'eame taille et contenant les bits du signe.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;Extension sign\u233\'e9e de cx dans bx:cx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab cx, bx\tab \tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sar\tab cx, 15}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_02_03}{\*\bkmkend p6_06_02_03}\rtlch \ltrch\fs23\b\loch
6.6.2.3\tab SHR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shr d\u233\'e9cale les bits de la destination vers la droite ; \u224\'e0 chaque d\u233\'e9calage, le bit le plus haut est affect}{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
 par un z\u233\'e9ro (voir figure 6.4). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1080\shpbxcolumn\shpbxignore\shpleft0\shpright8265{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw551\pich72\picwgoal8265\pichgoal1080\pngblip
89504e470d0a1a0a0000000d49484452000002270000004808030000001ab3a54900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000058549444154789ced9ceb95a3300c85dd
1ec59062288662700353c1fe65b1cdd3e80a41c8c499dc7bcece6431b214e91b631b12e728caa29ea28e444e288bc809651139a12c22279445e484b2889c5016
9113ca22724259444e288bc809651139a12c22279445e484b2889c5016bd8f93ce6d7f07b595abdbe5bff1b187aa892fbbe1ccee97426b514efcc3d57210434b
d58a2da111e6d8d7eef15befea2995c489778df7be717e3ae09aaeebdaaa1a5e363eb1729b2283a0e628279deb7c271a79d77a5fd7c05705b98b1d7ad05a924a
e264fc836cabe9c05892a932f7723220090a54d7202731c025bc951e69d0133bec1ce40477589a0ae264ced73c80af3819feddfaec1dbe14f44dd3697ec4b276
911011e4aeea507f3e82e53f6140298893c784473b8ddf29efb130c3cb30b6dfe7bd412dbeea154e7c8b4735c81eea6f3c7eeb38f922bd9393ec01dd395d735a
c776dfcf63ca6d6a1e359878565ee16498ba3c609f15628f9c3ca1614218d5289c34e9047f3f276142e12ba1c3a6c1754d96683a514182c8c913da5d776a70dd
e99bfa7e4e92eb7d65bb30bf6dd51983dce83126e4e419d9e7b1e18c9770224c289af15a27bada2ebfb2aee0840773c279ac41f675f12bc693589b16d416d5d5
8500c5b27a0737d994feb82e3668c349932a20edb3758f797ed2dcf78717d8f315e80fd57558eb782fce56eb2aceb54ef6c77d3683369c8ca376bb5d84a44b40
33ad773ab85f754183ab072a10ac6b57cbfbf65ebb5a69f362d46171e27d40ca22724259444e288bc809651139a12c22279445e484b2a81c4eb46f7cbaedeba0
b48eaef97f459705aa9cb0601c21a9b8ed2427573ac2fe9d129b52f1033318c81b554e58aeff0172e9214549e739413e868ea093ebb12966c85d3105d9e85338
4146a739f9272b7222db444e80d9516c3fd80c86584a4136fa184ec4bfbd2b9c882e464e441f8913d9ec28b61fd16ee4049981d0df3a9921271fc3c989a3f7ab
644ec251c44968bb8793e80570126d10274313e6a4ef2127290e7282d5ba1a3f6b2173320872d29f087f3c0f70924e009cf49893d82a7132b9459c44911359e1
7154e9d1a01482c8c9545e8193b9f216adaee5d88bc4c9949e7dbd173b9913e02e188ea190135961306985e703a71a8a09956bd16fda8eb59df6412f52b555be
80e1c6527b5b8813e19d7d0f27c193179e4a5f6a282654ca699fb51dbace570897bc80e884c14131cc3b059cecded8d770129f6e973e33b7a9a15c893ca7b9d5
e8c16f7ec82ef2da9df2628b6ecdc90e1521749993ac345fca89031a9a96999e505e8f9bfaf0d1c1b89fe99723c8c94ae7bc2c1351c9ce2b8d8ac38c13c97274
108eadbe17e16b39c9d2b4cfb6d266e524b4c4adfa4b5ed4f0bcd2a6763a0d60c289e3b1d47dbdfdacd01fe404cd4f765943158c6783421cb9cece0c17808b5e
9061b2d3c2531d468133dc94bd717edb2d8b81bfc849a5ad77a6848c9770a1a54fd9446daa36672e1385f35ed6867925d1903019aa0e354e9251fc91a7ef2f72
82f74fe6745857147d56fa43cd670afb6c662f9add76dda2acc4f34e33879b8cacdf5f78b1ff32a7bfc849df3af113782224ab4ac493f275e7b9fd13753fd6e6
656fa7ee9f20bcb60e7766ab8c64efef8b38516338bf1fbb5cb6edaec47d7b753f160c4337ecc7cab71d57ebe22cf46fe724e9b5f777662717eeef8866afbdbf
23bcafb45afc86f989ae4fbc5f2c333c59bafbef174f57abedd15f50c99c4ce2f32729f43eccf0c2d6c96aa38d9c90933cf4a0369bb890137292879eb4fd9615
729271028cce7372e9396a77ed396aa73c478d023fe2c472f47e15c489d338013acd09721239414e2ec7a699213b72a2cb61696d6739f9009d0afd86cc1b13f7
4b9e8ea425ee7c56cf3b29472f4af0532a342caa309113ca22724259444e288bc809651139a12c22279445e484b2e87dbb49d447e93f67585beacc2e9a3d0000
000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 6.4 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 droite non sign\u233\'e9}{\rtlch \ltrch\lang3084\loch
e}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction SHR modifie les drapeaux comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de positions du d\u233\'e9calage est z\u233\'e9ro, l'instruction n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit d\u233\'e9cal\u233\'e9 en dehors du bit de poids faible de l'op\u233\'e9rande. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de d\u233\'e9calages est \u233\'e9gal \u224\'e0 1}{\rtlch \ltrch\lang1034\loch
 le drapeau overflow contiendra la valeur que le bit }{\rtlch \ltrch\lang3084\loch
haut}{\rtlch \ltrch\lang1034\loch
 avait avant le d}{\rtlch \ltrch\lang3084\loch
\u233\'e9calage (c'est-\u224\'e0-dire, l'instruction active le flag overflow si le signe change). Cependant, si le nombre des d\u233\'e9calages est sup\u233\'e9rieur \u224\'e0 1, la valeur d\u8217\'92}{\rtlch\ai \ltrch\lang3084\i\loch
overflow }{\rtlch \ltrch\lang3084\loch
est ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de z\u233\'e9ro vaut 1 si le d\u233\'e9calage produit un r\u233\'e9sultat de z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de signe contiendra le bit haut du r\u233\'e9sultat, qui est toujours z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de parit\u233\'e9 contiendra 1 s'il y aura un nombre pair de "1" dans l'octet le moins significatif du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le flag de retenue auxiliaire est toujours ind\u233\'e9fini apr\u232\'e8s une instruction de d\u233\'e9calage. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction de d\u233\'e9calage \u224\'e0 droite est particuli\u232\'e8rement utile pour d\u233\'e9compacter des donn\u233\'e9es. Par exemple, supposez que vous voulez extraire les deux quartets du registre al, en pla\u231\'e7ant le quartet }{\rtlch \ltrch\lang3084\loch
le plus haut}{\loch
 dans ah et le quartet }{\rtlch \ltrch\lang3084\loch
le plus bas}{\loch
 dans al. Vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 le faire comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ah, al\tab ;Obtenir une copie du quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
haut}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 4\tab ;D\u233\'e9placer le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
haut}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 dans le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
bas}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ;nettoyer le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
haut}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and \tab al, 0Fh ;Supprimer le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
haut}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 de al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque d\u233\'e9caler une valeur enti\u232\'e8re non sign\u233\'e9e vers la droite est \u233\'e9quivalent \u224\'e0 la diviser par deux, vous pouvez \u233\'e9galement utiliser cette instruction pour r\u233\'e9aliser des divisions par des puissances de deux :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 1\tab ;AX/2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 2\tab ;AX/4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 3\tab ;AX/8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 4\tab ;AX/16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 5\tab ;AX/32}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 6\tab ;AX/64}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 7\tab ;AX/128}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 8\tab ;AX/256}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que shr ax, 8 est \u233\'e9quivalent aux deux instructions suivantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab al, ah}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab ah, 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Souvenez-vous que les divisions par deux via shr fonctionne}{\rtlch \ltrch\lang3084\loch
nt}{\loch
 seulement avec des op\u233\'e9randes non sign\u233\'e9es. Si ax contient -1 et vous ex\u233\'e9cutez shr ax, 1, le r\u233\'e9sultat dans ax sera 32767 (7FFFh) et non le -1 ou le 0 que vous vous attendiez. Utilisez l'instruction sar pour diviser un entier sign\u233\'e9 par une puissance de deux quelconque. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.2.4\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s SHLD et SHRD}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces deux instructions }{\rtlch \ltrch\lang3084\loch
produisent}{\loch
 des d\u233\'e9calages \u224\'e0 gauche et \u224\'e0 droite de double pr\u233\'e9cision et sont disponibles seulement sur des processeurs 80386 ou ult\u233\'e9rieurs. Leur forme g\u233\'e9n\u233\'e9rique est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shrd\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, donnee_immediate}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab shrd\tab operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
1}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, operande}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
2}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\rtlch \ltrch\i\loch
operande}{\rtlch \ltrch\sub\i\loch
2}{\rtlch \ltrch\i\loch
 }{\loch
doit \u234\'eatre un registre de 16 ou de 32 bits, }{\rtlch \ltrch\i\loch
operande1}{\loch
 peut \u234\'eatre un registre ou un emplacement de m\u233\'e9moire et les deux op\u233\'e9randes doivent avoir la m\u234\'eame taille. L'op\u233\'e9rande }{\rtlch \ltrch\i\loch
donnee_immeditate}{\loch
 peut \u234\'eatre une valeur allant de 0 \u224\'e0 n-1, o\u249\'f9 }{\rtlch \ltrch\i\loch
n}{\loch
 est le nombre de bits dans les deux op\u233\'e9randes ; ce nombre sp\u233\'e9cifie le nombre de bits \u224\'e0 d\u233\'e9caler. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shld d\u233\'e9cale les bits de l'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
1}{\loch
 vers la gauche. Le bit }{\rtlch \ltrch\lang3084\loch
le plus haut}{\loch
 }{\rtlch \ltrch\lang3084\loch
affectera }{\loch
le drapeau }{\rtlch \ltrch\lang3084\loch
de retenue (carry)}{\loch
 et le bit }{\rtlch \ltrch\lang3084\loch
le plus haut}{\loch
 d'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
2}{\loch
 est d\u233\'e9cal\u233\'e9 dans le bit }{\rtlch \ltrch\lang3084\loch
le plus base}{\loch
 d'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
1}{\loch
. Notez que cette instruction ne modifie pas la valeur d'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
2}{\loch
, mais en utilise simplement une copie temporaire pendant le d\u233\'e9calage. Si le nombre de d\u233\'e9calages est }{\rtlch \ltrch\i\loch
n}{\loch
, alors shld d\u233\'e9cale le bit }{\rtlch \ltrch\i\loch
n-1}{\loch
 dans  le drapeau carry. shld d\u233\'e9cale aussi les }{\rtlch \ltrch\i\loch
n }{\loch
bits }{\rtlch \ltrch\lang3084\loch
hauts}{\loch
 d'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
2}{\loch
 dans les }{\rtlch \ltrch\i\loch
n}{\loch
 bits }{\rtlch \ltrch\lang3084\loch
bas}{\loch
 d'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
1}{\rtlch \ltrch\lang3084\loch
. Graphiquement l'instruction shld est illustr\u233\'e9e \u224\'e0 la figure 6.5. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2430\shpbxcolumn\shpbxignore\shpleft0\shpright8250{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw550\pich162\picwgoal8250\pichgoal2430\pngblip
89504e470d0a1a0a0000000d4948445200000226000000a2080300000042aef69300000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000d8449444154789ced9ddb81ac200c8669
cf62b4188ab11868602bd8570f774192888aeb1c27ffc3ee8c9080f0c94d1cc5c262ed4988a773c0fa0fc498b01ac498b01ac498b01ac498b01ac498b01ac498
b01ac498b01ac498b01ac498b01ac498b01ac498b01ac498b01ac498b01ac4982811f57046f42864fc288518e7535ed42da7f178e13c2ead9492c2fc510f6764
903a7c9262d65a8d8326e3c3624ceed33d657b5022723a0fe5ff43624cee532a5bd3d8bb865fe8590cca5494fbeabecd790425f5309a8a1cc590be8e938b3045
9fa39874e5d37899ca78215cdb6ecf371f89171bbb25ed29a464b23bcf8cc96d8a9898765f4b7b0d1b464cf58ce6abad0aff610e11a6c13230a8d954b5f611dc
57ed9c84aa3655a6b4b2151e4d9297325e0ad7a6a7710774aa12396ed39660dae6b87049da0f8cc96d0a98cca3fd6bc78ebe11b17fecd5e93ed8da933e823406
b64adde0c146085fe7ac5d724d8294abc9eaa5889785ab2233e153b24a9903d3b6c6ee8303c6b42fc3b9113022c6c42ad4cc68468e5adb2181ab32f7c75595ab
40530bbeec4d84b52add85ecbfda8a9ce6c2e3b29aac5ef27855788549b44a9903d336d17c2b64bfda86498f63a7c271ee199325d5cc3a33de60e27a03f3d5d7
9939e40dcc452ba629559536f1625f52b62aa5973c5e1e1e30593b1dcbd39a76cc1c98b689103361180c63a17e05c49858854a1dd29cb8a93531176d88905aa3
395ec2a1ae35d49ae4f180d66433844d69c7a360da09137748176e3a8831b10ad5ecc70972ae3091e143363649566bc3bfa8615a41736387713b36f18659bc7a
6cb2c4c98a9b106fd296339cb61b9ba870c849f7ac59c6c42a7611c24e266c056f30317dbd2a671be18a36df4691d9afa569a71d6e74b9ce9e9297a2d4d7f084
ce9c2dafad56317360dad6d84eaee490064572e927c6c4aa58378913870c93598a51a508c9408fc2340bb1e61637b3597d56eb269997bc0a53f8da49648bf59b
b43592b6cfeb6822c4b9fdb4741463d2a0e65e9e1c35665e0e8c2ecf8d30745f4a1893163556959ac83968f2b213ef54daa5b4e8d9e32c8c4993daaa4a0bbaf6
d709ef91158d3398f869504f31262fd438d81bde8ad74d5884745888e37513d6df8a316135883161358831613588316135883161358831493764f2cdc6f3506c
ff72f3cb21dd79e9b5091fd9b7aaa67817a716b92f4da2f98af78dce8a310130d1f666acbf55ec25a4526a1eec7d5ca9cfde67a9a4e1c25722eca2054d887d69
339aaf69d27aba72978731013009d7ebfa004428ff580d9d301947b0f05deac8c317c4be343d0d58befc990d1772cd98d498a42a4acd7b8649d86ed8215d2989
676a104c887d69a657c130f1fb16e4856e8731a93149db99d356445ffe73d83c941e95b8243d2c28261aef3f166c5f1ad119fa76449d793a2c8831a91f225eef
f8a7235ee949871e9dcea0514ccca065224044f7a561f95ab7659f156362878c4e92c0c40e61cd0444f7c3c4760144c56163d885da97c698dca8aad319914ec7
3f85d7071325ec4337c42eb61999ce50fbd27630e14ee78ada87b0f1618c0e9848fc66bfd6456e3681d4fa070f616f54fb84b8636bb24931975f749360a341ef
4b4327c4ee4478427c490526f6211d64792d1b9bc83e1bc3901663988ac473d1fbd2507c475e5ebbac0293d0a6db5f85d82ed6af8f66a8a14fa961834a74697d
675f1adecaf1623deb0fc498b01ac498b01ac498b01ac49874d1e562a4ec89302add93667d0cde2e7152579d9f0d3bebf268a91c2fc9570b2d0fa26c9bcb1d8b
e5eaf4781855e13b664426619383066f97587e60d9b2d588da31413d98b05f583f268c4af80737c392634caeea494cc0741b3041cd1893bbc4988019674c4ad1
982c0b58f28730015d044c4c1c1413c82e6152d9e59854968cc9559198585db93a43340c1317086382187a4c20bb840964c8985c158a498c0062722c0dd20384
096a9837631026882163725530263ec8554a5dc559e0ae771f8b72516112c3203b913985e90253644cae0ac0c41f4fcb5248053760d2e682481b830be0eb97ca
346372551526ee60be7a89d4538689d6c59fa58ab6adebc205cc0868570462740180312687240051c52d8adebef2b0bad5fec9cf541f60b4baaef391c631bb14
08655aac868cc909d198a05152c963811b4cceb820c26a3e1b9d3226e7049c7d174caa64ceb9c06a9b32fca10c199353a2312149015bfe02804d4a075d1069d7
239ac28e36644c8e6b1793aad0533c64fc49a5b58d060d45537470208adbe56313d4923139a7164ccac9ce72c38438876de93a21c652644c0ea911937ecb6bd8
3259e6629bf4fef2da02e0c5cb6b1dd58cc90f2fd67fb18e60126b04c4846ffdbd5947314176011cc044d31b09ea0d01bc91e0791dc704d6214c600fbc2de973
c5989c2fa82fd2db31c1ec189343fa734cf0fa3661e776d60b62673d63d2451026e7d49a1eeee064c22775bda0be481f84c91feb7a417d91befbec0fe8bb0bea
bbcffe80bebba0befbec0fe8bb0beabbcffe80bebba0befbec0fa86f416929c478ee8dda577e2afbb4189346752d28695f0aa4c6e1ccafa632269fac9e05157f
951979170c2dc6e493d5b3a0d2afd7da5fde157a0ebfc0ab46ffea3a25f530fa5fe695feeb14de07320f6246de7b77af189346752ca8750796fb6df7516a6d39
9907a595fd607a23352f72d2e6b8745fed6f6e2f3686fdc0987cb03a16d4da6db83745d816c392e3da18fb41b93d586ee032a7afee27e0ed87f0369ba3fb05af
893169d47d98b81e4868edef528afc5d54ae11f15fdd3bd132eb4ebf06df28c6a451b7743af69541e11146155f91a60208664022a629c7241cb77f95604c3e52
f70d61436b52b631e18530aac6c41d1ad4df4e78189346759d10075ffe0d9b6e362342b3a2a7d0e9780c8a4ec71315c6268cc947aa6b41cdd9f29a309f559ce9
b817d4c5d6c44c6bc602131b430e8cc907ebb6c57a314bbf5ce2d64d624f63a28c62524b1ad1ba96c4c4909a31f960dd565027df87f7d7983cbf31ecbf1063c2
9834e8bb31b9418cc95f8831f9487dda5931261fa9779ed5837a6781bef3ac1ed43b0bf49d67f5a0de59a0ef3cab07f5ce027de7593da87716e83bcfea41bdb3
40efd84890adacb9dd25eb467bbff96472f7716cc2b24fc2d83e5a3908240593af017d5004df41676f3eede48531d9f55561320db3d6b3bd3deca58432923682
96dd1649b09feb1826ad277097bfbb4f3d8e883f746b941298c3558cc9aeaf2d26f1498c74e1062ee2f14e988c23e827bb05bdd5e4da04013e4f44eca01b54fc
838b31d9f5b5c5247e4838840f6a701f6d1774eece4f212911dc7491995c8a08c277d069bfb79bee7618935d5f1b4cd63e3e5eb771cbc9ec3fcef0f57c4c7a20
5a253d4d58103e04c1dcadbb31093126fbbe82b68d48d6acf831ec926f87bda841e37e24d55c0d58b3c09854ea8a89544e1426367c8e5b1e7b60227786c2e890
7340db19c6a4d2139dce129fdae980899d7c68b2f382c3344e096352eb91216c7ceca20326b2ece70aa93237b934b5fec143d84a8f4c883bb626b9db2a3ff382
0c54fdd34207ddf184b893af0c93d95d73f0f25a3636e930d359d07a9d857dc81dbaf8c7c10da290d4514c4cf6b5e4e5b5abbe324ce293e31258ac5f1fc798c8
abba59e86022fc64c6569ae8a90877bc58cfeaa57716e83bcfea41bdb340df79560fea9d05fa716775677ea893a5828e847d5c8176d17d67453d1777fda1b9b3
debb9b3126173d632fa6a15e1bd5e7054668c2d42b713abd498731f1f15b2e291793c404d1d17770421e16ec4544bfaebe71b3e58c196302c66f3eba8309786d
1ec204f3603101d30df58d9a616f5123cd1813307ef351c6e445ba0f93fa8dba25260bf40ef86398002e222650f2a9be6bbb257b1170f546df1593ad216382c5
3f7094c4c4ea1a26a00b8f099c7e3ec8803101ed222680216382c56f3beadc629824130013221130ef1026d10588099c76ba916c636066b55d8689c832f53e9d
c6448dd9932e1b2761ee4330e26354759c19ef67dcc7c35cd4d5fdf39bfb87f81460c67f059ae704e59a67c6c4c50fffdd56e474533d77b24e911148d6493452
c10d9cacd10817189f74da55c68fe5993171f1fd3fed1f858aaf584a4e8aa514bc21a9eab8360ee9e8f047670b17b00b4da55ffb47ea7a8bc9e13c33262ebeff
27157054148a614845a5084081af61ae42ed1f11773081692cb88b854e9bf049d8110932262e7ef8a7aba302110249d2b615d8a8c4048f8586fd106144b6e8c0
5dbb97a91f266835ed70025c9744911fafb65d44cf181ecaf30b74129301c064290b2e8661c3837ce5033506730c44235cb4a40dfa24ecc804dfa86b6313a58a
a34b566ee9083a1e0ce1e080702fd375ada12ef6d326337e3cc137ea24260a99e97897a1d08009f14f11a35cbbd085f16ebe43bcda450ac367e3b4dd76dd04cf
f37228cfffb1ceae9b0ce8ba89f74aacc2ae31f45699714bd6c155583cfd759d6cc1566121bcd6c55b68792df7f95e9d5e859d077c153608c1e4275b15a92ab9
353b9b2e0bf45063b2ed350ab36a34959b69d0aefd1ed47fae77defafb05d3cfefe14166cbef0f6497df58664c1ae31f384a62a2a11d1c47f79be01b094cdf56
a59bef084030b176c44682ad1d6382c56f3efaa5db92de29c68431691063b29a09c604d3614c6041313f72673df61b081e9313668cc955cfa8a8b0564c3e4677
95df478931b9aabbcaefa3f425a7c9ba26c684d520c684d520c684d520c684d520c684d520c684d520c684d5a0a717a758ff87fe0122a100d7e0096e72000000
0049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 6.5 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 gauche en double pr\u233\'e9cision}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shld, affecte les flags comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de positions du d\u233\'e9calage est z\u233\'e9ro, aucun flag ne sera affect\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit d\u233\'e9cal\u233\'e9 en dehors de l'op\u233\'e9rande}{\rtlch \ltrch\sub\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de d\u233\'e9calages est 1,}{\rtlch \ltrch\lang1034\loch
 le drapeau }{\rtlch\ai \ltrch\lang1034\i\loch
overflow}{\rtlch \ltrch\lang1034\loch
 contiendra 1 si le bit du signe de l'op\u233\'e9rande}{\rtlch \ltrch\sub\lang1034\loch
1}{\rtlch \ltrch\lang1034\loch
 change }{\rtlch \ltrch\lang3084\loch
pendant}{\rtlch \ltrch\lang1034\loch
 l'op\u233\'e9ration}{\rtlch \ltrch\lang3084\loch
. Cependant, si le nombre des d\u233\'e9calages est sup\u233\'e9rieur \u224\'e0 1, la valeur de overflow sera ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau z\u233\'e9ro vaut 1 si le d\u233\'e9calage produit un r\u233\'e9sultat de z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de signe contiendra le bit haut du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction est utile pour compacter des donn\u233\'e9es de plusieurs sources diff\u233\'e9rentes. Par exemple, supposez que vous voulez cr\u233\'e9er un mot en fusionnant les quartets }{\rtlch \ltrch\lang3084\loch
hauts}{\loch
 de quatre autres mots. Vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 le faire comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, valeur4\tab ;Obtenir le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
haut}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab bx, ax, 4\tab ;Copier les bits }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
hauts}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 de AX dans BX}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, valeur3\tab ;Obtenir le quartet #2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab bx, ax, 4\tab ;Fusionner dans bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, valeur2\tab ;Obtenir le quartet #1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shld\tab bx, ax, 4\tab ;Fusionner dans bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, valeur1\tab ;Obtenir le quartet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
bas}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab shld\tab bx, ax, 4\tab ;BX contient maintenant les 4 quartets.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shrd est semblable \u224\'e0 shld, mais, naturellement, le d\u233\'e9calage se fait vers la droite. Pour avoir une vision exacte du fonctionnement de shrd, consid\u233\'e9rez la figure 6.6.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2760\shpbxcolumn\shpbxignore\shpleft0\shpright8265{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw551\pich184\picwgoal8265\pichgoal2760\pngblip
89504e470d0a1a0a0000000d4948445200000227000000b808030000000f21bc5000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000f5349444154789ced9deb81b32a108669
cf62a4188ab118a681af82f397c35541671059b2ab66de1fd9441886cb136e625608c3629d4908e684752ee684d522e684d522e684d522e684d522e684d522e6
84d522e684d522e684d522e684d522e684d522e684d522e684d522e684d5a20e4e44921e9b15509398978b36b350abb9b86c1ea5f9bb72a60e4eb49550f60586
e60484028079ba6434a994092516003d4f3d99624e4ed539ee8cee4bb624e7b92b1fcb54febd24e6e4543fe444cf62766fb5f223401c06042c620a43801d0cfc
c020ecb0a0fdd820217d94d2c7f0af66897c802ecd424a45d4351cdce80745868c8b7df46ff337cdce8998e247193262c112cbc29c9ce9679c2c9306ed5a444f
33d89690f6c5b68398ed10e21bca8e0b20dd57dc5eb2e382d06001d93efaa4424317538bdccca75444ddc2c10e36fe02aca550f3debf9a1ccf935e2c671032a8
e739666499dc1be6e44c3fe3c4ff716da45d132ee1c55e56f1b2f29dc4ecd0715dc1a29291ff68c4b2f5f9f9489699a594a62c6a1e9efab5b5143af71f3a298b
a0cf9ff1939725653764c4bdf1c4d81e66ea9b067f837ec4090870b275eddb697d09a1f672a8783767583100ed9bc77f74cd28973cc5a0bd994d298f8a24bbe3
2459cd8bcb9f8db885fb6e247c7403a14836ae6b826b93a36fd28f38d1eb0279c709c43829da0ac664e7071b278eb03496c8e5987a96521ef5906c3eee38a036
ff51110cdb650829734ee275fb2ae37ca8a736be403fe4247d6eeb4fd4b476f77171b3a4e9eb368f45ba21d77a5954ac9b2ae7b1abff74d5670ddc38e7dfee38
f197a0488655ea87f31357b9200fe38e8a6f761389389dd938d1935cc7a36c5dbc9b9f8474b7a8c8fcc4a4258b5f17effcab25cb9f29c69dc86faa03e8aa8c6f
d0cfd73b30c9437f62c77a5dac37d6fec46d856d9c98ccfb92edb36d666b4a79d45db2d17cf1e65058b934559a3ff929889a0b4e5c09d424d6747b2ae31b3460
ff2475e619278b0adb2ad94648dc16b1ada7b27e40650d936fbcaf66594a791b96c946f375db7fe71f1218300bdb29256c82b12d814addc8240d0bd747ee03b6
8ff267f3c62ca50b53ccbe59063026b4fe94132dcfd6a16b4ae7513bfc1702c1830eadbfe404c4e917785bf75ed9d9e8e1242c865884f8fc49949d5eebe1f7c0
df23e624083e73a6e635624e582d624e582d624e582d624e582d624e582d624e582deae124ddeccd2c9739dc4789f20753c24d351febf7763a89a3ae5aa61b3e
478b299e94c5a4c87572bac3f4251ac2094c52032c5bc569a1b55efcbd5f5083cfb32f8e41aa89002f8ecd4f384777949c5cce2986c8fd142901e417dd0f1ac2
493a57ba6e7dc7a0e3a9c4017207b0c9efff3ca3ae7c06d14736201c9045ef0a809c284e4289a6efd9951bc1c9da00eb958c132dfc2834ae466bf78d95aa2089
73e2d1c6ad6caf45e53b1c7250df33f28ce044aed595da301e279ce2db65e4b1d34a7e61a2bb2e7a7031f9834185097d4731f424bae7a1b267aa8b93f57872fc
bc56e636d088f408d6761c758c40d033c8094857202ab3559a638a93fdf9e0d7ab8b13e56fadaa1a2721027c801377b27141e713aa3e652626b2e9691e54cc49
d48871677b94af1c77fcf4703427a5a35cda3d4d541be270baaaa3e209273cee546d5ae7b18991dfe144d14703c20209cf86acfdc401cf63a33eba2efe447f12
a69c6482b8abb0fb86ce5655b54f2087aaf05800af8bab361927fe916198241cf7d9f2f9c9b8f58e7fce47925f640249974185e502e2648b488e5c23cdbccf76
6e93711227b3d8be7db810638d3b7c5a7f5e9ceabaa845922a976e7bd16b69deb767b10e624e582d624e582dfa3027b5c4ff9ad08afb5a5067d8c3358413d1a9
413e7ac3c69b3127f544fe1172a903a18b9e85219d988a93cebcd1eeea45fa795dde544fe2e43f54a79ce066ff9d71d263c69cd413f9254e30170d9ca0593be7
a4c38c39a927c29c30272d891caad35e243931c60ce2c4792139f16e084e6c18d9e0c6fffc16ce49ac30e6a43311ac42ad504e42503b27311ec1890fa1380979
3b36784a98e2c4274a701232cf9c74258254684c17e5240635731263229ca434d0e60e813827823073863151a23ba1ec9893f344d00a15789dc6b02b39dc5069
f652b8c1f84a61282784619e2673d29108c50956a7bb964f8a138a74a6a8c821814acd0bec02314e50c4ea761587ccc979223427c73a3db67ccc0884a7b4c4ee
988828e4aeb47841dc609c6076fb40dc0e4385393949a42024a57bac532c6c3328391184f6b927bd6080e1863b3b24b052ac9293d31c3f55a339a936ef957aac
a5d3e325ae9a3aed6a86cc497322a79cf8687df5b88fd9e9e5bcb93bed4c75dc392fdf3334a41cc8b8838ee4c7a006e745cc0b5e8e6e70bbd5900c2486d3d521
73d29a488d13f7619b231e825a7218a3fe77c9cbce4dc5ce947635c30a24ccc97922e47ac707979559ae2d2fe4f0b06156f30265e0deb0d2d855bb9a2173729a
08ce49083cb643df217f8a13d449e1669fbb7fdb76d9d10eaa761587ccc97922588da6d49106ecf14cdfdfc16e0e6c7ee8fb3b86dab70f1a737f8739c913412b
f41f7dbfd8c0a8fbc5a676bfd810f78bd792d39cd0f7010933e6a42111a442fd1f9c9354a90338a99c3f093012e70a6a07490c7dfea4721c8139694804a9529a
93b5527fcc89d3cdcf2931277922cc0973d292c80b3911cc49ae4771f29be7ed056d269893ee44ba34c8476fd807f499fabd8186946358adf6f9604e3eafb794
e3ae7a4bfdbea51c77d55beaf72de5b8abde52bf6f29c75df596fa7d4b39eeaab7d4ef5bca7157bda57edf528ebbea2df5fb9672dc556fa9dfb794e3ae7a4bfd
bea51c77d55beaf72de5b8abde52bf6f29c75df596fa7d4b39eeaab7d4ef5bca7157bda57edf528ebbea2df5fb9672dc556fa9df7b96e3d3c7897e557f5d9943
74cf72fc75d30ed55f57e610ddb31c7fddb443f5d7953944f72cc72d33f5d5624e582d624e582d624e582d624e582d624e582d624e582d624e582d624e582d7a
2027cb2c84824a844ababa2f3facc7710293d4008b505de932279d7a1c27d312a32c3de932279d7a1a27cb14df681b452b9885f443909ec5ec2010a01c0c766c
9a94ffb84c8128906206e6a4574fe344aee38d000bc704960be3f0d1a05d572366b5805112001c28625ac21b63a734303127bd7a1a275b4bdb77daff4ba77989
97c15a09e9c226777d711f557cb3cc3e42b456cccb453d9c13f7c60e45107e5acf62b385fb8ec67f74d1c2b426862edcaf5cd5d33899d7e9ab1b77fc206431d0
f148908e24d8c9889032e7245c9f7cb72379fcb9aca77152ce63537fa2d7f871005a4c86c7ae3fb163117372554fe3a4581767f313ff5f6d256c60d84948ce49
363f015e1f5fd7e33881c9ad65c23e9b166ebde37a18b7deb1215b7f62afcf392766cad73bccc9553d8e937cdfdef62773dc9875fb27aea789f39359486dc4ae
7bd9f64f9893ab7a20279b746fde9993ab624e582d624e582d7a3427fde9332717c59cb05af49d9cb0ae8a3961b5883961b5883961b5e8699ca4a570be24de1d
acf6778efdd9243f5fd5bf37679d08575a86c3768896291ec8c3441f9351a2ef8070b79ecfc9e160b5505aeb6572b77dd4f07b7e8b8390682245b8d24283c6c3
e4e4b24e3144665d4a0029cff23a52cfe7e470b03ad6ee67eee5a80580f8feeb9970e573b81e88c805fe3eb79a31abca31995078aaf7fa881ecf49712025186f
9cb8834b634b28e807874415499c13cf36bead5c3926a3d4f6fa4b7a3c27c5c1eaf0d7d7ae6f17fbd69d311899333244ea0a27f4e062a5d011a43264869e4463
e47d4acfe364f7b367c581d968ec0566ed53c6090435835c64c51588ca6c7521fb282abd70bdfbee568f9ec789f652154e5488009fe0c49de45f90f9843beb5f
75454c64d3a13c54ccc9892e8c3bc5c1eaf037d4ae9b1d0ee7a4f494c93d27541fe230ba4cad3739e584c79d11f3d8748cfa573881da8f800214f92b24a70a5a
3c8f3dd18875f147fa9330e5a47247b85ac466ba4fafda27904395b7e275712b27caa1911fac0ec67e7e22d7f949e76f60a0f2276c25f54526d727d23dde8a64
03425ea90627119f799fcdab9193c806b66f1f2ef87dfb696409418a89fca504b25da94592aaff6435dd15f2bebdd72d33f5d5624e582d624e582d624e582d62
4e582d7a012717fe154ea16b19a293e90c1b6ff6c996fc6ceabdbac6099d4a2de81a2795908a137a478ef62fbacd98937ae47f845cd980d0654e4827a6e2a433
6fb4bb7a912ed6f2a50a783b27b84d0727ffa1fa57e94f3c27b8d97fd5bcd9247bcc98937ae43a27d857af8b13cc45e404fd7e474ed0acfd57cd9be3a4c38c28
d190b9cc2b3931154ecc304e4c851353e3c4d41adcd09c984e4e9a2fd62ae0959c58919c1877a4700827562427de0dce492c21dee0c119c149a819e664d5004e
0cde16260b6bcb498c8873e2a31c39c9f24670e2cc284e9c284e8c614e363537a27f45ea732d16c2490c6ae7249152f1726c6d12af7f59f9304e0877b943e624
aa2d536b1ba2159a4a86b4c3a1d0be65fddc60bf9828e77da417acb5a906afe4ae6a991ca2768913a4e69893ad0d714e903addb77c88e03ef817b13f4d745822
74794139c10dcbc056bbc409f21d604eca36443939d429d2f2cd9c946d77d10b91bb5d6f84248a7182a09271b26bd3b5941a8e175b75574eaecb9afd23ecfd35
40c32e66a016e9cccb3fc2b0b0abe60f714870925b86771abbd82ebaaafe5254335555b1ab247a25033ec8afb7bbbc74d8d5035d50ea86b07cc76bee450bf758
88589f0d7907276dda570ad5823e32001dd6e4c37ff403409f971ebbe8b46ae88447c81776e1bdde1e76ba5ed7172deea3a242d2d8bf0ff21ff32fddbe1a9b7c
f8f7d90ce3b217c26e33a40273431c129a936865d27f86c8cbd550f65d3d5cb4b88fb2eaa8ad77d075676bb1b786de6f845cf0b237c41b7b378f3d589a92da9d
59592579f9dcbbc353abdfc4496ac45d03961b0dd83edb8532af7d37c909e2a4f0b2cfddbf8add4a1866993b3cd8ede7b179110c73e25fd1960811e8fdd86be5
c6efef6c0b6b8c9390377c3f365811fbb13ef06096ede31ecd4a4ef679ff764e82a8fb3be87dc06833ea3ea031e87dc0d5aaf3fe0e7d1fd09cdcdf21f663bf7a
7e128572e2fe609cc40dfa419cd0e70ac24d69e25c8131e40181e08ce484323bbdbf9386abe2e2950a78232751f54afd31274e8f38a7e45ec2f3d7dfb97f12c5
9c3470127ea8f26dfbb197c49cb470e27e48f775f7772ee9a9e7a8a91f527266a2c7ec8493f38b15bd9c13817ed361ec7319b493cebcd924bb8a44e41dd5d54a
7e01279d1ae4a3dbff787daa86cd377332cac70718fa95225dd3675367bd45cc09ab45cc09ab45cc09ab45cc09ab45cc09ab45cc09ab459d2b75d6d7e9af4965
3d42ff03060d6d98ba5a67300000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 6.6 Op\u233\'e9ration de d\u233\'e9calage \u224\'e0 droite en double pr\u233\'e9cision}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction modifie les drapeaux comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Aucun flag ne sera affect\u233\'e9 s\u8217\'92il ne se produit pas de d\u233\'e9calage. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit d\u233\'e9cal\u233\'e9 en dehors du bit le plus bas de l'op\u233\'e9rande}{\rtlch \ltrch\sub\lang3084\loch
1}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de d\u233\'e9calages est \u233\'e9gal \u224\'e0 1}{\rtlch \ltrch\lang1034\loch
 le drapeau overflow contiendra 1 si le bit du signe de l'op\u233\'e9rande}{\rtlch \ltrch\sub\lang1034\loch
1}{\rtlch \ltrch\lang1034\loch
 change }{\rtlch \ltrch\lang3084\loch
pendant}{\rtlch \ltrch\lang1034\loch
 l'op\u233\'e9ration}{\rtlch \ltrch\lang3084\loch
. Cependant, si le nombre des d\u233\'e9calages est sup\u233\'e9rieur \u224\'e0 1, la valeur de overflow sera ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de z\u233\'e9ro vaut 1 si le d\u233\'e9calage produit un r\u233\'e9sultat de z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de signe contiendra le bit le plus haut du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Franchement, ces deux instructions pourraient \u234\'eatre un peu plus utiles si l'op\u233\'e9rande}{\rtlch \ltrch\sub\loch
2}{\loch
 pouvait \u234\'eatre un emplacement de m\u233\'e9moire. Intel les a con\u231\'e7ues pour permettre des d\u233\'e9calages rapides (64 bits ou plus) en pr\u233\'e9cision multiple. Pour plus d'informations sur ces utilisations, voir le paragraphe 9.3.11. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction shrd est l\u233\'e9g\u232\'e8rement plus utile que shld pour compacter des donn\u233\'e9es. Par exemple, }{\rtlch \ltrch\lang3084\loch
supposons que }{\loch
ax contien}{\rtlch \ltrch\lang3084\loch
t}{\loch
 une valeur de la plage 0..99 repr\u233\'e9sentant une ann\u233\'e9e (1900..1999), }{\rtlch \ltrch\lang3084\loch
que}{\loch
 bx contien}{\rtlch \ltrch\lang3084\loch
t}{\loch
 une valeur de la plage 1..31 repr\u233\'e9sentant un jour et cx une valeur de 1 \u224\'e0 12 repr\u233\'e9sentant un mois (voir le paragraphe 1.10). Vous pouvez facilement utiliser shrd pour compacter toutes ces informations dans dx : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4890\shpbxcolumn\shpbxignore\shpleft0\shpright8265{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw551\pich326\picwgoal8265\pichgoal4890\pngblip
89504e470d0a1a0a0000000d494844520000022700000146080300000086cecf8d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000001b2149444154789ced9d4b72e438af85b9
3c6b2f96d6e2cbb5746b291d6171039e7850ffc083ee70e9f229f1013061399d8fca73a2cbd929242888f84452725a500a82245a21e894c00924113881240227
9044e00492089c401281134822700249044e2089c009241138812402279044e00492089c401281134822700249044e2089c009241138812402279044e00492e8
9b9c4c866f39be0ec44782db3ca89976b316cdb5d7c61b5a5b8661614299156dd26a680310c88c6d7822517d71aa41aa2f4a91193493ea24e7cbfa1e27b332fe
a7559d8829b6ab551b6d741beda7ea3c79b7650a56aabda98937b4e67c261a14cd98c699086057f86b04224766b06d32b923fb620b84e80bdfa0dd5e1f6f12d5
17a5da1e71b248ba38cfa56f71324dfec0f56c4cd5016688d12f44df443777721945b98dce5cf8a5f6b6769bd69c8fa1fb53ad2bd56786d9bed9ad16aa771c73
86e184e88b4d545f44a7b53ade5d6d5f5451b63de234cfe9c779f41d4e96391c007114da4402c6d69adc9caa346d6e75abc9907fa00a625db91198319de2c487
4f0d0dbd1eeb6494ea8befb7daf688979f73ccd469f36bfae6fa44f9316126960631af0b798cdbb6663ad80e7a196903d12b6a1b98e8fef43c10a613f38ed54c
75b46d8a5d4ed07d11c4f445da55671152f745bd4f62a3df136939a63370b2f8a9904cb89b5c3b9cd8f5656dd971a867b2e39c4cda4de25418e4f2a38db38e44
b3eb13ba2f8289e98bd826bba8a1192fccc4c61be4c4ab591af81887b5cb09b1424b87d65c197c8313bb7e1ca9be766309b3f465a28b116cf31c2d7a99c4f545
1e0d2dee2a698b87d878b39cd4cdb80d0b77c9b0f717e5e6560d4dd79ce0a4b33ea177b4b2ebdb5de4ea24edafb3b4a4c260fb62f3622221fa42b0bb1b5c9ff8
9975a943daa267c713df2f342744d79ce2a473bd43c6b70a3861ba66e0c713ba2fca485b79072e925398d09cdcd2f5ce9a867c43407f9a13b78c6ca679ef3669
d35e699fe0a477ff6466eef69d58c79217c56b585632eb13ba2fca4829af851dbca8bea8bd995dddccfd93340d4e6a64e789cefa84ba1deaddc2106d5ac3ca73
d2bb1fab89f8b800322ddc24b18cc48de4181ed5179bb8c9ca7931c1537d5139dffefd58e851044e2089c009241138812402279044e00492089c401281134822
700249044e2089c00924d1314e7a4f41173d2bfd126ec76cf711ff41af8b73d2b1746c87dc3a11aaae1b6beb1df3f9e3efb81d8f9f773b16ff491de5e437ad4f
1be7276373bb626cce8d6bf2a05b3f9255d3f2e7236bb346de8d6ff2a0dbb148fa5e97e7e49352cc0e6d0b0967ddb8260fbaf5235935392ec7ec7036971dd68d
6ff2a0dbb148fa5ee0e46b918013702289049c5c989327f5e25e5e957a2db3531ab284a72d2feaa94cf8d21a246eccde6224841b38b90227310f314f1927a521
4b784cd99ed22de1ad41e446ef2d4542340a4e2ecf89cdc3b34bc353999dda9027dc66f3afcfcf6767ae12de18646ee4deb648da46c1c91538f974676a3a5b8b
55416e28126e4f6effaf49786390b9917bdb22691b0527d7e0c49ec42fe96c2d38c90d45c2edd9fdf2944f2e5bc26b83d08ddadb1e49d32838b90627360fdbd9
5a5e65648632e1f6c42f26973de19541ea46ec2d8ba46e149c5c85133ba8ff4d729219aa84d76bd52de19541ea46ec2d8ba46ef46139398ec959ee9fec69a8ee
5a14f9a9125e242ee7a4c444e646ecade4a46e129c801370c2b6084ec049348113702269129c8013499337cc099d9dc6a6147e0ff8153770f2a5841f74032744
8be0e48b918013702289049c80134924e0049c4822012797e2e4c8b7dcf17dfbafb89dfffbf657e0844456f903e8fca5d145ffbceae8df791d8cffd011fcc4df
797582bc3827e73eba0bbb5d16d8f3bb1d6cf1e29c1c3ae57ea2578eea1827070ffba2ba2d4ea0071338812402279044e00492089c401281134822700249044e
2089c009241138812402279044e00492e8163989c5f76635ae6485bb65524a67b5615dc944ff7b2e5f10cfff9f4e8efb3b1daa2a96451ec3ae48d326aafe1e5b
afba5bb0f68e75839ccc216d2e3d74c9d561316676253a734e82c5bdb356a353b6b277832b0b3915b521e744486d0abf5f0d1b8820b802d2be68b3f030ef4b37
c8c9180abbb29c84d3de1587ad39f11b622dd35843387be76ac6ce65a9d6b8abd6e46ac1a6b2b45fe4e4cfd4ed7162fbda558b763389ab216e19187da957a3e7
304bc4f2b3a6cb497a2c73fe4e8fa69c14e2ae28d3ba1714766dab546f7672a56c5d6cc6c7b395469f073bfaf8edeedd32fa3ab3462fc3c932d5f7a1dbe3649e
42d6d378e24b47fbaacddac4937f9c3740e24b3eefd4b6fd65a8ca15a75d11266f0cf29c4ca1ecb5cbfe3487b85c3c8913f7e14947a47ca56bffcf82cd15cbbe
33dd1e276eb8708b8fc489f615e0753ea6cfa3f2434bfa9ed6b68e75c60e27733566a45d11a66c3d1a93ef7fa4b12ccd8969bbaf0b3fa58ffabaeccb947de4ee
75739cf8bed5e39e0b3fdc9ba19afb1777fefb45aa89038e59c210cf7362942e9627dbae5a936331ff58e2c1848ba79a93bc587ba4c6fd3f38f939e9f455ce94
8bf4ddce8d9330416cd9dbe79d6588efd67d4599bfb3680df9e5ceb6abd6b4af4e4a4eec4eb4d2e0e4fa8a2b89b91c4f56b3733279500c71bd33eaad01adf3e6
fcbb30486559db76d59ab675f05a72b2ac1b00e5bce3f752cc3b33e69d1f54a4611eb65c2ceeee595c3bc68f6837c910f74f7caab9fb276141e9a617b354bb6a
4c6bbefccc3919e76dade4dddd3d176de73b07e2bc71b26cebd8159cfc8c74bcec8863b9cbb0bdc874e7fcbe3eb1798fb75eebeb62779fc44d2543713f36bc8b
4b503bbd4406b65d2d8dc94d2f5b48c5bca3c3dd379de61a77b9acc375f11cb6e7d7c5e0e4ae351d323db41e9113c3df5aef981e5b8fc809f475811348227002
49044e2089c009241138812402279044e00492089c401281134822700249044e2089c009241138812402279044e00492089c401281134822700249044e2089c0
09241138812402279044e00492089c401281134822700249044e2089c009241138812402279044e00492089c4012811348a26f7232f10fa94bed520f780f6ef1
d977849b7f5a3cd35e1b6f686d1906eea159b3a24d5a354f2b17c98c6d7842b18fbb273b23aa1f2799401be2a1436377f22d4ec2d3be67f750c53a11536c5713
cf3b8c6e637a166cedb64cf9f3a0cbf6a626ded09af39968503463720ff96c02d895d756296486fdf9b48495f10aa1704f7f243b236aeac6d976480c91e98d63
fa1627d3e40f5bcfc654876f8618fe42f44c741b4c538824ba8dd9433fcbf6b6769bd67c498d8aad28b5868eab6498ed9b3dabad52eed197c2e0dc96a9e98ddd
c6724274c6a65e9c448738cd33db1bc7f41d4e96397b9e77299d1ee53db6d6e4e6541dfee656b79a0cf907aa20d6951b8219d3294e7cf8d439d9ef31dd398d89
dec803e258e8d8da0ef19ab62e3993beb93ef17522d44c2c0d625e17b267b66dcdd8b81df532d206a25bd4762ed259f03c10a613f3ce9ad5562923e9ae4f06cd
5a99de48ea4d149a8d93e4843b7f0feb0c9c84a7749309778b860e27767d595b761cea99ec3827eee1e2131906bf9028e2ac23d1bdf5895ba969f271c55c6f04
119d91193bd3e3bd70e2d54c863efc61ed72d2ae56f7ba49b5d73738b1ab47a25c575c1ff6167b4d743182d3833a69e57aa3bf3ba7a583d09d715237e34b1870
970cfb11506eeb6adacbc7139c74d627f48ed6fefad08b5c9d88924059d9dee8c5e8d5194d184e6e717de24bec2df548bb85cf8e27a15a0ee946dc6538c549e7
7a878c6f1570c274cdd04b02b76a4e4d72d73b1daffe5a9baec97a4bd73b6b1af20d31009ce6c42d239b693e562b31ed95f6094e7af74f66e66edf89752c57da
cf2db1f9f5c9d06d95e384ec8ce433b7ddb18be4e4b6ee9fc4c34eb5380b9de684bccd184a91c4aa7f547b1c27bdfbb19a888f0b20d3c2b1b0746f76765b65a7
2bde6bd9cb8e51a2efba98ceeddd23c2ef772089c009241138812402279044e00492089c401281134822700249044e2089c009241138812402279044073951bc
7ab6b3bbdd4c208723e16d3f11ffc539e934d7b11d74eb84c17fd1a36b3be2f68df80f1cdbf9e3ffd6dc71989337468ab7b97d1d707beb7b7d32b236d6a4ba6e
9ceda05b3f9283e349cfade378054e3e48f9d4d1a60fcfc9d7dddefa5ebf69f9ec30369f70de8d6bf2a05b3f9255d3f228b0366be4ddf826afc2097582c78493
277fe4e4cb6e6f7dafdfe4891ab343db42c25937aec9836efd48564d9ef89113cee63861ddf826c1c917b3034e2ec9497cf3df2f3ae1d19a729c7152593237ba
c98d93c231e3e455a957f7faa29ecaec34862de1837ac93d3337f57fad41e0e622796aad2112d2edc13859d7ff7538b1696538d92c2d2755931527d1311f4f02
077b1ab6b3b8366c09ff276c8a992d38210c023717c96b6b0d91906e8fc389cde6fbc79eef9a136bfef55fca79c149612938a19acc38c91c8b79e749fdf5f9f9
ac9e8becfc6e0d5bc27fbfb86dafd93893dc346110b8f9485a6b8c84727b284ededefeddcffe9613f7f21fc9c96ea939699a2c39498e0527f64cf6ff1a4e2ac3
9ef04f778a57934b48386190b8f9481a6b8a846af4b138f9b56e4b508a139b738693646939a99aac39098ee53af659bd3cd5ab82dfad214bb83dbb5ff271664b
f83fad41e216574a95755f29b58d3e1627f6f5df3373523529e1c4dd067b6eb2d318b2845b825475072c26bc3588dcfcffd7d62d12a2517072054ecab56ac649
7de5b225dc1afe2613de1a446e696f7f3736daedc138793fffbcf3fef579a75c84549cd0096f172129e1edea44e4e645ad5d68b707e3e4e3fcebd88f2faf63c1
c9ad73d2bf2e7e67af8bdfd9ebe2a6c9929377eaba189c0838398cc91f739f0d9cdc3e273770df1e9cdc3227adf07bc0af46024ec089241270024e2491801370
2289049c80134924e0049c4822f9c339519daf362bfe7bd447dc2efe3d6ac5bb714df6dc6ee87bd4d7e08491e26d9e93afbbf5ff2e83ff9387eedf65f4dc38db
41b71ff9bb0c5edd3f2abb3c27b7a11ff87bc00beb6139c1df8d9ec9f62770023d98c009241138812402279044e00492089c401281134822700249044e2089c0
09241138812402279044b7c849ac8038ab7125ab2e2e93523aab21ecea9dfa5f7385aabd4e3a39eeef74a8ee9a151e0d36d2948b2ad4c85583349d4a9177ad1b
e4640e6973e9a16bf30e8b31b32b4f9f73122cee9db51a9db295bd1b1c1253564334d846ca6412422b19045de33316f7961fe91de9063919433164969370dabb
22c235277e43ac791beb5a67ef5c9de5a2b278b0a512cc856999f68ac15fe4e4cfd4ed7162fbda55587767b4abdc6b19187df961a3e73021c532c5a6cbc91a0f
2b7fa747534c0a3b278d4967a3826b5ba51acd932b33ec62333e1e95a6bf79b0c38fdfeede2d36e4c585bc0ccc64766fba3d4ee629643d8d27bedcba2fb9aec3
296ed4386f80c4977cdea96dfbcb5096920e75d44375f9ca34e8314d3b819329944777d99fe610978b2771324f7ede0a48f9eaf0fe9f059b2baa7e67ba3d4edc
70e1161f891357f5de8d30d9983e8fca0f2de96b5adb3ad6193b9ccce51a3338a74573695af6a92b26dfff4863599a13d3763f794de9a3be62fd32651fb97bdd
1c27be6fdde232e5c20ff766a8e6fec59dff7e216ae2806396619f47c817a374be0609eebea1c614ec7b448907132e9e6a4e4cf9d1b83770f283d2e99b9c2917
e9ab9d1b276100d8b2b7cf3bcb10dfadfb8a327f678918b26b9a641b0853662f38b13bd14a8393eb2bae24e6723c59cdcec9e44131c4f5cea8b706b4ce9bf3ef
c22095656de7a43685e688f164593700ca79c7efa5987766cc3b3fa848c33c6cb958dcddb3b8768c1fd16eba20ee9ff85473f74fc282d24d2f66c96c6ede694d
6e329ae63da4c4c3386f6b25bf4b77cf45dbf9ce81386f9c2cdb3a7605273f231d9313c77297617b91e9d2b6af4f6cdee3add7fabad82d3ddd243514f763c3bb
b804b5d34bba04f1f399cb7c6bb23bde2e808a7947c73bb869ae7197cb3a5c17cf617b7e5d0c4eee5ad321d343eb113931fcadf58ee9b1f5889c405f17388124
02279044e00492089c401281134822700249044e2089c009241138812402279044e00492089c401281134822700249044e2089c009241138812402279044e004
92089c401281134822700249044e2089c009241138812402279044e00492089c401281134822700249044e2089be57249bb54cf16153e483bcc3b3d4f607f9d6
6e7a204cdbceda1683d7320cec436e6645db66553e5e5828327689b88753f71a9cc9ded84526c13678e4c03a7bf9062753786cf45e3160d3f6d4de81683dba99
751e4937f7fcbcc614bcb2d7da6b714f846640d18ccd3f459aed4fa5a8435be3132299dccdce87e35533cf6a233b23ca1d1767736afb2346c875c6311de7c40c
3ec4bc6240d234c50ed1ba693dbaf9e7f555dd16ddf26772565edb6bebe51f81cff4a707b37d8eb03fbda9ed719fee699054ef4cfed1f5b4939edbee485a384e
a8ce481a0d6f23fbc3699ef9ce38a6e39ce8f844c616db654e8f669dda79479b7d5b694c6ef953a56bafdcbbf4a2e88a329c4d9953252e46eaa4ec79f49eee38
76ad875a6dfbc36bda7ae45cfacebce343cc2b0664cd86a705d3358eb6074b734f80deaa13105e448b7bba99fe4c135dadfebc133fd0c8b6c42e278c9ad96592
3da33a9cb49db1abed8d7c8fc446d51d848ee8db9ce41503b2667db192a5c78921e6f174684452bfc3897b1af044d906a5baa333d99e719030eb93f084611214
b7d0e0e70f7e5143239e19898d37c84968a56936ae16bae3497b2e6f4f946f0ff13b9cd805e448b539cdfdf3985e3f1a756254a7570659cd1752fcc0d62de173
5f9cd421c5473787a227ac5bb3864c550b88233cc1496f7d123fc56ceaf890ab93d3592053b7b0974fc98b59509b7ea5a73b599f306bc47d02a1ddfc28cc7042
77cc294e7ad73b3aedb0762463afecad063e0b33b7ab2cd2567467e47be3459750bca1eb9db48e9da921f32427c6cdc7cdf91ace547769f9d5f549fffec94c77
b79f77f8279573a5b8dcb292599f84c2636c66d9fb275467c41835d51bb92fb5f186ee9fa41035754ff32427ab2bb847ae63177aba3ac549f77eac0ec5fd1acd
aa77db72e1268985bfdb99ea08d2e2262bb233a20b3d79efaef4fdd8e186eec7428f23700249044e2089c009241138812402279044e00492089c401281134822
700249044e20898e71a278f56c97753bd6e4bdc7df6ff2d29c742c1ddbb9dd54c7ad6fe34d978c7fedf4e4d1f8fb5d72584739f94debd386f9c9d8dcae189b73
e39a746e6f1fa4de9c1b6df236c6eda3d764dfeb60fc07dc7ea427afc0c927a57874b42d1c1debc6351992fa4628724299de2227b4add764dfeb60fc07dc7ea4
27c109389144024ec08924926b70f26a5d5fedeed36b7e74a42d1e1d61db8e8eb2c5a4c63dfff78be6245a3f0a9bcf786dd939219bdc39a91c774e5e63702fea
a98aff49bd7c661fd80f7b680dd1ad6eabe849d26deb496a6f3e12d6ed5a9cbcf823a439696c192795ade0a4b695495dd7ff7538b1696538d92d0d2765933527
9b63369e84a4be92f1bb4d3181d961ffd31aa29baeda2a7a9274cb7bb2d99b8f84753b90ea94f16f71a2ecee15c34963cb38a96c0527b56d4baacde6fb4791ef
82136bfef5df96f39c93d29273423499735238e6f3ce93faebf3f3593d7f56f15b829edd516463433cecd6b09ffc455b654f526efbbc43ec2d44c2b95d899317
9bcc57fb93e2a4b5ed9cd4b69c93c69627f5ededdf3cdf3527eee5bfccb67392592a4eea262b4e76c79c131ba7ffd770f2e9e22e2797e8d618b2933f6fabea49
c22d5b9fb47b8b91306e57e2e4d5e7f495e4a4b565a365652bc6edda5626f5d7ba966b9092139b738693cdd2705236d970921c8b75ecb37a79aa5705bf03414f
2fc5d8b01f7665d8dccab69a9e6cdc324edabdc54818b7ab71f26c7b8ce3a4b6e59c94b69293ca5626d5befe7b664eca26659cb899714f437e95f1accab1614b
6a6dc84ffe3aa5d9f54eeb965fef347b4b91d06e57e2e433fd4770d2da764e6a5bce4963bb4d4e8a8567ce8935fc4d26b536e4277f339cec9cb46e3927cddeb2
9e24dcaec5c98bfacbaea9694e1a5bc649652b38a96d6552dfcf3fefbc1f9877ca154571d7a25e84148b098e931a93ecfe490b517eff845cf2b06ed7e224dce7
a039696c192795ade0a4b69549fd38ff3af6e3ebeb587072e39cf4af8bdfd9ebe277f6bab86eb2e2e49dbc2e06275fe3e453851f14278d2de3a4b2159cd4b61b
bccf064ea45ee9e8fcc517c3496dcb39296d252795ad7793fd3af7edc1c95738a184df039eedb0ff98df035eeee8c0c9799a0427e04416093801279248c00938
9144024ec08924922b7072c16f89e3fbf6e769f21a9c90c45ab9a3e34caaebc6d9ac9b224f702bebd6b3b1a64e935daf83f1f7dcf8eeeaf664cf8db35d81135e
f7fef774f71e7fbfc90b73d289e5e0911fec94f3eb07e2bf9963bb3c27d083099c401281134822700249044e2089c009241138812402279044e00492089c4012
811348a2dbe4640a3515cdc005370fa1505aac7ae6eaa285df60b8526de17f52a934e3de0d7a8d65f8aa6acbcbc8dbb2a28254a15c26b49335d6ef52b7c9c930
857aea0b53526f9a8c31a32e39f11f7425add562ad3aab996de5c99bdd8fa2aee7e4b8d0b4cd9515e439e15808d5544547794fba494e661daa4fefe9afa4d2cf
8613b721fc5f1a1ae247fcf0e328caab4dc6daade34cd85c1dc9a39cfc79ba494ec6c5f7b69b3d942f283f0fbea6a99a8790fc10b3e972b296054a97485e5150
56e75c54361bc69a7362f432f87968720556dd6c6607ad59cd5bd56b3b17eab85d6d2544add7a8f8d2b777a35be4c475b33fb353fa536d6235c64abeb38a19a6
e71db36ddc3f125e1655cc2cc53051d91c4405276af6158d5df6a73914f91eb4318913570879d2a9f8b72f62ec3f3637ab9e7bd42d72328fe1df967ed7e76ee9
a0b6d3df2e3ffc596ae21770ca752ccfc95a16ae2fa793d2e6e02c3909afc34e68dae47fb85733a5edbef4b7e345ad7fc45c748b9cb839c62446fc3fb7555569
f54bd3b0480d1fb6abd7695bd6ac34279356f95453542eaf6d2bcd8909d7523527791d6efb2f78c6cde0e42714c78879e3c4a431634b5b38f153f2b279c75fbf
ec2b95ecd5af4fec45cd9c4f2e71f65a96d6b6ece3d35a70e2d7b71a9c5c5db39fcd5dce8af1c494a7f74a5eeff8db20f17a27a638bbdef1e3ce98cd2ecb7ebd
d3d8f6fdac0527f1b64d3beff89d62deb998f66923a55fcf61c1b2a56d1ee224d3ac633d5edcfd93fd8eda128dc376ffa4b5ad34270eaa391b4f5c18da4e608e
cb7dfbe2d7b11a9cfc9852a7da4ef6d73a6e02f2979cf9fac4dd469d578213b7cc0c37608bfbb1fe0e890ed3ca9caf886dcb0367a3395975988d749a6bec05b0
d1e1ba78deb7a7eb627072cf32dc5df713b687d58372a20fda1e560fca09f44581134822700249044e2089c009241138812402279044e00492089c4012811348
2270024974f8515fd083e9daa44277a1ff0782953f83287f01690000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 6.7 Compactage des donn\u233\'e9es via SHRD}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shrd\tab dx, ax, 7}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shrd\tab dx, bx, 5}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab shld\tab dx, cx, 4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Regardez la figure 6.7 pour visualiser l'exemple pas \u224\'e0 pas. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s de }{{\*\bkmkstart p6_06_03}{\*\bkmkend p6_06_03}\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
otation : RCL, RCR, ROL et ROR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de rotation d\u233\'e9calent les bits tout comme les instructions de d\u233\'e9calage, mais le bit sortant de l'op\u233\'e9rande est r\u233\'e9ins\u233\'e9r\u233\'e9 de l'autre c\u244\'f4t\u233\'e9 de celle-ci. Ces instructions comprennent rcl (}{\rtlch \ltrch\i\loch
rotate through carry left}{\loch
), rcr (}{\rtlch \ltrch\i\loch
rotate through carry right}{\loch
), rol (}{\rtlch \ltrch\i\loch
rotate left}{\loch
) et ror (}{\rtlch \ltrch\i\loch
rotate right}{\loch
). Elles prennent la forme : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rol\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcr\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ror\tab dest, nb_fois}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les versions sp\u233\'e9cifiques sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab reg, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab mem, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab reg, imm\tab ;Seulement sur des 80286 ou sup\u233\'e9rieurs}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab mem, imm\tab ;idem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab reg, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab mem, cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;rol utilise le m\u234\'eame format que rcl.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;rcr utilise le m\u234\'eame format que rcl.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ;ror utilise le m\u234\'eame format que rcl. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_03_01}{\*\bkmkend p6_06_03_01}\rtlch \ltrch\fs23\b\loch
6.6.3.1\tab RCL}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le rcl (rotate through carry left), comme son nom l'indique, fait tourner les bits vers la gauche, }{\rtlch \ltrch\lang3084\loch
remplit le carry flag avec la valeur du bit haut }{\loch
et }{\rtlch \ltrch\lang3084\loch
revient }{\loch
au bit z\u233\'e9ro \u224\'e0 droite (voir Figure 6.8).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Figure 6.8 L'op\u233\'e9ration }{\rtlch \ltrch\i\loch
Rotate Through Carry Left}{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1665\shpbxcolumn\shpbxignore\shpleft0\shpright8235{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw549\pich111\picwgoal8235\pichgoal1665\pngblip
89504e470d0a1a0a0000000d49484452000002250000006f080300000004ef40fa00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000069f49444154789ced9d6d76a4201045d9
9e8b6917e3625c0c6c202b98bf8edf16f20a948e0d39fdee399349c4b24ab88d4a7766cc404802634a5740ea87969034b484a4a125240d2d2169680949434b48
1a5a42d2d0129286969034b484a4a125244d294bacf1ff9ee85fc6744eec32d274d3b7c68e3fda470a31336a7383b3dad6bc708b6b4dd36b47736a22fbd20e58
03f558e29ad63ad79beed8c55adbbf9af1dbc91df348273ad38f59d4437738eb589ab3b0693c9e73af9772b846eb6d371fd029adc5a9c792ed15687a7f976d30
9eb1c446cf7f7c85c3ac73ad7d035ada65ee83e36d8d6a897ec02aa8c692bd8bf62dc292f14ff4ba904fdfc65a4dcc4d38a876f60346d9c66a4eba592b57ed64
528d25ed7ea5d9fa6a699abf8ebd3e4de50fd4d1b69d7e1fd15add92f1daa80aa40eb766c969daac8e72966c6c85ec3db47db7eed20dfb7cf200a6716ebc2382
6dd33ca36575c6e8b350d3290db4e41ef3ade94817b364daa16fda272d995ff4f8b5efcc10cdda6ab7118a74032db94b70c579edd3be7fc59987f0394bd694e8
d8cdf8b412bdcee1eb8a36334dd0927b5cbf7b9d6f5d1fb3c46e2902dce992782d6a0cd32e37836e09ef5e31d79f849f9d4be6a3461e8771d6792b1c5467d425
b558223e09433c4bbaa98fc699da85ab6ae2bea47be295d6cdcb59fac8624bfa290adea3be9af976ebe6330e57d5309e25ab197d1baed09bf97e655ea15797a4
de2b24be34aecc605ad47699528ea84f5a5ca1277f1d5a42d2d0129286969034b484a4a125240d2d21696ab2c4e4f1fbd9f22ac9ac3f5a4825d453c9f4991fad
215265be259196482579477c20ec935453c83075d70f66b2c429bc618992ed67b244cf96159515967f6ebf4d35850c294b70cc5b96fc83fcc4e792aca8ac305a
824858825e6d6f5a8292ad03075fdc8b2519515961b404414b68491a5a424bd224ef4b7edb92f1ab3a7038dd3adc61e031dc61a0b0e41c282c09e268092462c9
b2c303afb7982561bed91218e8dd862a9680c0cd1214474b209a254b239c98d7fecd3b89290a59b237424b70e434dc5a9dc77a4f1027e40a12ee96941fa2fa2d
995bd685c860d464e3cd644b94a6a48156ee8d4368895ee73acc28e326178a5b2ca9620db67c0507c09265bb517aff68bb791647949e2eb0241679a3cecb09b3
cfeef7295fc1c1d9926563f8a6463866e02ca63dd65bc2204f18e5cf5a7e234a67ce71b7eb0ce3828491b3fb30e52b38f02c59b640c2310bbb7a9dadddfa4524
81c4f201472ec5c5eb4c25c4518586ab524b969f631d95e845c5929c43ba48db5b756634d1126f2e5936e0fe412fd1cb3970d4f96a231be18c20e3b2eb8c2454
a268c9f9be64dee47715be93bc634910a57b296f264163769d1713d2124cf08cb36c45bd1f0cc0bd44c812904f7fc4f19f55eed5793d212d01a0f592a501f5be
3f00b77385631de673201fd42b5e6724a3586601eb25e1d9d11261c930805b14b8f67a34de4f0757d57efe1d478ca63b451dcb63fada2bb2c4c8639e2c59c268
8987b0647ac63cd81f5cc261d3ff6dcc6b004bf674fa0a7d18997e1f07c69d3e85042df1ba8896e896ac55424b724f6089c396acc78496ac57091ce550dcfe9e
7098d17b2bf9c2bb7db4246ec9139f1cf887de38da072ef2c981b1422d6a59f3c5968471dee74b68c91512968483f67d9f42a225e9b904f0659f8ea625420d64
89c23b96284cbf48a5678b443dff9b16b444be076a6ef076b6f088596dd1a2636137deb5a125573b3cd593f7d3fd0e99478ccb1514fd6627e7414baa262cfacd
4ecea3224b249596551c5a22a9b4ace2d01249a565158796482a2dab38b444526959c5a125924acb2a0e2d91545a56716889a4d2b28a434b249596551c5a22a9
b4ace2d01249a565158796482a2dab38b444526959c5a125924acb2a0e2d91545a56716889a4d2b28a434b249596551c5a22a9b4ace2d01249d9b2ae7dbab004
b44452d892cb1b3f0d2d91d0120c2d91d0120c2d91d0120c2d91d0120c2d917cba2cff198696d4913645094b0e51f6e4ce8a5d3e5b118696480a59e2af8a386f
43151d454b24e52c39bc70e635b5bcb65d9e49f6ee6f0e7f846a2d29ca5ac3f4d5f65b49a58b5a28341c45d2a6a861284cef9754aca81203e053430d808ff59e
7e586bacbfe76fa4fba3546ac9a7f11d592e35b4648796ccf8d3082d39414b66fc0bd8fcad0bee4bbe175a0290cf38fb7fe8f6cd1d454b004b9ff4a61b1e592f
f97bd012c0da27bdf724f5cd1d454b007b9f58ebc28d5f082d01d4fb9e7021680980969ca025805a17ca8bf1d5274f2e424b481a5a42d2d0129286969034b484
a4a125240d2d2169ae7ef6927c35ff01afa7f05e983aff7a0000000049454e44ae426082}}}}}
}{\loch
 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que si vous faites un rcl sur un objet n+1 fois, o\u249\'f9 }{\rtlch \ltrch\i\loch
n}{\loch
 est le nombre de bits dans l'objet, vous revenez \u224\'e0 votre valeur }{\rtlch \ltrch\lang3084\loch
originale}{\loch
. Gardez \u224\'e0 l'esprit cependant que certains drapeaux peuvent contenir des valeurs diff\u233\'e9rentes apr\u232\'e8s n+1 rotations. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
rcl affecte les flags comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le bit haut qui est sorti de l'op\u233\'e9rande.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de d\u233\'e9calages est 1, rcl affecte le drapeau overflow selon le changement du signe. En cas de plusieurs d\u233\'e9calages, la valeur de overflow reste ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab L'instruction rcl ne modifie pas les drapeaux zero, sign, parity ou auxiliary carry. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Avertissement important : }{\rtlch \ltrch\lang3084\loch
contrairement aux instructions de d\u233\'e9calage, les instructions de rotation n'affectent pas les drapeaux de z\u233\'e9ro, de signe, de parit\u233\'e9 ou de retenue auxiliaire. Ce manque de rigueur peut vous causer beaucoup d'ennuis si vous l'oubliez et tentez de tester ces drapeaux apr\u232\'e8s une op\u233\'e9ration rcl. Si vous avez besoin de tester un de ces flags, testez d'abord carry et overflow (si n\u233\'e9cessaire), puis comparez le r\u233\'e9sultat avec z\u233\'e9ro pour activer les autres drapeaux.  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_03_02}{\*\bkmkend p6_06_03_02}\rtlch \ltrch\fs23\b\loch
6.6.3.2\tab RCR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction rcr est le compl\u233\'e9ment de rcl. Elle d\u233\'e9cale les bits vers la droite, les bits }{\rtlch \ltrch\lang3084\loch
les plus bas}{\loch
 sortants vont dans le drapeau de retenue et retournent ensuite dans les bits }{\rtlch \ltrch\lang3084\loch
hauts}{\loch
 (voir figure 6.9).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2025\shpbxcolumn\shpbxignore\shpleft0\shpright8235{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw549\pich135\picwgoal8235\pichgoal2025\pngblip
89504e470d0a1a0a0000000d4948445200000225000000870803000000fef8d91500000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000070749444154789ced9dd9b5a33a104595
1ec1e060088660a4041c41ffaa41808da00626a3eae6ecb5de1d2cc429c436c8b2ef6b17015070ae7405c03eb004e8c012a0034b800e2c013ab004e8c012a003
4b800e2c013ab004e8c012a0034b800e2c013a562c713effde115ecebd42be99771d55336de97dbc1297601a5baec1bf5c4dd7d11d41d57261811d795fbb86ad
b108762d79556d086df5ca36f3ce7bdfd655f7631332a72e20b8b6db3bb3cbc08d545752f06421ddfe42a86b26ad62ad7321bc2aa5d67b316b493b8e53fe64f4
8edefa12bc341675cdb4a6025beaacbe866b5e209aba2cd692ca4f5fcc60d692e987fcd4cd2ce9fe13ee0f47685f7c5bd3880e9196f8e40769b2af3cb7bf90b4
6a4cdd73ac5af2bd6b67cfc56168d3d76ecbfe927e610dcdabe1e611a192ae34a1e52f6aecf483dbdfec10cd60c69289d525243b017ed8a8899febc995355421
848abca05441386fdd9485bf0a55dc450196ecc7353ea15ad26f94e6b4d75b92ae4b819a47f4d77ff1bcb1b34d5aba1e58b29f5d779c742aafb724af204bed2e
322d3d0d9d7a918dcc9569dca9f4382ca1d8377b4d53d7cb2df179055f9afc6eb8b1572fb33007c5ec753ffb5e09ffe65a92f6c63e89b906d746e63e151cbba4
2605e19530cbdc92363d8fe6ab6acd34dccb794973e96b9cb43ec69d59eeacb67d2f728e5a5769aac59428e8e8438355358ab925cd78c1683e2bf49f2bf7f01a
a76ec72d3dbb3475085f736bed513aab4caf20dda7a4990756e8c1bf082c013ab004e8c012a0034b800e2c013ab004e818b4c41de3f644a9db2f7659108b96b0
0d42b1e72c39942875fbc52e0b62d292374d3fc081e1a4254712f96eefae8d2f54ecc6c5c19205f239a3fb9cb5e40f8d98c8774b967059bd257c37b6445892a3
58423dd3ce5b4206fe1113f96e8325e43561b484ed16d96e978def91018225b0441f2058024bf401fa072ce91e532d3999b83e6d7d286349ec3f22cb59d235b2
96a42cc6923e0f966c87b224f6a2dc69c9d8c059128797adf4d94ead44a1d33e394bd24e6189c6500c61c958a568c99123993e454b5a323652964c59e4256868
a42d19fad1968c3b85250ad3122331f0d362146349b6cdfe40ca9259e6fa64d3957e8ba5fa85f93e494bb88eb064ce772d9ab24478aec5c5361ffaa6612241dd
93b2c56ff2a48d8da4254c3fbed87c9fdbfbc19239f99b16e3d82d5ad2af4b41a86d860dfb5f9ce35e03e581f13d8fa432b9b6375debacd80dfda4837cba258e
659caf520d7136865ce7612bda12be0b1339fd7dc7b18e4c951b0261c994cf139911cc8690edbc3f542ce85447c92f311096acf217c3f4bd1a8be3276ca3870b
7d8446aa89bae37c8be5dba83bceea2061c9fce74c91f5c46e3d7aebd9eb66451681e9012673e525dbefbdb99f1e887909994f29b218c07eb3a5224b4bf684d3
a73a3fdb7111baecb8b55f900257d52c0e1096cc7e194689b164d888906466c9ce70fa54cfce36119967adfa491df97e52202c595a12d76baf9f86be495c553b
90ce2da27e17c75689b37eccda2b77aa3ffb64d65ed7332e58c2e533efe3c402efe3d05e0add36bc8f13b915fa91cfe6e9706109934f5ad27fbfdd12fe3de128
bd271c99f784c703defa6e1f2c91f2094b86ef775af2ee33594b84cf97a42b05f7c901e9f32571f9f9125822e5e35348b044cfc7a7a3bf5bce7e39717ca7b168
89932c613867c9a144bedb89bfb470f996d71cdf694c5a728853451c0a3cd8b6a3db9105e55f60cf9263e37be6388e26fe1e58c2e51f1ed11335580596d8c837
4c6133e694aea474be616089997cc3c01233f986812566f20d034bcce41b069698c9370c2c31936f18586226df30b0c44cbe616089997cc3c01233f986812566
f20d034bcce41b069698c9370c2c31936f18586226df30b0c44cbe616089997cc3c01233f986812566f20d034bcce41b069698c9370c2c31936f18586226df30
b0c44cbe616089997cc3c01233f986812566f20d034bcce41b069698c9370c2c31936f18586226df30b0c44cbe616089997c11e67f63755ffa5d511aa52b299d
2f42d6064b9e972f024b464a57523a5f04968c94aea474be082c19295d49e97c11583252ba92d2f922ba25bfac1e9698c917996a0b9e78707ca1fcc3743b6353
ba92d2f922436d21b761fce9f7ab27b0c44cbe48aa2db8baffb1ce1ebc638d0d9698c9171985e8bffaf6fbe0a67f68e0124a1df892d295dc37e2fb499604d796
abb8c82921285dc99d63be97648977fe64c545c6f55afe8b83f815b425b928450abb9b871ce631384be24c94fbab2ac0430ef318f4bce4f3032c01317b8d33ff
77eb671b3c64f81e7298c74863d3ba26aed64b1e062c1118c6a6cdef2c4f1c305822308d8df761fde093802502653f3960085822f0dfae92ede591070d76024b
800e2c013ab004e8c012a0034b800e2c013ab004e8c012a0034b800e2c013ab004e8c012a0034b800e2c013abbff06093c92d29e827f80bfec78bea61f6d7303
0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\i\loch
F}{\rtlch \ltrch\i\loch
igure 6.9 L'op\u233\'e9ration Rotate Through Carry Right}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Cette instruction affecte les flags comme rcl : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau carry contient le dernier bit bas qui est sorti de l'op\u233\'e9rande.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si le nombre de d\u233\'e9calages est 1, rcr affecte le drapeau overflow selon le changement du signe (voulant dire que les valeurs du bit haut et du carry n'\u233\'e9taient pas les m\u234\'eames avant l'ex\u233\'e9cution de cette instruction). En cas de plusieurs d\u233\'e9calages, la valeur d\u8217\'92overflow est ind\u233\'e9finie. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab L'instruction rcr ne modifie pas les drapeaux zero, sign, parity ou auxiliary carry. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\ai0\ab \ltrch\lang3084\i0\b\loch
Gardez \u224\'e0 l\u8217\'92esprit l\u8217\'92avertissement donn\u233\'e9 pour rcl ci-dessus}{\rtlch\ai0\ab \ltrch\i0\b\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\i\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_03_03}{\*\bkmkend p6_06_03_03}\rtlch \ltrch\fs23\b\loch
6.6.3.3\tab ROL}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction rol est semblable \u224\'e0 rcl, dans la mesure o\u249\'f9 elle effectue une rotation \u224\'e0 gauche }{\rtlch \ltrch\lang3084\loch
selon un}{\loch
 nombre sp\u233\'e9cifi\u233\'e9 de bits. La diff\u233\'e9rence majeure est que le bit }{\rtlch \ltrch\lang3084\loch
haut sortant n\u8217\'92affecte pas le carry flag, mais il retourne directement au bit z\u233\'e9ro}{\loch
. rol copie }{\rtlch \ltrch\lang3084\loch
aussi le r\u233\'e9sultat du dernier bit sortant dans le drapeau de retenue }{\loch
(voir figure 6.10).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1680\shpbxcolumn\shpbxignore\shpleft0\shpright8220{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw548\pich112\picwgoal8220\pichgoal1680\pngblip
89504e470d0a1a0a0000000d494844520000022400000070080300000019ad9b8a00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000063c49444154789ced9d6bb6a32a10466b
7a0e4607e3601c0c4ce08ee0fcf52a3e0252051163a8b4df5eabd3272256095b4472d24d230069886a6700d4034940164802b24012900592802c900464812420
0b2401592009c8024940164802b24012900592802cb5243114fe3d33b444bdf5769968faf94732d35b734b22e4108b1b3eaae9a8e54b6c47cd201dcd8a814c2b
1d50017a24b14d67ac1da87fed628c19da66fa7156876e69434bc314453c74cf479d52b3862d9a8e676ddb0a876ba4d6b6ee805628ad8d1e49b6eb8f867097ad
2fee91c424cf7fbabed9a82ed7a1614aba65e463bbdb9028897c400da891646fa17d8b27c9f42779532867e852a5945293ed53e3f4606b99c6484a5a6795d53a
94a891a4db6f335b532d45ee756af4791cbf218faeebe53944676449a61ba3e88fd8db92248741531bf524d9d812d91b68fb69dda51ff7d1e406a8b1769a0db1
65f3282345b544f218d4f442012439859b954ef42949e61d86a6bb531277c9f357bea53119b593a61082732324394974bb69f7313fbcddb81ebc4f92352477ec
667a4e49dee4f89b8a342ecd409253bc3f7175b3d6db24315b88087bb81fbe576baa26dd6b4659124c5c59de7f04be772471474d3c07f351dd56b64f2d892b69
a9407804e60824e9e7269a86691b2fa6797392fe8eebac77ab5872c7f2920c732d767ada366eaa75f2e9068b692c8124ab1843172fcb939babb865797125ea5a
22e9f57061fc926a6df728e188f290856579f0db4012900592802c9004648124200b2401592009c8a246129249967d3e5c5922a5f9a7cab4a02695c4cab85c76
4112f990896326924c6552746e7aba464f2634fe273037a415b82089148de46865b5287d6e6235355df32b92085c91e48fc775b710adac16c9d59c2452866aba
e66724e1afec4b92b0c1d6eee6a395d522b9da2289306aa9e91a480249f2a8c9049240922cd939c9a7259990bb9b8bb749c2d4dc2589eb799244f55e92c40121
09434a92858f4ab22048c2877392f01583892b2f0957319cb842922c92244be19c2523c9abf07cbcb91623891c6ff4e2c59248f51649f8887ffff965bc241a3a
48430e0e5e1257b22e3fb28a942d4d6eb50423899744aef927e73926eafd2502ba9e51b2f0aa21070723c9b29d84c6f7cace9d83572b156e8cc2f985a5799e08
a867795e410a0b4749968df10719719731cdb8ce20b797204e5cebbd7842c5a23cc341323c85b55ee2ecbe8e8214160249962d2c71cb33cd49f33383bbaac3f3
e36b15c72bce3357912fa15a9da552926583d08689b28c24c95a258597f294cba4128224999164db8fbd42df0ec2d68a86fe205eaae2a53c85222b164192fc9c
449a0d9e6abbb056424b3f5e9ccb589a676acec5ce5a218987f074c337feb1dfce45e224b9fa74f36e9e579e6e2009bb4eb294708d6f55ad9324f2fce03a0924
a160248eda7ffce68aab20c9dedd9f5c717d1df3508fa2155748e24b323f95bef8f6673752b8ea9fdd409294242ec7d8911ffb1438ae77f253604892918451e4
71bf4f0249200924c992bddd703ceb17a121495212f97b07c5e182107e3452fb950a48f25a608cbed576c7871989432682951526f34f1e32caf9622317f20b92
9c68c7826867827dbe1a243943615f5c8fa69838e9abad5c861a497c5426551f48e2a332a9fa40121f9549d50792f8a84caa3e90c4476552f581243e2a93aa0f
24f15199547d20898fcaa4ea03497c5426551f48e2a332a9fa40121f95497d888f2ed47f2de73a71935c6bc87f995afd51276e92da5da18ada9d31feb224b593
7c102a1b5b65520f46657fa84ceac1a8ec0f95493d1895fda132a907a3b23faa2685797284cab3af2bc989ad0f019244c14f6c7d0890240a7e62eb43802451f0
135b1f022439c683241190643cfcab53902402928cfb53effa66df6c8db7cb7733d2052419fda5116fa37d637c790890e4b87cb66eb4d4ce45edb6cf57335286
5249aab2e630bf9a614ba9565b680092f08e581ac2946ab48316544af26d8e864c1832e12e5f4f4a119064f424716fdc2648e20149c64d92ed8d7b85241e9064
3c7ca1057392084872645b53737fefff3bdba39b09921c591b64a07ec43ac9022439b235c8103ced3cba9920c9915783186399ad0f04921cc1a7c01190e40824
89802447528bf50fe5d9670fde0292802c9004648124200b2401592009c8024940164802b2dcf25ba2e01fe37f0134918554d9d1ed0000000049454e44ae4260
82}}}}}
}{\loch
F}{\loch
igure 6.10 Op\u233\'e9ration de rotation \u224\'e0 gauche}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction rol affecte les flags de mani\u232\'e8re identique \u224\'e0 rcl. En fait, la seule diff\u233\'e9rence avec rcl est }{\rtlch \ltrch\lang3084\loch
celle qu\u8217\'92on vient de mentionner}{\loch
. }{\rtlch\ai \ltrch\lang3084\i\loch
Et n}{\rtlch \ltrch\i\loch
'oubliez pas l'avertissement \u224\'e0 propos des flags !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme shl, l'instruction rol est souvent utile pour compacter ou d\u233\'e9compacter des donn\u233\'e9es. Par exemple supposez de vouloir extraire les bits 10..14 de ax et laisser ces quatre bits dans la plag}{\rtlch \ltrch\lang3084\loch
e}{\loch
 0..4. Les deux s\u233\'e9quences d'instructions qui suivent font pr\u233\'e9cis\u233\'e9ment ceci : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ax, 10}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and \tab ax, 1Fh}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rol\tab ax, 6}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab ax, 1Fh}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_03_04}{\*\bkmkend p6_06_03_04}\rtlch \ltrch\fs23\b\loch
6.6.3.4\tab ROR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction ror se rapporte \u224\'e0 l'instruction rcr de la m\u234\'eame mani\u232\'e8re que l'instruction rol par rapport \u224\'e0 rcl. C'est-\u224\'e0-dire qu'il s'agit presque de la m\u234\'eame op\u233\'e9ration, \u224\'e0 l'exception de la source de le bit d'entr\u233\'e9e de l'op\u233\'e9rande. Plut\u244\'f4t que de d\u233\'e9caler le drapeau de retenue pr\u233\'e9c\u233\'e9dent dans le bit le plus haut de l'op\u233\'e9ration de destination, il d\u233\'e9cale le bit z\u233\'e9ro dans le bit le plus haut (voir Figure 6.11). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Figure 6.11 Op\u233\'e9ration de rotation \u224\'e0 droite}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1935\shpbxcolumn\shpbxignore\shpleft0\shpright8235{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw549\pich129\picwgoal8235\pichgoal1935\pngblip
89504e470d0a1a0a0000000d494844520000022500000081080300000028a13a0800000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000072549444154789ced9ddbd99b3c1084d5
9e8b81622886625003a920b7fa391fc48e64631b4d7ecf7b91f8435e76d89d80107c4f5c10228373a515087ee41291472e1179e41291472e1179e41291472e11
79e41291472e1179e41291472e1179e41291472e1179785cd2b9e3df036de55ce38fdf730375377eecffecbacf8a1840bb7ca081e6e11a7ba47db8dadb437d18
d4de38b4c32230bbc43feacefb36aa976bbaae6bc64e0e06822dbd4453f53bef405b1b94eb517b5f3fac91fa311c00088303a11e765867b4de08b34b1eedf4b7
6bf7df9b4adb3e0e3f7e8a2ab1b7ae02b926c5d6a07783e19aca8aea7d85b44f3b8467aefb2176c96a84eea0712aedb8adff385c203e28c2c1ab433f061de937
5dd1c0e8efce54d89f22d1fe9a66fb93026297d46b950ebd9b4a5b35d347efda44635fa5df5b85e611fd542871de4a5d201a732871b59cce229d790d2b02934b
16e60d5b0d0fd5dc7d69d8fed12b4ed7cf957d639e50da3a95abc153de7efa817c8c6276a74b0e985cd28d3439970cb3d7ae76fe0b2e99ae1dd669c1bb584744
872719f0642797bccce98a53ad9356e38a334e093fef92a3821d8fd6fbf4d5ad35e7a8893349d625bae29c796df63a6efcb84bfcd851a33d3eba1a5a51e6587f
2b8cd369f6fa32afdd097fe75cd28cfea85a300c72b5a362738eda24cf07f0223546e94ed8e0e0926668941f56ab9655b566695d3c2f89d766dfa2bfc1f1b8b3
a9553573ceeb27b1a8ddd0e19556d5000797ccebad6dbdaed0af2bb0d3997fdc3aaed03f3e7a04c9a571d85514d524ae53a9fd69855efc7bc825228f5c22f2c8
25228f5c22f2c825228f5c22f210bac4619263b767bc37ec63f5bd54a092d94da0a2a18a89b1db33e294df0883513740e9923f80be8a1ef0a64b2e654c8685cf
8679b9e448ba6728e83d97fcb54967ec85e23098eb5a985c12917189f92fed6d9798f9fea6330eed8661e1b3617249845c2297e4914be4923c2797f4dbb22e79
33e3b96d4352e09230be9e06dadd0fc2768fb9904bc27c8f23973c85e592301ae54697cc39914b026cf7bacbb3d025ce74090e934b8eccbf3f7176c9ac32e992
2b47b2eed772c93c66b964c965ba64193445a2b02da15c92615963340abf2c46a55cf2fa02e51a62ba64cd69b864190371ce8e0b30ee78907249826d2dda2a3c
2ce1ce252f1ece3ec66c9a95341387c546fb4c25944b3087871673cdcf03a79e99df5959669bcb6f4498f9767d0383a95c873853acbdcf7c9c5c32e7478461f2
0806763584c15b86a1c62e846d151fc7f45d4be44ce402718bd8ab7172c99c1f035c722c210cde323ce992d927a9fd5d184b0de6e3e49239ffbe9f07ecb3ffa9
7e89ef3c91fc140372ba44603eceb8e29c451a833a972cf9dde1879d45ce13c273f5ce33cae73d62845893c9add53817127b88f3a984961acd4bb6fc964bc06d
03becb397de7d9e4a6458e2e89732603e3c1a3c86b09e512cb2560bd042d561d3af77276b365bba61929d37101b77abfcf3f20a17d8c7249fc83ed92f91bc955
b5ebd9c1aada34784eb65a2415971219872d2e39c405cd5ed7fc2701e0394e28f01c278015fa59faa5e73801aed04f6cdf774e2e59f23fe992e1c3cdcf84037e
261c924ffbae3c135e94c82566febc4bfe2c1b526f7bbc25c272c91ffc7e49f0a93707f08b2289170efac053985cb2e57fc2250b3ff616925cb2e57fd525683f
ef88e07c3b7a7f4c72c96953ca2580f75c722d63d2ce28ee8530b7ffbd0bb9e4b409911c7b4bc4958cdf0f3bade31682cf25d7eafbce715ccdf87de49225bf5c
82914b96fc850510c3539ad24ae4120c4f694a2b914b303ca529ad442ec1f094a6b412b904c3539ad24ae4120c4f694a2b914b303ca529ad442ec1f094a6b412
b904c3539ad24ae4120c4f694a2b914b303ca529ad442ec1f094a6b412b904c3539ad24ae4120c4f694a2b914b303ca529ad442ec1f094a6b412b904c3539ad2
4ae4120c4f694a2bf9824bee79d9f0163e5d9aab945652ba0fdc94edcd466925a5fb3050b602181e653c4a440c4f6f789488189edef02811313cbde151226278
7ac3a344c4f0f486478988e1e90d8f1211c3d31b1e252286a7373c4a440c4f6f789488189edef02811313cbde1512262787ac3a344c4f0f486470921859f21f3
f486470921766de412b1472e99e15142885c32c3a38410b9648647092172c90c8f1242f22ef96af9787ac3a38490a536beb3b6866fdf16f3f486470921536d7c
e486f9e3f7174f787ac3a38490b136de55c3c7eab0f59625369edef0282164accd54a1aeddb6deb510cbd31b1e25840cb5f1ae8d36de4891a336e05142c8509b
ce75f156b944ec002e098c8dfc2a3f7298d7402e09bb13cafdaa0af02387790d735eb2ae97c8256260778fb3fbefcff74b273f52be1f39cc6b8cb5695d134eeb
253f865c9260aa4d1b5d597eb062724982a5365de78dad3f845c92a0f09b033cc82509c8d7baeee3178f59bc8a5c22f2c825228f5c22f2c825228f5c22f2c825
228f5c22f2c82522cf37dec313ff3f4afb54fc03fc07ead245b4f49cc2420000000049454e44ae426082}}}}}

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
ror affecte les flags de fa\u231\'e7on identique \u224\'e0 rcr. La seule diff\u233\'e9rence avec rcr est qu'elle fait rentrer le bit sortant \u224\'e0 gauche directement dans le bit z\u233\'e9ro de l'op\u233\'e9rande, au lieu de le faire passer dans carry. }{\rtlch \ltrch\i\loch
N'oubliez pas, encore une fois, l'avertissement about les drapeaux affect\u233\'e9s !}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\i\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_06_04}{\*\bkmkend p6_06_04}\rtlch \ltrch\fs23\b\loch
6.6.4\tab Les op\u233\'e9rations sur les bits}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Manipuler les bits, est une des op\u233\'e9rations qui sont beaucoup plus faciles en assembleur qu'en tout autre langage. Et il ne faut pas s'\u233\'e9tonner. La plupart des langages de haut niveau tendent \u224\'e0 faire \u233\'e9cran entre vous et la repr\u233\'e9sentation machine sous-jacente des types de donn\u233\'e9es}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
D'ailleurs le fait de }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
masquer}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 les d\u233\'e9tails de bas niveau est l'une des fonctions principales de ces langages. }
}}
}{\loch
. Des instructions comme and, or, xor, not et des instructions comme }{\rtlch \ltrch\lang3082\loch
les }{\rtlch \ltrch\lang3084\loch
d\u233\'e9calages et les rotations }{\loch
permettent de tester, activer, nettoyer, inverser ou aligner des champs de bits \u224\'e0 l'int\u233\'e9rieur de cha\u238\'eenes de bits. M\u234\'eame le langage C++, fameux pourtant pour ses op\u233\'e9rateurs de manipulation de bits, ne fournit pas autant de possibilit\u233\'e9s de manipulation que l'assembleur. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80386 et sup\u233\'e9rieurs de la famille 80x86, vont m\u234\'eame beaucoup plus loin. En fait, \u224\'e0 c\u244\'f4t\u233\'e9 des instructions logiques, de d\u233\'e9calage et de rotation, il y a des instructions permettant de tester, activer, nettoyer ou invertir des bits }{\rtlch \ltrch\i\loch
sp\u233\'e9cifiques }{\loch
\u224\'e0 l'int\u233\'e9rieur d'une op\u233\'e9rande ou de rechercher des bits activ\u233\'e9s. Ces instructions sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab source, index}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
btc\tab source, index}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
btr\tab source, index}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bts\tab source, index}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bsf\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bsr\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Les formes sp\u233\'e9cifiques sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab reg, reg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab mem, reg ;C'est la m\u234\'eame instruction que test reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab reg, imm}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab mem, imm}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab eax/ax/al, imm}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab reg, reg\tab \tab        ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab mem, reg\tab \tab        ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab reg, imm\tab \tab        ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab mem, imm\tab \tab        ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;btc utilise le m\u234\'eame format que bt\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;btr utilise le m\u234\'eame format que bt\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;bts utilise le m\u234\'eame format que bt\tab (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bsf\tab reg, reg\tab \tab \tab  ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bsf\tab reg, mem\tab \tab \tab  ;(3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;bsr utilise les m\u234\'eames formats que bsf   (3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ;3- Cette instruction est seulement disponible sur 80386 ou }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sup\u233\'e9rieur}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que bt, btc, btr, bts, bsf et bsr requi\u232\'e8rent des op\u233\'e9randes de 16 ou }{\rtlch \ltrch\lang3084\loch
de }{\loch
32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9rations sur les bits sont utiles pour impl\u233\'e9menter des fonctions graphiques primitives (monochromes) de mappage (tables) de bits ou pour impl\u233\'e9menter un jeu de donn\u233\'e9es via des tables de bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.4.1\tab T}{{\*\bkmkstart p6_06_04_01}{\*\bkmkend p6_06_04_01}\rtlch \ltrch\fs23\lang3084\b\loch
est}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction effectue un }{\rtlch \ltrch\lang3084\loch
AND}{\loch
 sur ses deux op\u233\'e9randes et modifie les drapeaux, mais n'enregistre pas le r\u233\'e9sultat. }{\rtlch \ltrch\i\loch
test}{\loch
 et }{\rtlch \ltrch\i\loch
and}{\loch
 ont la m\u234\'eame relation que cmp et sub. Normalement, on l'utilise pour savoir si un bit contient }{\rtlch \ltrch\lang3084\loch
la valeur }{\loch
1. Consid\u233\'e9rez l'exemple suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab al, 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction }{\rtlch \ltrch\lang3084\loch
effectue un and }{\loch
entre al et 1 ; si le bit z\u233\'e9ro de al contient 1, alors le r\u233\'e9sultat est non-z\u233\'e9ro et le processeur nettoie le flag z\u233\'e9ro. Si le bit z\u233\'e9ro de al n'est pas activ\u233\'e9, alors le r\u233\'e9sultat est z\u233\'e9ro (FAUX) et l'op\u233\'e9ration }{\rtlch \ltrch\i\loch
test}{\loch
 active le drapeau z\u233\'e9ro. Vous pouvez tester ce drapeau apr\u232\'e8s cette instruction pour savoir si le bit }{\rtlch \ltrch\lang3084\loch
le plus bas du registre }{\loch
al contenait 1 ou 0. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\i\loch
test}{\loch
 peut aussi v\u233\'e9rifier si un ou plusieurs bits dans un registre ou un emplacement de m\u233\'e9moire sont \u224\'e0 }{\rtlch \ltrch\lang3084\loch
1}{\loch
. Consid\u233\'e9rez ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
test\tab dx, 105h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction effectue un ET logique entre dx et la valeur 105h. Ceci produira un r\u233\'e9sultat diff\u233\'e9rent de z\u233\'e9ro (en mettant aussi \u224\'e0 z\u233\'e9ro le }{\rtlch \ltrch\i\loch
zero flag}{\loch
), si au moins un des bits z\u233\'e9ro, deux ou huit contiennent 1. Ils doivent \u234\'eatre tous \u224\'e0 z\u233\'e9ro pour que le drapeau z\u233\'e9ro soit activ\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
L'instruction test affecte les flags de mani\u232\'e8re identique \u224\'e0 l'instruction and : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le drapeau de retenue est nettoy\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Il en va de m\u234\'eame pour le drapeau overflow. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Active le drapeau z\u233\'e9ro si le r\u233\'e9sultat est z\u233\'e9ro et le nettoie sinon. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Copie le bit le plus haut du r\u233\'e9sultat et le place dans le drapeau de signe. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Active le drapeau de parit\u233\'e9 selon la parit\u233\'e9 (nombre de bits activ\u233\'e9s) de l'octet bas du r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Rend ind\u233\'e9termin\u233\'e9 le flag de retenue auxiliaire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.4.2\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s }{\rtlch \ltrch\fs23\lang3084\b\loch
pour }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\lang3084\b\loch
ester les }{{\*\bkmkstart p6_06_04_02}{\*\bkmkend p6_06_04_02}\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
its : BT, BTS, BTR et BTC}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sur des processeurs 80386 et ult\u233\'e9rieurs, on peut utiliser l'instruction bt (}{\rtlch \ltrch\i\loch
bit test}{\loch
) pour tester un bit isol\u233\'e9. Sa seconde op\u233\'e9rande sp\u233\'e9cifie l'}{\rtlch \ltrch\i\loch
index du bit}{\loch
 de la premi\u232\'e8re op\u233\'e9rande. bt copie le bit adress\u233\'e9 dans le drapeau de retenue. Par exemple, }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab ax, 12}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
copie le bit 12 d}{\rtlch \ltrch\lang3084\loch
u registre}{\loch
 ax dans le drapeau de retenue. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Les instructions bt/bts/btr/btc admettent seulement des op\u233\'e9randes de 16 ou de 32 bits. Il ne s'agit pas d'une limitation de l'instruction. Apr\u232\'e8s tout, si vous voulez tester le bit 3 d}{\rtlch \ltrch\lang3084\loch
u registre}{\loch
 al, vous pouvez tout simplement tester le bit 3 }{\rtlch \ltrch\lang3084\loch
du registre}{\loch
 ax }{\rtlch \ltrch\lang3084\loch
tout entier}{\loch
. D'autre part, si l'index d\u233\'e9passe la taille du registre, le r\u233\'e9sultat est ind\u233\'e9fini. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si la premi\u232\'e8re op\u233\'e9rande est un emplacement de m\u233\'e9moire, bt teste le bit \u224\'e0 l'offset donn\u233\'e9, quelle que soit la valeur de l'index. Par exemple, si bx contient 65, alors}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
bt\tab TestezMoi, bx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
copiera le bit 1 de l'emplacement TestezMoi+8 dans le drapeau de retenue. Encore une fois, la taille de l'op\u233\'e9rande ne compte pas. Pour tous les usages et les objectifs, l'op\u233\'e9rande de m\u233\'e9moire est un octet et vous pouvez tester tout bit apr\u232\'e8s cet octet avec un index appropri\u233\'e9. Le bit que bt est en train de tester est \u224\'e0 la position }{\rtlch \ltrch\i\loch
index mod 8}{\loch
 et \u224\'e0 l'offset de m\u233\'e9moire }{\rtlch \ltrch\i\loch
adresse r\u233\'e9elle + index / 8}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
bts, btr et btc copient aussi le bit adress\u233\'e9 dans le drapeau carry ; cependant, ces instructions activent/d\u233\'e9sactivent (nettoient) ou compl\u233\'e9mentent (inversent) }{\rtlch \ltrch\lang3084\loch
aussi }{\loch
l'octet cibl\u233\'e9 de la premi\u232\'e8re op\u233\'e9rande apr\u232\'e8s l'avoir copi\u233\'e9 dans le flag. Ceci permet des op\u233\'e9rations }{\rtlch \ltrch\i\loch
test and set}{\loch
, }{\rtlch \ltrch\i\loch
test and clear}{\loch
 et }{\rtlch \ltrch\i\loch
test and invert}{\loch
, n\u233\'e9cessaires pour certains algorithmes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions n'affectent pas d'autre flag}{\rtlch \ltrch\lang3084\loch
s}{\loch
 que carry. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.4.3\tab Recherche de }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
its (}{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
it }{{\*\bkmkstart p6_06_04_03}{\*\bkmkend p6_06_04_03}\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
canning) : BSF et BSR}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions bsf (}{\rtlch \ltrch\i\loch
Bit Scan Forward}{\loch
) et bsr (}{\rtlch \ltrch\i\loch
Bit Scan Reverse}{\loch
) recherchent le premier ou le dernier bit activ\u233\'e9 dans une quantit\u233\'e9 de 16 ou de 32 bits. La forme g\u233\'e9n\u233\'e9rale de ces instructions est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab bsf\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab bsr\tab dest, source}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
bsf localise le premier bit activ\u233\'e9 dans l'op\u233\'e9rande source, en proc\u233\'e9dant du bit z\u233\'e9ro (bit }{\rtlch \ltrch\lang3084\loch
bas}{\loch
) }{\rtlch \ltrch\lang3084\loch
jusqu\u8217\'92au bit le plus haut}{\loch
. bsr fait la m\u234\'eame chose, mais en sens contraire, du dernier bit au bit z\u233\'e9ro. Si ces instructions trouvent un 1, elles nettoient le flag z\u233\'e9ro et mettent l'index (0..31) dans l'op\u233\'e9rande de destination. Si l'op\u233\'e9rande source est z\u233\'e9ro, ces instructions activent le drapeau z\u233\'e9ro et laissent dans la destination une valeur ind\u233\'e9finie}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Dans beaucoup de processeurs, si l'op\u233\'e9rande source est nulle, le CPU laisse l'op\u233\'e9rande de destination inalt\u233\'e9r\u233\'e9e. Cependant, certaines versions du 80486 modifient l'op\u233\'e9rande de destination, donc il ne faudrait pas compter sur la stabilit\u233\'e9 de la destination, quel que }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
ce }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
soit le r\u233\'e9sultat de l'instruction. }
}}
}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour capturer le premier bit contenant z\u233\'e9ro (et non 1), faites une copie de l'op\u233\'e9rande source et inversez-la (via not), puis ex\u233\'e9cutez bsf ou bsr sur la valeur invers\u233\'e9e. Si la valeur }{\rtlch \ltrch\lang3084\loch
originale }{\loch
de la source ne contenait pas de z\u233\'e9ros, alors le flag z\u233\'e9ro sera activ\u233\'e9 apr\u232\'e8s cette op\u233\'e9ration, sinon l'op\u233\'e9rande de destination contiendra la position du premier bit nul rencontr\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.6.5\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s \u171\'ab }{\rtlch \ltrch\fs23\lang3084\b\loch
S}{\rtlch \ltrch\fs23\b\loch
et }{\rtlch \ltrch\fs23\lang3084\b\loch
on Condition}{\rtlch \ltrch\fs23\b\loch
 \u187\'bb (}{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\b\loch
ctiver \u224\'e0 }{{\*\bkmkstart p6_06_05}{\*\bkmkend p6_06_05}\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ondition que)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions }{\rtlch \ltrch\i\loch
set on condition}{\loch
 (ou set}{\rtlch \ltrch\i\loch
cc}{\loch
) mettent leur op\u233\'e9rande (registre ou variable de 8 bits) \u224\'e0 z\u233\'e9ro ou \u224\'e0 un, selon les valeurs du registre flags. Les formats g\u233\'e9n\u233\'e9raux sont : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab setcc\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab setcc\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Set}{\rtlch \ltrch\i\loch
cc}{\loch
 repr\u233\'e9sente l'un des mots-cl\u233\'e9s apparaissant dans les tables qui suivent. Ces instructions placent 0 dans leur op\u233\'e9rande correspondante si la condition est fausse ou placent 1 dans le cas contraire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 28 }{\rtlch \ltrch\lang3084\b\loch
: instructions set}{\rtlch \ltrch\lang3084\i\b\loch
cc}{\rtlch \ltrch\lang3084\b\loch
 qui testent Flags}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Signification}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Condition }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Commentaires}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETC}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if carry}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETB, SETNAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNC}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not carry}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNB, SETAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if zero}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not zero}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNE }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETS}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if sign}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNS}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not sign}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Overflow = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Overflow = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if parity}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Parity = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETPE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETPE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if parity even (parit\u233\'e9 paire)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Parity = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETP}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not parity }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Parity = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETPO}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4309\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5801\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETPO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if parity odd (parit\u233\'e9 impaire)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Parity = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNP}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\rtlch \ltrch\lang3084\loch
Les instructions ci-dessus testent simplement les flags sans autre signification sous-jacente. Vous pouvez, par exemple, utiliser setc pour v\u233\'e9rifier le drapeau de retenue apr\u232\'e8s un d\u233\'e9calage, une rotation, un test de bits ou une op\u233\'e9ration arithm\u233\'e9tique. De m\u234\'eame, vous pouvez utiliser setnz apr\u232\'e8s une instruction de test pour v\u233\'e9rifier le r\u233\'e9sultat. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
D'ailleurs, l'instruction cmp fonctionne de pair avec les instructions set}{\rtlch \ltrch\lang3084\i\loch
cc}{\rtlch \ltrch\lang3084\loch
. Tout de suite apr\u232\'e8s une instruction de comparaison, les flags donnent des informations relatives aux valeurs de ces op\u233\'e9randes et vous permettent de v\u233\'e9rifier si une op\u233\'e9rande est plus petite, \u233\'e9gale, sup\u233\'e9rieure, ou n\u8217\'92importe quelle combinaison de ces derni\u232\'e8res. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il y a deux groupes d'instructions set}{\rtlch \ltrch\lang3084\i\loch
cc}{\rtlch \ltrch\lang3084\loch
 qui sont tr\u232\'e8s utiles apr\u232\'e8s une op\u233\'e9ration de comparaison. Le premier groupe concerne les comparaisons }{\rtlch \ltrch\lang3084\i\loch
non sign\u233\'e9es}{\rtlch \ltrch\lang3084\loch
 alors que l'autre concerne les comparaisons }{\rtlch \ltrch\lang3084\i\loch
sign\u233\'e9es}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 29 }{\rtlch \ltrch\lang3084\b\loch
: instructions setcc pour comparaisons non sign\u233\'e9es}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Signification}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Condition }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Commentaires}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if above (>)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 0, Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNBE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not below or equal (not <=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 0, Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETA}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if above or equal (>=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNC, SETNB}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not below (not <)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNC, SETAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if below (<)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETC, SETNAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not above or equal (not >=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETC, SETB}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if below or equal (<=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 1 ou Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNA}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not above (not >)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Carry = 1 ou Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETBE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if equal (=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETZ}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5802\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not equal (}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNZ}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\rtlch \ltrch\lang3084\loch
Le tableau correspondant pour des comparaisons sign\u233\'e9es est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 30 }{\rtlch \ltrch\lang3084\b\loch
: instructions setcc pour comparaisons sign\u233\'e9es}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Signification}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Condition }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\rtlch \ltrch\lang3084\loch
Commentaires}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if greater (>)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = Overflow ou Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNLE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not less than or equal (not <=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = Overflow ou Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETG}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if greather than or equal}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNL}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not less than (not <)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign = Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETGE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if less than (<)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNGE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not greather or equal (not >=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETL}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if less than or equal (<=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 Overlow ou Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNG}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not greather than (not >)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Sign }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 Overlow ou Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETLE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if equal (=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETZ}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3818\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6226\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
SETNE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Set if not equal (}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\lang3084\loch\f4\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
Zero = 0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\tx-142{\rtlch \ltrch\lang3084\loch
M\u234\'eame chose que SETNZ}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\rtlch \ltrch\lang3084\loch
Les instructions set}{\rtlch \ltrch\lang3084\i\loch
cc }{\rtlch \ltrch\lang3084\loch
sont particuli\u232\'e8rement int\u233\'e9ressantes parce qu'elles peuvent convertir le r\u233\'e9sultat d'une comparaison en une valeur bool\u233\'e9enne (vrai/faux ou 1/0). Ceci est sp\u233\'e9cialement important quand on traduit des instructions de langages de haut niveau en instructions d'assembleur. L'exemple suivant montre comment on le fait : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
; Bool := A <= B}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab ax, A\tab ;en supposant que A et B sont des entiers sign\u233\'e9s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp \tab ax, B}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab setle\tab Bool\tab ;o\u249\'f9 Bool doit \u234\'eatre une variable d'un octet}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les instructions set}{\rtlch \ltrch\i\loch
cc}{\loch
 produisent toujours 0 ou 1, on peut combiner leur r\u233\'e9sultat avec celui des instructions logiques and et or pour calculer des valeurs bool\u233\'e9ennes complexes :  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
; Bool := ((A <= B) and (D = E)) or (F <> G)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab ax, A}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp \tab ax, B}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setle \tab bl}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, D}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp \tab ax, E}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setle\tab bh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
and\tab bl, bh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, F}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab ax, G}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab bh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
or\tab bl, bh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab Bool, bh}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Pour plus d}{\rtlch \ltrch\lang3084\loch
'exemples voir le paragraphe 9.2 (chapitre 9).}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions setcc produisent toujours un r\u233\'e9sultat de huit bits, \u233\'e9tant donn\u233\'e9 que l'octet est la plus petite op\u233\'e9rande sur un processeur 80x86. Cependant, vous pouvez facilement utiliser les instructions de d\u233\'e9calage et de rotation pour r\u233\'e9unir huit valeurs bool\u233\'e9ennes dans un seul octet (compactage). Les instructions suivantes comparent huit valeurs avec z\u233\'e9ro et copient le }{\rtlch \ltrch\i\loch
zero flag}{\loch
 de chaque comparaison dans les bits correspondants de al : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val7, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab al\tab ;Place la premi\u232\'e8re valeur dans le bit 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val6, 0\tab ;Teste la valeur pour le bit 6}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah\tab ;Copie le drapeau z\u233\'e9ro dans le registre ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1\tab ;Copie le drapeau z\u233\'e9ro dans carry}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1\tab ;D\u233\'e9cale le carry dans l'octet du r\u233\'e9sultat}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val5, 0\tab ;Teste la valeur pour le bit 5}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val4, 0\tab ;Teste la valeur pour le bit 4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val3, 0\tab ;Teste la valeur pour le bit 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp \tab Val2, 0\tab ;Teste la valeur pour le bit 2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val1, 0\tab ;Teste la valeur pour le bit 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
cmp\tab Val0, 0\tab ;Teste la valeur pour le bit 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
setne\tab ah}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
shr\tab ah, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
rcl\tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\loch
\tab Maintenant AL contient les drapeaux z\u233\'e9ro des huit comparaisons.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_07}{\*\bkmkend p6_07}\rtlch \ltrch\fs23\b\loch
6.7\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions d'E/S}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille des processeurs 80x86 supporte deux instructions d'entr\u233\'e9es/sorties : in et out}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
En r\u233\'e9alit\u233\'e9, \u224\'e0 partir des processeurs 80286 on peut disposer de quatre instructions. Les autres deux seront pr\u233\'e9sent\u233\'e9es dans la prochaine section. }
}}
}{\loch
. Leur syntaxe est : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
in\tab eax/ax/al, port}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
in \tab eax/ax/al, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
out\tab port, eax/ax/al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
out\tab dx, eax/ax/al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
port }{\loch
est une valeur entre 0 et 255. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La technologie 80x86 peut avoir jusqu'\u224\'e0 65536 ports diff\u233\'e9rents d'E/S (n\u233\'e9cessitant une adresse E/S de 16 bits). La valeur du }{\rtlch \ltrch\i\loch
port}{\loch
 ci-dessus, est cependant d'un octet. Par cons\u233\'e9quent, vous pouvez adresser directement seulement les premiers 256 ports d'E/S dans l'espace d'adressage 80x86. Pour adresser la totalit\u233\'e9 des 65536 ports, il faut charger l'adresse du port d\u233\'e9sir\u233\'e9 dans le registre dx (si cette adresse est sup}{\rtlch \ltrch\lang3084\loch
\u233\'e9rieure \u224\'e0 255 \u233\'e9videmment)}{\loch
, puis y acc\u233\'e9der indirectement. L'instruction }{\rtlch\ai \ltrch\i\loch
in}{\loch
 lit une valeur dans le port sp\u233\'e9cifi\u233\'e9 et la copie dans l'accumulateur. L'instruction }{\rtlch\ai \ltrch\i\loch
out}{\loch
 \u233\'e9crit la valeur de l'accumulateur dans le port d'E/S sp\u233\'e9cifi\u233\'e9e. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Veuillez }{\rtlch \ltrch\lang3084\loch
noter}{\loch
 que les instructions in et out n'ont rien de sp\u233\'e9cial en soi ; elles constituent simplement une autre version de l'instruction mov, acc\u233\'e9dant \u224\'e0 un espace de m\u233\'e9moire diff\u233\'e9rent (l'espace d'adressage des entr\u233\'e9es/sorties). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions n'affectent aucun flag. Voici des exemples : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab in\tab al, 60h\tab \tab ;Lit un port du clavier}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab dx, 378h\tab ;Pointe sur LPT1 : port des donn\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
in\tab al, dx\tab \tab ;Lit une valeur du port d'imprimante}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
inc \tab ax\tab \tab ;Incr\u233\'e9mente le code ASCII de 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
out\tab dx, al\tab \tab ;Ecrit la donn\u233\'e9e de al dans le port}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab ;d'imprimante}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.8\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ha\u238\'eenes}{{\*\bkmkstart p6_08}{\*\bkmkend p6_08}\rtlch \ltrch\fs23\b\loch
 }{\rtlch \ltrch\fs23\lang3084\b\loch
de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\lang3084\b\loch
aract\u232\'e8res}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Les processeurs 80x86 supportent douze instructions de cha\u238\'eenes (strings) :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab }
\par \trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
movs (}{\rtlch \ltrch\lang3084\i\loch
move string}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
d\u233\'e9place une cha\u238\'eene}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
lods (}{\rtlch \ltrch\lang3084\i\loch
load string element into the accumulator}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
charge cha\u238\'eene dans al/ax/eax}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
stos (}{\rtlch \ltrch\lang3084\i\loch
store accumulator into string element}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
charge al/ax/eax dans cha\u238\'eene}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
scas (}{\rtlch \ltrch\lang3084\i\loch
scan string and check for match against the value in the accumulateur}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
cherche la valeur de al/ax/eax dans cha\u238\'eene}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
cmps (}{\rtlch \ltrch\lang3084\i\loch
compare two strings}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
compare deux cha\u238\'eenes}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
ins (}{\rtlch \ltrch\lang3084\i\loch
input a string from I/O port}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
charge cha\u238\'eene d\u8217\'92un port d'E/S}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
outs (}{\rtlch \ltrch\lang3084\i\loch
output a string to an I/O port}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
envoie une chaine sur un port d'E/S}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
rep (}{\rtlch \ltrch\lang3084\i\loch
repeat a string operation}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9p\u232\'e8te une instruction de cha\u238\'eene}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
repz (}{\rtlch \ltrch\lang3084\i\loch
repeat while zero}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9p\u232\'e8te tant que z\u233\'e9ro}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
repe (}{\rtlch \ltrch\lang3084\i\loch
repeat while equal}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9p\u232\'e8te tant qu\u8217\'92\u233\'e9gal}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\loch
repnz (}{\rtlch \ltrch\lang3084\i\loch
repeat while not zero}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9p\u232\'e8te tant que non z\u233\'e9ro}\cell\row\pard\trowd\trql\trleft-108\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx317\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4532\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx8748\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\sb0\sa120{\rtlch \ltrch\lang3084
\u8226\'95}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\sb0\sa240{\rtlch \ltrch\lang3084\loch
repne (}{\rtlch \ltrch\lang3084\i\loch
repeat while not equal}{\rtlch \ltrch\lang3084\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\sb0\sa120{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9p\u232\'e8te tant que non \u233\'e9gal}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut utiliser movs, stos, scas, cmps, ins et outs pour manipuler un \u233\'e9l\u233\'e9ment isol\u233\'e9 (octet, mot ou double-mot) d'une cha\u238\'eene ou pour manipuler une cha\u238\'eene en entier. G\u233\'e9n\u233\'e9ralement, on utilise seulement l'instruction lods pour ne manipuler qu'un \u233\'e9l\u233\'e9ment \u224\'e0 la fois.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions peuvent fonctionner sur des cha\u238\'eenes d'octets, de mots ou de doubles-mots. Pour sp\u233\'e9cifier la taille de l'objet, ajouter simplement b, w ou d \u224\'e0 la fin du mot-cl\u233\'e9 de l'instruction, par exemple, lodsb, movsw, cmpsd, etc. Il va de soi que les formes supportant le double-mot sont disponibles seulement sur des processeurs 80386 ou sup\u233\'e9rieurs. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\ai \ltrch\i\loch
movs}{\loch
 et }{\rtlch\ai \ltrch\i\loch
cmps}{\loch
 supposent que ds:si contient l'adresse segment\u233\'e9e de la cha\u238\'eene source et que es:di contient l'adresse segment\u233\'e9e de la cha\u238\'eene de destination. }{\rtlch\ai \ltrch\i\loch
lods}{\loch
 attend que ds:si pointe sur la cha\u238\'eene source et que l'accumulateur sert de destination. }{\rtlch\ai \ltrch\i\loch
scas}{\loch
 et }{\rtlch\ai \ltrch\i\loch
stos}{\loch
 s'attendent \u224\'e0 que es:di pointe sur la cha\u238\'eene de destination et que l'accumulateur contien}{\rtlch \ltrch\lang3084\loch
t}{\loch
 la valeur source. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
movs d\u233\'e9place un \u233\'e9l\u233\'e9ment de cha\u238\'eene (octet, mot ou double-mot) de la valeur de ds:si \u224\'e0 }{\rtlch \ltrch\lang3084\loch
la valeur}{\loch
 d\u8217\'92es:di. Apr\u232\'e8s avoir effectu\u233\'e9 le d\u233\'e9placement, l'instruction incr\u233\'e9mente ou d\u233\'e9cr\u233\'e9mente les registres }{\rtlch\ai \ltrch\i\loch
si}{\loch
 et }{\rtlch\ai \ltrch\i\loch
di}{\loch
 par un, deux ou quatre selon qu'il s'agisse d'octets, de mots ou de doubles-mots. Le CPU incr\u233\'e9mente ces registres si le drapeau de direction est \u224\'e0 z\u233\'e9ro et }{\rtlch \ltrch\lang3084\loch
il }{\loch
les d\u233\'e9cr\u233\'e9mente s'il vaut 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction movs est utile pour d\u233\'e9placer des blocs de donn\u233\'e9es entre zones de m\u233\'e9moire. Vous pouvez l'utiliser pour d\u233\'e9placer des cha\u238\'eenes, des tableaux et d'autres structures de donn\u233\'e9es multi-octets :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab movs\{b,w,d\}:\tab es:[di] := ds:[si] }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si - taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di - taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3403\ri0\lin3403\rin0\fi1\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Notez : }{\rtlch \ltrch\i\loch
taille}{\loch
 vaut un pour des octets, deux pour des mots et quatre pour des doubles-mots.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction cmps compare l'octet, le mot ou le double-mot qui se trouve dans ds:si avec le contenu de es:di et modifie les drapeaux en cons\u233\'e9quence. Apr\u232\'e8s la comparaison, cmps incr\u233\'e9mente ou d\u233\'e9cr\u233\'e9mente si et di par un, deux ou quatre selon la taille de l'instruction et l'\u233\'e9tat du flag de direction :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmps\{b,w,d\}:\tab cmp ds:[si], es:[di] }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si - taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction lods d\u233\'e9place l'octet, le mot ou le double-mot de ds:si dans al, ax ou eax. Puis, elle incr\u233\'e9mente ou d\u233\'e9cr\u233\'e9mente le registre si par un, deux ou quatre, selon la taille de l'instruction et l'\u233\'e9tat du drapeau de direction. Cette instruction est utile pour charger une s\u233\'e9quence d'octets, de mots ou de doubles-mots d'un tableau pour effectuer certaines op\u233\'e9rations sur ces valeurs et ensuite passer \u224\'e0 la valeur suivante de la cha\u238\'eene}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Notez que }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
cha\u238\'eene}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 et }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
tableau}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 sont presque des synonymes, n.d.t. }
}}
}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab lods\{b,w,d\}:\tab eax/ax/al := ds:[si]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction stos place al, ax ou eax dans l'adresse sp\u233\'e9cifi\u233\'e9e par es:di. Encore, di est incr\u233\'e9ment\u233\'e9 ou d\u233\'e9cr\u233\'e9ment\u233\'e9 selon la taille de l'instruction et la valeur du flag de direction. Cette instruction a plusieurs utilisations. En combinaison avec lods, on peut charger (via lods), manipuler et stocker des \u233\'e9l\u233\'e9ments de cha\u238\'eene. Utilis\u233\'e9e seule, stos peut rapidement stocker une valeur dans une structure de donn\u233\'e9es \u224\'e0 plusieurs octets. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab stos\{b,w,d\}:\tab es:[di] := eax/ax/al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction scas compare al, ax ou eax avec la valeur gard\u233\'e9e dans }{\rtlch \ltrch\lang3084\loch
es:di, puis elle ajuste di conform\u233\'e9ment au r\u233\'e9sultat. Cette instruction modifie les flags de la m\u234\'eame fa\u231\'e7on que cmp et cmps ; elle est parfaite pour rechercher une valeur particuli\u232\'e8re dans une structure de donn\u233\'e9es \u224\'e0 plusieurs octets. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab scas\{b,w,d\}:\tab cmp eax/ax/al, es:[di]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'instruction ins accepte un octet, un mot ou un double-mot \u224\'e0 partir d'un port d'E/S sp\u233\'e9cifi\u233\'e9 par le registre dx. Elle stocke ensuite la valeur d'entr\u233\'e9e dans l'emplacement de m\u233\'e9moire es:di et incr\u233\'e9mente ou d\u233\'e9cr\u233\'e9mente di de fa\u231\'e7on appropri\u233\'e9e. Cette instruction est disponible seulement sur des processeurs \u224\'e0 partir du 80286. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ins\{b,w,d\}:\tab es:[di] := port(dx)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
di := di - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction outs charge l'octet, le mot ou le double-mot \u224\'e0 ds:si et le place dans le port d'E/S sp\u233\'e9cifi\u233\'e9 par le registre dx. Le registre }{\rtlch\ai \ltrch\i\loch
si}{\loch
 est incr\u233\'e9ment\u233\'e9 ou d\u233\'e9cr\u233\'e9ment\u233\'e9 selon les m\u234\'eames r\u232\'e8gles que ci-dessus.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab outs\{b,w,d\}:\tab port(dx) := ds:[si]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if direction_flag = 0 then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si + taille;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab else}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
si := si - taille;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab endif;}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme on vient de l'expliquer, les instructions de cha\u238\'eenes sont utiles, mais on peut faire encore mieux ! Quand elles sont combin\u233\'e9es avec les pr\u233\'e9fixes rep, repz, repe, repnz et repne, une simple instruction de cha\u238\'eene peut travailler sur une cha\u238\'eene tout enti\u232\'e8re. Pour avoir plus d'informations sur ces pr\u233\'e9fixes, voir le chapitre d\u233\'e9di\u233\'e9 aux cha\u238\'eenes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ontr\u244\'f4le de }{{\*\bkmkstart p6_09}{\*\bkmkend p6_09}\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
lux}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions vues jusqu'\u224\'e0 }{\rtlch \ltrch\lang3084\loch
pr\u233\'e9sent}{\loch
 }{\rtlch \ltrch\lang3084\loch
s\u8217\'92}{\loch
ex\u233\'e9cutent }{\rtlch \ltrch\lang3084\loch
de mani\u232\'e8re s\u233\'e9quentielle}{\loch
 ; cela dit, le CPU ex\u233\'e9cute chacune }{\rtlch \ltrch\lang3084\loch
de ces instructions selon }{\loch
leur ordre d'apparition dans le programme. Mais, pour \u233\'e9crire de vrais programmes, il faut plusieurs structures de contr\u244\'f4le et non seulement une s\u233\'e9quence. Comme exemples, vous avez les instructions if, les boucles et les appels de sous-routine (calls). Puisque les compilateurs r\u233\'e9duisent tous les codes sources en code assembleur, il n'est pas surprenant que ce dernier comprenne les instructions n\u233\'e9cessaires pour pouvoir r\u233\'e9aliser toutes ces structures. Les instructions de contr\u244\'f4le de flux 80x86 tombent dans trois cat\u233\'e9gories : les transferts inconditionnels, les transferts conditionnels et les instructions d'appel et de renvoi des sous-routines. La section suivante d\u233\'e9crit ces structures. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.1\tab Sauts }{\rtlch \ltrch\fs23\lang3084\b\loch
i}{{\*\bkmkstart p6_09_01}{\*\bkmkend p6_09_01}\rtlch \ltrch\fs23\b\loch
nconditionnels}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction jmp (}{\rtlch \ltrch\lang3084\loch
abbr\u233\'e9viation }{\loch
de }{\rtlch \ltrch\i\loch
jump}{\loch
) transf\u232\'e8re le contr\u244\'f4le inconditionnellement \u224\'e0 un autre point du programme. Il y a six formes de cette instruction : un saut intersegment/direct, deux sauts intrasegment/directs, un saut intersegment/indirect et deux sauts intrasegment/indirects. Les sauts }{\rtlch \ltrch\i\loch
intrasegment}{\loch
 se font toujours }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l'int\u233\'e9rieur du m\u234\'eame segment de code, alors que les autres transf\u232\'e8rent le contr\u244\'f4le dans un autre segment. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ces instructions utilisent g\u233\'e9n\u233\'e9ralement la m\u234\'eame syntaxe : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab jmp \tab cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'assembleur les diff\u233\'e9rencie par leurs op\u233\'e9randes : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab jmp \tab disp}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
8}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment direct (d\u233\'e9placement de 8 bits)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab disp}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment direct (d\u233\'e9placement de 16 bits)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab adrs}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intersegment direct (adresse segment\u233\'e9e de 32 bits)}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment indirect (op\u233\'e9rande de m\u233\'e9moire de 16 bits)}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp \tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment indirect (registre)}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intersegment indirect (op\u233\'e9rande de m\u233\'e9moire de 32 bits)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\ai0 \ltrch\lang3084\i0\loch
Intersegment}{\rtlch \ltrch\lang3084\loch
 est synonyme de }{\rtlch \ltrch\lang3084\i\loch
far}{\rtlch \ltrch\lang3084\loch
, alors }{\rtlch\ai0 \ltrch\lang3084\i0\loch
qu'intrasegment}{\rtlch \ltrch\lang3084\loch
 est synonyme de }{\rtlch \ltrch\lang3084\i\loch
near}{\rtlch \ltrch\lang3084\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux sauts intrasegment/directs diff\u232\'e8rent seulement dans leur longueur. La premi\u232\'e8re forme consiste en un opcode et un d\u233\'e9placement de huit bits. Le CPU effectue une extension sign\u233\'e9e \u224\'e0 seize bits et l'additionne au registre ip. Cette instruction peut brancher dans la plage -128..127 (en octets) depuis le d\u233\'e9but de }{\rtlch \ltrch\lang3084\loch
l'instruction }{\loch
qui suit le saut (c.-\u224\'e0.-d. dans la plage -126..129 autour de l'instruction courante). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde forme de ce saut, a une longueur de trois octets avec un d\u233\'e9placement de deux. Cette instruction permet des sauts dans la plage -32768..32767 octets et peut transf\u233\'e9rer le contr\u244\'f4le n'importe o\u249\'f9 dans le segment de code courant. Le CPU additionne simplement le d\u233\'e9placement de deux octets au registre IP. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces deux premiers sauts se servent un sch\u233\'e9ma d'adressage }{\rtlch \ltrch\i\loch
relatif.}{\loch
 L'offset encod\u233\'e9 comme partie de l'opcode }{\rtlch \ltrch\i\loch
n'est pas}{\loch
 l'adresse cible, mais la distance entre le saut et la cible. Heureusement, MASM calculera cette distance automatiquement pour vous, ce qui vous \u233\'e9vite de la calculer manuellement. Dans beaucoup d'aspects, ces instructions ne sont rien de plus qu'un }{\rtlch \ltrch\i\loch
add ip, disp}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le saut intersegment/direct a cinq octets de long ; les quatre derniers octets contiennent une adresse segment\u233\'e9e (l'offset dans le second et le troisi\u232\'e8me octet, le segment dans le quatri\u232\'e8me et cinqui\u232\'e8me octet). Cette instruction copie l'offset dans le registre ip et le segment dans le registre cs. L'ex\u233\'e9cution de l'instruction suivante continue \u224\'e0 partir de la nouvelle adresse dans cs:ip. Contrairement aux deux instructions de saut pr\u233\'e9c\u233\'e9dentes, l'adresse suivant l'opcode est l'adresse absolue de l'instruction cible ; cette version n'utilise pas d'adressage relatif, mais elle charge cs:ip avec une valeur imm\u233\'e9diate de 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour les trois sauts directs d\u233\'e9crits ci-dessus, vous sp\u233\'e9cifiez normalement l'adresse cible \u224\'e0 l'aide d'une }{\rtlch \ltrch\i\loch
\u233\'e9tiquette d'instruction}{\loch
 (}{\rtlch \ltrch\i\loch
statement label}{\loch
). Une \u233\'e9tiquette est g\u233\'e9n\u233\'e9ralement un identificateur suivi par un ":", habituellement sur la m\u234\'eame ligne qu'une instruction machine ex\u233\'e9cutable. L'assembleur d\u233\'e9termine l'offset de l'instruction apr\u232\'e8s l'\u233\'e9tiquette et calcule automatiquement la distance entre l'instruction de saut et l'\u233\'e9tiquette d'instruction. Par cons\u233\'e9quent, vous n'avez pas \u224\'e0 vous pr\u233\'e9occuper de d\u233\'e9terminer ces distances manuellement. Par exemple, la courte boucle suivante lit continuellement le port parall\u232\'e8le d'imprimante et en inverse le bit }{\rtlch \ltrch\lang3084\loch
le plus bas}{\loch
. Ceci produit un signal \u233\'e9lectrique (}{\rtlch \ltrch\i\loch
square wave }{\loch
ou}{\rtlch \ltrch\i\loch
 onde carr\u233\'e9e}{\loch
) dans l'une des lignes de sortie du port. }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab dx, 378h\tab ;Adresse du port d'imprimante}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
BouclerSansFin:\tab in\tab al, dx\tab \tab ;Lire un caract\u232\'e8re sur le port d'entr\u233\'e9e}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab xor\tab al, 1\tab \tab ;Inverser le bit }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
le plus bas}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
out\tab dx, al\tab \tab ;Envoyer la donn\u233\'e9e sur le port\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab BoucleSansFin\tab ;R\u233\'e9p\u233\'e9ter toujours...}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La quatri\u232\'e8me forme de saut inconditionnel est l'instruction de saut indirect d'intrasegment. Il requiert une op\u233\'e9rande de m\u233\'e9moire de 16 bits. Cette forme de saut }{\rtlch \ltrch\lang3084\loch
transf\u232\'e8re}{\loch
 le contr\u244\'f4le \u224\'e0 l'adresse }{\rtlch \ltrch\lang3084\loch
qui se trouve }{\loch
\u224\'e0 l'int\u233\'e9rieur de l'offset donn\u233\'e9 par les deux octets de l'op\u233\'e9rande de m\u233\'e9moire. Par exemple : }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
WordVar\tab \tab word\tab AdresseCible}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab WordVar}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
transf\u232\'e8re le contr\u244\'f4le \u224\'e0 l'adresse sp\u233\'e9cifi\u233\'e9e par la valeur de l'emplacement de m\u233\'e9moire de 16 bits WordVar. Ceci }{\rtlch \ltrch\i\loch
ne provoque pas}{\loch
 un saut \u224\'e0 l'instruction se situant \u224\'e0 l'adresse WordVar, mais saute \u224\'e0 l'instruction }{\rtlch \ltrch\i\loch
dont l'adresse}{\loch
 est gard\u233\'e9e dans la variable WordVar. Notez que cette forme de }{\rtlch \ltrch\i\loch
jump}{\loch
 est \u233\'e9quivalente \u224\'e0 :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ip, WordVar}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quoique l'exemple ci-dessus utilise une seule variable de 16 bits contenant une adresse indirecte, vous pouvez utiliser }{\rtlch \ltrch\i\loch
tout}{\loch
 mode d'adressage indirect, et pas seulement le }{\rtlch \ltrch\i\loch
d\u233\'e9placement seul}{\loch
. Vous pouvez utiliser aussi des modes d'adressage de m\u233\'e9moire indirects, comme dans ce qui suit : }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab DispSeul}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp \tab Disp[bx]\tab ;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\i\loch\f9\loch
Disp}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 est un tableau de mots}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab Disp[bx][si]}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab [bx]}{{\super \rtlch\dbch\af15 \ltrch\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Techniquement, ceci est syntaxiquement incorrect parce que MASM ne peut pas d\u233\'e9terminer la taille de l'op\u233\'e9rande de m\u233\'e9moire. }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
Continuez \u224\'e0 lire pour les }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
d\u233\'e9tails. }
}}
}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez le mode d'adressage index\u233\'e9 ci-dessus (disp[bx]). Ce mode charge le mot de l'emplacement disp+bx et copie la valeur dans le registre ip ; ce qui permet de cr\u233\'e9er un tableau de pointeurs et de sauter au pointeur sp\u233\'e9cifi\u233\'e9 via un index de tableau. Cosid\u233\'e9rez l'exemple suivant : }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
TableauAdr\tab word\tab instr1, instr2, instr3, instr4}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab bx, I\tab \tab ;O\u249\'f9 I est dans la plage 0..3}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
add\tab bx, bx\tab \tab ;Index pour un tableau de mots}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab TableauAdr[bx]\tab ;Saute \u224\'e0 instr1, instr2, etc, selon I}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La chose importante \u224\'e0 noter ici est que le saut indirect proche charge un mot }{\rtlch \ltrch\lang3084\loch
de}{\loch
 la m\u233\'e9moire et le copie dans le registre ip ; il ne saute pas \u224\'e0 l'adresse sp\u233\'e9cifi\u233\'e9e, mais le fait indirectement \u224\'e0 travers le pointeur de 16 bits \u224\'e0 l}{\rtlch \ltrch\lang3084\loch
'emplacement}{\loch
 de m\u233\'e9moire sp\u233\'e9cifique. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le cinqui\u232\'e8me type de saut transf\u232\'e8re le contr\u244\'f4le \u224\'e0 l'offset donn\u233\'e9 dans un registre g\u233\'e9n\u233\'e9ral de 16 bits. Notez que vous pouvez utiliser }{\rtlch \ltrch\i\loch
tout }{\loch
registre g\u233\'e9n\u233\'e9ral, et pas seulement bx, si, di, ou bp. Une instruction de la forme}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
est approximativement \u233\'e9quivalente \u224\'e0}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ip, ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les deux formes pr\u233\'e9c\u233\'e9dentes (registre ou m\u233\'e9moire indirecte) sont en fait la m\u234\'eame instruction. Les champs mod et r/m de l'octet mod-reg-r/m sp\u233\'e9cifient un registre ou une adresse de m\u233\'e9moire indirecte. Voir l'annexe D pour les d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La sixi\u232\'e8me forme de cette instruction, le saut intersegment/indirect, comprend une op\u233\'e9rande de m\u233\'e9moire }{\rtlch \ltrch\lang3084\loch
contenant }{\loch
un pointeur de 32 bits. Le CPU copie le double-mot \u224\'e0 cette adresse dans la paire de registres cs:ip. Par exemple,}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
PtrFar\tab \tab dword\tab AdresseCible}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab  .}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab PtrFar}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
transf\u232\'e8re le contr\u244\'f4le \u224\'e0 l'adresse segment\u233\'e9e sp\u233\'e9cifi\u233\'e9e par les quatre octets \u224\'e0 l'adresse PtrFar. Cette instruction est s\u233\'e9mantiquement identique \u224\'e0 l'instruction }{\rtlch \ltrch\lang3084\loch
(}{\loch
chim\u233\'e9rique}{\rtlch \ltrch\lang3084\loch
)}{\loch
 :}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
lcs\tab ip, PtrFar\tab ;charge cs:ip depuis PtrFar}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme pour les sauts indirects proches d\u233\'e9crits ci-dessus, ce saut vous permet de sp\u233\'e9cifier tout mode d'adressage m\u233\'e9moire arbitraire (et valide). Vous n'\u234\'eates pas limit\u233\'e9 au d\u233\'e9placement seul qu'on vient d'utiliser. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
MASM utilise un mode d'adressage indirect }{\rtlch \ltrch\i\loch
near}{\loch
 ou }{\rtlch \ltrch\i\loch
far}{\loch
 selon le type de l'emplacement de m\u233\'e9moire que vous sp\u233\'e9cifiez. Si la variable est de type word, MASM g\u233\'e9n\u233\'e9rera automatiquement un saut }{\rtlch\ai \ltrch\lang3084\i\loch
near}{\loch
 et indirect. Si, au contraire, la variable est un dword, alors MASM \u233\'e9mettra l'opcode pour un saut indirect et \u233\'e9loign\u233\'e9. Certaines formes de mode d'adressage, malheureusement, ne sp\u233\'e9cifient pas intrins\u232\'e8quement une taille. Par exemple, [bx] est d\u233\'e9finitivement une op\u233\'e9rande de m\u233\'e9moire, mais est-ce qu'elle pointe sur un mot ou sur un double-mot ? Elle }{\rtlch \ltrch\i\loch
peut}{\loch
 pointer sur n'importe quoi. Par cons\u233\'e9quent, MASM refusera une instruction }{\rtlch \ltrch\lang3084\loch
comme}{\loch
 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab [bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
MASM ne pourra d'aucune fa\u231\'e7on d\u233\'e9terminer si celui-ci doit \u234\'eatre un saut indirect proche ou \u233\'e9loign\u233\'e9. Pour lever l'ambigu\u239\'eft\u233\'e9, on aura besoin d'utiliser un }{\rtlch \ltrch\i\loch
op\u233\'e9rateur de coercition de type}{\loch
. Le chapitre huit expliquera \u224\'e0 fond les op\u233\'e9rateurs de coercition ; pour l'instant utilisez simplement l'une des deux instructions suivantes : }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab word ptr [bx]}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab dword ptr [bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les modes d'adressage indirects des registres ne sont pas les seuls capables de produire de telles ambigu\u239\'eft\u233\'e9s. Vous pourriez tomber dans ce probl\u232\'e8me m\u234\'eame en utilisant les modes d'adressage index\u233\'e9 et bas\u233\'e9/index\u233\'e9 : }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab word ptr 5[bx]}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jmp\tab dword ptr 9[bx][si]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En th\u233\'e9orie, on pourrait utiliser les instructions de sauts indirects et les instructions set}{\rtlch \ltrch\i\loch
cc}{\loch
 pour transf\u233\'e9rer le contr\u244\'f4le de mani\u232\'e8re conditionnelle \u224\'e0 quelque emplacement donn\u233\'e9. Par exemple, le code suivant transf\u232\'e8re le contr\u244\'f4le \u224\'e0 }{\rtlch \ltrch\i\loch
iftrue}{\loch
 si la variable X de type word est \u233\'e9gale \u224\'e0 la variable Y de type word. Sinon, il transf\u232\'e8re le contr\u244\'f4le \u224\'e0 }{\rtlch \ltrch\i\loch
iffalse.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
JmpTbl\tab \tab word\tab iffalse, iftrue}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9
 }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
.}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, X}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, Y}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sete\tab bl}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
movzx\tab ebx, bl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab JmpTbl[ebx*2]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous verrez bient\u244\'f4t, il y a un meilleur moyen de le faire: en utilisant les instructions de saut conditionnel. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.2\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s CALL et RET}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions call et ret g\u232\'e8rent l'appel et le retour des sous-routines. Il y a cinq formes d'appels et six de retour. }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab disp}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment direct, 16 bits relatif. }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab adrs}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment direct, adresse segment\u233\'e9e de 32 bits}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment indirect, pointeur m\u233\'e9moire de 16 bits}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab reg}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
16}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intrasegment indirect, pointeur registre de 16 bits}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab call\tab mem}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\sub\fs18\loch\f9\loch
32}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab ;intersegment indirect, pointeur m\u233\'e9moire de 32 bits}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ret\tab \tab ;retour near ou far}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retn\tab \tab ;retour near}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retf\tab \tab ;retour far}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
ret\tab disp\tab ;retour near ou far et pop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retn\tab disp\tab ;retour near et pop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retf\tab disp\tab ;retour far et pop}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions call ont la m\u234\'eame forme que les instructions jmp, sauf qu'il n'y a pas d'appel d'intrasegment court (deux octets). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La version far de l'instruction call fait ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elle pousse le registre cs dans la pile. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elle pousse dans la pile l'offset de 16 bits de l'instruction qui suit l'appel. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elle copie l'adresse r\u233\'e9elle de 32 bits dans la paire de registres cs:ip. Puisque call permet le m\u234\'eame mode d'adressage que jmp, elle peut obtenir l'adresse cible en utilisant un mode d'adressage relatif en m\u233\'e9moire ou dans un registre. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab L'ex\u233\'e9cution continue \u224\'e0 la premi\u232\'e8re instruction de la sous-routine. Cette instruction est l'opcode \u224\'e0 l'adresse cible calcul\u233\'e9 \u224\'e0 l'\u233\'e9tape pr\u233\'e9c\u233\'e9dente. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La version near de l'instruction call fait ce qui suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elle pousse dans la pile l'offset de l'instruction suivant l'appel. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Elle copie l'adresse r\u233\'e9elle de 16 bits dans le registre ip. Puisque l'instruction call comprend le m\u234\'eame mode d'adressage que l'instruction jmp, elle peut obtenir l'adresse cible en utilisant un mode d'adressage relatif en m\u233\'e9moire ou dans un registre. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab L'ex\u233\'e9cution continue \u224\'e0 la premi\u232\'e8re instruction de la sous-routine. Cette instruction est l'opcode de l'adresse cible calcul\u233\'e9 \u224\'e0 l'\u233\'e9tape pr\u233\'e9c\u233\'e9dente. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La version call disp}{\rtlch \ltrch\sub\loch
16}{\loch
 utilise un adressage relatif. Vous pouvez obtenir l'adresse effective de la cible en additionnant ce d\u233\'e9placement de 16 bits avec l'adresse de retour (comme l'instruction jmp relative, le d\u233\'e9placement est la distance entre l'instruction qui }{\rtlch \ltrch\i\loch
suit}{\loch
 l'appel et l'adresse cible). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La version call adrs}{\rtlch \ltrch\sub\loch
32}{\loch
 utilise le mode d'adressage direct. Une adresse segment\u233\'e9e de 32 bits suit imm\u233\'e9diatement l'opcode de call. Cette version copie cette valeur directement dans la paire de registres cs:ip. Sur beaucoup d'aspects, ceci est \u233\'e9quivalent au mode d'adressage imm\u233\'e9diat, puisque la valeur que cette instruction copie dans cs:ip suit imm\u233\'e9diatement l'instruction. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La version call mem}{\rtlch \ltrch\sub\loch
16}{\loch
 utilise le mode d'adressage indirect. Comme l'instruction jmp, cette forme de call charge le mot \u224\'e0 l'emplacement de m\u233\'e9moire sp\u233\'e9cifi\u233\'e9 et utilise la valeur de ce mot en tant qu'adresse cible. Souvenez-vous, vous pouvez utiliser }{\rtlch \ltrch\i\loch
tout}{\loch
 mode d'adressage de m\u233\'e9moire avec cette instruction. Le mode d'adressage de d\u233\'e9placement seul en constitue la forme la plus commune, mais les autres sont tout aussi valides :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab CallTbl[bx]\tab ;}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
Index d'un tableau de pointeurs}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
call\tab word ptr[bx]\tab ;BX pointe sur le mot \u224\'e0 utiliser}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab WordTbl[bx][si]\tab ;etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que le choix du mode d}{\rtlch \ltrch\lang3084\loch
'adressage affecte uniquement le calcul de l'adresse r\u233\'e9elle pour la sous-routine cible. Ces instructions d'appel poussent encore l'offset de l'instruction suivant l'appel. Puisqu'il s'agit d'appels proches (car ils obtiennent leur adresse cible d'un emplacement de m\u233\'e9moire de 16 bits), ils poussent tous l'adresse de retour de 16 bits dans la pile. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Call reg}{\rtlch \ltrch\sub\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
 fonctionne juste comme l'appel indirect ci-dessus, sauf qu'il utilise la valeur de 16 bits dans un registre pour l'adresse cible. Cette version est v\u233\'e9ritablement \u233\'e9quivalente \u224\'e0 call mem}{\rtlch \ltrch\sub\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
. Les deux formes sp\u233\'e9cifient leur adresse effective en utilisant un octet mod-reg-r/m. Pour la version call reg}{\rtlch \ltrch\sub\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
 les bits de mod contiennent 11b, donc le champ r/m sp\u233\'e9cifie un registre au lieu d'un mode d'adressage en m\u233\'e9moire. Naturellement, cette instruction pousse aussi l'offset de 16 bits de l'instruction suivante dans la pile comme adresse de retour. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Call mem}{\rtlch \ltrch\sub\lang3084\loch
32}{\rtlch \ltrch\lang3084\loch
 est un appel indirect de 32 bits. L'adresse de m\u233\'e9moire sp\u233\'e9cifi\u233\'e9e par cette instruction doit \u234\'eatre une valeur de type double word. Cette forme de l'instruction call charge l'adresse segment\u233\'e9e de 32 bits \u224\'e0 son adresse physique correspondante et copie la valeur dword dans la paire cs:ip. Elle copie \u233\'e9galement dans la pile l'adresse segment\u233\'e9e de 32 bits de l'instruction suivante (en poussant d'abord la valeur de segment et ensuite celle de l'offset). Comme l'instruction call mem}{\rtlch \ltrch\sub\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
, vous pouvez utiliser tout mode d'adressage valide : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab DWordVar}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
call\tab DWordTbl}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
[bx]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
call\tab dword ptr[bx]}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab etc.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Synth}{\rtlch \ltrch\lang3084\loch
\u233\'e9tiser l'instruction call \u224\'e0 l'aide de deux ou trois autres instructions est relativement facile. Vous pouvez r\u233\'e9aliser l'\u233\'e9quivalent d'un call proche en utilisant une instruction push et une instruction jmp. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
push\tab <offset de l'instruction apr\u232\'e8s jmp>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab sous-routine}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Et un appel far serait similaire, vous auriez juste besoin d'ajouter un push cs avant des deux instructions ci-dessus, de fa\u231\'e7on \u224\'e0 pousser une adresse de retour far dans la pile. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction ret retourne le contr\u244\'f4le au code appelant de la sous-routine. Elle fait ceci en d\u233\'e9pilant l'adresse de retour de la pile et en transf\u233\'e9rant le contr\u244\'f4le du programme \u224\'e0 l'instruction correspondant \u224\'e0 cette adresse de retour. Les retours intrasegment (near) }{\rtlch \ltrch\lang3084\loch
enl\u232\'e8vent}{\loch
 }{\rtlch \ltrch\lang3084\loch
de la pile }{\loch
une adresse de retour de 16 bits et la placent dans le registre ip, alors que les retours intersegment (far) }{\rtlch \ltrch\lang3084\loch
enl\u232\'e8vent de la pile}{\loch
 un offset de 16 bits }{\rtlch \ltrch\lang3084\loch
et le placent dans}{\loch
 le registre ip et }{\rtlch \ltrch\lang3084\loch
il placent }{\loch
ensuite une valeur de segment vers le registre cs. Ces instructions \u233\'e9quivalent effectivement \u224\'e0 : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retn:\tab \tab pop\tab ip}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
retf:\tab \tab popd\tab cs:ip}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Evidemment, les appels }{\rtlch \ltrch\lang3084\loch
\u224\'e0 des sous-routines }{\rtlch\ai \ltrch\lang3084\i\loch
near}{\loch
 doivent correspondre \u224\'e0 des retours }{\rtlch\ai \ltrch\lang3084\i\loch
near}{\loch
 et les appels \u224\'e0 des sous-routines }{\rtlch\ai \ltrch\lang3084\i\loch
far}{\loch
 doivent correspondre \u224\'e0 des retours }{\rtlch\ai \ltrch\lang3084\i\loch
far}{\loch
. Si vous m\u233\'e9langez les appels }{\rtlch \ltrch\i\loch
near}{\loch
 avec des retours }{\rtlch \ltrch\i\loch
far}{\loch
 ou vice-versa, vous laisserez la pile dans un \u233\'e9tat incoh\u233\'e9rent et vous }{\rtlch \ltrch\i\loch
ne}{\loch
 }{\rtlch \ltrch\i\loch
retournerez probablement pas}{\loch
 \u224\'e0 }{\rtlch \ltrch\lang3084\loch
l\u8217\'92adresse o\u249\'f9 il se trouvait l\u8217\'92instruction suivante avant l\u8217\'92appel}{\loch
. Bien s\u251\'fbr, une autre question importante sur l'usage des instructions ret et call est qu'il faut s'assurer de ne pas pousser quelque chose dans la pile et ensuite oublier de le }{\rtlch \ltrch\lang3084\loch
d\u233\'e9sempiler}{\loch
 avant de retourner au code appelant. En assembleur, les probl\u232\'e8mes de pile sont la cause principale des erreurs dans les sous-routines. Consid\u233\'e9rez le code suivant : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Sous-routine\tab push\tab ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab push\tab bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab pop\tab bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ret}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab call\tab Sous-routine}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction call pousse l'adresse de retour dans la pile et,}{\rtlch \ltrch\lang3084\loch
 ensuite, elle }{\loch
transf\u232\'e8re le contr\u244\'f4le \u224\'e0 la premi\u232\'e8re instruction de la sous-routine. Les deux premiers push empilent ax et bx afin de pr\u233\'e9server leur valeur, parce que la sous-routine les modifiera. Malheureusement, il y a une erreur de programmation, car la sous-routine }{\rtlch \ltrch\lang3084\loch
d\u233\'e9sempile}{\loch
 seulement bx et oublie de le faire avec ax. Cela veut dire que, quand la sous-routine tentera de retourner au code appelant, ce sera la valeur de ax et non l'adresse de retour qui se trouve}{\rtlch \ltrch\lang3084\loch
ra}{\loch
 au sommet de la pile. Par cons\u233\'e9quent, la sous-routine retourne le contr\u244\'f4le \u224\'e0 l'adresse sp\u233\'e9cifi\u233\'e9e par la valeur initiale de ax, avec des r\u233\'e9sultats impr\u233\'e9visibles. Puisque ax peut avoir 65536 valeurs diff\u233\'e9rentes, il y a une probabilit\u233\'e9 de 1/65536 que la valeur de ax corresponde \u224\'e0 la bonne adresse de retour et la chance ici ne joue pas en votre faveur !  Il est plus que probable qu'un tel code plante la machine. Morale de l'histoire :  vous devez toujours vous assurer que l'adresse de retour soit dans la t\u234\'eate de la pile avant d'ex\u233\'e9cuter l'instruction de retour. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme l'instruction call, c'est tr\u232\'e8s facile de simuler ret \u224\'e0 l'aide de deux instructions 80x86. Tout ce dont vous avez besoin est de }{\rtlch \ltrch\lang3084\loch
d\u233\'e9sempiler}{\loch
 l'adresse de retour et de la copier dans le registre ip. Pour des op\u233\'e9rations de retour de type }{\rtlch \ltrch\i\loch
near}{\loch
, cette op\u233\'e9ration est tr\u232\'e8s simple, il vous suffira de retirer cette adresse de retour de la pile et de faire un saut indirect \u224\'e0 travers ce registre : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab pop\tab ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp \tab ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Simuler un retour far est un peu plus difficile, car vous devez charger cs:ip en une seule op\u233\'e9ration. La seule instruction capable de le faire (sans compter un ret }{\rtlch \ltrch\i\loch
far}{\loch
 naturellement) est jmp mem}{\rtlch \ltrch\sub\loch
32}{\loch
. Voyez les exercices \u224\'e0 la fin de ce chapitre pour plus de d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a deux autres versions de l'instruction ret. Elles sont identiques \u224\'e0 celles d\u233\'e9crites ci-dessus, sauf qu'un d\u233\'e9placement de 16 bits suit leur opcode. Le CPU additionne cette valeur au pointeur de pile imm\u233\'e9diatement apr\u232\'e8s avoir d\u233\'e9sempil\u233\'e9 l'adresse de retour. Ce m\u233\'e9canisme supprime les param\u232\'e8tres pouss\u233\'e9s dans la pile avant de retourner au code appelant. Voir le paragraphe 11.5.9 pour plus de d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'assembleur vous permet de taper ret sans les suffixes "f" ou "n". Si vous le faites, l'assembleur saura s'il s'agit d'un retour far ou near. Regardez le chapitre sur les proc\u233\'e9dures et les fonctions pour plus de d\u233\'e9tails. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s INT, INTO, BOUND et IRET}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction int (}{\rtlch \ltrch\i\loch
software interrrupt}{\loch
) est une forme tr\u232\'e8s sp\u233\'e9ciale d'instruction call. Alors que call appelle des sous-routines \u224\'e0 l'int\u233\'e9rieur de votre programme, int, pour sa part, appelle les routines du syst\u232\'e8me et d'autres sous-routines sp\u233\'e9ciales. La diff\u233\'e9rence majeure entre les }{\rtlch \ltrch\i\loch
routines d'interruption de service}{\loch
 et les proc\u233\'e9dures standard est que vous pouvez avoir n}{\rtlch \ltrch\lang3084\loch
'}{\loch
importe quel nombre de proc\u233\'e9dures diff\u233\'e9rentes dans un programme, alors que le syst\u232\'e8me supporte au plus 256 routines de services d'interruption diff\u233\'e9rentes. Un programme appelle une sous-routine en sp\u233\'e9cifiant l'}{\rtlch \ltrch\i\loch
adresse}{\loch
 de celle-ci ; alors qu'il appelle une routine d'interruption de service en sp\u233\'e9cifiant le }{\rtlch \ltrch\i\loch
num\u233\'e9ro d'interruption}{\loch
 particulier de cette routine. Ce chapitre d\u233\'e9crira seulement comment appeler une routine d'interruption de service en utilisant les instructions int, into et bound et comment retourner d'une de ces routines en utilisant l'instruction iret. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a quatre versions diff\u233\'e9rentes de l'instruction int. La premi\u232\'e8re est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab nn}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
(o\u249\'f9 }{\rtlch \ltrch\i\loch
nn}{\loch
 est une valeur entre 0 et 255). Elle permet d'appeler une routine d'interruption parmi les 256 disponibles. Cette forme de l'instruction int a une longueur de 2 octets : le premier est l'opcode et le second est la donn\u233\'e9e imm\u233\'e9diate contenant le num\u233\'e9ro d'interruption. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 utiliser l'instruction int pour appeler des proc\u233\'e9dures (routines d'interruption de service)  }{\rtlch \ltrch\lang3084\loch
\u233\'e9crites par vous}{\loch
, le but primaire de cette instruction est de r\u233\'e9aliser un }{\rtlch \ltrch\i\loch
appel syst\u232\'e8me}{\loch
. Un appel syst\u232\'e8me n'est autre chose qu'un appel de sous-routine fournie par un syst\u232\'e8me comme DOS, PC-BIOS}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
BIOS est un acronyme pour "Basic Input/Output System". }
}}
}{\loch
, souris ou quelque autre logiciel r\u233\'e9sidant dans la machine avant le commencement de l'ex\u233\'e9cution de votre programme. Puisqu'on se r\u233\'e9f\u232\'e8re toujours \u224\'e0 un appel de syst\u232\'e8me via son num\u233\'e9ro d'interruption, au lieu de son adresse en m\u233\'e9moire, votre programme n'a donc pas besoin de conna\u238\'eetre l'adresse en m\u233\'e9moire de la sous-routine. L'instruction int fournit une }{\rtlch \ltrch\i\loch
liaison dynamique}{\loch
 \u224\'e0 votre programme. Le CPU d\u233\'e9termine l'adresse r\u233\'e9elle du service d'interruption pendant l'ex\u233\'e9cution en consultant une }{\rtlch \ltrch\i\loch
table de vecteurs d'interruption}{\loch
, ce qui permet aux programmeurs des sous-routines syst\u232\'e8me de changer leur code (y compris le point d'entr\u233\'e9e) sans crainte d'affecter aucun programme \u233\'e9crit avant le changement. Tant que le syst\u232\'e8me continuera \u224\'e0 utiliser le m\u234\'eame num\u233\'e9ro d'interruption, le CPU appellera automatiquement le service d'interruption \u224\'e0 sa nouvelle adresse. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le seul probl\u232\'e8me avec l'instruction int est qu'elle supporte seulement 256 routines d'interruption diff\u233\'e9rentes. Rien que le MS-DOS supporte plus de 100 appels. Le BIOS et les autres syst\u232\'e8mes en fournissent des milliers. Ce qui d\u233\'e9passe largement le nombre de toutes les interruptions r\u233\'e9serv\u233\'e9es par Intel. Une solution commune utilis\u233\'e9e par la plupart des appels syst\u232\'e8me est d'utiliser un num\u233\'e9ro unique d'interruption pour une classe donn\u233\'e9e d'appels et ensuite passer un num\u233\'e9ro de fonction dans l'un des registres 80x86 (en g\u233\'e9n\u233\'e9ral, le registre ah). Par exemple, MS-DOS utilise un seul num\u233\'e9ro d'interruption , 21h. Pour choisir une fonction particuli\u232\'e8re du DOS, vous chargez un }{\rtlch \ltrch\i\loch
code de fonction DOS}{\loch
 dans le registre ah avant d'ex\u233\'e9cuter l'instruction int 21h. Par exemple, pour mettre fin \u224\'e0 un programme et retourner le contr\u244\'f4le \u224\'e0 MS-DOS, on charge ah avec 4Ch et on appele le DOS avec l'instruction int 21h :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ah, 4ch\tab \tab ;Opcode de fin du DOS}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab 21h\tab \tab ;Appel au DOS}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'interruption de clavier du BIOS est un autre bon exemple. }{\rtlch\ai \ltrch\lang3084\i\loch
int}{\rtlch\ai \ltrch\i\loch
 16h }{\loch
est responsable de tester le clavier et de lire la donn\u233\'e9e depuis celui-ci. La routine du BIOS fournit plusieurs appels pour lire un caract\u232\'e8re et capturer du code depuis le clavier, }{\rtlch \ltrch\lang3084\loch
pour }{\loch
voir si des caract\u232\'e8res sont disponibles dans le tampon syst\u232\'e8me de frappe (type ahead buffer),}{\rtlch \ltrch\lang3084\loch
 }{\loch
v\u233\'e9rifier l'\u233\'e9tat des flags du clavier et ainsi de suite. Pour choisir une op\u233\'e9ration sp\u233\'e9cifique, vous chargez le num\u233\'e9ro de fonction dans le registre ah avant d'ex\u233\'e9cuter int 16h. Le tableau qui suit, \u233\'e9num\u232\'e8re les fonctions possibles : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 31 : fonctions du clavier support\u233\'e9es par le BIOS}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Num\u233\'e9ro de fonction (AH)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Param\u232\'e8tres d'entr\u233\'e9e}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Param\u232\'e8tres de sortie}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Description}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
al - caract\u232\'e8re ASCII\line ah - code capture de frappe (scan code)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Lit un caract\u232\'e8re. Lit le caract\u232\'e8re suivant disponible du tampon syst\u232\'e8me de frappe. Attend une frappe (keystroke}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Notez qu'il y a une diff\u233\'e9rence entre un caract\u232\'e8re et un keystroke (}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
frappe}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
, litt\u233\'e9ralement) ; un caract\u232\'e8re est simplement un code ASCI}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
I}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
, alors qu'un keystroke n'est autre chose que le code num\u233\'e9rique de chaque touche du clavier de l'ordinateur, n.d.t.}
}}
}{\loch
) si le tampon est vide.  }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa0{\loch
ZF - activ\u233\'e9 si pas de frappe disponible. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
ZF - d\u233\'e9sactiv\u233\'e9 si frappe disponible. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
AL : code ASCII\line AH : code capture de frappe}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
V\u233\'e9rifie si un caract\u232\'e8re est disponible dans le tampon de caract\u232\'e8res. Active le flag z\u233\'e9ro s'il n'y a pas de touche disponible. S'il y en a une, alors la fonction retourne le code ASCII et le code de capture dans ax. Cette valeur de ax reste ind\u233\'e9finie s'il n'y a pas de touche disponible. }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
2}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
AL - shift flags}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Retourne dans al, l'\u233\'e9tat courant des shift flags. Ces flags sont d\u233\'e9finis comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 7 : \u233\'e9tat de Insert}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 6 : \u233\'e9tat de Capslock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 5 : \u233\'e9tat de Numlock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 4 : \u233\'e9tat de Scroll lock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 3 : alt press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 2 : ctrl press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 1 : shift gauche press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 0 : shift droit press\u233\'e9}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
3}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa0{\loch
al = 5}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb0\sa60{\loch
bh = 0, 1, 2, 3 pour un d\u233\'e9lai de \u188\'bc, \u189\'bd, \u190\'be ou 1 seconde. bl=0..1Fh pour 30/sec \u224\'e0 2/sec. }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
D\u233\'e9finit un d\u233\'e9bit de r\u233\'e9p\u233\'e9tition automatique}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
C.-\u224\'e0.-d. le d\u233\'e9bit de r\u233\'e9p\u233\'e9tition d'affichage d'un caract\u232\'e8re quand on maintient une touche press\u233\'e9e, n.d.t.}
}}
}{\loch
. Le registre bh contient le temps \u233\'e9coul\u233\'e9 avant la frappe d'une touche et l'op\u233\'e9ration de r\u233\'e9p\u233\'e9tition automatique, alors que le registre bl contient le d\u233\'e9bit de r\u233\'e9p\u233\'e9tition automatique. }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
5}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
ch = code de capture frappe}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
cl = code ASCII }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Garde le code d'une touche dans le tampon. Cette fonction garde cette valeur dans le registre cx \u224\'e0 la fin du tampon. Notez que le code de capture de frappe dans ch n'a pas \u224\'e0 correspondre au code ASCII qui appara\u238\'eet dans cl. Cette routine ins\u233\'e9rera simplement la donn\u233\'e9e que vous fournissez dans le tampon syst\u232\'e8me de frappe. }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
10h }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa0{\loch
al - caract\u232\'e8re ASCII}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb0\sa60{\loch
ah - code de capture frappe}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Lit un caract\u232\'e8re \u233\'e9tendu. Comme l'appel ah=0, sauf que celui-ci passe tous les codes de touches, alors que l'appel ah=0}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Il y avait ah=0 dans l'original, mais il s'agit d'une erreur, n.d.t.}
}}
}{\loch
 rejette les codes qui ne sont pas compatibles avec le PC/XT. }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
11h}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
ZF - activ\u233\'e9 si pas de touche}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
ZF -  d\u233\'e9sactiv\u233\'e9 si touche disponible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
al - code ASCII}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
ah - code de capture frappe}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Semblable \u224\'e0 l'appel ah = 01h, mais ah=11h ne rejette pas les codes qui ne sont pas compatibles avec PC/XT (c'est-\u224\'e0-dire les touches additionnelles trouv\u233\'e9es dans un clavier \u224\'e0 101 touches). }\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3179\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5092\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
12h}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
al : shift flags\line ah : shift flags \u233\'e9tendus}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142\sb60\sa60{\loch
Retourne l'\u233\'e9tat courant des shift flags dans ax. Ils sont d\u233\'e9finis comme suit : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 15 : frapp\u233\'e9 SysReq}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 14 : Capslock actuellement press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 13 : Numlock actuellement press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 12 : Scroll lock actuellement press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 11 : Alt droit press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 10 : Ctrl droit press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 9 : Alt gauche press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 8 : Ctrl gauche press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 7 : \u233\'e9tat de Insert}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 6 : \u233\'e9tat de Capslock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 5 : \u233\'e9tat de Numlock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 4 : \u233\'e9tat de Scroll lock}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 3 : un des deux Alt press\u233\'e9s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 2 : un des deux Ctrl press\u233\'e9s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 1 : Shift gauche press\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\ql\tx-142{\loch
bit 0 : Shift droit press\u233\'e9}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Noter que ces codes sont l\u233\'e9g\u232\'e8rement diff\u233\'e9rents par rapport \u224\'e0 ceux de l'appel ah=2, car il s'agit d'une fonction diff\u233\'e9rente, n.d.t.}
}}
}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\loch
Par exemple, pour lire un caract\u232\'e8re du tampon syst\u232\'e8me de frappe et laisser le code ASCII dans al, vous pouvez utiliser le code suivant : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ah, 0\tab \tab ;attendre pour une touche disponible, }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab 16h\tab \tab ;puis lire cette touche}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab caractere, al\tab ;Enregistrer le caract\u232\'e8re lu}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
De m\u234\'eame, si vous d\u233\'e9sirez tester le tampon syst\u232\'e8me de frappe pour voir si une touche est disponible, }{\rtlch \ltrch\i\loch
mais sans lire le keystroke (code de frappe)}{\loch
, vous pouvez utiliser le code suivant : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ah, 1\tab \tab ;Tester si une touche est disponible. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab 16h\tab \tab ;Activer le z\u233\'e9ro flag si cette touche}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab ;n'est pas disponible. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour plus d'informations \u224\'e0 propos du BIOS et du MS-DOS voir le d\u233\'e9but du chapitre 13. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde forme de l'instruction int constitue un cas sp\u233\'e9cial : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab 3}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
int 3 est une forme sp\u233\'e9ciale d'instruction d'interruption qui a seulement un octet de taille. CodeView et d'autres d\u233\'e9bogueurs l'utilisent comme instruction de point d'arr\u234\'eat. Chaque fois que vous voyez un point d'arr\u234\'eat sur une instruction de votre programme, le d\u233\'e9bogueur est en train de remplacer le premier octet de l'opcode de l'instruction par l'instruction int 3. Quand votre programme ex\u233\'e9cute int 3, il effectue un "appel syst\u232\'e8me" au d\u233\'e9bogueur, de fa\u231\'e7on que celui-ci peut reprendre le contr\u244\'f4le du CPU. Quand cela arrive, le d\u233\'e9bogueur est en train de remplacer l'instruction int 3 par le code original.  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En travaillant avec un d\u233\'e9bogueur, on peut explicitement utiliser l'instruction int 3 pour arr\u234\'eater l'ex\u233\'e9cution du programme et retourner le contr\u244\'f4le au d\u233\'e9bogueur. }{\rtlch \ltrch\i\loch
Il ne s'agit pas pourtant de la fa\u231\'e7on habituelle de terminer un programme}{\loch
. Si vous tentez d'ex\u233\'e9cuter int 3 dans le DOS, au lieu de le faire sous le contr\u244\'f4le d'un d\u233\'e9bogueur, vous avez de grandes chances de }{\rtlch \ltrch\lang3084\loch
planter}{\loch
 le syst\u232\'e8me. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La troisi\u232\'e8me forme de l'instruction int est into. Cette instruction provoque un point d'arr\u234\'eat }{\rtlch \ltrch\lang3084\loch
dans le programme }{\loch
seulement si le drapeau overflow est activ\u233\'e9. Vous pouvez vous }{\rtlch \ltrch\lang3084\loch
en }{\loch
servir pour tester rapidement un d\u233\'e9passement de capacit\u233\'e9 arithm\u233\'e9tique apr\u232\'e8s avoir effectu\u233\'e9 une op\u233\'e9ration arithm\u233\'e9tique. S\u233\'e9mantiquement, cette instruction est \u233\'e9quivalente \u224\'e0 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab if overflow = 1 then int 4}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il ne faudrait pas }{\rtlch \ltrch\lang3084\loch
utiliser}{\loch
 cette instruction sans lui avoir fourni un traitement d'interruption,}{\rtlch \ltrch\lang3084\loch
 car on risque encore une fois de planter le syst\u232\'e8me}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La quatri\u232\'e8me interruption logicielle, fournie par des processeurs 80286 et sup\u233\'e9rieurs est l'instruction bound. Cette instruction a la syntaxe : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab bound \tab reg, mem}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
et ex\u233\'e9cute l'algorithme suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab if (reg < [mem]) or (reg > [mem+sizeof(reg)]) then int 5}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\i\loch
mem}{\loch
 signifie }{\rtlch \ltrch\lang3084\loch
que }{\loch
le contenu d'un emplacement de m\u233\'e9moire et sizeof(reg) vaut deux ou quatre selon que le registre est de 16 ou 32 bits. L'op\u233\'e9rande de m\u233\'e9moire doit avoir le double de la taille de l'op\u233\'e9rande de registre. Cette instruction en compare les valeurs via une comparaison enti\u232\'e8re }{\rtlch \ltrch\i\loch
sign\u233\'e9e}{\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les concepteurs d'Intel }{\rtlch \ltrch\lang3084\loch
l\u8217\'92}{\loch
ont ajout\u233\'e9}{\rtlch \ltrch\lang3084\loch
e}{\loch
 pour permettre une v\u233\'e9rification rapide de la plage d'une valeur dans un registre. Ceci est utile pour Pascal, par exemple, qui v\u233\'e9rifie la validit\u233\'e9 des limites des tableaux et \u233\'e9galement si un entier donn\u233\'e9 (aka un index) fait partie de cette plage. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cependant, il y a deux probl\u232\'e8mes avec }{\rtlch \ltrch\lang3084\loch
l\u8217\'92}{\loch
instruction}{\rtlch \ltrch\lang3084\loch
 bound }{\loch
: dans des processeurs 80486 et Pentium/586, }{\rtlch \ltrch\lang3084\loch
elle}{\loch
 est g\u233\'e9n\u233\'e9ralement plus lente que la s\u233\'e9quence d'instructions qu'elle devrait remplacer}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
La prochaine section d\u233\'e9crit les instructions }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\b\loch
jg}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 et }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\b\loch
jl}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
. }
}}
}{\loch
 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp \tab reg, limInferieure}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jl\tab horsDesLimites}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab reg, limSuperieure}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jg\tab horsDesLimites}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sur les pouces 80486 et Pentium/586, la s\u233\'e9quence qu'on vient de voir requiert seulement qutre cycles d'horloge, en supposant que vous pouvez utiliser le mode d'adressage direct et qu'aucun branchement n'ait lieu}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
G\u233\'e9n\u233\'e9ralement on s'attend que les cas de violations de limites des tableaux sont tr\u232\'e8s rares. }
}}
}{\rtlch \ltrch\cs17\super\super\loch
 }{\loch
;l'instruction bound requiert 7-8 cycles d'orloge dans des circonstances semblables et en supposant aussi que les op\u233\'e9randes de m\u233\'e9moire sont dans le cache. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le second probl\u232\'e8me de cette instruction est qu'elle ex\u233\'e9cute une interruption int 5 si une violation de limites se produit. IBM, dans sa sagesse infinie, a d\u233\'e9cid\u233\'e9 d'utiliser le traitement de routine d'interruption int 5 pour faire une capture d'\u233\'e9cran. Donc, si vous ex\u233\'e9cutez une instruction bound et que la valeur est hors des limites du tableau, le syst\u232\'e8me imprimera, par d\u233\'e9faut, une copie de l'\u233\'e9cran via l'imprimante. Si vous remplacez le traitement par d\u233\'e9faut int 5 par un de vos propres traitements, le fait de presser la touche PrtSc transf\u233\'e9rera le contr\u244\'f4le \u224\'e0 votre traitement bound. Bien qu'il y a des moyens de contourner ce probl\u232\'e8me, beaucoup de gens ne se pr\u233\'e9occupent pas de bound, compte tenu aussi de sa lenteur. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Toute ex\u233\'e9cution d'une instruction int quelconque d\u233\'e9clenche les \u233\'e9v\u233\'e9nements suivants : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Le syst\u232\'e8me }{\loch
empile le registre flag}{\rtlch \ltrch\lang3084\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Puis, il }{\loch
empile aussi }{\rtlch\ai \ltrch\lang3084\i\loch
cs}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch\ai \ltrch\lang3084\i\loch
ip}{\rtlch \ltrch\lang3084\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Puis, }{\loch
il}{\rtlch \ltrch\lang3084\loch
 utilise le num\u233\'e9ro d'interruption (l'instruction into est l'interruption n.4 et bound }{\loch
est }{\rtlch \ltrch\lang3084\loch
l'interruption n.5), multipli\u233\'e9 par quatre en tant qu'index dans la table des vecteurs d'interruption, ensuite, il copie le double-mot correspondant \u224\'e0 cet index de la table dans cs:ip. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction int diff\u232\'e8re d'une instruction call en deux points majeurs. Avant tout, les instructions d'appel ont des longueurs allant de deux \u224\'e0 six octets, alors que les instructions int ont g\u233\'e9n\u233\'e9ralement une longueur de deux octets (les exceptions \u224\'e0 cette r\u232\'e8gle sont int 3, into et bound). Ensuite, et surtout, elles placent les flags et les adresses de retour dans la pile alors qu'une instruction call pousse uniquement l'adresse de retour. Notez aussi que les instructions int empilent toujours une adresse de retour de type }{\rtlch \ltrch\i\loch
far}{\loch
 (c.-\u224\'e0.-d. une valeur cs et un offset dans le segment de code), alors que seul un }{\rtlch\ai \ltrch\i\loch
call}{\loch
 de type }{\rtlch \ltrch\i\loch
far}{\loch
 empile une adresse de retour de 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque }{\rtlch\ai \ltrch\i\loch
int}{\loch
 place le registre }{\rtlch\ai \ltrch\i\loch
flags }{\loch
dans la pile, il faut utiliser une instruction de retour sp\u233\'e9ciale : iret (}{\rtlch \ltrch\i\loch
interrupt return}{\loch
), pour revenir (return) d'une routine appel\u233\'e9e via des instructions int. Si vous revenez d'une proc\u233\'e9dure d'interruption via l'instruction ret, }{\rtlch\ai \ltrch\i\loch
flags }{\loch
sera laiss\u233\'e9 dans la pile lors du retour \u224\'e0 l'appelant. L'instruction iret est \u233\'e9quivalente aux deux s\u233\'e9quences ret et popf (en pr\u233\'e9sumant, bien s\u251\'fbr, que vous ex\u233\'e9cutez popf avant de retourner le contr\u244\'f4le \u224\'e0 l'adresse point\u233\'e9e par le double-mot au sommet de la pile). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions int nettoient le drapeau de trace (T) du registre }{\rtlch\ai \ltrch\i\loch
flags}{\loch
. Elles n'affectent aucun autre drapeau. L'instruction iret, par sa propre nature, peut affecter tous les drapeaux, puisqu'elle les d\u233\'e9pile.    }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_09_04}{\*\bkmkend p6_09_04}\rtlch \ltrch\fs23\b\loch
6.9.4\tab Sauts conditionnels}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que les instructions jmp, call et ret permettent le transfert de contr\u244\'f4le, elle}{\rtlch \ltrch\lang3084\loch
s}{\loch
 }{\rtlch \ltrch\lang3084\loch
ne sont pas suffisantes pour couvrir tous les cas de d\u233\'e9cisions possibles}{\loch
. Les instructions de saut conditionnel }{\rtlch \ltrch\lang3084\loch
compl\u232\'e8tent le cadre}{\loch
. Les sauts conditionnels sont l'outil de base pour cr\u233\'e9er des boucles et d'autres instructions d'ex\u233\'e9cution conditionnelle comme if..then. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces sauts testent un ou plusieurs }{\rtlch \ltrch\lang3084\loch
drapeaux}{\loch
 }{\rtlch \ltrch\lang3084\loch
du }{\loch
registre }{\rtlch\ai \ltrch\lang3084\i\loch
f}{\rtlch\ai \ltrch\i\loch
lags }{\loch
pour voir s'ils }{\rtlch \ltrch\lang3084\loch
r\u233\'e9pondent \u224\'e0 un \u233\'e9tat particulier }{\loch
(tout comme les instructions set}{\rtlch \ltrch\i\loch
cc}{\loch
). Si }{\rtlch \ltrch\lang3082\loch
celui-ci }{\loch
correspond, le contr\u244\'f4le est transf\u233\'e9r\u233\'e9 \u224\'e0 l'emplacement cibl\u233\'e9. S'il \u233\'e9choue, le CPU ignore le saut conditionnel et l'ex\u233\'e9cution continue}{\rtlch \ltrch\lang3084\loch
ra}{\loch
 avec la prochaine instruction }{\rtlch \ltrch\lang3084\loch
apr\u232\'e8s le saut}{\loch
. Certaines instructions }{\rtlch \ltrch\lang3084\loch
peuvent tester }{\loch
des conditions pour les drapeaux }{\rtlch\ai \ltrch\i\loch
sign}{\loch
, }{\rtlch\ai \ltrch\i\loch
carry}{\loch
, }{\rtlch\ai \ltrch\i\loch
overflow}{\loch
 et }{\rtlch\ai \ltrch\i\loch
zero}{\loch
. Par exemple, apr\u232\'e8s l'ex\u233\'e9cution d'une instruction de d\u233\'e9calage \u224\'e0 gauche, vous }{\rtlch \ltrch\lang3084\loch
pouvez interroger le }{\loch
drapeau }{\rtlch\ai \ltrch\i\loch
carry}{\loch
 pour d\u233\'e9terminer si le bit d\u233\'e9bordant \u233\'e9tait 1. De m\u234\'eame, vous pouvez tester la condition du drapeau z\u233\'e9ro apr\u232\'e8s une instruction de test pour v\u233\'e9rifier si des bits sp\u233\'e9cifiques \u233\'e9taient \u224\'e0 1. La plupart du temps, cependant, vous ex\u233\'e9cuterez un saut conditionnel apr\u232\'e8s une instruction de comparaison. }{\rtlch\ai \ltrch\i\loch
cmp}{\loch
 modifie les flags de mani\u232\'e8re \u224\'e0 pouvoir tester les conditions "plus petit que", "plus grand que", "}{\rtlch \ltrch\lang3084\loch
\u233\'e9gal", etc. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Note : la documentation Intel d\u233\'e9finit divers synonymes ou alias pour diverses instructions de saut conditionnel. Les tables suivantes montrent tous les alias pour une instruction particuli\u232\'e8re. Ces tables montrent aussi le cas de branchement oppos\u233\'e9. Vous en verrez bient\u244\'f4t l'utilit\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Table 32 : instructions J}{\rtlch \ltrch\lang3084\i\b\loch
cc}{\rtlch \ltrch\lang3084\b\loch
 qui testent les flags}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Description}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Condition}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Alias}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Oppos\u233\'e9}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JC}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if carry}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JB, JNAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNC}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNC}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not carry}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNB, JAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JC}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if zero}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNZ}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not zero}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JZ}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JS}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if sign}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNS}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNS}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if no sign}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JS}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Overflow=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNO}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if no overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Overflow=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\loch
\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JO}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if parity}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Parity=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNP}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if parity even}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Parity=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPO}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if no parity}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Parity=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JP}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3423\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5194\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6966\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPO}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if parity odd}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Parity=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNP}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JPE}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 33 : instructions J}{\rtlch \ltrch\i\b\loch
cc}{\loch
 pour comparaisons non sign\u233\'e9es}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Description}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Condition}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Alias}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Oppos\u233\'e9}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if above (>)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNA}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not below or equal (not <=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JBE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if above or equal (>=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNC, JNB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not below (not <)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNC, JAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JB}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if below (<)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JC, JNAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNB}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNAE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not above or equal (not >=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JC, JB}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JAE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if below or equal (<=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=1 ou}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNBE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNA}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not above (not >)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Carry=1 ou}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JBE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JA}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if equal (=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1265\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4385\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7286\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not equal (}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JE}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\qc\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\rtlch \ltrch\b\loch
Table 34: instructions J}{\rtlch \ltrch\i\b\loch
cc}{\loch
 pour comparaisons sign\u233\'e9es}
\par \trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
instruction}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Description}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Condition}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Alias}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142\sb60\sa60{\loch
Oppos\u233\'e9}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if greater (>)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=Overflow ou Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNG}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not less than or equal (not <=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=Overflow ou Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JLE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if greater than or equal (>=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JGE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not less than (not <)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign=Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JL}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if less than (<)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNL}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNGE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not greater than or equal (not >=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
Overflow}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JL}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JGE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if less than or equal (<=)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
Overflow ou Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNLE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNG}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not greater than (not >)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Sign}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
Overflow ou Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JLE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JG}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if equal (=) }\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=1}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNE}\cell\row\pard\trowd\trql\trleft-118\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx1123\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx4526\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx5928\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx7333\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalc\cellx8747\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNE}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Jump if not equal (}{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
)}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
Zero=0}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JNZ}\cell\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\intbl\qc\tx-142{\loch
JE}\cell\row\pard\pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb240\sa120{\loch
Sur des processeurs 80286 et ant\u233\'e9rieurs toutes ces instructions ont deux octets de long. Le premier des deux }{\rtlch \ltrch\lang3082\loch
octets }{\loch
est un opcode et le second est un d\u233\'e9placement d'un octet. Bien que cela donne du code compact, toutefois un d\u233\'e9placement d'un octet repr\u233\'e9sente seulement une plage de \u177\'b1128 bits. Il y a un truc simple pour }{\rtlch \ltrch\lang3084\loch
d\u233\'e9tourner}{\loch
 cette limitation sur des processeurs anciens : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Ind\u233\'e9pendamment du jump utilis\u233\'e9, passez \u224\'e0 la version oppos\u233\'e9e (voir les tables ci-dessus). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Une fois que vous avez choisi le branchement oppos\u233\'e9, si la condition oppos\u233\'e9e est fausse alors, faites passer le contr\u244\'f4le sur un jmp que, lui, branche sur la cible \u233\'e9loign\u233\'e9e. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Par exemple, pour convertir : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jc\tab Cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
en forme longue, utilisez la s\u233\'e9quence suivante d'instructions : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jnc\tab sauteSaut\tab ;Si la condition oppos\u233\'e9e est fausse}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab Cible\tab \tab ;alors sauter inconditionnellement}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
nePas}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Saut}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
er}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
:\tab <autres instructions>\tab ;sinon, tout suit normalement}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le drapeau carry est \u224\'e0 z\u233\'e9ro (NC=no carry), le contr\u244\'f4le est transf\u233\'e9r\u233\'e9 \u224\'e0 l'\u233\'e9tiquette }{\rtlch \ltrch\lang3084\loch
nePasSauter}{\loch
 au m\u234\'eame point o\u249\'f9 vous seriez si vous utilisiez jc Cible. Si le flag carry vaut 1 lors de cette s\u233\'e9quence, alors le contr\u244\'f4le est pass\u233\'e9 \u224\'e0 l'instruction jmp, qui ex\u233\'e9cute un saut sur Cible. Puisque l'instruction jmp permet aussi bien un d\u233\'e9placement de 16 bits que des op\u233\'e9randes far, }{\rtlch \ltrch\lang3084\loch
\u224\'e0 travers de }{\loch
cette astuce vous pouvez sauter n'importe o\u249\'f9 dans la m\u233\'e9moire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un bref commentaire sur la colonne "Oppos\u233\'e9" des tables ci-dessus est peut-\u234\'eatre n\u233\'e9cessaire. Comme mentionn\u233\'e9 plus t\u244\'f4t, quand vous avez besoin d'effectuer des branchements d\u233\'e9passant la plage -128..+128 bits, vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 savoir tout de suite quel est le branchement oppos\u233\'e9 en consultant les tables. Vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 \u233\'e9galement constater que diverses instructions de branchement ont des synonymes, ce qui veut dire qu'il y en aura \u233\'e9galement pour des instructions de sauts oppos\u233\'e9s. Mais, }{\rtlch \ltrch\i\loch
n'utilisez pas n'importe quel alias en \u233\'e9tendant un saut pour une branche hors de la plage \u177\'b1128}{\loch
. A deux exceptions pr\u232\'e8s, une r\u232\'e8gle tr\u232\'e8s simple peut d\u233\'e9crire compl\u232\'e8tement comment g\u233\'e9n\u233\'e9rer un branchement oppos\u233\'e9}{\rtlch \ltrch\lang3084\loch
 est celle-ci }{\loch
:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si la seconde lettre d'une instruction j}{\rtlch \ltrch\lang3084\i\loch
cc}{\rtlch \ltrch\lang3084\loch
 n'est pas un "n", alors ins\u233\'e9rez un "n" apr\u232\'e8s le "j". Par exemple, }{\rtlch \ltrch\lang3084\i\loch
je}{\rtlch \ltrch\lang3084\loch
 devient }{\rtlch \ltrch\lang3084\i\loch
jne}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch \ltrch\lang3084\i\loch
jl}{\rtlch \ltrch\lang3084\loch
 devient }{\rtlch \ltrch\lang3084\i\loch
jnl}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab Si la seconde lettre d'une instruction j}{\rtlch \ltrch\lang3084\i\loch
cc}{\rtlch \ltrch\lang3084\loch
 est un "n", alors elevez-le et vous obtiendrez le branchement contraire. Par exemple, jng devinent jg et jne devient je. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Les deux exceptions \u224\'e0 cette r\u232\'e8gle sont jpe (jump pariry even) et jpo (jump parity odd). Mais ces exceptions ne causent pas beaucoup }{\rtlch \ltrch\lang3084\loch
d\u8217\'92ennui}{\loch
, }{\rtlch \ltrch\lang3084\loch
car\~: }{\loch
a) vous ne testez le drapeau de parit\u233\'e9 que rarement et b) vous pouvez parfaitement utiliser les \u233\'e9quivalents jp et jnp au lieu de jpe et jpo. Et la r\u232\'e8gle "N ou Non N" s'applique parfaitement \u224\'e0 jp et jnp. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que vous }{\rtlch \ltrch\lang3084\loch
savez}{\loch
 que jge est l'oppos\u233\'e9 de jl, prenez l'habitude d'utiliser jnl au lieu de jge. Il est trop facile, dans un contexte important, de se dire que "greater est l'oppos\u233\'e9 de less" et de substituer jg au lieu de jge. Vous pouvez \u233\'e9viter cette confusion en utilisant toujours la r\u232\'e8gle "N/Pas de N". }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
MASM 6.x et d'autres assembleurs modernes de type 80x86 convertissent automatiquement des branchements hors plage en la s\u233\'e9quence du branchement oppos\u233\'e9. Il y a une option qui permet de d\u233\'e9sactiver cette caract\u233\'e9ristique. En effet, lors de situations critiques de performance sur des processeurs 80286 ou inf\u233\'e9rieurs, vous voudrez d\u233\'e9sactiver cette option pour ajuster vous m\u234\'eame les branchements hors plage manuellement. La raison en est tr\u232\'e8s simple : cette automatisation vide }{\rtlch \ltrch\i\loch
toujours}{\loch
 la queue de pr\u233\'e9chargement quelle que soit la condition qui est remplie, puisque le CPU saute de toutes fa\u231\'e7ons. Ce qui rend inutile le pipeline. Une bonne utilisation des branchements permet de ne pas vider le pipeline ou la queue de pr\u233\'e9chargement si on ne prend pas le saut. Si une condition se produit beaucoup plus souvent que l'inverse, on pr\u233\'e9f\u232\'e8rera utiliser le saut conditionnel vers un jmp proche, pour continuer \u224\'e0}{\rtlch \ltrch\lang3084\loch
 boucler comme avant}{\loch
. Par exemple, si vous avez une instruction "je cible" et que }{\rtlch \ltrch\i\loch
cible }{\loch
est hors de la plage -128..+128 par rapport au saut, alors, au lieur d'utiliser "je cible", vous feriez mieux de convertir ce code en:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab vaALaCible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab .}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
vaALaCible:\tab jmp\tab cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Bien que maintenant un branchement sur cible requiert deux sauts, c'est beaucoup plus efficace que la conversion standard si le drapeau z\u233\'e9ro vaut r\u233\'e9guli\u232\'e8rement z\u233\'e9ro lors de l'ex\u233\'e9cution de l'instruction je. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 80386 et ult\u233\'e9rieurs fournissent une version \u233\'e9tendue des sauts conditionnels qui fait quatre octets de long (les deux derniers repr\u233\'e9sentant un d\u233\'e9placement de 16 bits). Ces sauts conditionnels permettent de transf\u233\'e9rer le contr\u244\'f4le n'importe o\u249\'f9 dans le segment de code courant. Par cons\u233\'e9quent il n'y a pas \u224\'e0 se pr\u233\'e9occuper d'appliquer la conversion manuelle pour \u233\'e9tendre la plage du saut. Si vous avez indiqu\u233\'e9 \u224\'e0 MASM que vous \u234\'eates en train d'utiliser un processeur 80386 ou sup\u233\'e9rieur, alors la version de quatre octets des instructions de saut sera automatiquement choisie. Regardez le chapitre huit pour apprendre comment le faire. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les sauts conditionnels 80x86 vous permettent de diviser le flux des programmes en un ou deux chemins selon des conditions logiques. Supposez que vous vouliez incr\u233\'e9menter le registre }{\rtlch\ai \ltrch\i\loch
ax,}{\loch
 si }{\rtlch\ai\ab0 \ltrch\i\b0\loch
bx}{\loch
 et }{\rtlch\ai \ltrch\i\loch
cx}{\loch
 sont \u233\'e9gaux. Vous pourriez faire ceci via le code suivant : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab bx, cx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab jne\tab enjamberInc}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab inc\tab ax}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
enjamberInc:\tab <autres instructions>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Ici, il s'agit d'utiliser le branchement }{\rtlch \ltrch\i\loch
oppos\u233\'e9}{\loch
 pour sauter par-dessus les instructions que vous utiliseriez si la condition \u233\'e9tait vraie. Utilisez toujours la r\u232\'e8gle du"N / Non N" pour choisir un branchement oppos\u233\'e9. Vous }{\rtlch \ltrch\lang3084\loch
pouvez commettre ici }{\loch
la m\u234\'eame erreur en choisissant une branche oppos\u233\'e9e }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92en \u233\'e9tendant un saut hors plage}{\loch
.  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez }{\rtlch \ltrch\lang3084\loch
\u233\'e9galement}{\loch
 vous servir des instructions de sauts conditionnels pour simuler des boucles plus concises. Par exemple, la s\u233\'e9quence suivante lit une suite de caract\u232\'e8res de l'utilisateur et stocke chaque caract\u232\'e8re dans des \u233\'e9l\u233\'e9ments successifs d'un tableau, jusqu'\u224\'e0 ce que l'utilisateur appuie sur Entr\u233\'e9e (}{\rtlch \ltrch\i\loch
carriage return}{\loch
) : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab di, 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
LireCarBcl:\tab mov \tab ah, 0\tab \tab ;INT 16 lit l'opcode des touches. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab int \tab 16h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab Input[di], al}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab inc \tab di}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab cmp\tab al, 0dh\tab \tab ;Le code ASCII du retour \u224\'e0 la ligne}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab jne\tab LireCarBcl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab Input[di-1], 0\tab ;Remplacez le carriage return avec 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Pour plus d'informations \u224\'e0 propos de l'usage des sauts conditionnels pour synth\u233\'e9tiser des instructions IF, des boucles et d'autres structures de contr\u244\'f4le, consultez le chapitre 10. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme les instructions set}{\rtlch \ltrch\i\loch
cc}{\loch
, les sauts conditionnels se pr}{\rtlch \ltrch\lang3084\loch
\u233\'e9sentent sous}{\loch
 deux cat\u233\'e9gories de base : les instructions qui testent certaines valeurs de flags (comme jz, jc, jno) et celles qui v\u233\'e9rifient des conditions (plus petit que, plus grand que, etc.). Un saut conditionnel lorsqu'il teste une condition, }{\rtlch \ltrch\lang3084\loch
fait suite }{\loch
presque toujours }{\rtlch \ltrch\lang3084\loch
\u224\'e0 }{\loch
une instruction cmp ; celle-ci modifie les flags, donc on peut utiliser des instructions comme ja, jae, jb, jbe, je ou jne pour des tests non sign\u233\'e9s tels que <, }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61603\'3f}{\loch
, =, }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61625\'3f}{\loch
, >, }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61619\'3f}{\loch
. En m}{\rtlch \ltrch\lang3084\loch
\u234\'eame temps, cmp modifie les flags de fa\u231\'e7on \u224\'e0 vous permettre d'effectuer \u233\'e9galement des comparaisons sign\u233\'e9es via les instructions jl, jle, je, jne, jg et jge. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les instructions de saut conditionnel testent uniquement les drapeaux, elles n'affectent aucun de ces derniers. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.5\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
instruction}{\rtlch \ltrch\fs23\b\loch
s JCXZ/JECXZ}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction jcxz (}{\rtlch \ltrch\i\loch
jump if cx is zero}{\loch
) saute \u224\'e0 l'adresse cible si cx contient z\u233\'e9ro. Bien qu'on peut l'utiliser toutes les fois qu'on a besoin de tester si cx vaut 0, cette instruction est g\u233\'e9n\u233\'e9ralement utilis\u233\'e9e avant des boucles construites avec des instructions de saut. L'instruction loop peut }{\rtlch \ltrch\lang3084\loch
r\u233\'e9p\u233\'e9ter }{\loch
une s\u233\'e9quence d'op\u233\'e9rations cx fois. Si cx vaut z\u233\'e9ro, loop r\u233\'e9p\u233\'e9tera son op\u233\'e9ration 65536 fois. Vous pouvez utiliser jcxz pour }{\rtlch \ltrch\lang3084\loch
sortir de cette }{\loch
boucle si cx vaut z\u233\'e9ro. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction jecxz, disponible seulement sur des processeurs 80386 ou ult\u233\'e9rieurs fait exactement la m\u234\'eame chose que jcxz, mais cette }{\rtlch \ltrch\lang3084\loch
elle}{\loch
 teste le registre ecx en entier. Notez que jcxz, testera seulement et toujours cx, m\u234\'eame si votre processeur est un 386 en mode 32 bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il n'y a pas de versions oppos\u233\'e9es de jcxz et jecxz. Par cons\u233\'e9quent, vous ne pourrez pas utiliser la r\u232\'e8gle "n/ non n" pour \u233\'e9largir la port\u233\'e9e de jcxz et jecxz. La mani\u232\'e8re la plus facile pour r\u233\'e9soudre ce probl\u232\'e8me est de diviser l'instruction en deux instructions effectuant la m\u234\'eame t\u226\'e2che :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jcxz\tab Cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
devient : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab test\tab cx, cx\tab \tab ;Active le flag zero si cx = 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
je \tab Cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant, vous pouvez facilement \u233\'e9largir l'instruction je \u224\'e0 l'aide des techniques d\u233\'e9crites dans la section pr\u233\'e9c\u233\'e9dente. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction test ci-dessus activera le drapeau z\u233\'e9ro si, et seulement si cx contient z\u233\'e9ro. Apr\u232\'e8s tout, s'il y avait n'importe quel bit diff\u233\'e9rent de z\u233\'e9ro dans cx, effectuer un AND sur ces bits produirait un r\u233\'e9sultat diff\u233\'e9rent de z\u233\'e9ro. Il s'agit d'une fa\u231\'e7on efficiente de voir si un registre de 16 ou de 32 bits est nul. En fait, ces deux instructions sont plus rapides que l'instruction jcxz sur un processeur 80486 ou ult\u233\'e9rieur. Intel recommande d\u233\'e9finitivement d'utiliser cette s\u233\'e9quence au lieu de jcxz, si vous avez besoin de plus de vitesse. Sans doute jcxz est plus courte que ces deux instructions, mais elle n'est pas plus rapide. Et c'est justement un bon exemple d'exception \u224\'e0 la r\u232\'e8gle \u171\'ab plus court c'est souvent plus rapide \u187\'bb.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction jcxz n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.6\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_09_06}{\*\bkmkend p6_09_06}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 LOOP}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction d\u233\'e9cr\u233\'e9mente le registre cx, puis saute \u224\'e0 l'emplacement indiqu\u233\'e9 si le registre cx }{\rtlch \ltrch\lang3084\loch
n\u8217\'92est pas nul}{\loch
. }{\rtlch \ltrch\lang3084\loch
\u201\'c9tant donn\u233\'e9 que cette instruction }{\loch
d\u233\'e9cr\u233\'e9mente }{\rtlch \ltrch\lang3084\loch
un registre et v\u233\'e9rifie sa valeur}{\loch
, }{\rtlch \ltrch\lang3084\loch
le fait de }{\loch
donner \u224\'e0 cx une valeur initiale de z\u233\'e9ro correspond \u224\'e0 r\u233\'e9p\u233\'e9ter la boucle 65536 fois. Si vous ne d\u233\'e9sirez pas ce r\u233\'e9sultat, utilisez jcxz pour }{\rtlch \ltrch\lang3084\loch
sortir de }{\loch
la boucle. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction loop n'a pas de forme "oppos\u233\'e9e" et comme les instructions jcxz/jecxz, elle est limit\u233\'e9e sur tous les processeurs \u224\'e0 une plage de }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61617\'3f}{\loch
128 bits. Si vous voulez \u233\'e9largir cette plage, vous devrez }{\rtlch \ltrch\lang3084\loch
utiliser deux instructions \u224\'e0 la place}{\loch
:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
;"loop \u233\'e9tiquette" devient}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab dec \tab cx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jne \tab etiquette}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez adapter facilement }{\rtlch \ltrch\lang3084\loch
l}{\loch
e jne pour }{\rtlch \ltrch\lang3084\loch
n\u8217\'92importe quelle }{\loch
distance. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il n'y a pas d'instruction eloop qui boucle tant que ecx est diff\u233\'e9rent de z\u233\'e9ro (il y a l'instruction loope, mais elle fait quelque chose de totalement diff\u233\'e9rent), et la raison est simple : \u224\'e0 partir du 80386 les concepteurs d\u8217\'92Intel ont d\u233\'e9cid\u233\'e9 d'arr\u234\'eater d'offrir le support pour l'instruction loop. Certes, elle est toujours l\u224\'e0 pour assurer la compatibilit\u233\'e9 avec d'anciens programmes, mais il s'av\u232\'e8re que les instructions dec/jne sont effectivement }{\rtlch \ltrch\i\loch
plus rapides}{\loch
 sur des processeurs de 32 bits. Ce r\u233\'e9sultat \u233\'e9trange est d\u251\'fb \u224\'e0 des probl\u232\'e8mes dans le d\u233\'e9codage de loop e}{\rtlch \ltrch\lang3084\loch
t}{\loch
 le fonctionnement du pipeline. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que le nom de l'instruction loop sugg\u232\'e8re la cr\u233\'e9ation de boucles, }{\rtlch \ltrch\lang3084\loch
ce que cette instruction fait r\u233\'e9ellement }{\loch
est d\u233\'e9cr\u233\'e9menter cx et sauter \u224\'e0 l'adresse cible tant que cx est diff\u233\'e9rent de z\u233\'e9ro apr\u232\'e8s chaque d\u233\'e9cr\u233\'e9ment. Vous pouvez utiliser cette instruction partout o\u249\'f9 vous voulez produire cet effet et pas seulement en cr\u233\'e9ant des boucles. Cependant, elle est tr\u232\'e8s utile pour faire r\u233\'e9p\u233\'e9ter une s\u233\'e9quence d'instructions un certain nombre de fois. Par exemple, la boucle suivante initialise les 256 \u233\'e9l\u233\'e9ments d'un tableau d'octets avec des valeurs croissantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ecx, 255}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
TabBoucle:\tab mov\tab Tab[ecx], cl}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab loop\tab TabBoucle}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab Tab[0], 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La derni}{\rtlch \ltrch\lang3084\loch
\u232\'e8re instruction est n\u233\'e9cessaire parce que la boucle ne continue pas son cycle quand cx est \u233\'e9gal \u224\'e0 z\u233\'e9ro. Par cons\u233\'e9quent, le dernier \u233\'e9l\u233\'e9ment du tableau que cette boucle traite est Tab[1], d'o\u249\'f9 la derni\u232\'e8re instruction. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'instruction loop n'affecte aucun drapeau. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.7\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_09_07}{\*\bkmkend p6_09_07}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 LOOPE/LOOPZ}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\ql\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Loope/loopz (}{\rtlch \ltrch\i\loch
loop while equal / }{\rtlch \ltrch\lang3084\i\loch
loop while }{\rtlch \ltrch\i\loch
zero}{\loch
, }{\rtlch \ltrch\lang3084\loch
qui sont synonymes l\u8217\'92un de l\u8217\'92autre}{\loch
) saute \u224\'e0 l'adresse cibl\u233\'e9e si }{\rtlch \ltrch\lang3084\loch
le registre }{\loch
cx est diff\u233\'e9rent de z\u233\'e9ro }{\rtlch \ltrch\lang3084\loch
et le }{\rtlch\ai \ltrch\lang3084\i\loch
zero flag}{\rtlch \ltrch\lang3084\loch
 est activ\u233\'e9}{\loch
. }{\rtlch \ltrch\lang3084\loch
Ce qui est }{\loch
tr\u232\'e8s utile apr\u232\'e8s une instruction cmp ou cmps , }{\rtlch \ltrch\lang3084\loch
en plus, c\u8217\'92est un peu plus rapide }{\loch
que les instructions 80386/486 correspondantes, }{\rtlch \ltrch\i\loch
si vous }{\rtlch \ltrch\lang3084\i\loch
utilisez toutes les fonctionalit\u233\'e9s de l\u8217\'92instruction}{\loch
. Cependant, }{\rtlch \ltrch\lang3084\loch
elle}{\loch
 fait des ravages avec le pipeline et le fonctionnement superscalaire du Pentium, donc vous devriez probablement lui pr\u233\'e9f\u233\'e9rer des instructions d\u233\'e9compos\u233\'e9es. }{\rtlch \ltrch\lang3084\loch
Voici ce qu\u8217\'92elle fait}{\loch
 : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cx := cx - 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
if ZeroFlag = 1 and cx }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\fs18\loch\f4\loch
\u61625\'3f}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 0, goto target}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\rtlch \ltrch\i
 }{\loch
Elle \u233\'e9choue si l'une des deux situations surgit : soit le drapeau z\u233\'e9ro est d\u233\'e9sactiv\u233\'e9, soit cx a atteint z\u233\'e9ro. En testant le drapeau z\u233\'e9ro apr\u232\'e8s l'instruction (avec je ou jne, par exemple), vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 d\u233\'e9terminer la cause de la terminaison. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction est utile aussi quand vous voulez r\u233\'e9p\u233\'e9ter une boucle tant qu'une certaine valeur est \u233\'e9gale \u224\'e0 une autre, mais qu'il y a un nombre maximal d'it\u233\'e9rations que vous voulez permettre. Par exemple, la boucle suivante lit les valeurs d'un tableau pour chercher le premier octet diff\u233\'e9rent de z\u233\'e9ro, mais }{\rtlch \ltrch\lang3084\loch
elle ne continue pas \u224\'e0 chercher apr\u232\'e8s la fin du tableau }{\loch
:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab cx, 16\tab ;Au plus 16 \u233\'e9l\u233\'e9ments}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx, -1\tab ;Index du tableau (notez le inc qui suit)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
Chercher:\tab inc \tab bx\tab ;Passer \u224\'e0 l'\u233\'e9l\u233\'e9ment suivant}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab Tab[bx], 0 \tab ;Voir si l'}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u233\'e9l\u233\'e9ment est \u233\'e9gal \u224\'e0 z\u233\'e9ro}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab loope\tab Chercher\tab ;R\u233\'e9p\u233\'e9ter si c'est le cas}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
je\tab ToutZeros\tab ;Sauter si tous les \u233\'e9l\u233\'e9ments valent 0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que cette instruction }{\rtlch \ltrch\i\loch
n'est pas}{\loch
 l'oppos\u233\'e9 de loopnz/loopne, donc,}{\rtlch \ltrch\lang3084\loch
 vous ne pouvez pas l\u8217\'92utiliser }{\loch
pour \u233\'e9tendre un saut hors plage. Si vous avez besoin de sauter au-del\u224\'e0 des }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\loch\f4\loch
\u61617\'3f}{\loch
128 bits, }{\rtlch \ltrch\lang3084\loch
il vous faudra des }{\loch
instructions alternatives. Par exemple :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jne\tab sortie}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab dec \tab cx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab sortie2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sortie:\tab \tab dec\tab cx\tab ;loope d\u233\'e9cr\u233\'e9mente cx, m\u234\'eame si ZF=0}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sortie2:\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction loope/loopz n'affecte aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.9.8\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'i}{{\*\bkmkstart p6_09_08}{\*\bkmkend p6_09_08}\rtlch \ltrch\fs23\lang3084\b\loch
nstruction}{\rtlch \ltrch\fs23\b\loch
 LOOPNE/LOOPNZ}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction fonctionne de mani\u232\'e8re analogue \u224\'e0 loope/loopz, mais loopne/loopnz (loop while not equal/not zero) r\u233\'e9p\u232\'e8te tant que cx est diff\u233\'e9rent de z\u233\'e9ro et (ici vient la diff\u233\'e9rence) }{\rtlch \ltrch\lang3084\loch
et}{\loch
 le drapeau z\u233\'e9ro reste d\u233\'e9sactiv\u233\'e9. L'algorithme est : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab cx := cx - 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab if ZeroFlag = 0 and cx }{\rtlch\dbch\af16\dbch\af16\hich\af4 \ltrch\fs18\loch\f4\loch
\u61625\'3f}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
 0, goto target}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez d\u233\'e9terminer }{\rtlch \ltrch\lang3084\loch
si }{\loch
loopne }{\rtlch \ltrch\lang3084\loch
a fini son ex\u233\'e9cution }{\loch
en testant }{\rtlch \ltrch\lang3084\loch
l}{\loch
a valeur du drapeau z\u233\'e9ro. Si le }{\rtlch\ai \ltrch\i\loch
zero }{\rtlch\ai \ltrch\lang3084\i\loch
flag}{\rtlch \ltrch\lang3084\loch
 }{\loch
est d\u233\'e9sactiv\u233\'e9, la boucle loopne }{\rtlch \ltrch\lang3084\loch
finit son ex\u233\'e9cution }{\loch
parce que }{\rtlch \ltrch\lang3084\loch
la d\u233\'e9cr\u233\'e9mentation du registre }{\loch
cx }{\rtlch \ltrch\lang3084\loch
a atteint }{\loch
z\u233\'e9ro, sinon, elle }{\rtlch \ltrch\lang3084\loch
termine }{\loch
parce que le zero flag a \u233\'e9t\u233\'e9 activ\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction }{\rtlch \ltrch\i\loch
n'est pas}{\loch
 l'oppos\u233\'e9 de loope/loopz. Si l'adresse cible est hors de port\u233\'e9e, vous aurez besoin d'utiliser des instructions alternatives, comme celles qui suivent :  }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab sortie}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab dec \tab cx}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab sortie2}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab cible}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sortie:\tab \tab dec\tab cx\tab ;loope d\u233\'e9cr\u233\'e9mente cx, m\u234\'eame si ZF=1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
sortie2:}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez vous servir de loopne pour boucler un nombre maximal de fois pendant qu'on attend qu'une condition devienne vraie. Par exemple, vous pouvez parcourir un tableau tant qu'il contien}{\rtlch \ltrch\lang3084\loch
t}{\loch
 des \u233\'e9l\u233\'e9ments ou qu'un certain octet n'est pas trouv\u233\'e9 \u224\'e0 l'int\u233\'e9rieur de ce tableau. Par exemple : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab cx, 16\tab \tab ;Le nombre maximal est 16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx, -1\tab \tab ;Index du tableau}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
RepTantQueNonZ: inc \tab bx\tab \tab ;Passer \u224\'e0 l'\u233\'e9l\u233\'e9ment suivant}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab Tab[bx], 0\tab ;Cet }{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\u233\'e9l\u233\'e9ment contient z\u233\'e9ro ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
loopne\tab RepTantQueNonZ\tab ;Sortir si c'est le cas ou bien bx > 16}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Bien que loope/loopz et loopne/loopnz }{\rtlch \ltrch\lang3084\loch
sont}{\loch
 plus lentes que les instructions individuelles qui pourraient les remplacer, il y a un usage sp\u233\'e9cifique de ces instructions}{\rtlch \ltrch\lang3084\loch
 dans les contexte o\u249\'f9 la vitesse }{\loch
n'est pas un facteur particuli\u232\'e8rement important, }{\rtlch \ltrch\lang3084\loch
\u224\'e0 savoir }{\loch
les boucles d'attente pendant les op\u233\'e9rations d'entr\u233\'e9es/sorties. Supposez que le bit 7 du port 379h contient 1 si le p\u233\'e9riph\u233\'e9rique est occup\u233\'e9 et 0 s'il est libre. S'il fallait \u233\'e9crire une donn\u233\'e9e sur ce port, on pourrait utiliser :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab dx, 379h}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AttendreLibre}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
:\tab in \tab al, dx\tab \tab ;Lire le port}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab test\tab al, 80h\tab \tab ;Tester si le bit 7 est \u224\'e0 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jne\tab AttendreLibre\tab ;Si occup\u233\'e9, retenter}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le seul probl\u232\'e8me avec ce code est le risque d'une boucle infinie. Dans un syst\u232\'e8me r\u233\'e9el, un c\u226\'e2ble peut \u234\'eatre d\u233\'e9branch\u233\'e9, quelqu'un peut \u233\'e9teindre le p\u233\'e9riph\u233\'e9rique et tout autre incident peut survenir, ce qui provoquerait une boucle sans fin et bloquerait l'ordinateur. Des pilotes ou logiciels robustes ajoutent g\u233\'e9n\u233\'e9ralemenent une minuterie \u224\'e0 des boucles comme celles-ci, de sorte que si un p\u233\'e9riph\u233\'e9rique ne r\u233\'e9pond plus apr\u232\'e8s un certain temps la boucle s'arr\u234\'eate et signale une erreur. Le code suivant r\u233\'e9alisera \u231\'e7a : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab dx, 379h\tab ;Entrer l'adresse du port}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab cx, 0\tab \tab ;Quitter apr\u232\'e8s 65536 it\u233\'e9rations}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
AttendreLibre}{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
:\tab in \tab al, dx\tab \tab ;Lire le port}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab test\tab al, 80h\tab \tab ;Tester si le bit 7 est \u224\'e0 1}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab loopne\tab AttendreLibre\tab ;R\u233\'e9p\u233\'e9ter si occup\u233\'e9 et temps non \u233\'e9chou\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi851\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
jne\tab TempsExpire\tab ;Sortir si cx=0, parce qu\u8217\'92expir\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous auriez pu utiliser loope/loopz si le test du bit concernait 0 au lieu de 1. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions loopne/loopnz n'affectent aucun flag. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_10}{\*\bkmkend p6_10}\rtlch \ltrch\fs23\b\loch
6.10\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions diverses}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans la famille 80x86, il y a plusieurs instructions qui ne tombent dans aucune des cat\u233\'e9gories d\u233\'e9crites dans ce chapitre. G\u233\'e9n\u233\'e9ralement, il s'agit d'instructions qui manipulent des drapeaux individuels, qui fournissent des services sp\u233\'e9ciaux du processeur ou traitent des op\u233\'e9rations en mode privil\u233\'e9gi\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions qui manipulent directement les drapeaux du registre flags sont :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab clc\tab D\u233\'e9sactive (Clear) Carry Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab stc\tab Active (Set) Carry Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab cmc\tab Compl\u233\'e9mente Carry Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab cld\tab D\u233\'e9sactive Direction Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab std\tab Active Direction Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab cli\tab D\u233\'e9sactive I}{\rtlch \ltrch\lang3084\i\loch
nterrupt Enable/Disable Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx426\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab \u8226\'95\tab sti\tab Active }{\rtlch \ltrch\lang3084\i\loch
Interrupt Enable/Disable Flag}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez : soyez prudent en utilisant cli dans vos programmes, car un usage impropre pourrait planter votre machine et vous obliger }{\rtlch \ltrch\lang3082\loch
\u225\'e1 }{\rtlch \ltrch\lang3084\loch
red\u233\'e9marrer}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\b\loch
nop}{\loch
 ne fait rien d'autre que gaspiller quelques cycles d'horloge et occuper un octet de m\u233\'e9moire. Les programmeurs l'utilisent surtout \u224\'e0 des fins de d\u233\'e9bogage ou pour r\u233\'e9server un espace. Cette instruction n'est pas unique, c'est simplement un synonyme de xchg ax, ax.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\b\loch
hlt}{\loch
 arr\u234\'eate le processeur jusqu'au prochain reset ou jusqu'\u224\'e0 la production d'une interruption non-masquable ou une interruption sp\u233\'e9cifique (en pr\u233\'e9sumant que les interruptions sont activ\u233\'e9es). G\u233\'e9n\u233\'e9ralement, il est d\u233\'e9conseill\u233\'e9 d'utiliser cette instruction sur un IBM PC, \u224\'e0 moins que vous sachiez }{\rtlch \ltrch\lang3084\loch
parfaitement}{\loch
 ce que vous faites. }{\rtlch \ltrch\i\loch
Cette instruction n'est pas l'\u233\'e9quivalent de l'instruction }{\loch
halt}{\rtlch \ltrch\i\loch
 qu'on a vu }{\rtlch \ltrch\lang3084\i\loch
au chapitre des }{\rtlch \ltrch\i\loch
instructions factices x86. Il ne faut pas l'utiliser pour arr\u234\'eater des programmes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le }{\rtlch \ltrch\lang3084\loch
80x86}{\loch
 fournit une autre instruction pr\u233\'e9fixe, lock, qui, comme l'instruction rep, affecte l'instruction suivante. Cependant, cette instruction a peu de sens sur la plupart des syst\u232\'e8mes PC. Sa fonction est de coordonner des ordinateurs ayant des CPU multiples. Au fur et \u224\'e0 mesure que de tels syst\u232\'e8mes deviennent disponibles, cette instruction}{\rtlch \ltrch\lang3084\loch
 finira par \u234\'eatre }{\loch
utile}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Il existe des ordinateurs \u224\'e0 processeurs multiples qui ont plusieurs Pentium install\u233\'e9s. Cependant, ces syst\u232\'e8mes utilisent les deux CPU seulement pendant l'ex\u233\'e9cution de Windows NT, OS/2 ou quelque autre syst\u232\'e8me d'exploitation qui supporte le multiprocessage sym\u233\'e9trique. }
}}
}{\loch
. Vous n'avez pas besoin de vous }{\rtlch \ltrch\lang3084\loch
en }{\loch
pr\u233\'e9occuper ici. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le Pentium fournit deux autres instructions qui peuvent int\u233\'e9resser ceux qui programment en mode r\u233\'e9el (DOS). Ces instructions sont }{\rtlch \ltrch\b\loch
cpuid}{\loch
 et }{\rtlch \ltrch\b\loch
rdtsc}{\loch
. Si vous chargez eax avec z\u233\'e9ro et vous ex\u233\'e9cutez cpuid, le Pentium (ainsi que les processeurs ult\u233\'e9rieurs), retournera la valeur maximale que cpuid peut permettre comme param\u232\'e8tre d\u8217\'92eax. Pour le Pentium, cette valeur est un. Si vous chargez eax avec}{\rtlch \ltrch\lang3084\loch
 1 }{\loch
et ex\u233\'e9cutez cpuid, le Pentium retournera, dans }{\rtlch \ltrch\lang3084\loch
le registre }{\loch
eax, les informations d'identification du CPU. Tant qu'Intel ne produira de nouvelles puces dans la famille des Pentiums, cette instruction ne sera pas d'une grande utilit\u233\'e9. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'autre nouvelle instruction est }{\rtlch \ltrch\b\loch
rdtsc}{\loch
 (}{\rtlch \ltrch\i\loch
read time stamp counter}{\loch
). Le Pentium g\u232\'e8re un compteur de 64 bits qui compte les cycles d'horloge \u224\'e0 partir d'un d\u233\'e9marrage. L'instruction rdtsc copie la valeur courante du compteur dans la paire edx:eax. Vous pouvez l'utiliser pour mesurer }{\rtlch \ltrch\lang3084\loch
de fa\u231\'e7on tr\u232\'e8s pr\u233\'e9cise }{\loch
le temps employ\u233\'e9 par certaines s\u233\'e9quences de code. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\loch
 c\u244\'f4t\u233\'e9 des instructions pr\u233\'e9sent\u233\'e9es ici, les processeurs 80286 et ult\u233\'e9rieurs fournissent un ensemble d'instructions }{\rtlch \ltrch\i\loch
pour le mode prot\u233\'e9g\u233\'e9}{\loch
. Ce livre ne les consid\u233\'e9rera pas, car elles ont un int\u233\'e9r\u234\'eat seulement pour ceux qui \u233\'e9crivent des syst\u232\'e8mes d'exploitation. Les programmes qui tournent sur ces syst\u232\'e8mes (Windows, Unix, OS/2, etc.) ne s'en servent pas. Donc, elles sont r\u233\'e9serv\u233\'e9es exclusivement au d\u233\'e9veloppement de ces syst\u232\'e8mes ou \u224\'e0 l'\u233\'e9criture de pilotes pour ces syst\u232\'e8mes. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11\tab Exemples de }{{\*\bkmkstart p6_11}{\*\bkmkend p6_11}\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammes}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les programmes suivants montrent l'usage de diverses instructions vues dans ce chapitre}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
A partir de ce moment, les codes sources (sauf les commentaires et les titres) ne seront plus traduits en fran\u231\'e7ais. Ceci }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
pour }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
vous familiariser }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\loch
avec le style d\u8217\'92\u233\'e9criture }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
des codes sources en assembleur, qui sont toujours en anglais, m\u234\'eame dans des pays non anglophones, n.d.t.}
}}
}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_11_01}{\*\bkmkend p6_11_01}\rtlch \ltrch\fs23\b\loch
6.11.1\tab Arithm\u233\'e9tique simple (premi\u232\'e8re partie)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
; Simple arithm\u233\'e9tique}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
; Ce programme montre quelques instructions d'arithm\u233\'e9tique simple.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab .386\tab \tab \tab ;Pour utiliser les registres et les }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab option segment:use16\tab ;modes d'adressage \u233\'e9tendus. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
dseg\tab \tab segment para public 'data'}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
;Voici quelques d\u233\'e9finitions des variables qu'on va d\u233\'e9clarer :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
uint\tab \tab typedef\tab \tab word\tab ;Entiers non sign\u233\'e9s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
integer\tab \tab typedef\tab \tab sword\tab ;Entiers sign\u233\'e9s}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
;Variables}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
j\tab \tab integer\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
k\tab \tab integer\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
l\tab \tab integer\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
u1\tab \tab uint\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
u2\tab \tab uint\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
u3\tab \tab uint\tab ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
dseg\tab \tab ends}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
cseg\tab \tab segment para public 'code'}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
assume\tab \tab cs:cseg, ds:dseg}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov\tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Initialisation des variables :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab j, 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab k, -2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u1, 254}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u2, 22}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := j+k et u3 := u1+u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
add \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1 \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
On utilise }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ADD }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
aussi bien pour les }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
add \tab ax, u2 \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
instructions }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sign\u233\'e9es }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
et}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
 non sign\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u3, ax }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := j-k et u3 := u1-u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sub \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1 \tab ;M\u234\'eame remarque avec SUB que pour }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;la s\u233\'e9quence d'instructions pr\u233\'e9c\u233\'e9dente}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sub \tab ax, u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u3, ax }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := -L}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
neg L}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := -J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J \tab ;L'instruction NEG n'a d'int\u233\'e9r\u234\'eat que}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
neg \tab ax \tab ;sur des valeurs sign\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer K := K + 1 \u224\'e0 l'aide de l'instruction INC}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
inc K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer u2 := u2 + 1 via l'instruction INC}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Notez qu\u8217\'92INC peut \u234\'eatre utilis\u233\'e9e autant sur des valeurs sign\u233\'e9es que non sign\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
inc u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer J := J - 1 en utilisant DEC.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dec J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer u2 := u2 - 1 \u224\'e0 l'aide de DEC.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Notez que DEC peut s'utiliser aussi bien sur des valeurs sign\u233\'e9es }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
que}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
 non sign\u233\'e9es. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dec u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov \tab ah, 4ch \tab ;opcode du DOS pour sortir du programme.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab ;Appel}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
 du }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.1\tab Arithm\u233\'e9tique simple (}{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
euxi\u232\'e8me }{{\*\bkmkstart p6_11_02}{\*\bkmkend p6_11_02}\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
artie)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Arithmetique simple}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Ce programme montre d'autres instructions d'arithm\u233\'e9tique simple.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab ; Pour pouvoir utiliser }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li4255\ri0\lin4255\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; les registres et les}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab ; modes d'adressage \u233\'e9tendus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Quelques d\u233\'e9finitions de types qu'on utilisera :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
uint \tab \tab typedef word \tab \tab ;Entiers non sign\u233\'e9s.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
integer \tab \tab typedef sword \tab \tab ;Entiers sign\u233\'e9s.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Certaines variables que l'on peut utiliser :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j \tab \tab integer \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
k \tab \tab integer \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
l \tab \tab integer \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
u1 \tab \tab uint \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
u2 \tab \tab uint \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
u3 \tab \tab uint \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov\tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Initialisation des variables :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab j, 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab k, -2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u1, 254}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u2, 22}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Multiplication \u233\'e9tendue en utilisant les instructions 8086.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Notez que les op\u233\'e9randes sign\u233\'e9es et non sign\u233\'e9es requi\u232\'e8rent des instructions }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de multiplication s\u233\'e9par\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := J * K (en ignorant tout d\u233\'e9passement de capacit\u233\'e9)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab K \tab ;Calcule DX:AX := AX * K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax \tab ;Ignorer le d\u233\'e9passement dans DX.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; u3 := u1 * u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mul \tab u2 \tab ;Calcule DX:AX := AX * U2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u3, ax \tab ;Ingorer le d\u233\'e9passement dans DX.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Division \u233\'e9tendue en utilisant les instructions 8086.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Comme dans le cas de la multiplication, il y a des instructions s\u233\'e9par\u233\'e9es selon }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; que les op\u233\'e9randes sont sign\u233\'e9es ou non sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Il est absolument imp\u233\'e9ratif que ces s\u233\'e9quences d'instructions fassent aussi }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; des extensions de signe ou }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u224\'e0 z\u233\'e9ro }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sur leurs op\u233\'e9randes de 32 bits *avant* }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; l'op\u233\'e9ration de division. Ne pas le faire, peut provoquer une erreur de division et }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; planter le programme.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := J div K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cwd \tab \tab \tab ;*DOIT* \u233\'e9largir AX \u224\'e0 DX:AX !}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
idiv \tab K\tab \tab ;AX := DX:AX/K, DX := DX:AX mod K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; u3 := u1/u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, 0 \tab \tab ;Doit \u233\'e9largir AX \u224\'e0 DX:AX !}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
div \tab u2 \tab \tab ;AX := DX:AX/u2, DX := DX:AX mod u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab u3, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Voici les versions sp\u233\'e9cialis\u233\'e9es de IMUL disponibles sur 80286, 80386 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; et sup\u233\'e9rieurs.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Techniquement, ces instructions fonctionnent seulement avec des op\u233\'e9randes sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Cependant, elles fonctionnent bien aussi avec des op\u233\'e9randes non sign\u233\'e9es. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Notez aussi qu'elles produisent un r\u233\'e9sultat de 16 bits et modifient}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; le flag overflow si un d\u233\'e9passement se produit.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := J * 10 (seulement sur 80286 et sup\u233\'e9rieurs)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, J, 10\tab \tab ;AX := J*10}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := J * K (seulement sur 80386 et ult\u233\'e9rieurs)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov ah, 4ch \tab \tab ;Opcode du DOS pour sortir.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appelle DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_11_03}{\*\bkmkend p6_11_03}\rtlch \ltrch\fs23\b\loch
6.11.3\tab Op\u233\'e9rations logiques}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Op\u233\'e9rations logiques}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Ce programme montre l'usage des instructions AND, OR, XOR, et NOT }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab ;Pour pouvoir utiliser }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; les registres et les}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab ;modes d'adressage \u233\'e9tendus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Quelques d\u233\'e9finitions de variables :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j \tab \tab word \tab 0FF00h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
k \tab \tab word \tab 0FFF0h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
l \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
c1 \tab \tab byte \tab 'A'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
c2 \tab \tab byte \tab 'a'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LowerMask \tab byte \tab 20h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := J \tab AND K (op\u233\'e9ration AND logique sur les bits):}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := J OR K (op\u233\'e9ration OR logique sur les bits):}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := J XOR K (op\u233\'e9ration XOR logique sur les bits):}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
xor \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := NOT L (op\u233\'e9ration NOT logique sur les bits):}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
not \tab L}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Calculer L := NOT J (op\u233\'e9ration NOT logique sur les bits):}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
not \tab ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; D\u233\'e9sactiver les bits 0..3 dans J :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab J, 0FFF0h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Activer ler bits 0..3 dans K :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab K, 0Fh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Inverser les bits 4..11 dans L :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
xor \tab L, 0FF0h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Convertir le caract\u232\'e8re dans c1 en minuscules :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab al, c1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab al, LowerMask}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab c1, al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Convertir le caract\u232\'e8re dans c2 en majuscules :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab al, c2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab al, 5Fh \tab \tab ;Met le bit 5 \u224\'e0 z\u233\'e9ro.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab c2, al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov ah, 4ch \tab \tab ;Opcode du DOS pour sortir.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appelle DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.4\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
\u233\'e9calage et de }{{\*\bkmkstart p6_11_04}{\*\bkmkend p6_11_04}\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
otation}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; instructions de d\u233\'e9calage et de rotation}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab ;Pour pouvoir utiliser }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; les registres et les}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab ;modes d'adressage \u233\'e9tendus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; La structure suivante contient les valeurs des bits d'un octet mod-reg-r/m.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mode \tab \tab struct}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
modbits \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
reg \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
rm \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mode \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Adrs1 \tab \tab mode \tab \{11b, 100b, 111b\}}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
modregrm \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
var1 \tab \tab word \tab 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
var2 \tab \tab word \tab 8000h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
var3 \tab \tab word \tab 0FFFFh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
var4 \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Rotations et d\u233\'e9calages directs dans la m\u233\'e9moire :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; var1 := var1 shl 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab var1, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; var1 := var1 shr 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shr \tab var1, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Sur des processeurs 80286 et ult\u233\'e9rieurs, vous pouvez d\u233\'e9caler plus d'un bit \u224\'e0 la fois :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab var1, 4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shr \tab var1, 4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le d\u233\'e9calage arithm\u233\'e9tique \u224\'e0 droite conserve le bit fort apr\u232\'e8s chaque d\u233\'e9calage.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L'instruction SAR suivante produit la valeur 0FFFFh dans var2 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sar \tab var2, 15}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Sur tous les processeurs, vous pouvez sp\u233\'e9cifier un compte de d\u233\'e9calage dans }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; le registre CL. L'instruction suivante redonne la valeur 8000h \u224\'e0  var2 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cl, 15}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab var2, cl}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez utiliser les instructions logiques, de d\u233\'e9calage et de rotation }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; pour compacter et d\u233\'e9compacter des donn\u233\'e9es. Pour exemple, l'instruction suivante }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; extrait les bits 10..13 de var3 et garde cette valeur dans var4 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, var3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shr \tab ax, 10 \tab ;D\u233\'e9place les bits 10..13 dans les bits 0..3.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab ax, 0Fh \tab ;Garde seulement les bits 0..3.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab var4, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez utiliser les instructions de rotation pour acc\u233\'e9l\u233\'e9rer le calcul }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de cette valeur sur des processeurs plus lents comme le 80286.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, var3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
rol \tab ax, 6 \tab ;Six rotations au lieu de 10 d\u233\'e9calages.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab ax, 0Fh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab var4, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez utiliser les instructions SHL et OR pour fusionner facilement dans une }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; seule valeur des champs s\u233\'e9par\u233\'e9s. Par exemple, le code suivant fusionne les }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; champs mod, reg, et r/m (se trouvant sur des octets s\u233\'e9par\u233\'e9s) dans un seul octet }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; mod-reg-r/m :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab al, Adrs1.modbits}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab al, 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab al, Adrs1.reg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab al, 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab al, Adrs1.rm}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab modregrm, al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Si vous utilisiez un processeur 8086 ou 8088 vous auriez \u224\'e0 utiliser le code }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;suivant :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab al, Adrs1.modbits\tab ;Obtient le champ mod.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab al, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl\tab al, 1}{{\super \rtlch\dbch\af17\langfe1033 \ltrch\fs17\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Attention ! Cette ligne manquait dans l'original, mais il s'agit s\u251\'fbrement d'une erreur, car pour d\u233\'e9caler al de trois positions, il faut absoulment trois instructions shl, n.d.t.}
}}
}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab al, Adrs1.reg\tab ;Obtient le champ reg.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cl, 3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab al, cl \tab \tab ;Fait de l'espace pour le champ r/m.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
or \tab al, Adrs1.rm \tab ;Fusionne dans le champ r/m.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab modregrm, al \tab ;Enregistre le r\u233\'e9sultat. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov \tab ah, 4ch \tab \tab ;Opcode du DOS pour sortir}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appel du DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.5\tab Op\u233\'e9rations sur les bits et instructions SET}{{\*\bkmkstart p6_11_05}{\*\bkmkend p6_11_05}\rtlch \ltrch\fs23\i\b\loch
cc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Op\u233\'e9rations sur les bits et instructions SETcc}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab ;Pour pouvoir utiliser }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; les registres et les}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab ;modes d'adressage \u233\'e9tendus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Quelques d\u233\'e9finitions de types pour les variables qu'on va d\u233\'e9clarer :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
uint \tab \tab typedef word \tab \tab ;Entiers non sign\u233\'e9s.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
integer \tab \tab typedef sword \tab \tab ;Entiers sign\u233\'e9s. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; D\u233\'e9claration de quelques variables}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j \tab \tab integer \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
k \tab \tab integer \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
u1 \tab \tab uint \tab 2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
u2 \tab \tab uint \tab 2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Result \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Initialisation des variables}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab j, -2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab k, 2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les instructions SETcc gardent un 1 ou un 0 dans leurs op\u233\'e9randes si la condition}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; sp\u233\'e9cifi\u233\'e9e est vraie ou fausse respectivement. L'instruction TEST effectue un AND}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; logique sur ses op\u233\'e9randes en modifiant les flags en cons\u233\'e9quence (en particulier,}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; TEST active/d\u233\'e9sactive le drapeau z\u233\'e9ro s'il y a/il n'y a pas un r\u233\'e9sultat de z\u233\'e9ro).}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; On peut utiliser ces deux faits pour copier un seul bit (\u233\'e9tendu par des z\u233\'e9ros) dans une op\u233\'e9rande octet.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
test \tab j, 11000b \tab ;Teste les bits #4 et #5.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setne \tab Result \tab \tab ;Result=1 si les bits #4 et #5 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de J valent 1.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
test \tab k, 10b \tab \tab ;Teste le bit #1.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sete \tab Result \tab \tab ;Result=1 si le bit #1 = 0.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les instructions SETcc sont particuli\u232\'e8rement utiles apr\u232\'e8s une instruction CMP.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez activer une valeur bool\u233\'e9enne selon le r\u233\'e9sultat de la comparaison.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := j <= k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setle \tab Result \tab ;Notez que "...le" s'applique \u224\'e0 des }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; valeurs sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := u1 <= u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setbe \tab Result \tab ;Notez que "...be" s'applique \u224\'e0 des valeurs }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; non sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Ce qui est bien avec les r\u233\'e9sultats que les instructions SETcc produisent est qu'on }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; peut leur appliquer des AND, OR ou XOR et obtenir les m\u234\'eames r\u233\'e9sultats que l'on}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; obtiendrait avec des langages de haut niveau comme C, Pascal ou BASIC. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := (j < k) AND (u1 > u2)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setl \tab bl\tab \tab ;Utilisez "...l" pour des }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; comparaisons sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, u2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
seta \tab al \tab \tab ;Utilisez "...a" pour des }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; comparaisons non sign\u233\'e9es.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab al, bl \tab \tab ;Applique un AND aux deux }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;r\u233\'e9sultats bool\u233\'e9ens}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, al \tab ;et garde le r\u233\'e9sultat.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Parfois, vous pouvez utiliser les instructions de d\u233\'e9calage et de rotation pour}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; tester si un bit sp\u233\'e9cifique est \u224\'e0 1. Par exemple, SHR coupe le bit 0 dans le}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; drapeau de retenue et SHR copie le bit fort dans ce m\u234\'eame drapeau. On peut tester}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; facilement ces bits comme suit :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := bit #15 de J }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab ax, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setc \tab Result}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := bit #0 de u1 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shr \tab ax, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
setc \tab Result}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Si vous n'utilisez pas un processeur 80386 ou sup\u233\'e9rieur et que vous ne pouvez pas}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; utiliser les instructions SETcc, vous pouvez souvent les simuler. Consid\u233\'e9rez les}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; deux s\u233\'e9quences ci-dessus r\u233\'e9crites pour un 8086 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := bit #15 de J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
rol \tab ax, 1\tab  \tab ;Copie le bit 15 dans le bit 0.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab al, 1 \tab \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u201\'c9}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
limine les autres bits.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := bit #0 de u1 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, u1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab al, 1 \tab \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u201\'c9}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
limine les bits superflus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, al}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov \tab ah, 4ch \tab \tab ;Opcode du DOS pour sortir.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appel du DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.6\tab Op\u233\'e9rations sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ha\u238\'eenes de }{{\*\bkmkstart p6_11_06}{\*\bkmkend p6_11_06}\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
aract\u232\'e8res}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Op\u233\'e9rations de cha\u238\'eenes}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab ;Pour pouvoir utiliser les registres et}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab ; les modes d'adressage \u233\'e9tendus.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
String1 \tab \tab byte \tab "String",0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
String2 \tab \tab byte \tab 7 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Array1 \tab \tab word \tab 1, 2, 3, 4, 5, 6, 7, 8}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Array2 \tab \tab word \tab 8 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les instructions de cha\u238\'eenes vous permettent de copier facilement des donn\u233\'e9es }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; d'un tableau \u224\'e0 un autre. Si le drapeau de direction vaut 0, l'instruction }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; movsb fait l'\u233\'e9quivalent de ce qui suit :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; \tab mov es:[di], ds:[si]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; \tab inc \tab si}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; \tab inc \tab di}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le code suivant copie les sept octets de String1 dans String2 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cld \tab \tab ;N\u233\'e9cessaire si vous voulez incr\u233\'e9menter SI/DI}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab si, String1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab di, String2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[0] := String1[0]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[1] := String1[1]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[2] := String1[2]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[3] := String1[3]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[4] := String1[4]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[5] := String1[5]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
movsb \tab \tab \tab ;String2[6] := String1[6]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; La s\u233\'e9quence suivante montre comment vous pouvez utiliser LODSW et STOWS }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; pour manipuler les \u233\'e9l\u233\'e9ments des tableaux pendant le transfert.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le code suivant effectue :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[0] := Array1[0]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[1] := Array1[0] * Array1[1]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[2] := Array1[0] * Array1[1] * Array1[2]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; etc.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Sans doute, il serait plus efficace de mettre le code suivant dans }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; une boucle, mais \u231\'e7a va venir. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab si, Array1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab di, Array2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov ah, 4ch \tab \tab ;Opcode du DOS pour sortir.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appel du DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.7\tab Sauts inconditionnels}{{\*\bkmkstart p6_11_07}{\*\bkmkend p6_11_07}{\super \rtlch \ltrch\fs23\b\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Notez que ce chapitre, dans l'original se titulait }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
Conditional Jump}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
. Il s'agit d'une erreur que la traduction a corrig\u233\'e9e, n.d.t.}
}}
}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Sauts inconditionnels}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Pointeurs sur des instructions dans le segment de code}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IndPtr1 \tab \tab word \tab IndTarget2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IndPtr2 \tab \tab dword \tab IndTarget3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les instructions JMP transf\u232\'e8rent le contr\u244\'f4le \u224\'e0 des emplacements sp\u233\'e9cifi\u233\'e9s par }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; le champ op\u233\'e9rande. Il s'agit d'habitude d'\u233\'e9tiquettes qui apparaissent dans le}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; programme.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Il y a beaucoup de variantes de l'instruction JMP. La premi\u232\'e8re est un opcode de }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; deux ctets qui transf\u232\'e8re le contr\u244\'f4le dans les +/-128 octets autour }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de l'instruction courante :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab CloseLoc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
CloseLoc:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; La forme suivante est une instruction de trois octets qui permet de }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; sauter n'importe o\u249\'f9 dans le segment de code courant. Normalement, }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; l'assembleur choisit la version la plus courte d'une instruction }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; JMP donn\u233\'e9e. L'op\u233\'e9rande "near ptr" impose un JMP proche (de trois }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; octets) :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab near ptr NearLoc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
NearLoc:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; La troisi\u232\'e8me variante \u224\'e0 consid\u233\'e9rer est une instruction de cinq octets capable de}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; supporter une adresse segment\u233\'e9e compl\u232\'e8te. Avec cette version de JMP, on peut }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; sauter n'importe o\u249\'f9 dans le programme, m\u234\'eame dans un autre segment. L'op\u233\'e9rande "far }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; ptr" a comme effet d'imposer ce comportement :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab far ptr FarLoc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
FarLoc:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez \u233\'e9galement charger l'adresse cible d'un JMP proche dans un }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; registre et sauter indirectement \u224\'e0 l'endroit voulu. Notez que vous pouvez }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; utiliser pour ceci tout registre g\u233\'e9n\u233\'e9ral, vous n'\u234\'eates pas limit\u233\'e9s aux }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; registres BX, SI, DI ou BP.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab dx, IndTarget}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IndTarget:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez m\u234\'eame sauter indirectement via une variable en m}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u233\'e9moire. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
; C'est-\u224\'e0-dire, }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
vous pouvez sauter directement \u224\'e0 travers une variable }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; pointeur sans avoir \u224\'e0 charger d'abord le pointeur dans }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; un registre (le chapitre 8 d\u233\'e9crit pourquoi les \u233\'e9tiquettes }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; suivantes requi\u232\'e8rent deux fois deux points).}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab IndPtr1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IndTarget2:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez enfin effectuer un saut \u233\'e9loign\u233\'e9 indirect par le biais d'une }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; variable. Il suffira de sp\u233\'e9cifier une variable de type dword dans }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; l'op\u233\'e9rande d'une instruction JMP : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab IndPtr2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IndTarget3:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov \tab ah, 4ch}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int \tab 21h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_11_08}{\*\bkmkend p6_11_08}\rtlch \ltrch\fs23\b\loch
6.11.8\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
I}{\rtlch \ltrch\fs23\b\loch
nstructions CALL et INT}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; instructions CALL et INT}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Quelques pointeurs sur nos sous-routines:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
SPtr1 \tab \tab word \tab Subroutine1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
SPtr2 \tab \tab dword \tab Subroutine2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Subroutine1 \tab proc \tab near}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ret}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Subroutine1 \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Subroutine2 \tab proc \tab far}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ret}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Subroutine2 \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Appel proche:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
call \tab Subroutine1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Appel \u233\'e9loign\u233\'e9 :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
call \tab Subroutine2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Appel indirect proche via les registres :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab cx, Subroutine1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
call \tab cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Appel indirect proche via la m\u233\'e9moire :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
call \tab SPtr1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Appel indirect \u233\'e9loign\u233\'e9 via la m\u233\'e9moire :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
call \tab SPtr2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; INT transf\u232\'e8re le contr\u244\'f4le \u224\'e0 une routine dont l'adresse appara\u238\'eet dans la table}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; des vecteurs d'interruption (voir le chapitre sur les interruptions pour avoir }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; des d\u233\'e9tails sur cette table). L'appel suivant indique au BIOS du PC }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; d'afficher \u224\'e0 l'\u233\'e9cran le caract\u232\'e8re ASCII dans AL.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ah, 0eh}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab al, 'A'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int \tab 10h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; INTO g\u233\'e9n\u232\'e8re une INT 4 si le drapeau de d\u233\'e9passement de capacit\u233\'e9 est \u224\'e0 1 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; et devient NOP si ce drapeau vaut 0. Vous pouvez utiliser cette instruction }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; apr\u232\'e8s une op\u233\'e9ration arithm\u233\'e9tique pour tester rapidement l'\u233\'e9ventualit\u233\'e9 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; d'un d\u233\'e9passement fatal. Note : la s\u233\'e9quence qui suit, *ne g\u233\'e9n\u232\'e8re pas* }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; un d\u233\'e9passement. Ne la modifiez pas \u224\'e0 moins d'ajouter une routine INT 4 dans }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; la table des vecteurs d'interruption. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, 2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
add \tab ax, 4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
into}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov ah, 4ch}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.9\tab Sauts conditionnels (}{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
remi\u232\'e8re }{{\*\bkmkstart p6_11_09}{\*\bkmkend p6_11_09}\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
artie)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
Sauts conditionnels I}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
J \tab \tab sword \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
K \tab \tab sword \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
L \tab \tab sword \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les sauts conditionnels du 8086 sont limit\u233\'e9s \u224\'e0 une plage de +/- 128 octets }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; parce que leur opcode est seulement de deux octets (un octet pour l'opcode }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; et l'autre pour le d\u233\'e9placement).}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.8086}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ja \tab lbl}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
nop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lbl:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; MASM 6.x corrigera automatiquement les sauts hors de plage. Les deux s\u233\'e9quences qui}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; suivent sont \u233\'e9quivalentes :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ja \tab lbl2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
byte \tab 150 dup (0)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lbl2:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jna \tab Temp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab lbl3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Temp:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
byte \tab 150 dup (0)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lbl3:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les processeurs 80386 et sup\u233\'e9rieurs supportent des versions sp\u233\'e9ciales }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; des sauts conditionnels permettant un d\u233\'e9placement de deux octets. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Si vous sp\u233\'e9cifiez un processeur 80386, MASM 6.x assemblera le code }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; en en tenant compte.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ja \tab lbl4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
byte \tab 150 dup (0)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lbl4:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Les sauts conditionnels fonctionnent bien en combinaison avec l'instruction}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; CMP, vous permettant d'ex\u233\'e9cuter certaines s\u233\'e9quences d'instructions seulement}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; si une condition est vraie (ou fausse).}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; if (J <= K) then}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := L + 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; else L := L - 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jnle \tab DoElse}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
inc \tab L}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab ifDone}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
DoElse: \tab \tab dec L}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ifDone:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez aussi utiliser un saut conditionnel pour cr\u233\'e9er une boucle :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; while (j >= k) do begin}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; j := j - 1;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; k := k + 1;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L := j * k;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; end;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
WhlLoop: \tab \tab mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jnge \tab QuitLoop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dec \tab j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
inc \tab k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab L, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jmp \tab WhlLoop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
QuitLoop:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov \tab ah, 4ch \tab \tab ;Opcode du DOS pour sortir du programme. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int \tab 21h \tab \tab ;Appel du DOS. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.11.10\tab Sauts conditionnels (}{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
euxi\u232\'e8me }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
artie)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; instructions de sauts conditionnels (partie II)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.xlist}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
include \tab stdlib.a}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi142{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
includelib\tab stdlib.lib}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.list}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.386 \tab \tab \tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
option segment:use16\tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab segment para public 'data'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Array1 \tab \tab word \tab 1, 2, 3, 4, 5, 6, 7, 8}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Array2 \tab \tab word \tab 8 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
String1 \tab \tab byte \tab "This string contains lower case characters",0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
String2 \tab \tab byte \tab 128 dup (0)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j \tab \tab sword \tab 5}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
k \tab \tab sword \tab 6}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Result \tab \tab byte \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
dseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab segment para public 'code'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
assume cs:cseg, ds:dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab proc}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, dseg}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ds, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab es, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Vous pouvez utiliser LOOP pour r\u233\'e9p\u233\'e9ter une s\u233\'e9quence d'instructions un nombre}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; d\u233\'e9termin\u233\'e9 de fois. Consid\u233\'e9rez le code extrait du programme EX6_5.ASM qui }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; a utilis\u233\'e9 des instructions de manipulation de cha\u238\'eenes. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le code suivant utilise une instruction LOOP pour calculer :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[0] := Array1[0]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[1] := Array1[0] * Array1[1]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Array2[2] := Array1[0] * Array1[1] * Array1[2]}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; etc.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cld}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab si, Array1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab di, Array2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, 1 \tab \tab ;Initialise pour la premi\u232\'e8re fois.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, 8 \tab \tab ;Huit \u233\'e9l\u233\'e9ments dans les tableaux.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LoopHere:\tab \tab lodsw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosw}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
loop \tab LoopHere}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; L'instruction LOOPNE est tr\u232\'e8s utile pour contr\u244\'f4ler les boucles qui }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; terminent sous une certaine condition ou quand la boucle d\u233\'e9passe un }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; certain nombre d'it\u233\'e9rations (r\u233\'e9p\u233\'e9titions). Par exemple, supposez }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; que string1 contient une s\u233\'e9quence de caract\u232\'e8res termin\u233\'e9e par un}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; octet qui contient z\u233\'e9ro. Si vous voulez convertir ces caract\u232\'e8res en }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; majuscules et les copier dans string2, vous pouvez utiliser le code suivant.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Notez que celui-ci ne copie pas plus de 127 caract\u232\'e8res, car string2 permet}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; seulement un nombre maximal de 127 octets (plus un z\u233\'e9ro de terminaison). }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab si, String1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
lea \tab di, String2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, 127 \tab \tab ;Au plus 127 caract\u232\'e8res dans string2.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
CopyStrLoop: \tab lodsb \tab \tab \tab ;Obtention des caract\u232\'e8res depuis string1.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab al, 'a' \tab    \tab ;Tester si les caract}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u232\'e8res en }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li3404\ri0\lin3404\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
; minuscules sont }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
non sign\u233\'e9s.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jb \tab NotLower \tab \tab  }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab al, 'z'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ja \tab NotLower}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
and \tab al, 5Fh \tab \tab ;Convertir en minuscules.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
NotLower:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stosb}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab al, 0 \tab \tab ;Tester le caract\u232\'e8re de terminaison.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
loopne \tab CopyStrLoop \tab ;Sortir si al ou cx = 0.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Si vous n'utilisez pas un CPU 80386 ou sup\u233\'e9rieur et qu'il vous faut }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; la fonctionnalit\u233\'e9 des instructions SETcc, vous pouvez facilement }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; obtenir le m\u234\'eame r\u233\'e9sultat en utilisant ce qui suit :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := J <= K;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, 0 \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
Suppose}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
 que c'est faux.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jnle \tab Skip1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, 1 \tab ;Mettre \u224\'e0 1 si J <= K.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Skip1:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Result := J = K;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, 0 \tab ;}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
Suppose}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
 que c'est faux.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, J}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cmp \tab ax, K}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
jne \tab Skip2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab Result, 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Skip2:}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Quit: \tab \tab mov ah, 4ch \tab \tab ;Opcode du DOS pour sortir du programme.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
int 21h \tab \tab \tab ;Appel du DOS.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Main \tab \tab endp}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
cseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab segment para stack 'stack'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
stk \tab \tab byte 1024 dup ("stack ")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sseg \tab \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab segment para public 'zzzzzz'}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
LastBytes \tab byte 16 dup (?)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
zzzzzzseg \tab ends}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end \tab Main}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.12\tab Exercices de }{{\*\bkmkstart p6_12}{\*\bkmkend p6_12}\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
aboratoire}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans cet ensemble d'exercices, vous \u233\'e9crirez des programmes en IBM/L }{\rtlch \ltrch\i\loch
instruction BenchMarking Language}{{\super \rtlch \ltrch\i\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Vous trouverez ce programme dans le sous-r\u233\'e9pertoire du chapitre 6. }
}}
}{\loch
. Cet outil vous permet de tester la dur\u233\'e9e de certaines s\u233\'e9quences d'instructions. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.12.1\tab Le }{{\*\bkmkstart p6_12_01}{\*\bkmkend p6_12_01}\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me IBM/L}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
IBM/L vous permet de chronom\u233\'e9trer des s\u233\'e9quences d'instructions pour voir combien de temps elles prennent }{\rtlch\ai \ltrch\i\loch
r\u233\'e9ellement}{\loch
 }{\rtlch \ltrch\lang3082\loch
pour }{\rtlch \ltrch\lang3084\loch
s\u8217\'92ex\u233\'e9cuter}{\loch
. Les temps de cycle dans la plupart des livres de langage assembleur 80x86 sont horriblement inexacts}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
car ils supposent le meilleur cas absolu. Ce n'est pas le cas avec l'IBM/L. Cet outil a une valeur inestimable }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l\u8217\'92heure d\u8217\'92optimiser un }{\loch
programme. On peut essayer diverses s\u233\'e9quences qui produisent le m\u234\'eame r\u233\'e9sultat et voir lesquelles }{\rtlch \ltrch\lang3084\loch
sont plus rapides}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'IBM/L se sert de l'horloge syst\u232\'e8me \u224\'e0 1/18 de seconde et il \u233\'e9value les ex\u233\'e9cutions en termes de tics d'horloge. Par cons\u233\'e9quent, son usage serait compl\u232\'e8tement inutile si on voulait mesurer la vitesse d'une seule instruction (car }{\rtlch \ltrch\lang3084\loch
l\u8217\'92ex\u233\'e9cution d\u8217\'92}{\loch
une instruction isol\u233\'e9e emploie beaucoup moins de temps). L' IBM/L fonctionne en ex\u233\'e9cutant en r\u233\'e9p\u233\'e9tition une s\u233\'e9quence de code pendant de milliers (parfois de millions) de fois et en mesurant le temps \u233\'e9coul\u233\'e9. En faisant cela, il soustrait automatiquement le temps d'ex\u233\'e9cution de la boucle. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'IBM/L est un compilateur qui traduit un code source en assembleur. En assemblant et en ex\u233\'e9cutant le programme r\u233\'e9sultant, il donne une liste de dur\u233\'e9es relatives pour diverses s\u233\'e9quences d'instructions. Un programme IBM/L consiste en courtes s\u233\'e9quences de code assembleur et quelques instructions de contr\u244\'f4le de flux d\u233\'e9crivant comment mesurer les performances de ces s\u233\'e9quences. Un programme IBM/L prend la forme suivante :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <d\u233\'e9clarations de variables>}{{\super \rtlch\dbch\af17\langfe1033 \ltrch\fs17\loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Tout ce qui est contenu entre <> est une partie de la syntaxe \u224\'e0 remplacer par du code valide. Par exemple, dans if <condition> <instructions>, il faut remplacer <condition> par une condition quelconque et <instructions> par des instructions quelconques, n.d.t.}
}}
}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel\tab <constante nombre entier>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions <constante nombre entier>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("title")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%init}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <instructions initiales dont la dur\u233\'e9e ne compte pas>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%eachloop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <instructions r\u233\'e9p\u233\'e9t\u233\'e9es une fois dans chaque boucle; dur\u233\'e9e ignor\u233\'e9e>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%discount}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <instructions effectu\u233\'e9es pour chaque s\u233\'e9quence; dur\u233\'e9e ignor\u233\'e9e>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <instructions \u224\'e0 mesurer>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
<sections #code..#endcode additionnelles>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\loch
Notez : les sections %init, %eachloop et %discount sont optionnelles. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un programme IBM/L commence avec une section "#}{\rtlch \ltrch\caps\loch
data}{\loch
" optionnelle qui se termine avec une directive "#ENDDATA". Toutes les lignes entre ces deux directives sont copi\u233\'e9e dans un segment de donn\u233\'e9es d'un programme assembleur en sortie. Normalement, on place dans cette partie des variables globales. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Exemple de section de donn\u233\'e9es}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#DATA}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
I\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
J\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
K\tab \tab dword\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ch\tab \tab byte\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ch2\tab \tab byte\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#ENDDATA}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces lignes seront copi}{\rtlch \ltrch\lang3084\loch
\u233\'e9es dans le segment de donn\u233\'e9es du programme que l'IBM/L cr\u233\'e9era. Ces variables seront disponibles dans toutes les s\u233\'e9quences #code..#endcode que vous placez dans votre programme. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
A la suite de la section des donn\u233\'e9es, on trouve une ou plusieurs sections de code. Une section de code consiste en directives #repetition et #unravel optionnelles, suivies par des directives #code..#endcode requises. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
#repetition a la syntaxe suivante : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetition \tab <constante_entier>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
(Le # doit \u234\'eatre au d\u233\'e9but de la ligne). La constante nombre entier est une valeur de 32 bits, vous permettant de sp\u233\'e9cifier des valeurs allant de z\u233\'e9ro \u224\'e0 environ deux milliards. Mais g\u233\'e9n\u233\'e9ralement, ces valeurs sont inf\u233\'e9rieures \u224\'e0 quelque centaines et encore moins sur des machines plus lentes. Plus la valeur est grande plus pr\u233\'e9cise sera l'analyse de la dur\u233\'e9e. N\u233\'e9anmoins, utiliser un grand nombre de r\u233\'e9p\u233\'e9titions \u233\'e9quivaut \u224\'e0 ralentir l'ex\u233\'e9cution du programme \u233\'e9crit par IBM/L. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La directive #repetition indique \u224\'e0 IBM/L de g\u233\'e9n\u233\'e9rer une boucle qui r\u233\'e9p\u233\'e9tera le segment de code suivant }{\rtlch \ltrch\lang3084\i\loch
constante_entiere}{\rtlch \ltrch\lang3084\loch
 fois. Si vous ne sp\u233\'e9cifiez pas de valeur (souvenez-vous que la directive est optionnelle), la valeur par d\u233\'e9faut est 327680. Une fois que vous avez sp\u233\'e9cifi\u233\'e9 une valeur, elle sera utilis\u233\'e9e pour toutes les s\u233\'e9quences qui suivront, au moins jusqu'\u224\'e0 la prochaine sp\u233\'e9cification. L'instruction #repetition doit imp\u233\'e9rativement appara\u238\'eetre en dehors de toute s\u233\'e9quence #code..#endcode et affecte la ou les sections #code qui suivront. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous \u234\'eates int\u233\'e9ress\u233\'e9 par le temps d'ex\u233\'e9cution d'une seule ligne ex\u233\'e9cut\u233\'e9e plusieurs fois dans une boucle, sachez que placer ces instructions dans une boucle serr\u233\'e9e peut affecter grandement l'exactitude des r\u233\'e9sultats. N'oubliez pas que le fait d'ex\u233\'e9cuter une instruction de transfert de contr\u244\'f4le (n\u233\'e9cessaire pour une boucle) vide la queue de pr\u233\'e9chargement, ce qui a un grand impact sur les temps d'ex\u233\'e9cution. C'est ici que la directive #unravel vient en aide. Elle permet de copier un bloc de code plusieurs fois dans le corps d'une boucle, en r\u233\'e9duisant par cons\u233\'e9quent la surcharge que les sauts conditionnels et d'autres instructions de contr\u244\'f4le de boucle repr\u233\'e9sentent. La directive #unravel a la syntaxe suivante :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084
 }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel\tab \tab <comptage>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le caract\u232\'e8re # doit \u234\'eatre au d\u233\'e9but de la ligne. }{\rtlch \ltrch\lang3084\i\loch
comptage }{\rtlch \ltrch\lang3084\loch
est une constante enti\u232\'e8re de 16 bits qui sp\u233\'e9cifie le nombre de fois que l' IBM/L doit copier le code dans le corps de la boucle. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Notez que la s\u233\'e9quence du code dans la section #CODE ex\u233\'e9cutera }{\rtlch \ltrch\lang3084\i\loch
comptage*constante_entier}{\rtlch \ltrch\lang3084\loch
 fois, car la directive unravel r\u233\'e9p\u232\'e8te la s\u233\'e9quence de code }{\rtlch \ltrch\lang3084\i\loch
comptage}{\rtlch \ltrch\lang3084\loch
 fois dans la boucle qui se r\u233\'e9p\u232\'e8te }{\rtlch \ltrch\lang3084\i\loch
constante_entier }{\rtlch \ltrch\lang3084\loch
fois. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans sa forme la plus simple, la directive #CODE ressemble \u224\'e0 ce qui suit :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#CODE ("Title")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%DO}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab <instructions en assembleur>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#ENDCODE}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le titre peut \u234\'eatre toute cha\u238\'eene de caract\u232\'e8res que vous choisissez. IBM/L affichera ce titre en affichant les r\u233\'e9sultats de sa section code. IBM/L prendra les instructions sp\u233\'e9cifi\u233\'e9es et les placera dans une boucle (un nombre multiple de fois si la directive #unravel est pr\u233\'e9sente). Pendant l'ex\u233\'e9cution, le fichier source en assembleur chronm\u233\'e9trera ce code et affichera un temps en nombre de tics d'horloge. Par exemple : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 16\tab \tab \tab ;16 copies du code \u224\'e0 l'int\u233\'e9rieur de la boucle}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 960000\tab \tab ;960000 fois...}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("instruction MOV AX, 0")\tab ;Titre de l'instruction}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab mov ax, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le code ci-dessus g\u233\'e9n\u232\'e8re un programme en assembleur qui ex\u233\'e9cutera }{\rtlch \ltrch\lang3084\i\loch
mov ax, 0}{\rtlch \ltrch\lang3084\loch
 16*960000 fois et annoncera le temps employ\u233\'e9 par cette ex\u233\'e9cution. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Beaucoup de programmes IBM/L ont des sections de code multiples. De nouvelles sections peuvent suivre imm\u233\'e9diatement les pr\u233\'e9c\u233\'e9dentes, par exemple :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 16\tab \tab \tab ;16 copies du code \u224\'e0 l'int\u233\'e9rieur de la boucle}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 960000\tab \tab ;960000 fois...}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("instruction MOV AX, 0")\tab ;Titre de l'instruction}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab mov \tab ax, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("instruction XOR AX, AX")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab xor \tab ax, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084
 }{\rtlch \ltrch\lang3084\loch
La s\u233\'e9quence qu'on vient de voir ex\u233\'e9cutera }{\rtlch \ltrch\lang3084\i\loch
mov ax, 0}{\rtlch \ltrch\lang3084\loch
 et }{\rtlch \ltrch\lang3084\i\loch
xor ax, ax}{\loch
 pour un nombre total de 16*960000 fois et annoncera le temps que ces ex\u233\'e9cutions ont }{\rtlch \ltrch\lang3084\loch
pris}{\loch
. En comparant les r\u233\'e9sultats, vous pourrez d\u233\'e9terminer laquelle des deux s\u233\'e9quences est la plus rapide. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tout comme en assembleur, le point-virgule indique un commentaire que le compilateur IBM/L ignorera. Les commentaires \u233\'e9crits en IBM/L ne seront pas ins\u233\'e9r\u233\'e9s dans le fichier de sortie que l' IBM/L g\u233\'e9n\u232\'e8re. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tous les programmes IBM/L doivent se terminer avec une directive #END. Voici un exemple de programme complet : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
even}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
i\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab \tab byte\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 16}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 32, 30000}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("MOV de mots align}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u233\'e9s");}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov\tab ax, i}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code ("MOV de mots non align}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\u233\'e9s")}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov \tab ax, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez qu'on aurait pu ins\u233\'e9rer deux sections optionnelles entre #code et %do. La premi\u232\'e8re aurait pu \u234\'eatre %init, qui commence une section d'initialisation ; IBM/L \u233\'e9met ces sections d'initialisation avant la boucle, ex\u233\'e9cute ce code seulement une fois. Il ne compte pas leur temps d'ex\u233\'e9cution en chronom\u233\'e9trant la boucle. Ceci permet d'affecter des valeurs importantes avant un test, affectations qui ne seront pas prises en comptes dans la mesure du temps d'ex\u233\'e9cution. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
i\tab \tab dword\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions\tab 100000}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel\tab \tab 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%init}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
\tab \tab mov \tab word ptr i, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov \tab ptr i+2, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov \tab cx, 200}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
lbl:\tab \tab inc \tab word ptr i}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab jnz\tab NotZero}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab inc\tab word ptr i+2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
NotZero:\tab \tab loop\tab lbl\tab \tab ;lbl = label = \u233\'e9tiquette}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#endcode}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Parfois, vous voulez que la directive #repetitions r\u233\'e9p\u232\'e8te une section de code plusieurs fois. Cependant, vous pouvez vouloir parfois n'ex\u233\'e9cuter certaines instructions qu'une seule fois dans chaque it\u233\'e9ration (c'est-\u224\'e0-dire \u224\'e0 ne pas copier le code plusieurs fois dans la boucle). La directive %eachloop permet justement ceci. Notez que l'IBM/L ne prend pas en compte le temps d'ex\u233\'e9cution consomm\u233\'e9 par un code ex\u233\'e9cut\u233\'e9 dans une section %eachloop. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Exemple :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
i\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
j\tab \tab word\tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 40000}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 128}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%init\tab \tab ;ce qui suit n'est }{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
ex\u233\'e9cut\u233\'e9 qu'une fois}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov\tab i, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab mov\tab j, 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%eachloop\tab ;ce qui suit est ex\u233\'e9cut\u233\'e9 40 000 fois et non 128 * 40 000 fois}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab inc \tab j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%do\tab \tab ;et, finalement, le contenu de la boucle, ex\u233\'e9cut\u233\'e9 128 * 40 000 fois}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab \tab inc \tab i}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#endcode}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}{\rtlch \ltrch\lang3084\loch
 }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans le code qu'on vient de voir, l'IBM/L compte exclusivement le temps requis pour incr\u233\'e9menter i et il ne mesure pas les instructions faisant partie des sections %init et %eachloop. Le code de ce %eachloop est ex\u233\'e9cut\u233\'e9 seulement une fois pour chaque it\u233\'e9ration et n'est pas conditionn\u233\'e9 par la directive %unravel (l'instruction }{\rtlch\dbch\af12\dbch\af12\hich\af6 \ltrch\fs20\lang3084\loch\f6\loch
inc i}{\rtlch \ltrch\lang3084\loch
 ci-dessus, par exemple, s'ex\u233\'e9cute 128 fois par it\u233\'e9ration de boucle \u224\'e0 cause de #unravel. Il peut vous arriver aussi de devoir ins\u233\'e9rer certaines instructions dans la section %do mais de ne pas vouloir les mesurer. Pour r\u233\'e9aliser ceci, il vous faudra utiliser la directive %discount. Voici un exemple complet : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
<d\u233\'e9clarations de donn\u233\'e9es>\tab }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#repetitions <valeur1>, <valeur2>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#unravel\tab <comptage>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#code}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%init}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab <code d'initialisation ex\u233\'e9cut\u233\'e9 seulement une fois>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%eachloop}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab <code d'initialisation de boucle, ex\u233\'e9cut\u233\'e9 une fois pour chaque it\u233\'e9ration>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%discount}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab <instructions non mesur\u233\'e9es, ex\u233\'e9cut\u233\'e9es une fois pour chaque it\u233\'e9ration>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab <les instructions que vous voulez mesurer>}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
<sections de code additionnelles>}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\sb0\sa120{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour utiliser l'application l'IBM/L vous aurez besoin de plusieurs fichiers. IBML.EXE est le programme ex\u233\'e9cutable et on l'ex\u233\'e9cute comme suit :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\lang3084\loch\f10\loch
\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
C:> IBML nomfichier.IBM}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ceci lit un fichier source IBML (le nomfichier.IBM) et \u233\'e9crit un programme en assembleur sur la sortie standard (l'\u233\'e9cran). Normalement, on peut avoir besoin de rediriger ce programme dans un fichier facilement lisible :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi851\sb0\sa120{
 }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
C:> IBML nomfichier.IBM >nomfichier.asm}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une fois que le fichier source .asm a \u233\'e9t\u233\'e9 cr\u233\'e9\u233\'e9, vous pouvez l'assembler et l'ex\u233\'e9cuter. Le fichier .exe qui en r\u233\'e9sulte, affichera les statistiques des temps d'ex\u233\'e9cution. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ex\u233\'e9cuter correctement un programme IBML, il faut inclure le fichier IBMLINC.A dans le r\u233\'e9pertoire de travail courant. Il s'agit d'un squelette source de programme assembleur dans lequel IBM/L ins\u233\'e9rera le code source en assembleur. Ce fichier est librement modifiable}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Mais avant d'y jouer dessus, n'oubliez jamais d'en faire une copie de sauvegarde, n.d.t.}
}}
}{\loch
. Gardez cependant \u224\'e0 l'esprit que l'IBM/L, en lisant ce fichier, s'attend \u224\'e0 des marqueurs (";##") pour savoir o\u249\'f9 ins\u233\'e9rer le code. Si vous modifiez IBMLINC.A, soyez donc tr\u232\'e8s prudent avec ces marqueurs. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le fichier source en sortie s'attend \u224\'e0 la pr\u233\'e9sence de la biblioth\u232\'e8que UCR standard et par cons\u233\'e9quent aux fichiers d'inclusion STDLIB (stdlib.a) et au fichier de la biblioth\u232\'e8que (stdlib.lib). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans le Chapitre 1, vous avez appris \u224\'e0 installer les fichiers de la biblioth\u232\'e8que standard sur votre disque dur. Ces fichiers doivent \u234\'eatre pr\u233\'e9sents dans votre r\u233\'e9pertoire courant de travail (ou bien dans vos variables d'environnement), sinon, l'assembleur n'assemblera pas correctement le fichier source assembleur en sortie. Voir le Chapitre 1 pour revoir ce sujet et le Chapitre 7 pour en savoir plus sur la biblioth\u232\'e8que en tant que telle. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant, voici certains exemples de programmes, vous aidant \u224\'e0 mieux vous familiariser avec le style de l'IBM/L : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Programme IBML d'exemple : TESTMUL.IBM.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Ce code compare le temps d'ex\u233\'e9cution de l'instruction MUL avec }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; diverses instructions shift et add \u233\'e9quivalentes. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 480000}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le contr\u244\'f4le suivant v\u233\'e9rifie combien il faut de temps pour multiplier deux }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; valeurs \u224\'e0 l'aide de IMUL. }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Multiply by 15 using IMUL\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
.286}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, 128}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, 15}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
MulLoop1: \tab mov \tab ax, cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
loop \tab MulLoop1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Faire le m\u234\'eame test avec les instructions IMUL \u233\'e9tendues (pour processeurs 80286 }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; ou ult\u233\'e9rieurs)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Multiplying by 15 using IMUL\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, 128}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
MulLoop2: \tab mov \tab ax, cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
imul \tab ax, 15}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
loop \tab MulLoop2}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Maintenant, on multiplie par 15 en utilisant un d\u233\'e9calage de quatre bits }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; et une soustraction.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Multiplying by 15 using shifts and sub\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%init}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, 128}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
MulLoop3: \tab mov \tab ax, cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
shl \tab ax, 4}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
sub \tab ax, bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
loop \tab MulLoop3}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs19\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af14\langfe1033\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
Sortie g\u233\'e9n\u233\'e9r\u233\'e9e par TESTMUL.IBM :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af14\langfe1033\dbch\af14\hich\af7 \ltrch\fs19\loch\f7\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IBM/L 2.0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Public Domain instruction Benchmarking Language}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
by Randall Hyde, inspired by Roedy Green}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
All times are measured in ticks, accurate only to }{\rtlch\dbch\af16\langfe1033\dbch\af16\hich\af4 \ltrch\fs17\loch\f4\loch
\u61617\'3f}{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
2.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
CPU: 80486}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Multiply by 15 using IMUL}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Multiply by 15 using IMUL}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Multiply by 15 using IMUL :370}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Multiplying by 15 using IMUL}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Multiplying by 15 using IMUL}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Multiplying by 15 using IMUL :370}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Multiplying by 15 using shifts and sub}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Multiplying by 15 using shifts and sub}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Multiplying by 15 using shifts and sub :201}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Programme IBML d'exemple MOVs}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Ce code compare l'usage de mov de registre \u224\'e0 registre et l'usage de mov }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de registre \u224\'e0 m\u233\'e9moire}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#data}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
i \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
j \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
k \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
l \tab \tab word \tab ?}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#enddata}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#repetitions 30720000}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#unravel 1}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; Le contr\u244\'f4le suivant v\u233\'e9rifie combien il faut de temps pour passer des donn\u233\'e9es }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
; de registre \u224\'e0 registre et de registre \u224\'e0 m\u233\'e9moire}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Register-Register moves, no Hazards\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab si, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab di, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bp, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Register-Register moves, with Hazards\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab si, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab di, si}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bp, di}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Memory-Register moves, no Hazards\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, i}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab cx, k}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab dx, l}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab ax, i}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab bx, j}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#code (\u8220\'93Register-Memory moves, no Hazards\u8221\'94)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
%do}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab i, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab j, bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab k, cx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab l, dx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab i, ax}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
mov \tab j, bx}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#endcode}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
#end}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af14\langfe1033\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
Sortie g\u233\'e9n\u233\'e9r\u233\'e9e par ce programme :}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
IBM/L 2.0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Public Domain instruction Benchmarking Language}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
by Randall Hyde, inspired by Roedy Green}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
All times are measured in ticks, accurate only to \u210\'d2 2.}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
CPU: 80486}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Register-Register moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Register-Register moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Register-Register moves, no Hazards :25}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Register-Register moves, with Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Register-Register moves, with Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Register-Register moves, with Hazards :51}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Memory-Register moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Memory-Register moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Memory-Register moves, no Hazards :67}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Computing Overhead: Register-Memory moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Testing: Register-Memory moves, no Hazards}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Register-Memory moves, no Hazards :387}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\loch\f10\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_12_02}{\*\bkmkend p6_12_02}\rtlch \ltrch\fs23\b\loch
6.12.2\tab Exercices IBM/L}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le r\u233\'e9pertoire du chapitre 6 contient diff\u233\'e9rents exemples de programmes IBM/L (les fichiers avec l'extension .ibm). Ex6_1.ibm teste trois s\u233\'e9quences qui calculent la valeur absolue d'un entier. Ex6_2.ibm teste trois fa\u231\'e7ons diff\u233\'e9rentes de faire un d\u233\'e9calage de huit bits \u224\'e0 gauche. Ex6_3.ibm teste l'acc\u232\'e8s \u224\'e0 des donn\u233\'e9es de type word \u224\'e0 des adresses paires et impaires de la m\u233\'e9moire. Ex6_4.ibm compare le temps requis pour charger es:bx d'un emplacement de m\u233\'e9moire avec le temps requis pour faire la m\u234\'eame chose avec une constante. Ex6_5.ibm compare le temps requis pour permuter deux registres avec et sans l'instruction XCHG. Ex6_6.ibm compare l'instruction de multiplication avec les instructions d\u233\'e9calage/addition \u233\'e9quivalentes. Ex6_7.ibm compare la vitesse d'un mov reg, reg avec celle d'un mov reg, mem. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Compilez chacun de ces programmes \u224\'e0 l'aide de la commande DOS suivante : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
ibml ex6_1.ibm >ex6_1.asm}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport : }{\loch
IBM/L}{\rtlch \ltrch\b\loch
 }{\loch
\u233\'e9crit}{\rtlch \ltrch\b\loch
 }{\loch
sa sortie dans la sortie standard, donc utilisez une commande de redirection vers un fichier comme celle ci-dessus. Une fois cr\u233\'e9\u233\'e9 le fichier, assemblez-le avec MASM et ex\u233\'e9cutez le r\u233\'e9sultat. Incluez le listing et le r\u233\'e9sultat dans votre rapport.  }{\rtlch \ltrch\b\loch
Pour aller plus loin : }{\loch
\u233\'e9crivez vos propres programmes IBM/L afin de tester certaines s\u233\'e9quences d'instructions. Incluez \u233\'e9galement vos codes sources IBM/L. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Attention : }{\loch
Afin d'obtenir les r\u233\'e9sultats les plus pr\u233\'e9cis \u233\'e9vitez d'ex\u233\'e9cuter les programmes cr\u233\'e9\u233\'e9s par vos fichiers IBM/L sous Windows, mais lancez-les plut\u244\'f4t \u224\'e0 partir du mode DOS pur. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\b\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\li851\ri0\lin851\rin0\fi-851\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
6.13\tab Projets de }{{\*\bkmkstart p6_13}{\*\bkmkend p6_13}\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammation}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
1)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez une courte routine "GetLine" qui lit jusqu'\u224\'e0 80 caract\u232\'e8res de l'utilisateur et place ces caract\u232\'e8res \u224\'e0 des emplacements successifs d'un tampon dans votre segment de donn\u233\'e9es. Pour saisir et afficher les caract\u232\'e8res utilisez les appels du BIOS INT 16h et INT 10h d\u233\'e9crits dans ce chapitre. }{\rtlch \ltrch\lang3084\loch
La ligne }{\loch
doit terminer \u224\'e0 la premi\u232\'e8re occurrence du caract\u232\'e8re }{\rtlch \ltrch\i\loch
retour \u224\'e0 la ligne}{\loch
 (code ASCII 0Dh) ou apr\u232\'e8s que l'utilisateur a entr\u233\'e9 le 80me caract\u232\'e8re. Assurez-vous de compter le nombre de caract\u232\'e8res qui sont effectivement saisis par l'utilisateur, pour utiliser cette donn\u233\'e9e plus tar}{\rtlch \ltrch\lang3084\loch
d}{\loch
. Dans le r\u233\'e9pertoire du chapitre 6, il y a un programme "shell" con\u231\'e7u pour ce projet (proj6_1.asm). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
2)\tab Modifiez la routine que vous venez d'\u233\'e9crire pour qu'elle traite correctement le caract\u232\'e8re de retour arri\u232\'e8re (}{\rtlch \ltrch\i\loch
backspace}{\loch
) (code ASCII 08h). Chaque fois que l'utilisateur presse cette touche, il faudra supprimer la frappe pr\u233\'e9c\u233\'e9dente du tampon (}{\rtlch \ltrch\lang3084\loch
et s\u8217\'92il n\u8217\'92y a pas un caract\u232\'e8re pr\u233\'e9c\u233\'e9dent dans le tampon, alors le }{\loch
backspace sera ignor\u233\'e9). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
3)\tab Vous pouvez utiliser l'op\u233\'e9ration XOR pour crypter et }{\rtlch \ltrch\lang3084\loch
d\u233\'e9crypter}{\loch
 des donn\u233\'e9es. Si vous faites un XOR }{\rtlch \ltrch\lang3084\loch
sur tous }{\loch
les caract\u232\'e8res d'un message }{\rtlch \ltrch\lang3084\loch
contre }{\loch
une certaine valeur, vous finirez par brouiller le message. Vous }{\rtlch \ltrch\lang3084\loch
pouvez }{\loch
r\u233\'e9cup\u233\'e9rer le message original en appliquant encore un XOR sur les caract\u232\'e8res de ce message avec la m\u234\'eame valeur. Modifiez le code du projet n\u176\'b02 de sorte qu'il encode chaque octet du message avec la valeur 0Fh et affiche le message ainsi encrypt\u233\'e9 \u224\'e0 l'\u233\'e9cran. Apr\u232\'e8s }{\rtlch \ltrch\lang3084\loch
l\u8217\'92}{\loch
avoir affich\u233\'e9, d\u233\'e9cryptez-le en lui appliquant de nouveau un XOR 0Fh. Affichez alors le message original. Notez que vous pouvez utiliser la valeur du compteur obtenue par le code "GetLine" pour d\u233\'e9terminer combien de caract\u232\'e8res il faut traiter. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
4)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez une routine "PutString" capable d'afficher les caract\u232\'e8res point\u233\'e9s par la paire de registres es:di. Cette routine doit afficher tous les caract\u232\'e8res, jusqu'au z\u233\'e9ro de terminaisons de cha\u238\'eene (mais sans inclu}{\rtlch \ltrch\lang3084\loch
re ce dernier)}{\loch
. }{\rtlch \ltrch\lang3084\loch
Elle doit aussi }{\loch
pr\u233\'e9server tous les registres qu'elle modifie. Il y a un programme "shell" (PROJ6_4.ASM)}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Ce programme n'est pas pr\u233\'e9sent dans le dossier du chapitre 6, malgr\u233\'e9 cette mention, n.d.t.}
}}
}{\loch
 fourni dans le r\u233\'e9pertoire du chapitre 6 qui a \u233\'e9t\u233\'e9 con\u231\'e7u pour ce projet. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
5)\tab Pour }{\rtlch \ltrch\lang3084\loch
produire}{\loch
 une valeur enti\u232\'e8re de 16 bits }{\rtlch \ltrch\lang3084\loch
dans son \u233\'e9quivalent de cha\u238\'eene nu\u233\'e9m\u233\'e9rique dans le code ASCII (par exemple le chiffre 1 a le num\u233\'e9ro 48)}{\loch
, vous pouvez utiliser l'algorithme suivant : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
if value = 0 then write(\u8216\'910\u8217\'92)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
else begin}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
DivVal := 10000;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
while (Value mod DivVal) = 0 do begin}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Value := Value mod DivVal;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
DivVal := DivVal div 10;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch

\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
while (DivVal > 1) do begin}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
write ( chr( Value div DivVal + 48)); (* 48 = \u8216\'910\u8217\'92 *)}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Value := Value mod DivVal;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
DivVal := DivVal div 10;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi0\sb0\sa120{\rtlch\dbch\af14\langfe1033\dbch\af14\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
\u201\'c9crivez }{\rtlch\dbch\af14\langfe1033\dbch\af14\hich\af7 \ltrch\fs21\loch\f7\loch
une courte routine qui prend une valeur quelconque dans ax et l'affiche comme une cha\u238\'eene d\u233\'e9cimale correspondante. Utilisez l'INT 10h pour afficher les caract\u232\'e8res \u224\'e0 l'\u233\'e9cran. Vous pouvez utiliser le programme "shell" fourni dans le r\u233\'e9pertoire du Chapitre Six (proj6_5.asm) pour commencer ce projet.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
6)\tab Pour saisir un entier de 16 bits du clavier, vous avez besoin d'utiliser un code qui utilise l'algorithme suivant : }
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Value := 0}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi0{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
repeat}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
getchar(ch);}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
if (ch >= \u8216\'910\u8217\'92) and (ch <= \u8216\'919\u8217\'92) then begin}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li1702\ri0\lin1702\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
Value := Value * 10 + ord(ch) - ord(\u8216\'910\u8217\'92);}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li851\ri0\lin851\rin0\fi851{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
end;}
\par \pard\plain \s0\dbch\af13\langfe1081\dbch\af18\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f5\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi851\sb0\sa120{\rtlch\dbch\af17\langfe1033\dbch\af17\hich\af10 \ltrch\fs17\loch\f10\loch
until (ch < \u8216\'910\u8217\'92) or (ch > \u8216\'919\u8217\'92);}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab Utilisez l'instruction INT 16h (d\u233\'e9crite dans ce chapitre) pour saisir des caract\u232\'e8res tap\u233\'e9s au clavier. Utilisez la routine de sortie du projet 4 pour afficher le r\u233\'e9sultat entr\u233\'e9. Pour commencer le projet, vous pouvez vous servir du fichier mod\u232\'e8le PROJ6_6.ASM du r\u233\'e9pertoire du chapitre 6. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-709\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p6_14}{\*\bkmkend p6_14}\rtlch \ltrch\fs23\b\loch
6.14\tab R\u233\'e9sum\u233\'e9}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille des processeurs 80x86 pr\u233\'e9sente un jeu CISC d'instructions tr\u232\'e8s riche. Tous les processeurs de cette cat\u233\'e9gorie maintiennent leur compatibilit\u233\'e9 avec les processeurs ant\u233\'e9rieurs e}{\rtlch \ltrch\lang3084\loch
t}{\loch
 en admettant toutes les instructions. Les programmes \u233\'e9crits pour cette famille fonctionnent g\u233\'e9n\u233\'e9ralement pour tous ses membres, alors que ceux \u233\'e9crits avec les nouvelles instructions des processeurs \u224\'e0 partir du 80286 fonctionneront seulement sur des CPU modernes. La m\u234\'eame chose vaut pour les processeurs 80386 et tous les suivants. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les CPU d\u233\'e9crits dans ce chapitre sont les 8086/8088, le 80286, le 80386, le 80486 et le Pentium (80586). Intel a produit \u233\'e9galement un processeur 80186, mais celui-ci n'a pas \u233\'e9t\u233\'e9 tr\u232\'e8s utilis\u233\'e9 }{\rtlch \ltrch\lang3084\loch
dans }{\loch
les ordinateurs personnels}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
Il y a, par cons\u233\'e9quent, peu de PC qui se servent de ce CPU. Les applications de contr\u244\'f4le ont \u233\'e9t\u233\'e9 les principaux utilisateurs de ce syst\u232\'e8me. Le 80186 comprend la plupart des instructions sp\u233\'e9cifiques du 80286, mais il ne dispose pas des instructions du mode prot\u233\'e9g\u233\'e9 qui ont \u233\'e9t\u233\'e9 int\u233\'e9gr\u233\'e9s \u224\'e0 partir du 80286. }
}}
}{\loch
.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le jeu d'instructions 80x86 peut \u234\'eatre logiquement divis\u233\'e9 en huit cat\u233\'e9gories : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
t}{\loch
ransfert de }{\rtlch \ltrch\lang3084\loch
d}{\loch
onn\u233\'e9es" (6.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
c}{\loch
onversion" (6.4)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions arithm\u233\'e9tiques", (6.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions logiques et de }{\rtlch \ltrch\lang3084\loch
m}{\loch
anipulation de }{\rtlch \ltrch\lang3084\loch
b}{\loch
its" (6.6)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions d}{\rtlch \ltrch\lang3084\loch
'E/S" (6.7)}{\loch
\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
t}{\loch
raitement des }{\rtlch \ltrch\lang3084\loch
c}{\loch
ha\u238\'eenes" (6.8)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ontr\u244\'f4le de }{\rtlch \ltrch\lang3084\loch
f}{\loch
lux" (6.9)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li851\ri0\lin851\rin0\fi-851\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions diverses" (6.10)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Beaucoup d'instructions affectent diff\u233\'e9rents bits }{\rtlch \ltrch\lang3084\loch
du registre }{\loch
drapeaux (flags) }{\rtlch \ltrch\lang3084\loch
des}{\loch
 80x86. Certaines peuvent tester ces drapeaux, comme si elles \u233\'e9taient des valeurs bool\u233\'e9ennes. Les }{\rtlch\ai \ltrch\i\loch
flags}{\loch
 indiquent aussi le r\u233\'e9sultat d'une comparaison (\u233\'e9galit\u233\'e9, inf\u233\'e9riorit\u233\'e9 ou sup\u233\'e9riorit\u233\'e9). Ce sujet a \u233\'e9t\u233\'e9 trait\u233\'e9 dans les sections suivantes : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Le }{\rtlch \ltrch\lang3084\loch
r}{\loch
egistre }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\rtlch \ltrch\lang3084\loch
tat}{\loch
 du }{\rtlch \ltrch\lang3084\loch
p}{\loch
rocesseur" (6.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s }{\rtlch \ltrch\lang3084\loch
S}{\rtlch \ltrch\i\loch
et }{\rtlch \ltrch\lang3084\i\loch
on Condition}{\loch
" (6.6.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s de }{\rtlch \ltrch\lang3084\loch
s}{\loch
auts conditionnels" (6.9.4)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a aussi diverses instructions permettant de transf\u233\'e9rer des donn\u233\'e9es entre les registres et la m\u233\'e9moire. Il s'agit d\u8217\'92instructions }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on utilise }{\loch
le plus souvent. La famille 80x86}{\rtlch \ltrch\lang3084\loch
 fournit un nombre diverse de ces instructions, afin d\u8217\'92aider \u224\'e0 faciliter la t\u226\'e2che d\u8217\'92}{\loch
\u233\'e9crire des programmes rapides et efficaces. Pour les d\u233\'e9tails voir :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
t}{\loch
ransfert de }{\rtlch \ltrch\lang3084\loch
d}{\loch
onn\u233\'e9es" (6.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 MOV" (6.3.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 XCHG" (6.3.2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s LDS, LES, LFS et LSS" (6.3.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 LEA" (6.3.4)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s PUSH et POP" (6.3.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s LAHF et SAHF" (6.3.6)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il existe \u233\'e9galement plusieurs instructions pour convertir des donn\u233\'e9es d'une forme \u224\'e0 l'autre, pour les extensions sign\u233\'e9es et les extensions de z\u233\'e9ros pour les instructions de traduction de valeurs }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\loch
une table et pour celles de conversion grand/petit endien. Voir :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s MOVZX, MOVSX, CBW, CWD, CWDE et CDQ" (6.4.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 BSWAP" (6.4.2)\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 XLAT" (6.4.3) }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions arithm\u233\'e9tiques permettent toutes les op\u233\'e9rations communes : addition, multiplication, soustraction, division, n\u233\'e9gation, comparaisons, incr\u233\'e9ments, d\u233\'e9cr\u233\'e9ments, ainsi que d'autres instructions de support \u224\'e0 l'arithm\u233\'e9tique BCD (binaire cod\u233\'e9 d\u233\'e9cimal) : AAA, AAD, AAM, AAS, DAA et DAS. Pour des informations sur ces instructions, voir : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions arithm\u233\'e9tiques" (6.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
a}{\rtlch \ltrch\lang3084\loch
ddition}{\loch
 : ADD, ADC, INC, XADD, AAA et DAA" (6.5.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s ADD et ADC" (6.5.1.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 INC" (6.5.1.2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 XADD" (6.5.1.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s de }{\rtlch \ltrch\lang3084\loch
s}{\loch
oustraction : SUB, SBB, DEC, AAS et DAS" (6.5.2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 CMP" (6.5.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s CMPXCHG et CMPXCHG8B" (6.5.4)\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 NEG" (6.5.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s de }{\rtlch \ltrch\lang3084\loch
m}{\loch
ultiplication : MUL, IMUL et AAM" (6.5.6)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s de }{\rtlch \ltrch\lang3084\loch
d}{\loch
ivision : DIV, IDIV et AAD" (6.5.7)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous avez \u233\'e9galement \u224\'e0 disposition un riche ensemble d'op\u233\'e9rations bool\u233\'e9ennes, de d\u233\'e9calage, de rotation et de manipulation de bits. Ces instructions manipulent individuellement les bits de leurs op\u233\'e9randes vous permettant d'effectuer des AND, OR, XOR et NOT, de faire des d\u233\'e9calages et des rotations, de tester et activer/nettoyer/invertir les bits et finalement mettre une op\u233\'e9rande \u224\'e0 0 ou \u224\'e0 1 selon l'\u233\'e9tat du registre flags. Pour plus d'informations, revoir : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions logiques et de }{\rtlch \ltrch\lang3084\loch
m}{\loch
anipulation de }{\rtlch \ltrch\lang3084\loch
b}{\loch
its (6.6)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s logiques : AND, OR, XOR et NOT" (6.6.1)\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s de }{\rtlch \ltrch\lang3084\loch
r}{\loch
otation : RCL, RCR, ROL et ROR" (6.6.3)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
o}{\loch
p\u233\'e9rations sur les }{\rtlch \ltrch\lang3084\loch
b}{\loch
its" (6.6.4)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s \u171\'ab }{\rtlch \ltrch\lang3084\loch
S}{\loch
et }{\rtlch \ltrch\lang3084\loch
on Condition}{\loch
 \u187\'bb" (6.6.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a aussi deux instructions d'E/S dans le jeu 80x86 : IN et OUT. Il s'agit vraiment de formes sp\u233\'e9ciales d'instruction MOV, qui agissent dans l'espace d'adressage des entr\u233\'e9es/sorties au lieu que dans l'espace d'adressage de la m\u233\'e9moire. Normalement, on utilise ces instructions pour acc\u233\'e9der aux registres mat\u233\'e9riels des composantes p\u233\'e9riph\u233\'e9riques. On a trait\u233\'e9 ces instructions au paragraphe :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions d'E/S" (6.7)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille 80x86 fournit un r\u233\'e9pertoire \u233\'e9tendu d'instructions manipulant des cha\u238\'eenes de donn\u233\'e9es. Ces instructions comprennent movs, lods, stos, scas, cmps, ins, outs, rep, repz, repe, repnz et repne. Pour plus d'informations :}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ha\u238\'eenes" (6.8)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de transfert de contr\u244\'f4le permettent de cr\u233\'e9er des boucles, des sous-routines, des s\u233\'e9quences conditionnelles et divers autres tests. On a vu ces instructions aux paragraphes suivants : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ontr\u244\'f4le de }{\rtlch \ltrch\lang3084\loch
f}{\loch
lux" (6.9)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Sauts inconditionnels" (6.9.1)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s CALL et RET" (6.9.2)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s INT, INTO, BOUND et IRET" (6.9.13)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Sauts conditionnels" (6.9.4)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "Les }{\rtlch \ltrch\lang3084\loch
instruction}{\loch
s JCXZ/JECXZ" (6.9.5)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 LOOP" (6.9.6)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 LOOPE/LOOPZ" (6.9.7)\tab }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
L'instruction}{\loch
 LOOPNE/LOOPNZ" (6.9.8)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce chapitre d\u233\'e9crit finalement d'autres instructions diverses. Ces instructions manipulent directement les drapeaux dans le registre flags, donnent acc\u232\'e8s \u224\'e0 certains services du processeur ou effectuent des op\u233\'e9rations en mode prot\u233\'e9g\u233\'e9. Le chapitre n'a fait qu'une br\u232\'e8ve mention des instructions en mode prot\u233\'e9g\u233\'e9, car elles ne sont pas d'usage dans des applications autres que des programmes syst\u232\'e8me ou des syst\u232\'e8mes d'exploitation. R}{\rtlch \ltrch\lang3084\loch
\u233\'e9f\u233\'e9rez-vous \u224\'e0 un ouvrage plus sp\u233\'e9cifique pour en avoir une description d\u233\'e9taill\u233\'e9e}{\loch
. Ce sujet a \u233\'e9t\u233\'e9 trait\u233\'e9 au paragraphe : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \u8226\'95 "}{\rtlch \ltrch\lang3084\loch
I}{\loch
nstructions diverses" (6.10)}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\li0\ri0\lin0\rin0\fi0\sb0\sa120\loch

\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart a}{\*\bkmkend a}\rtlch \ltrch\fs23\b\loch
5.11\tab Questions}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
1.\tab Donnez un exemple pour montrer qu'il faut n+1 bits pour contenir la somme de deux valeurs binaires de n bits. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
2. \tab En ins\u233\'e9rant des instructions avant ADC et SBB, on peut forcer ces derni\u232\'e8res \u224\'e0 se comporter exactement comme ADD et SUB. Quelle instruction faudrait-il ins\u233\'e9rer pour que ADC ait le m\u234\'eame effet que ADD ? Et quelle instruction faudrait-il ins\u233\'e9rer pour que SBB se }{\rtlch \ltrch\lang3084\loch
comporte}{\loch
 comme SUB ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-851\sb0\sa120{
   }{\loch
3. \tab Etant donn\u233\'e9 que vous pouvez utiliser les instructions PUSH et POP pour manipuler des donn\u233\'e9es qui se trouvent au sommet de la pile, expliquez comment vous pourriez modifier une adresse de retour }{\rtlch \ltrch\lang3084\loch
a}{\loch
u sommet de la pile, de sorte }{\rtlch \ltrch\lang3084\loch
\u224\'e0 permettre }{\loch
qu'une instruction RET }{\rtlch \ltrch\lang3084\loch
retourne}{\loch
 deux octets apr\u232\'e8s l'adresse de retour originale. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
4.\tab Donnez au moins quatre mani\u232\'e8res diff\u233\'e9rentes d'ajouter 2 \u224\'e0 la valeur du registre BX. Aucune d'elles ne doit employer plus de deux instructions (sachez qu'il existe jusqu'\u224\'e0 six moyens de le faire). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
5. \tab Supposez que l'adresse cible des quatre sauts conditionnels suivants soit au-del\u224\'e0 de la plage possible pour des branchements courts}{\rtlch \ltrch\lang3084\loch
. Modifiez chacune de ces instructions de sorte qu'elles ex\u233\'e9cutent des op\u233\'e9rations correctes (par exemple vous pouvez sauter inconditionnellement sur toute la distance) : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab a) JS Etiquette1\tab b) JE Etiquette2\tab c) JZ Etiquette3}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab d) JC Etiquette4\tab e) JBE LaBas\tab f) JG Etiquette5}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
6.\tab Expliquez la diff\u233\'e9rence entre le drapeau de retenue (carry flag) et le drapeau de d\u233\'e9passement de capacit\u233\'e9 (overflow flag). }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
7.\tab Dans quel contexte utiliseriez-vous les instructions CBW et CWD pour effectuer l'extension sign\u233\'e9e d'une valeur ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
8. \tab Quelle est la diff\u233\'e9rence entre les instructions "MOV reg, imm\u233\'e9diat" et "LEA reg, adresse" ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
9. \tab Qu'est-ce que l'instruction INT nn }{\rtlch \ltrch\lang3084\loch
empile }{\loch
que l'instruction CALL FAR }{\rtlch \ltrch\lang3084\loch
n\u8217\'92empile }{\loch
pas ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
10.\tab Dans quel but utilise-t-on normalement l'instruction JCXZ ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
11.\tab Expliquez le fonctionnement des instructions LOOP, LOOPE/LOOPZ et LOOPNE/LOOPNZ. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
12. \tab Quels registres autres que flags sont}{\rtlch \ltrch\lang3084\loch
-ils affect\u233\'e9s par les instructions MUL, IMUL, DIV et IDIV ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
13.\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
num\u233\'e9rez trois diff\u233\'e9rences entre les instructions "DEC AX" et "SUB AX, 1". }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
14.\tab Parmi les instructions logiques, de d\u233\'e9calage et de rotation, lesquelles n'affectent pas le zero flag ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
15. \tab Pourquoi l'instruction SAR nettoie-t-elle toujours le }{\rtlch \ltrch\lang3084\loch
drapeau}{\loch
 overflow ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
16.\tab Sur le 80386, l'instruction IMUL est presque compl\u232\'e8tement orthogonale (g\u233\'e9n\u233\'e9ralis\u233\'e9e). Presque. Donnez certains exemples de formes permises pour ADD qui n'ont pas d'\u233\'e9quivalent en IMUL. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
17.\tab Pourquoi Intel }{\rtlch \ltrch\lang3084\loch
n'a pas}{\loch
 g\u233\'e9n\u233\'e9ralis\u233\'e9 IDIV comme il avait fait pour IMUL ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
18.\tab De quelle(s) instruction(s) auriez-vous besoin pour lire une valeur de huit bits \u224\'e0 l'adresse d'Entr\u233\'e9es/Sorties 378h ? Donnez les instructions sp}{\rtlch \ltrch\lang3084\loch
\u233\'e9cifiques pour faire cela. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
19.\tab Quels sont les flags utilis\u233\'e9s par le 80x86 pour marquer un d\u233\'e9passement de capacit\u233\'e9 arithm\u233\'e9tique non sign\u233\'e9 ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
20. \tab Et quels sont les drapeaux correspondants pour un d\u233\'e9passement sign\u233\'e9 ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
21.\tab Quels flags les syst\u232\'e8mes 80x86 utilisent pour marquer les conditions }{\rtlch \ltrch\i\loch
non sign\u233\'e9es}{\loch
 suivantes ? Et comment ces drapeaux devraient-ils \u234\'eatre pour que la condition soit VRAI}{\rtlch \ltrch\lang3084\loch
E}{\loch
 ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab a) }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
gal\tab \tab \tab b) Non \u233\'e9gal\tab \tab c) Inf\u233\'e9rieur}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab d) Inf\u233\'e9rieur ou \u233\'e9gal\tab \tab e) Sup\u233\'e9rieur \u224\'e0\tab \tab f) Sup\u233\'e9rieur ou \u233\'e9gal}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
22.\tab  R\u233\'e9p\u233\'e9tez la derni\u232\'e8re question pour des comparaisons }{\rtlch \ltrch\i\loch
sign\u233\'e9es}{\loch
. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
23.\tab Expliquez le fonctionnement des instructions CALL et RET. D\u233\'e9crivez pas \u224\'e0 pas ce que chaque variante de ces instructions fait. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
24.\tab La s\u233\'e9quence suivante permute }{\rtlch \ltrch\lang3084\loch
les valeurs des }{\loch
variables I et J : }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab xchg\tab ax, i}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab xchg\tab ax, j}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab xchg\tab ax, i}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab Sur le 80486 les instructions "MOV reg, mem" et "MOV mem, reg" consomment un seul cycle d'horloge (sous les conditions appropri\u233\'e9es), alors que l'instruction "XCHG reg, mem" demande trois cycles. Donnez une s\u233\'e9quence plus rapide que ci-dessus, appropri\u233\'e9e au 80486. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
25.\tab Sur le 80386, l'instruction "MOV reg, mem" requiert quatre cycles, "MOV mem, reg" consomme trois cycles et "XCHG reg, mem" en demande cinq. Donnez une s\u233\'e9quence plus rapide du probl\u232\'e8me de permutation pr\u233\'e9sent\u233\'e9 \u224\'e0 la question 24, appropri\u233\'e9e au 80386. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
26. \tab Sur le 80486 les instructions "MOV acc, mem"}{{\super \loch \chftn{\*\footnote \chftn\pard\plain \s31\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
O\u249\'f9 }{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\loch
acc}{\rtlch\dbch\af14\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\loch
 repr\u233\'e9sente soit AL, soit AX, soit EAX, n.d.t. }
}}
}{\loch
 et "MOV reg, mem" consomment seulement un cycle pour s'ex\u233\'e9cuter (sous les conditions appropri\u233\'e9es). En pr\u233\'e9sumant que le reste ne change pas, pourquoi serait-il mieux d'utiliser "MOV acc, mem" au lieu de "MOV reg, mem" pour charger une valeur dans AL/AX/EAX ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
27. \tab Quelles instructions }{\rtlch \ltrch\lang3084\loch
chergent des valeurs }{\loch
de 32 bits sur les processeurs ant\u233\'e9rieurs au 80386 ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
28. \tab Comment pourriez-vous utiliser PUSH et POP de sorte \u224\'e0 pr\u233\'e9server la valeur de AX entre deux sections de votre code ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
29. \tab Si, imm\u233\'e9diatement apr\u232\'e8s \u234\'eatre entr\u233\'e9 dans une sous-routine, vous utilisez "pop ax", quelle valeur aurez-vous dans AX ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
30. \tab Quel est l'un des usages principaux de l'instruction SAHF ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
31. \tab Quelle est la diff\u233\'e9rence entre CWD et CWDE ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
32. \tab L'instruction BSWAP permet de convertir entre valeur }{\rtlch \ltrch\i\loch
big endian }{\loch
et }{\rtlch \ltrch\i\loch
little endian }{\loch
de 32 bits. Quelle instruction pourriez-vous utiliser pour faire la m\u234\'eame chose entre valeurs de 16 bits ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
33. \tab Quelle instruction utiliseriez-vous pour convertir entre une valeur }{\rtlch \ltrch\i\loch
little endian}{\loch
 de 32 bits et une valeur }{\rtlch \ltrch\i\loch
big endian }{\loch
de 32 bits ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
34. \tab Expliquez comment utiliser l'instruction XLAT pour convertir un caract\u232\'e8re alphab\u233\'e9tique }{\rtlch \ltrch\lang3084\loch
majuscule }{\loch
se trouvant dans AL (en }{\rtlch \ltrch\lang3084\loch
supposant}{\loch
 qu'il \u233\'e9tait en minuscules) sans modifier le autres valeurs dans AL.}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
35. \tab A quelle instruction CMP ressemble-t-elle le plus ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
36. \tab A quelle instruction TEST ressemble-t-elle le plus ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
37. \tab Quelle est la fonction de l'instruction NEG ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
38. \tab }{\rtlch \ltrch\lang3084\loch
Dans}{\loch
 quelles deux circonstances les instructions DIV et IDIV \u233\'e9chouent ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
39. \tab Quelle est la diff\u233\'e9rence entre RCL et ROL ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
40. \tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un court segment de code \u224\'e0 l'aide de l'instruction LOOP pouvant appeler la sous-routine "Appellez_Moi" 25 fois. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
41. \tab Sur les CPU 80486 et Pentium, l'instruction LOOP n'est pas aussi rapide que ses instructions d\u233\'e9compos\u233\'e9es qui font la m\u234\'eame chose. R\u233\'e9crivez le code de la question 40 pour produire un ex\u233\'e9cutable plus rapide. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
42. \tab Comment d\u233\'e9termineriez-vous le "saut oppos\u233\'e9" \u233\'e9tant donn\u233\'e9 un saut conditionnel ? Pourquoi }{\rtlch \ltrch\lang3084\loch
est-il }{\loch
le meilleur algorithme ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
43. \tab Donnez un exemple d'instruction BOUND et expliquez ce que l'exemple fait. }
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
44.\tab Quelle est la diff\u233\'e9rence entre les instructions IRET et RET (far) ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
45.\tab L'instruction BT (bit test) copie un bit sp\u233\'e9cifique dans le drapeau carry. Si ce bit vaut 1 alors le drapeau sera activ\u233\'e9 et si le bit vaut 0, le drapeau sera nettoy\u233\'e9. Supposez vouloir mettre \u224\'e0 z\u233\'e9ro le drapeau carry si le bit \u233\'e9tait \u224\'e0 0 et l'activer dans le cas contraire. Quelle serait l'instruction \u224\'e0 ex\u233\'e9cuter apr\u232\'e8s BT ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
46. \tab Vous pouvez simuler une instruction de retour }{\rtlch \ltrch\i\loch
far}{\loch
 }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l'aide d'une variable de type double word et deux instructions. Quelles seraient ces instructions ?}
\par \pard\plain \s30\dbch\af14\langfe1033\dbch\af18\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120\loch

\par }