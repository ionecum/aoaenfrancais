{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Wingdings 3;}{\f5\froman\fprq2\fcharset0 Wingdings;}{\f6\froman\fprq2\fcharset0 Footlight MT Light;}{\f7\froman\fprq2\fcharset0 Arial;}{\f8\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f9\froman\fprq2\fcharset0 Courier New;}{\f10\froman\fprq2\fcharset0 Arial Narrow;}{\f11\froman\fprq2\fcharset0 Symbol;}{\f12\fnil\fprq2\fcharset0 Wingdings;}{\f13\fnil\fprq2\fcharset0 Wingdings 3;}{\f14\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f15\fnil\fprq2\fcharset0 Arial Narrow;}{\f16\fnil\fprq2\fcharset0 Times New Roman;}{\f17\fnil\fprq2\fcharset0 Footlight MT Light;}{\f18\fnil\fprq2\fcharset0 Courier New;}{\f19\fnil\fprq2\fcharset0 Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Normal;}
{\s1\sbasedon0\snext1\dbch\af14\langfe1033\dbch\af14\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f7\fs23\lang1033\b\kerning1 Heading 1;}
{\*\cs15\snext15 WW8Num1z0;}
{\*\cs16\snext16 Default Paragraph Font;}
{\*\cs17\sbasedon16\snext17\super Footnote Characters;}
{\*\cs18\sbasedon16\snext18 Page Number;}
{\*\cs19\snext19\super Footnote Anchor;}
{\*\cs20\snext20\super Endnote Anchor;}
{\*\cs21\snext21 Endnote Characters;}
{\s22\sbasedon0\snext23\dbch\af14\langfe1081\dbch\af14\afs28\qj\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f8\fs28\lang1033\kerning1 Heading;}
{\s23\sbasedon0\snext23\dbch\af14\langfe1033\dbch\af14\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f7\fs35\lang1033\b\kerning1 Text Body;}
{\s24\sbasedon23\snext24\dbch\af14\langfe1033\dbch\af14\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f7\fs35\lang1033\b\kerning1 List;}
{\s25\sbasedon0\snext25\dbch\af14\langfe1081\dbch\af14\afs24\ai\qj\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f6\fs24\lang1033\i\kerning1 Caption;}
{\s26\sbasedon0\snext26\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Index;}
{\s27\sbasedon0\snext27\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f9\fs18\lang1033\kerning1 Code;}
{\s28\sbasedon0\snext28\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1 Body Text Indent 3;}
{\s29\sbasedon0\snext29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1 Text Body Indent;}
{\s30\sbasedon0\snext30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1 Footnote;}
{\s31\sbasedon0\snext31\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Header and Footer;}
{\s32\sbasedon0\snext32\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Footer;}
{\s33\sbasedon0\snext33\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1 Body Text 2;}
{\s34\sbasedon0\snext34\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1 Body Text Indent 2;}
{\s35\sbasedon0\snext35\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Table Contents;}
{\s36\sbasedon35\snext36\dbch\af14\langfe1081\dbch\af14\afs20\ab\qc\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\b\kerning1 Table Heading;}
{\s37\sbasedon0\snext37\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1 Frame Contents;}
}{\*\generator LibreOffice/6.4.4.2$Windows_X86_64 LibreOffice_project/3d775be2011f3886db32dfd395a6a6d1ca2630ff}{\info{\title Organisation Syst\u232\'e8me                           Chapitre trois}{\author Danilo Renzi}{\creatim\yr2002\mo5\dy31\hr3\min1}{\author Danilo Renzi}{\revtim\yr2021\mo5\dy26\hr19\min22}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops{\propname VarBarreEtat}\proptype30{\staticval VarBarreEtat}{\propname VarEtat}\proptype30{\staticval VarEtat}}\deftab720
\hyphauto1\viewscale170
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s32\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af17\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8309\shpright8640\shpz60{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s32\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af17\langfe1081\afs20 \ltrch\cs18\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 61}}}
\par \pard}}}

\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s32\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af17\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8309\shpright8640\shpz60{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s32\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af17\langfe1081\afs20 \ltrch\cs18\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 61}}}
\par \pard}}}

\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s23\dbch\af14\langfe1033\dbch\af14\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f7\fs35\lang1033\b\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\loch
Organisation de }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me                                 Chapitre 3}
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch

\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
M\u234\'eame pour \u233\'e9crire un programme des plus modestes sur microprocesseurs de la famille 80x86, il faut avoir une familiarit\u233\'e9 consid\u233\'e9rable avec ces microprocesseurs. Ecrire un }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\i\loch\f10\loch
bon }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
programme requiert une forte connaissance des composants mat\u233\'e9riels sous-jacents. Malheureusement, ces derniers ne sont pas homog\u232\'e8nes. Des techniques cruciales sur le 8088 pourraient ne pas servir sur des syst\u232\'e8mes 80486. De la m\u234\'eame fa\u231\'e7on, des programmes optimaux sur 80486 pourraient ne produire que de pi\u232\'e8tres performances sur 80286. Heureusement, certaines techniques de programmation restent valables malgr\u233\'e9 les diff\u233\'e9rences hardware. Ce chapitre traitera les effets que le mat\u233\'e9riel peut avoir sur les performances logicielles. }
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch

\par \pard\plain \s1\dbch\af14\langfe1033\dbch\af14\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f7\fs23\lang1033\b\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_0}{\*\bkmkend p3_0}\loch
3.0 \tab Vue }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
nsemble}{\loch
 du }{\rtlch \ltrch\lang3084\loch
c}{\loch
hapitre}
\par \pard\plain \s28\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce chapitre d\u233\'e9crit les composants de base qui constituent un syst\u232\'e8me informatique : le CPU, la m\u233\'e9moire, les entr\u233\'e9es/sorties et les bus qui connectent toutes ces choses ensemble. Certes, on peut \u233\'e9crire des programmes en ignorant ces concepts, cependant des programmes }{\rtlch \ltrch\lang3084\loch
\u224\'e0 }{\loch
hautes performances requi\u232\'e8rent une compl\u232\'e8te compr\u233\'e9hension de }{\rtlch \ltrch\lang3084\loch
ces derniers}{\loch
. }
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
Ce chapitre commence sur l'organisation des bus et de la m\u233\'e9moire. Ces deux composants auront probablement un grand impact sur la performance, encore plus que la vitesse du CPU elle-m\u234\'eame. Le fait de comprendre comment le syst\u232\'e8me des bus est organis\u233\'e9 vous aidera \u224\'e0 concevoir des structures de donn\u233\'e9es }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
parfaitement performantes}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
. De m\u234\'eame, conna\u238\'eetre les caract\u233\'e9ristiques des performances de la m\u233\'e9moire, la mani\u232\'e8re dont les donn\u233\'e9es sont localis\u233\'e9es et l'op\u233\'e9ration de la m\u233\'e9moire }{\rtlch\dbch\af15\dbch\af15\ai\hich\af10 \ltrch\fs21\i\loch\f10\loch
cache}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
, pourra vous aider \u224\'e0 concevoir des logiciels qui s'ex\u233\'e9cutent aussi rapidement que possible. }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
S}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
i vous n'\u234\'eates pas int\u233\'e9ress\u233\'e9 \u224\'e0 \u233\'e9crire }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
un}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
 code ultra rapide vous pouvez sauter cette section ; cependant, la plupart des programmeurs }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
finissent}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
 }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
toujours }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
par se pr\u233\'e9occuper de la vitesse, }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
donc, cette lecture ne sera pas inutile}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
. }
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
Malheureusement, la famille des microprocesseurs 80x86 est assez complexe et d\u233\'e9boussole facilement les \u233\'e9tudiants d\u233\'e9butants. C'est pourquoi, ce chapitre se consacre \u224\'e0 d\u233\'e9crire dans le d\u233\'e9tail quatre membres hypoth\u233\'e9tiques de la famille 80x86 : les microprocesseurs 886, 8286, 8486 et 8686. Ces derniers repr\u233\'e9sentent des versions simplifi\u233\'e9es des puces (chips en anglais) 80x86 et permettent de traiter, sans vous enliser, les diverses caract\u233\'e9ristiques architecturales de l'\u233\'e9norme ensemble d'instructions CISC. Dans ce chapitre on fera usage de processeurs hypoth\u233\'e9tiques, tels que les x86, pour d\u233\'e9crire les concepts de l'encodage des instructions, des modes d'adressage, des instructions s\u233\'e9quentielles, des queues de pr\u233\'e9chargement (}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\i\loch\f10\loch
prefetched queues}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
), du pipelining et des op\u233\'e9rations superscalaires. Encore une fois, il s'agit de concepts que vous n'avez pas besoin d'apprendre si vous voulez juste \u233\'e9crire du code correctement. Mais si vous voulez \u233\'e9crire des logiciels rapides, surtout en parlant des processeurs avanc\u233\'e9s comme le 80486, Pentium et au-dessus, vous devez imp\u233\'e9rativement acqu\u233\'e9rir ces notions. }
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
Ce chapitre peut }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
para\u238\'eetre}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
 comme allant trop loin du c\u244\'f4t\u233\'e9 architectural, }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
il vous donnera peut-\u234\'eatre la sensation que }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
de telles }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
notions }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
devraient }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
se trouver dans des d\u8217\'92}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
ouvrages }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
sp\u233\'e9cifiques, }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
plut\u244\'f4t }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
que dans un livre de }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
programmation. C'est bien loin de la v\u233\'e9rit\u233\'e9 ! Ecrire de }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\i\loch\f10\loch
bons}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
 programmes en assembleur demande une ma\u238\'eetrise \u233\'e9tendue des concepts }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
de l'architecture mat\u233\'e9rielle}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
. D'o\u249\'f9 }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
l'importance qu\u8217\'92on lui donne }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
dans }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\lang3084\loch\f10\loch
ce }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs21\loch\f10\loch
chapitre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }
\par \pard\plain \s0\dbch\af14\langfe1081\dbch\af14\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f6\fs22\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_01}{\*\bkmkend p3_01}\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\b\loch\f10\loch
3.1 \tab Les }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\lang3084\b\loch\f10\loch
c}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\b\loch\f10\loch
omposants de }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\lang3084\b\loch\f10\loch
b}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\b\loch\f10\loch
ase du }{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\lang3084\b\loch\f10\loch
s}{\rtlch\dbch\af15\dbch\af15\hich\af10 \ltrch\fs23\b\loch\f10\loch
yst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On nomme }{\rtlch \ltrch\i\loch
architecture}{\loch
 la conception op\u233\'e9rationnelle de base d'un ordinateur.  }{\rtlch \ltrch\lang3084\loch
C\u8217\'92est dans l\u8217\'92architecture de }{\loch
John von Neumann, un pionnier }{\rtlch \ltrch\lang3084\loch
dans ce domaine, qui se basent }{\loch
la plupart des machines actuelles.  Par exemple, la famille 80x86 utilise l'architecture von Neumann (VNA). Un syst\u232\'e8me }{\rtlch \ltrch\lang3084\loch
ainsi con\u231\'e7u comporte trois majeurs }{\loch
composants : l'}{\rtlch \ltrch\i\loch
unit\u233\'e9 de traitement central}{\loch
 (CPU), l'}{\rtlch \ltrch\i\loch
unit\u233\'e9 de m\u233\'e9moire}{\loch
 et l'}{\rtlch \ltrch\i\loch
unit\u233\'e9 des entr\u233\'e9es/sorties }{\loch
(abr\u233\'e9g\u233\'e9 en E/S ou I/O en anglais). La fa\u231\'e7on dont un concepteur combine ces composants d\u233\'e9termine l'impact sur les performances du syst\u232\'e8me (voir fig. 3.1). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3900\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich260\picwgoal8310\pichgoal3900\pngblip
89504e470d0a1a0a0000000d494844520000022a00000104080300000031a0ef5a00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000087849444154789ceddd8b75a33a004551
15e3662886662846cda881e982d1073bb683ad6b238114ce792b3fc0b606f6004a5ed6183713e573ce38432414a81ced957a082a24061512830a894185c4a042
62502131a8901854480c2a24061512830a894185c4a04262502131a8901854480c2a240695ea99217e70c61e3c908d41a57a26eddf012a94c998317d800abdcf
5cc20e9e2e91ca68221963fdc729fcae845b164e735a3a4e97f0207b3972c8ab41a57a660a0efc7b1b5058ffe6c299c60ede87359e444014d786a52eddd3a433
515341a57ac6a3f037b5733a9b840553bcd5b541d06896fb5dbfcd72031cee6dac69ef17f9a0523d63add732062636fdeed518b4f82fe269c67f0c5b85f7f12a
14990cc3b1635e0b2ad5f322fced8a4b546c287e9e883c524937befee4d2e22d3054aa17ef44120477bdaedc5371cbfdee8dca6486160f0954aa1759b8f431cc
785cb857b9a3126f4e5cb88fbd9e4bd27ca8b5a052bd1b80784beb1b1ecf2a69e178b7e5d8e41181cace39bb32b7718fb7260dce9467a8b4d8d4e04c79864a7b
8dadfe04002a24061512830a894185c4a04262502131a8901854480c2a24061512830a894185c4a0426250d9b57f1f74f4589f83caae4185c4a0426250213155
00544e5f10a0fcdb6f50397d914a7e33a81054480c2a2406151263064462cc80488c0b10894185c4a04262502131664024c60c88c4b800911854480c2ae5fae4
7f13933afa0ff41854ca75022ae2768d8d1c2a3bf78f1950b1ce4025bf195484a012828a10544250114ac757b99ce79aa152b646a96c7fa276a988db353672a8
ecdc3f6640c53a0395fc665011824a082a4250094145082a21a8089d808ab85d632387cace31032ad719a8e437838a1054425011824a082a4250094145e80454
c4ed1a1b3954768e1950b9ce4025bf195484a012828a1054425011824a082a4227a0226ed7d8c8a1b273cc80ca75062af9cda0220495105484a012828a50712a
ed059532c97b3357bb54d4ddb07d1f940d2abbc70ca84ccbdefcbdc259f7d113354c45187cd8eea33fee0e7542c5c6bf6bfe93f8718c4b6c5831be1a3c544ad7
07151b759821bc593b85afa0b2777d50892794d94efeb36026f880cade7541c599e9fae91fa0a2ee86ef7660bdbaa0b2b008a52bd1a5672acc80cab4eccdc785
f754cc381ae3baa692df0b50115add9b0f54cc30dd2d83ca6e7541e5f95e257d16a90c50d9ab2ea82c3320e71ea8443e3f5f3f3f042a85eb83caddf7557ea884
8ddccfa5e9a976a9a8bbe1bb1d58af3ea8ccd3edbbb5372aeef68ddbd5daa5c20ca84ccbdefcbdc2fefe1990b3af4e2973d354f27b012a42f2decc0595d24165
f7a05226796fe6824ae9a0b27bea6ed8be0fca0695dd630654a6656f6e7fa286a908830fdb6ddf076583caee41a54cf2decc0595d2fd792aea4b7ed117a3fac7
af8c15eb0454c4eda092e90454980195e90c5484c143251f54e2e0a1920f2a71f050c907953878a8e43b0115713ba8643a01156640653a031561f050c9079538
78a8e4834a1c3c54f241250e1e2af94e4045dc0e2a994e4085195099ce4045183c54f241250e1e2af9a012070f957c508983874abe135011b7834aa6854a819a
a5c20ca84c5f1fb7ef8f67c5a75e7b2d2e40852a25e483e359f1a9d75e0b2a852a25e483e359f1a9d75e0b2a852a25e483e359f1a9d75e0b2a852a25e483e359
f1a9d75e4bde0d5f3c7dd5a0c20c48ac352a07b43b95fc66506933a86841052a6250818a1854980189418519901854b8008941052a6250818a1854a022061566
40625061062406152e406250818a1854a0220615a88841851990185498018941850b901854a0220615a88841052a6250610624061566406250e102240615a888
fd712a5f3328d5eff140a5cd0e8602957e3a18ca2a1575dce5f7c6b6fe3e95235f7bfdacc20ca8c5d44353a39754f2c386cafe8987a64650e92ba8940b2ab582
4a5fb54845092abbd72215f596f89051bf092ab5e202d457502917546a0595be824ab9a0522b66407dd5221566404dd62415f1b15546b521a8d40a2a7d059572
41a55650e9ab16a9284165f75aa4c20ca8c99aa4223eb6caa83604955a41a5afa0522ea8d40a2a7dd5221525a8ec5e8b54980135599354c4c75619d586a0522b
a8f4d5bb43e35c7c6f2bbd3454fa6ae5d098317d8c7f6c1b6e0c2e4f0f8a770b835b793af3812ba8f4d51b2ac318b80ce1ddf31683b5ded08a954fce40cc80fa
ea35151b162724d64c2b5b3c03fa3466407df59a8a89279564e44945dac2fad3cae88f9a3f935ce2fad1a40bd0e0174ef3759d0b17abb597e602d4572fa9d874
a792ae28c31a15ef62f4eb472fc6c68b91f791dcd8b0e0bace6fec9ece4acbb340a5ab5e5289efaf54c6752a635c1d1c842501975fe0e2423b2febdccb3b5da8
f4d52b2a76b949794b65c97f3599b4349e50e6f4d0659dbf1c8d6b9325a874d62b2a4943e65ec5ff174a171f172e42f754aeebfca568f5ccc20ca8af5e50598e
f762e4f95ee33a03723ff3e5c1c433cfed0234bbfbb9f4ea648919505fbda072fdde4a9a26af7e5fe5126e59fd5b7264d39923bc4b0bddb26e32f3cfd33d3e0b
17a0ae5aa7626f8ba6f877f8e94171d9c52d9f0dcbb2f87e991d476e69ddb0f204e91150e9aaf543e3ee2e1ee95ee4556e6dedf263a365ddea2633547a8b9f2c
970b2ab56206d4572d526106d4644d52111f5b65541b824aada0d257502917546a0595be6a918a125476af452acc809aac492ae263ab8c6a4350a91554fa0a2a
e5824aada0d2572d525182caeeb548851950933549457c6c95516d082ab5824a5f41a55c50a91554faaa452a4a50d9bd16a930036ab226a9888fad32aa0d41a5
5650e92ba8940b2ab5824a5f41a55c50a91533a0be6a908adc21a37ed319a81c1454baeac83d0e95aefae4d05469c3780ed9616f824add368ce7901df626a8d4
ede81d5030a84045ec8f53a1724185c4a04262502131a8901854482c522112726bff461fd1af9cfb0f34b1ad605b8c8d690000000049454e44ae426082}}}}}
}{\rtlch \ltrch\fs18\loch
F}{\rtlch \ltrch\fs18\loch
igure 3.1 Une machine von Neumann typique\u182\'b6}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\fs18\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans des machines VNA, comme la cat\u233\'e9gorie 80x86, toute l'action se d\u233\'e9roule dans le CPU. C'est l\u224\'e0 }{\rtlch \ltrch\lang3084\loch
o\u249\'f9 }{\loch
ont lieu les op\u233\'e9rations majeures. Les donn\u233\'e9es et les instructions du CPU r\u233\'e9sident en m\u233\'e9moire avant que le microprocesseur ne les r}{\rtlch \ltrch\lang3084\loch
\u233\'e9clame. Du point de vue du CPU, la plupart des p\u233\'e9riph\u233\'e9riques d'entr\u233\'e9e/sortie ressemblent \u224\'e0 la m\u233\'e9moire, car le CPU peut placer des donn\u233\'e9es sur un p\u233\'e9riph\u233\'e9rique de sortie et en lire sur un p\u233\'e9riph\u233\'e9rique d'entr\u233\'e9e. La diff\u233\'e9rence principale entre la m\u233\'e9moire et les ports d'entr\u233\'e9es/sorties est le fait que ces derniers sont associ\u233\'e9s \u224\'e0 des p\u233\'e9riph\u233\'e9riques du monde ext\u233\'e9rieur. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_01_01}{\*\bkmkend p3_01_01}\rtlch \ltrch\fs23\b\loch
3.1.1\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
us }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les }{\rtlch \ltrch\i\loch
bus syst\u232\'e8me}{\loch
 connectent les diverses composantes d'une machine VNA. La famille 80x86 a trois bus principaux : le }{\rtlch \ltrch\i\loch
bus }{\rtlch \ltrch\lang3084\i\loch
des adresses}{\loch
, le }{\rtlch \ltrch\i\loch
bus de donn\u233\'e9es}{\loch
 et le }{\rtlch \ltrch\i\loch
bus de contr\u244\'f4le}{\loch
. Un bus est une collection de fils dans lesquels des signaux \u233\'e9lectriques passent entre les composants du syst\u232\'e8me. La nature de ces bus varie selon le processeur. Cependant, chaque type de bus transporte des informations }{\rtlch \ltrch\lang3084\loch
de mani\u232\'e8re semblable}{\loch
 sur tous les microprocesseurs ; par exemple, chaque bus de donn\u233\'e9es peut avoir une impl\u233\'e9mentation diff\u233\'e9rente selon qu'il s'agisse du 80386 ou du 8088, mais les deux font passer les donn\u233\'e9es entre le CPU, les entr\u233\'e9es/sorties et la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une composante ordinaire d'un syst\u232\'e8me 80x86 utilise ce qu'on nomme le }{\rtlch \ltrch\i\loch
standard TTL logic level}{\loch
. Ceci veut dire que chaque fil dans un bus utilise un voltage standard pour repr\u233\'e9senter la valeur 0 ou la valeur 1}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
La logique TTL repr\u233\'e9sente la valeur z\u233\'e9ro avec un voltage dans la plage 0,0 \u8211\'96 0,8 volts. Et elle repr\u233\'e9sente la valeur 1 avec un voltage allant de 2,4 \u224\'e0 5 v. Si le signal d'une ligne de bus est entre 0,8 et 2,4 volts, sa valeur est ind\u233\'e9termin\u233\'e9e. Une telle condition doit exister seulement quand le bus se trouve entre un \u233\'e9tat et l'autre.}
}}
}{\loch
. }{\rtlch \ltrch\lang3084\loch
O}{\loch
n sp\u233\'e9cifiera toujours l'une de ces deux valeurs au lieu du voltage qu'elles repr\u233\'e9sentent en vertu du fait que ces niveaux varient d'un ordinateur \u224\'e0 l'autre (sp\u233\'e9cialement si on parle d'ordinateurs portables). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_01_01_01}{\*\bkmkend p3_01_01_01}\rtlch \ltrch\fs23\b\loch
3.1.1.1\tab Le bus de }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
onn\u233\'e9es}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Les processeurs 80x86 utilisent le }{\rtlch \ltrch\i\loch
bus de donn\u233\'e9es}{\loch
 pour transporter les donn\u233\'e9es entre les diff\u233\'e9rentes parties d'un ordinateur. La taille de ce bus varie largement au sein de la famille 80x86. En effet, elle d\u233\'e9finit }{\rtlch \ltrch\i\loch
de facto }{\loch
la \u171\'abtaille du processeur\u187\'bb. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch \ltrch\fs24\b\highlight7\loch
La "taille" du }{\rtlch \ltrch\fs24\lang3084\b\highlight7\loch
p}{\rtlch \ltrch\fs24\b\highlight7\loch
rocesseur}{\rtlch \ltrch\cf7\highlight7\loch
\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch \ltrch\fs20\highlight7\loch
Il y a beaucoup de discussions dans le milieu des ing\u233\'e9nieurs de mat\u233\'e9riel et logiciels \u224\'e0 propos de la taille d'un processeur comme le 8088. D'une perspective de concepteur mat\u233\'e9riel, le 8088 est purement un processeur de 8 bits - il a seulement 8 lignes de donn\u233\'e9es et il est compatible avec la m\u233\'e9moire et les E/S con\u231\'e7ues pour des processeurs de 8 bits. Par contre, les ing\u233\'e9nieurs de logiciels ont soutenu que le 8088 est un processeur de 16 bits. De leur perspective, il n'y a pas de distinction entre le 8088 (avec un bus de donn\u233\'e9es de 8 bits) et le 8086 (avec un bus de donn\u233\'e9es de 16 bits). En effet, la seule diff\u233\'e9rence est la vitesse avec laquelle les deux processeurs travaillent ; le 8086 avec un bus de 16 bits est plus rapide. Finalement, les concepteurs de mat\u233\'e9riel ont eu raison. Malgr\u233\'e9 le fait que les ing\u233\'e9nieurs de logiciels ont du mal \u224\'e0 faire cette distinction dans leurs programmes, on appelle le 8088 un processeur de huit bits et le 8086 un processeur de 16 bits. De m\u234\'eame, le 80386SX (qui a un bus de donn\u233\'e9es de 16 bits) est un processeur 16 bits, alors que le 80386dx (ayant un bus de donn\u233\'e9es de 32 bits) est un microprocesseur de 32 bits.}{\rtlch \ltrch\cf7\fs20\highlight7\loch
\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af\u175\'af----============================-----------|==================-l-}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa115{\loch
Dans un syst\u232\'e8me 80x86, le bus de donn\u233\'e9es contient huit, 16, 32 ou 64 lignes. Les microprocesseurs de type 8088 et 80188 ont un bus de donn\u233\'e9es de huit bits (huit lignes de donn\u233\'e9es). Alors que les microprocesseurs 8086, 80186, 80286 et 80386SX ont des bus de donn\u233\'e9es de 16 bits.  Les processeurs 80386DX, 80486 et Pentium Overdrive ont des bus de 32 bits. Enfin, les processeurs Pentium}{\rtlch \ltrch\super\loch
tm}{\loch
 et Pentium Pro ont des bus de 64 bits.  Des versions futures de la puce (80686/80786 ?) pourront avoir un bus encore plus large. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa115{\loch
Le fait d'avoir un bus de donn\u233\'e9es de huit bits ne limite pas le processeur \u224\'e0 des types de donn\u233\'e9es de huit bits. Il veut simplement dire que le processeur peut acc\u233\'e9der seulement \u224\'e0 un octet de donn\u233\'e9es par cycle de m\u233\'e9moire (voir \u171\'ab Le processeur \u187\'bb au paragraphe 3.1.2). Donc les 8 bits d'un 8088 peuvent uniquement transmettre la moiti\u233\'e9 de l'information par unit\u233\'e9 de temps (cycle m\u233\'e9moire) par rapport aux 16 bits du 8086. Par cons\u233\'e9quent, des processeurs avec des bus 16 bits sont \u233\'e9videmment plus rapides. Et les processeurs avec un bus de 32 bits le sont encore plus. La taille d'un bus de donn\u233\'e9es affecte donc la performance du syst\u232\'e8me }{\rtlch \ltrch\lang3084\loch
plus que }{\loch
tout autre bus. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa115{\loch
Vous entendrez souvent parler de processeurs de 8, 16, 32 ou 64 bits. Malgr\u233\'e9 qu'il y ait une l\u233\'e9g\u232\'e8re controverse \u224\'e0 propos de la taille du processeur, la plupart des gens agr\u233\'e9ent maintenant que cette taille soit d\u233\'e9termin\u233\'e9e par le nombre de lignes de donn\u233\'e9es. Etant donn\u233\'e9 que les bus de la famille 80x86 mesurent 8, 16, 32 ou 64 bits il en r\u233\'e9sulte que l'acc\u232\'e8s aux donn\u233\'e9es correspond aussi \u224\'e0 un adressage de 8, 16, 32 ou 64 bits. Quoiqu'il soit m\u234\'eame possible de traiter des donn\u233\'e9es de 12 bits dans un 8088, la plupart des programmeurs travaillent avec l'adressage de 16 bits, car le processeur chargera et manipulera des blocs de 16 bits dans tous les cas. Ceci parce que le microprocesseur adresse toujours par blocs de 8 bits. Alors que r\u233\'e9cup\u233\'e9rer 12 bits de la m\u233\'e9moire requiert deux op\u233\'e9rations de m\u233\'e9moire. Etant donn\u233\'e9 que le processeur obtiendra \u224\'e0 la fin 16 bits au lieu de 12, la plupart des programmeurs utilise les 16 bits au complet. En g\u233\'e9n\u233\'e9ral, manipuler des donn\u233\'e9es avec une longueur de 8, 16, 32 ou 64 bits est plus efficace. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si les membres de la famille 80x86 avec 16, 32 et 64 bits peuvent traiter des donn\u233\'e9es qui d\u233\'e9passent la taille du bus, ils peuvent \u233\'e9galement acc\u233\'e9der aussi \u224\'e0 de plus petites portions de m\u233\'e9moire, par exemple de 8, 16 ou 32 bits. Cependant, tout ce qu'on peut faire avec un petit bus de donn\u233\'e9es peut \u233\'e9galement \u234\'eatre fait avec de plus larges bus ; avec la diff\u233\'e9rence que ces derniers peuvent avoir acc\u232\'e8s \u224\'e0 la m\u233\'e9moire de mani\u232\'e8re plus rapide et peuvent transporter de plus gros blocs de donn\u233\'e9es en une seule op\u233\'e9ration de m\u233\'e9moire. Sur la nature exacte de ces types d'acc\u232\'e8s, vous lirez plus tard (voir "La m\u233\'e9moire" au paragraphe 3.1.2).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\loch
Tableau 17 : taille du bus de donn\u233\'e9es sur les processeurs 80x86}
\par \trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
processeur }\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
Taille du bus de donn\u233\'e9es}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
8088}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
8}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80188}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
8}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
8086}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
16}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80186}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
16}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80286}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
16}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80386sx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
16}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80386dx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
32}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
80486}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
32}\cell\row\pard\trowd\trql\trleft1701\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7085\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\ql{\rtlch \ltrch\lang3084\loch
classe 80586 - Pentium (Pro)}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
64}\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\fs23\b\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
3.1.1.2\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
us }{\rtlch \ltrch\fs23\lang3084\b\loch
des }{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\lang3084\b\loch
dresses}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
On a vu que le bus de donn\u233\'e9es, dans une architecture 80x86, transmet des informations entre un emplacement de m\u233\'e9moire particulier (ou un p\u233\'e9riph\u233\'e9rique d'E/S) et le CPU. La seule question est, }{\rtlch \ltrch\lang3084\i\loch
\u171\'ab Quel emplacement de m\u233\'e9moire ou d'adresse E/S ? \u187\'bb}{\rtlch \ltrch\lang3084\loch
 Le bus des adresses r\u233\'e9pond \u224\'e0 la question. Pour diff\u233\'e9rencier entre emplacements de m\u233\'e9moire et les ports des p\u233\'e9riph\u233\'e9riques d'E/S, le concepteur du syst\u232\'e8me assigne une valeur unique \u224\'e0 chaque emplacement de la m\u233\'e9moire et d'\u233\'e9l\u233\'e9ment d'E/S. Quand le programme veut acc\u233\'e9der \u224\'e0 un emplacement de m\u233\'e9moire particulier ou \u224\'e0 un p\u233\'e9riph\u233\'e9rique d'E/S, il place l'adresse correspondante dans le bus des adresses. Les circuits associ\u233\'e9s \u224\'e0 la m\u233\'e9moire ou \u224\'e0 des p\u233\'e9riph\u233\'e9riques d'E/S reconnaissent l'emplacement et informent la m\u233\'e9moire ou le p\u233\'e9riph\u233\'e9rique d'E/S de lire ou de placer la donn\u233\'e9e sur le bus de donn\u233\'e9es. Dans les deux cas, tout autre emplacement de m\u233\'e9moire ignore la demande. Seulement le p\u233\'e9riph\u233\'e9rique dont l'adresse correspond \u224\'e0 la valeur dans le bus des adresses r\u233\'e9pond. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Avec une simple ligne d'adresse unique, un processeur peut cr\u233\'e9er exactement deux adresses : z\u233\'e9ro et un. Avec }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 lignes d'adresses, le processeur peut fournir 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
 adresses uniques (car il y a 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
 valeurs uniques dans un nombre binaire de }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 bits). Donc, le nombre de bits du bus des adresses d\u233\'e9terminera le nombre }{\rtlch \ltrch\lang3084\i\loch
maximal}{\rtlch \ltrch\lang3084\loch
 de la m\u233\'e9moire adressable et des emplacements d'E/S. Par exemple, les bus des adresses des processeurs 8088 et 8086 sont des bus de 20 bits. Par cons\u233\'e9quent, ils peuvent adresser jusqu'\u224\'e0 1 048 576 (ou 2}{\rtlch \ltrch\super\lang3084\loch
20}{\rtlch \ltrch\lang3084\loch
) emplacements de m\u233\'e9moire. De plus larges bus peuvent adresser plus d'emplacements. Les deux derniers processeurs cit\u233\'e9s, par exemple, souffrent d'un espace d'adressage tr\u232\'e8s r\u233\'e9duit}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
L'}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
espace adressable}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 est l'ensemble de tous les emplacements de m\u233\'e9moire adressables.}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cs17\super\cf0\super\fs18\lang1033\kerning1\loch
 }
}}
}{\rtlch \ltrch\lang3084\loch
 - leur bus des adresses est trop petit. Les microprocesseurs plus r\u233\'e9cents ont des bus plus larges : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc{\loch
Tableau 18 : le bus des adresses de la famille 80x86}
\par \trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
processeur}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Taille du bus des adresses}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Maximum de m\u233\'e9moire adressable}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
En fran\u231\'e7ais !}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
8088}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
20}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
1 048 576}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Un m\u233\'e9ga-octet}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
8086}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
20}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
1 048 576}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Un m\u233\'e9ga-octet}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80188}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
20}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
1 048 576}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Un m\u233\'e9ga-octet}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80186}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
20}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
1 048 576}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Un m\u233\'e9ga-octet}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80286}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
24}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
16 777 216}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Seize m\u233\'e9ga-octets}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80386SX}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
24}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
16 777 216}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Seize m\u233\'e9ga-octets}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80386DX}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
32}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
4 294 976 296}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Quatre gigas-octets}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80486}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
32}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
4 294 976 296}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Quatre gigas-octets}\cell\row\pard\trowd\trql\trleft406\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2085\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4299\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6216\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8209\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
80586 / Pentium (Pro)}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
32}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
4 294 976 296}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\fs18\lang3084\loch
Quatre gigas-octets}\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
De futurs processeurs supporteront probablement des bus des adresses de 48 bits. Arrivera probablement l'\u233\'e9poque o\u249\'f9 les programmeurs consid\u233\'e9reront 4Go de m\u233\'e9moire RAM insuffisants, un peu comme, de nos jours, on consid\u232\'e8re qu'un m\u233\'e9ga-octet constitue un bien pauvre espace (mais il y a eu une \u233\'e9poque o\u249\'f9 un Mo de ram \u233\'e9tait consid\u233\'e9r\u233\'e9 bien plus que ce dont on aurait jamais besoin !). Heureusement, l'architecture des puces 80386, 80486 et ult\u233\'e9rieures permet une facile expansion du bus des adresses \u224\'e0 48 bits, gr\u226\'e2ce \u224\'e0 la }{\rtlch \ltrch\lang3084\i\loch
segmentation}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_01_01_03}{\*\bkmkend p3_01_01_03}\rtlch \ltrch\fs23\b\loch
3.1.1.3\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
us de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ontr\u244\'f4le}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Le bus de contr\u244\'f4le est une collection \u233\'e9clectique de signaux qui contr\u244\'f4lent la mani\u232\'e8re dont le processeur communique avec le reste du syst\u232\'e8me. Consid\u233\'e9rez un moment le bus des donn\u233\'e9es. Le CPU l'utilise pour envoyer des donn\u233\'e9es \u224\'e0 la m\u233\'e9moire et en recevoir. Ceci am\u232\'e8ne \u224\'e0 la question : \u171\'ab est-il en train de recevoir ou d'envoyer ? \u187\'bb. Dans le bus de contr\u244\'f4le il y a deux lignes, }{\rtlch \ltrch\i\loch
read }{\loch
et }{\rtlch \ltrch\i\loch
write}{\loch
 qui sp\u233\'e9cifient la direction du flux des donn\u233\'e9es. D'autres signaux incluent les horloges syst\u232\'e8me, les lignes d'interruption et ainsi de suite. Le comportement exact du bus de contr\u244\'f4le varie selon les processeurs de la famille 80x86. Cependant, certaines lignes sont communes \u224\'e0 toutes les machines et m\u233\'e9ritent une br\u232\'e8ve mention. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les lignes de contr\u244\'f4le }{\rtlch \ltrch\i\loch
read }{\loch
et }{\rtlch \ltrch\i\loch
write}{\loch
 g\u232\'e8rent la direction des donn\u233\'e9es dans le bus. Quand les deux contiennent un 1 logique, le CPU et la m\u233\'e9moire-entr\u233\'e9es/sorties }{\rtlch \ltrch\i\loch
ne sont pas en train de communiquer entre eux}{\loch
. Si la ligne de lecture est dans un \u233\'e9tat bas (0 logique), le CPU est en train de lire des donn\u233\'e9es d}{\rtlch \ltrch\lang3084\loch
e}{\loch
 la m\u233\'e9moire (c'est-\u224\'e0-dire, le syst\u232\'e8me est en train de transmettre les donn\u233\'e9es de la m\u233\'e9moire au CPU). Si la ligne d'\u233\'e9criture est dans un \u233\'e9tat bas, alors le syst\u232\'e8me sera en train de transmettre des donn\u233\'e9es du CPU \u224\'e0 la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les }{\rtlch \ltrch\i\loch
lignes de validation des octets}{\loch
 (}{\rtlch \ltrch\i\loch
byte enable lines}{\loch
) forment un autre ensemble de lignes de contr\u244\'f4le importantes. Ces derni\u232\'e8res permettent aux processeurs de 16, 32 ou 64 bits de distribuer de plus petites portions de donn\u233\'e9es. De plus amples d\u233\'e9tails appara\u238\'eetront dans la prochaine section. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La famille 80x86, contrairement \u224\'e0 d'autres cat\u233\'e9gories de processeurs, fournit deux espaces d'adressage distincts : l'un pour la m\u233\'e9moire et l'autre pour les entr\u233\'e9es/sorties. Si la taille des adresses m\u233\'e9moire dans les bus des adresses des diff\u233\'e9rents processeurs 80x86 peut varier, la taille des emplacements pour les E/S est, dans le bus des adresses, toujours de 16 bits. Ceci permet au processeur de disposer jusqu'\u224\'e0 65 536 }{\rtlch \ltrch\lang3084\loch
emplacements}{\loch
 diff\u233\'e9rents pour les entr\u233\'e9es/sorties. Naturellement, la plupart des p\u233\'e9riph\u233\'e9riques (comme les claviers, les imprimantes, les lecteurs, etc.), requi\u232\'e8rent plus d'une adresse E/S. N\u233\'e9anmoins, 65 536 emplacements E/S sont plus que suffisants pour la plupart des applications. La conception de l'IBM PC original permettait seulement l'utilisation de 1 024 de ces adresses. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quoique la famille 80x86 supporte deux espaces d'adressage, elle n'a pas deux bus des adresses (pour les E/S et la m\u233\'e9moire). Le syst\u232\'e8me partage le bus pour les deux types. Des contr\u244\'f4les suppl\u233\'e9mentaires d\u233\'e9cident si une adresse indique une zone de la m\u233\'e9moire ou des entr\u233\'e9es/sorties. Quand de tels signaux sont actifs, les p\u233\'e9riph\u233\'e9riques d'E/S utilisent l'adresse du mot }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du bus des adresses. Quand ils sont inactifs, les p\u233\'e9riph\u233\'e9riques d'E/S ignorent ces signaux (la m\u233\'e9moire prend alors le relais). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{{\*\bkmkstart p3_01_02}{\*\bkmkend p3_01_02}\rtlch \ltrch\fs23\b\loch
3.1.2\tab La }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un processeur ordinaire 80x86 peut adresser jusqu'\u224\'e0 un maximum de 2}{\rtlch \ltrch\super\loch
n}{\loch
 emplacements de m\u233\'e9moire diff\u233\'e9rents, o\u249\'f9 }{\rtlch \ltrch\i\loch
n }{\loch
est la taille en bits du bus des adresses}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Ceci est le maximum. La plupart des syst\u232\'e8mes de la famille 80x86 ne sont pas pourvus d'une quantit\u233\'e9 de m\u233\'e9moire correspondante \u224\'e0 cette borne. }
}}
}{\loch
. Comme }{\rtlch \ltrch\lang3084\loch
on a}{\loch
 vu, les processeurs 80x86 peuvent avoir des bus des adresses 20, 24 et 32 bits (avec des bus 48 bits \u224\'e0 venir). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sans doute, la premi\u232\'e8re question qui vous saute aux yeux serait : \u171\'ab Qu'est-ce que c'est exactement un emplacement de m\u233\'e9moire ? \u187\'bb. La famille 80x86 }{\rtlch \ltrch\lang3084\loch
fonctionne avec}{\loch
 une }{\rtlch \ltrch\i\loch
m\u233\'e9moire adressable par octets}{\loch
. Donc l'unit\u233\'e9 de base de la m\u233\'e9moire est l'octet. Alors, avec 20, 24 et 32 lignes d'adresses, les processeurs 80x86 peuvent adresser respectivement un m\u233\'e9ga-octet, seize m\u233\'e9ga-octets et quatre gigas-octets de m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez la m\u233\'e9moire comme un tableau lin\u233\'e9aire d'octets. L'adresse du premier octet est 0 et l'adresse du dernier est 2}{\rtlch \ltrch\super\loch
n}{\loch
 - 1. Pour un processeur 8088 avec un bus des adresses de 20 bits, la d\u233\'e9claration du tableau suivant \u233\'e9crit}{\rtlch \ltrch\lang3084\loch
e}{\loch
 en pseudo Pascal constitue une bonne repr\u233\'e9sentation :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
Memo}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
ry}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
: array[0..1048575] of bytes;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ex\u233\'e9cuter l'\u233\'e9quivalent de l'instruction Pascal "Memo}{\rtlch \ltrch\lang3084\loch
ry}{\loch
[125] := 0;" le CPU place la valeur z\u233\'e9ro dans le bus de donn\u233\'e9es, l'adresse 125 dans le bus d'adresse et teste la ligne d'\u233\'e9criture (\u233\'e9tant donn\u233\'e9 que le CPU est en train d'\u233\'e9crire en m\u233\'e9moire), voir Figure }{\rtlch \ltrch\lang3084\loch
3.}{\rtlch \ltrch\lang3082\loch
2}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ex\u233\'e9cuter l'\u233\'e9quivalent de "CPU := Memoire[125];", le CPU place la valeur 125 dans le bus des adresses et}{\rtlch \ltrch\lang3082\loch
 il test la ligne d}{\loch
\u8217\'92}{\rtlch \ltrch\lang3084\loch
\u233\'e9criture }{\loch
(}{\rtlch \ltrch\lang3084\loch
car il est en train d\u8217\'92\u233\'e9crire la m\u233\'e9moire}{\loch
), puis, il lit la donn\u233\'e9e r\u233\'e9sultante depuis le bus de donn\u233\'e9es (voir fig. 3.3). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'explication qui pr\u233\'e9c\u232\'e8de s'applique }{\rtlch \ltrch\i\loch
seulement}{\loch
 pour le traitement d'un seul octet. }{\rtlch \ltrch\lang3082\loch
Mais, que se passe-}{\loch
t-il }{\rtlch \ltrch\lang3084\loch
quand le processeur }{\loch
acc\u232\'e8de un mot ou un double-mot ? Puisque la m\u233\'e9moire consiste en un tableau d'octets, comment peut-on se d}{\rtlch \ltrch\lang1034\loch
\u233\'e9brouiller}{\loch
 avec valeurs plus grandes que 8 bits  ? }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2820\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich188\picwgoal8310\pichgoal2820\pngblip
89504e470d0a1a0a0000000d494844520000022a000000bc0803000000614e75f600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000ab249444154789ced9d6b96a320104659
4c36e362dc8c8b6133ae23ffe61c47aac057c750482962be3b67123a6d1b42ae50684299de0020a01fff0d0044812a4008540142a00a1002558010a802844015
2004aa0021500508812a4008540142a00a1002558010a8028440152004aaa8f14ea0745d8f0055d4802a4008540142a00a1002558010a90150e5e77106483ef8
0e557e1e5225be195401c9aa9886ee7a63cfac961a50458d745578eb06aafc1a075469f90eaafc18c93320f3722ddfbd4895d69032c68ef79dfb6e703ff847bb
811f6ebb977bc8be4ea97d9c27aa62bb6de128bdede51b27cf804ce734186fad73c28eff7bd7d3d866d4c31a6784b3887eed1eee39a8e1aea8000f51a55d76e2
add91692e85b1f448c514438baf94dfefe77e903d028c518d40edc9bb8073a0a75ad33c8d59ddd1837f211b0ab813509f6aaf210558c5974cb99aa4c5274ee5d
e1f27898db580f7340153bdad23a4d2cbbd83a5bc61f2cd7ddd2eedc2d8d42a449d31c794d1a3c43156b965664aa324d4d888e5511449e075471e14acfaa584b
32ba27224336aaf0f38f9d4bb918f84a55522e92a45d4979353d1f77ae4b68c99050a08030048d2e5c744765b8df61a9caeb54553ac31ef4615859a9d2fb8077
7afece34e58eeb47a8e21a9adf52779052a8311528209c82c67620a7c2fd0e0b559a29566963b6bc9367404e8b9eef5d4ce4aab452852ad2bb3836a86abed4fa
6c1ea18a6b560a2cfc1cc1cc050e087dd018ce8baecf8f9a10272c1e994b7cb4dbae8dbe4befe4195078ffadaf45b3e955f8d176b1e9d121558347a8c2a71e9a
30b88f1dcc54f071a297619cd2b4eebd0ff744cb2c4408aaf4ab512af636bdf3ae017d9e98f7ebbeacd84c7978862a9d09735936a43573c11fa63e68a489b06b
fc70efb036fc766a14df22eb78c64602964c552474c566cac33354e143cd8df41c1dd200e40b0347b39f3c30d3033b0350b76e98d8198dd35569cb5e02b85a15
bd3d4d3b0b22b8532bae1fe8428812a61753d048effde844b8dfc3ab62b8331a163166a452f8108212d44692c02fc65a95307fecc807d73f98612ef081e883c6
86c7a9e97e87491522049db1ce5f6a005489f3161e773136aaace9fb6d817fe25824c48e491777f80fa27dbff440802a712e51a51c1880f4802a0ea82200aa38
a08a00a8e2802a027e4015e17637abb98caa55b91d980129c18d99bf9f3bab22a83d6d5821504513a8a284b4316340952240154da08a12d2c68c716355c4cd50
21504513cc8094e0c6ccdfcf9d5511d49e36ac10a8a209545142da9831a04a11a08a265045096963c6b8b12ae266a810a8a20966404a7063e6efe7ceaa086a4f
1b560854d104aa28216dcc1850a508504513a8a284b43163dc58157133540854d104332025b831f3f773675504b5a70d2b04aa680255949036660ca85204a8a2
09545142da98316eac8ab8192aa46a55f277a5c91b3320357e4195f866504500547140150150c50155044015c75615f9faa285f3064115350ece8024aaf03274
85334c4115350ece8044aadc210f1954512377000a19c57801ccceaf9269f917d342fb73deb1c65cbb36f64fab92bacce477325599328a51c9ada7ec16e2a585
55ade942da8655deb16b17c77e882ad4b337690d47ebade7d766224f9539a318972cc726bc02bc5f7cd76ef38e5ddaad3c4595c65abb5e843876c451969797e2
6bcf53654e1365e79d748d59abb2c93b0655227c52c5a7a15d6e150905c912cd74d87933a00faa74ee00d855e5f294978f52c5724e20170c86503084861ff6d2
cd7fa842de0c68ce2836672dead6f9f0a601a8852a427655e17c5d140c4ea1e06b27918f7f431447a0a30350c3491fa68c623e7904e5caedfd00c49da61d3679
c7a04a842faab47330c82acca1e1b0cee6e2b3fb28a6ed3aaa0a63a78c623e95849f3353c8d59945129245de31a812e17baf1282c130ec84d070934eccf72a8a
6923b3af01cd19c57c699151c27ed8ea621ea50ac52a2118f4da4ca1e1369d988f55f4d21667ab72731ea50a0fe43e18e4c4737368b81980861725f12e3f03aa
86a7a8e262c357488a4ac12029b1080db75017a499b6f8e00ca81a9ea28ae345434b080639149c43c33fd0d95ac533e31880f4f8a04a72b62f47e41ad0140cda
d54f1f368c670e4b01aae8f14715ce7f4cd5f04184680afbac2bcbd5505215cb2708e8bad7186b74e38f50e5be9454853b143b5df7a254da29aadc0f71338839
34449f4241557aff411eaac64354519a01b9e4f25c6a42ec6da6c1ba140555b18b731a3c14bdea5725de0a1255262b68f24665d3cd670fcb7017554cdbbaa307
aa4c0d329739d97cf18fd7de4615d37443ea0ca8800a7e00d9fd7dbc15d25579fdbc2a7f62152a082ee21556e59b2d67a8d28458a5fdddef017173d039b25915
c1078ecaabb22b8bb81962ccaaf833cab66bcde2d82ac05dceab4caa083ec6780755766c51bb061454e99797be153f5c7380a2676bbbf96c6d50a50fe76dbf50
4e954feffa7a83782ba4a9b2fa90842d1ab014be06f461fe17bf32731f55fed8a2ad4ab7daa1bdf47b3f5b2abeb22ce9ecaf405915c3a7518cff813f78cb63cf
cf9e823bcccd54310b5bf45521ac2ffdea29b8c3dc4f9549167133ecbf38b3d377287f64221da8a2c37e30f371d32f2faeec28f305a8a28062ace27697df42a7
005572519d01b91de637d03954ac4a01be7bf2565125bf7d4e02aaa41011255b953b772a50258daf9ebc736740b73605aaa4f1d59377ee0ce8d6a6409534be7a
f2ce1c80eedda9409534be8b92af4a7ee39c0754512547959b9b025574c950e5e6c34fe5aae4ef4a136985f655d1ad8f3650458d77d64a08b7ef54a08a1ec257
f75995fb9b0255f4c855e5842aa90255d4c851a5824e05aae891a14a0da640153d32664035980255f4383e03aaa253812a7a1c1f80aa3005aa301acb511c56a5
8e4ee529aaf8ac05ee764a7c21ff2a9e4e66a0a3aa5462ca5354a16f39f302b5d317f238db85a0bb50ca0c94a14aee535fc24354a12f3d772f4ad9b6fac2b3a4
6b51ca0c747006544ba7f21855dc32e8af2e643f31d698762c84ac4054d855412933d0b1195035a63c46155a55bf6f8d4ba433500e485a33dd6705626d76c622
adcc40c706a06a4c798c2ad6a55a72212d2f9c466bb6d870e38b61211b7f74b7d39fea64063aa44a3d9dca63541945685fce89862ce14cc4e1c6aedd58e505d2
cb0c745495cca7bd8ce7a8d23a3ff87661895765990868931768d0ca0c94aa0aa517812a1f3955155acbd4df6e55e9d761ca6600d2ca0c943a03f2d5c87cd6eb
788c2ad69f7fe37371b32a3ea754bf5ad0728d5266a0d4195065a63c47153f8098b987a01bce0a446fcbfe00a39319287d00aa4b96e7a8b287cf18f9f52a8fca
32374755a9c595e7ab721989aa2c86a4d3aba602545103aae8f103aa08b75bab726eb5d4802a6a24ce802a1305aa28726c003abd5a6a54adcaed4850a53a53a0
8a2ac9aae437c67554ad4afeae344957e5fc3a690255d4182bf44fc2a44ae90a270255d44852a53e53a08a1e69bd4a7d5caf8a0250a50497aba2b6a7db353854
d143633abae2a27a0b812a7a3c5f15e97637abb90ca8a2c6fbf04a08750055d478e72cf0550150450da8028440152004aa00215203a0cacff3c60c08c8c00004
8440152004aa0021500508c10c0808c10c0808c100048440152004aa0021500508812a400866404048bd1fca920155d4802a4008540142a00a1002550020a00a
1002558010a8028440152004aa0021500508812a4008a90280803e3fbd16f809fafe3fc6d9bcdc7f33d3900000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.2 Op\u233\'e9ration d'\u233\'e9criture en m\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2820\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich188\picwgoal8310\pichgoal2820\pngblip
89504e470d0a1a0a0000000d494844520000022a000000bc0803000000614e75f600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000b6e49444154789ced9dedd5a320104629
c6662c8666288666a823fff61c5766c08f24c6514711dfe79eb3ab9bb806f13a02268c310008089d311d00ab40152004aa0021500508812a4008540142a00a10
02558010a8028440152004aa0021500508812a4008540142a08a1aaf0d942eeb1ea08a1a500508812a4008540142a00a10120d907c4515aafc794895f5cda00a
d8ac8a6969118c3fb3586a401535b6abc25bb750e5afb14315cb0ba8f2c7d8ae4a1337770da9620d29637cbf74817ea0955e751dbf6c5d135ff2cd5907b05670
a8a2c5e61e90715183fe6f1f9df0fd9f7832ac6f7b3dbc8946448be8edf872e0460d87a2023c4c15efde57f6127cd8f83fb647955e8abe51db7134892f386aea
fa689035b9c1db6f945ac0f14c79b3b55c5a3c40153bb9d75bf3beb28d6087b666be07702810fcdf1daaf8de161b35f1fc2936dad2ffc3f30178da5dfc9bee42
a449dbee3a30051ea08a31e3ddfba82ad90a1735e1d5fe66e0451166872ab1b9125815efe963a22564c89b2a7c35f4c1a55c1bf84a55b68c7ccb87c7bd996871
54956e5a1b8e55919e9b3daa38c31e847c5b99a9125283772884336db9ebba7e559a3670788e019c0cc92bd46dc85d8b2ef62ada61b1c8a4369af355e962bce2
766be8e271cc54a1c284d88ecd85e0fe5019aa57255e8f744e6328a796c6b042dd86dcb5883d073a17bc58ae90a136daa1ad6245b6bc36f780f2f9f7fc3151e1
b92a1d3760c64d77074b05aa5725569ea34b922b7c5ce16e43ee5aa4e1f3f928bac9adc9e94bc30adf13bcb3b26bf975ec19d0f72e57985b5aaca7dc3d40151e
a16a5313b08f2fc34aea4d6419fa3e8d0dc382b1cc5484541b617697125dcc075591e08af594bbfa557129302443ec642505f3d4b5e08eb01f1684f7c3bb4385
706dccdb335ed260395d155bf611c0d5aae8ed8977c61139c4b1f078c2e9069456489560be7930de64166e406e5e27a271af0ba24a512e5745d2f05b6354259b
601a8a032e3751722774ec5ad0c937362d960b990653381875939e88e4f0a08a122f6165ae3151250f33f437f140f1c17077d88c8311a96bc1e3afc36279e743
cfc398a16b226a22482f04a8b2ce09aacc08e17d85ff95da2269b9f9e14ef0b21602a28a1e67ab5218a8a207548940150150250255044095085411f01754410f
480575556e07a28a12d2ca5c03aa1401aa680255949056e61a50a508504513a8a284b432d7b8b32ae801a9c095797c3f775645507adab042a08a265045096965
ae01558a005534812a4a482b730da85204a8a2097a404a70651edfcf9d5511949e36ac10a8a2095451425a996b40952240154da08a12d2ca5c03aa1401aa6882
1e90125c99c7f773675504a5a70d2b04aa680255949056e61a50a508504513a8a284b432d7802a45802a9aa007a40457e6f1fddcf92763eb9b41150150250255
0440950854110055225045005489bcab229f8ab6708a29a8a2c6ce1e9044159e8bae703232a8a2c68951e51629eba08a1a4755c9c9e778164c97a6caf4fcc690
93614c51d79a6ba751872abfb06fd390ce279b34f39a3ba8ca907c8ed6e2a4ca31cf11cdaeea8dcb193e6629eaae9d47bd7e5578167d699da529d085d7637f8a
e2a24d55e48d6d734a301ba75d5754654c3ec76b9edb26fc11a9d0fe3d45dda561e509aa74f33c053f7327783ada205585b37db8e44414c736dd6888a22a6346
b189802e493aa8f296a20eaaacf04595aeb19468c1920cd6a7f54f3c05a036bee9e8c20c36344d084d5c770d25f5b0a1a568e2872c0c93b3d7da9faaecee017d
51a52fa0f78baa5c9e1df529aad044e92ef4d77ce8ef1121ad7fe24dcc1369aced23784c481add890d44dfc659fa3d4fc1dfd014fd314bd9872a317cf5f7a194
2746fd0634a6a1eb38c3959babf296a20eaaacf04d9558a5294117dd80fc787e8399b466fae6a2e9e37a7fae4986408d17cfcbf84a6b791483afe00f5538f398
f7290bab8a2a2d677e1892cfa50c12945639a41b10a779a7d6ec34451d54596129aac44c3f5995b4ce5be42c1cbcb5b12658eb923f39e4f7bd0c93f69396adfb
5065cc12c4214b4515c60fc9e7523e89d46726379d99642299a4a8832a2b7c5325a524cc5125af47dea20ab56cadcdef8eaa70cac036096026396bf3ae26b7b4
f4a96f8777ec19d0987c2ead4dd24af82f5b5dcc4354c95989631e3a3759e72de651a56b7c17db2afd7968a65125989c9db4a33db61faae414b6819bd1daaadc
9c27a8d2d372663193123db5c3fa3b393e580aeaed34aad09e28b6c72d067126ff8bc31327c14b25991f1ebe05a7c4e9a3b5395efbc9fa0f3e23f9e43f715f68
21d8e79442882a2751d1c07eb0b90df943399d81fd6a28accae6945f910b54719c85fb7782313f7f17aae8f1a10a3fbea162e4c72a1cf27fe7357ed693e56a28
a98ae746243df76abd77c642950f76c5dd5328a90a7fb01f9e7b513eed2daadc0fa51e501c40e4b5360f0999210297a2a02a217d91878af11455d66b41a2ca60
050dd6f20329f79666fe720aaae2275d51be15355065d86ab2a79ffdf6ebb88b2ac65a931ede754755e1185f84535469a0ca4c15d3ba6e6b0fe8ebc9cacd8122
9ca14a9bdb2af6cffeb8e3a3ad422be91b8abff6b3accaace95882135449a380de5933a9b00294ef01d1e3d35115aa8ddf0fd7175479ef659440ed19503e2961
fcdec35ab03d9bbb8cab0caad0974d7edf98bfaaf2793a4aa01e55a6a6cc6ed9d75374b4d68da3b5599590c76d7ff0a9cad72bb704daaab8d90efda53fe678a7
f033a02f4305bf9fbb44de549104fd2bd052858751f2d71ed2776dece4c54254fd64f9469e183555cc5c15c2a7b5bf3a04b79b5195625a7c434795b8a7af6fac
47db93a95a95d272cc9196685595e335740a55ab722f5b54a24adcd1f11a3a85da55b9912c5aaa1cafa073a85f95afb6fcecd19ec851550c5421a88ece50e5f5
61cbb5824c8a21287ddc6ee9bd1b9bf218555e3719d817943e6eb7f4de8d4d79922a53592e7363b104bfdb340b07065512544767aa329cab6bbcf8f6f182d2c7
edbebf736b531ea7ca8b6cb9408a85cf16943e6ef7fd9d5b9bf244554a7244959b0715a8a2cb41558ed7cd8954adcaf15d69223cba2555ee6e0a54d1e3756826
84bbdf7ea08a22c7a2caed4d812a7a1c52e5fe4105aae87144950a4c812a7a1c54e58c22a90255d438a04a0d4105aae8b1bf0754852950458ffd51a50a53a08a
1ebb55a923a8fc1155fce28f7d15a72c39a28a5a214ee429aa502b60f1d70f4b3ff6759a17f45e552a092acf51a5f5be59746541159a8ba1d13afc9daad462ca
7354b1f9af6f2ca8d2087e4b2f67670fa816539ea88ae55b514e12696846a8ef3b12ccd021675f54a926a83c4a1597f22af9fecf9024b2e957edf7434cf144eb
0eb44b957a4c798e2a110e1234e3b94b4922439a007db2d5302787683631397b55d1f9f4f3798c2aad4fd3e08e36c4249129b361fa54cba4ae7390cc2626678f
2a150595e7a862533637cf339284942472cc4116e1cc40c3584a0a43d389910eb0559514e2743efc021ea40ab550388f4f3724890c697ac6b4d5ec06d4359c55
ae500f08aa2c737e0f88a695a324912e27898cafb98543f49c48f778890844153d4e57c50d8920db214924e78cfc355aab35b4bf53956a5c798a2a5352b28b9c
2432fc7041732aa48daa8c7724b5129ccb135529c46e552a7105aaa881a8a2c75f5045de03aacd14a8a2c7cea8727ab9b4a85a95dbb14195da44812aba6c56e5
78655c47d5aa1cdf95263b5439bf508a40153536ab727e9154812a6af405fa2721ab52babc5b812a6a6c52a53e53a08a1edba24a7d5caf8a0250a50457aba2ca
45e5160255f4802a5045c8f355393017dcfd812a6abc8e4cf0550150450da8028440152004aa002150050879a107046420aa0021500508812a4008540142a00a
10821e101082a8028440152004aa0021500508812a40087a404088d400a8f2e7a9f7fb7b32a08a1a500508812a4008540142a00a0004540142a00a1002558010
a8028440152004aa0021500508812a4008a9028080a0313d28f80384d0fd076a600b244edc1c6f0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.3 Op\u233\'e9ration de lecture en m\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Diff\u233\'e9rents syst\u232\'e8mes offrent diff\u233\'e9rentes solutions \u224\'e0 ce probl\u232\'e8me. La famille 80x86 le contourne en stockant l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du mot dans l'adresse sp\u233\'e9cifi\u233\'e9e et l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 dans l'emplacement suivant. Donc, un mot occupe deux adresses de m\u233\'e9moire cons\u233\'e9cutives (}{\rtlch \ltrch\lang3084\loch
\u233\'e9tant un mot compos\u233\'e9 de }{\loch
deux octets). De la m\u234\'eame fa\u231\'e7on, un double-mot occupe quatre emplacements cons\u233\'e9cutifs. L'adresse du double-mot est l'adresse de l'octet le }{\rtlch \ltrch\lang3084\loch
moins significatif}{\loch
. Les trois octets restants suivent }{\rtlch \ltrch\lang3084\loch
l\u8217\'92octet le moins significatif avec l\u8217\'92octet le plus significatif correspondant \u224\'e0 l\u8217\'92adresse du double mot plus trois }{\loch
(voir figure 3.4). Octets, mots et doubles-mots peuvent commencer \u224\'e0 toute adresse valide en m\u233\'e9moire. Cependant, }{\rtlch \ltrch\lang3084\loch
nous verrons }{\loch
bient\u244\'f4t que placer de gros objets \u224\'e0 une adresse arbitraire n'est pas une bonne id\u233\'e9e.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que, dans la m\u233\'e9moire, des octets, des mots et des doubles-mots peuvent parfaitement se chevaucher. Par exemple, dans la figure 3.4, on peut avoir une variable d'un mot commen\u231\'e7ant \u224\'e0 l'adresse 193, une variable d'un octet commen\u231\'e7ant \u224\'e0 l'adresse 194, et une variable d'un double-mot commen\u231\'e7ant \u224\'e0 l'adresse 192. }{\rtlch \ltrch\lang3084\loch
Ces variables se chevauchent toutes.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les microprocesseurs 8088 et 80188 ont un bus de donn\u233\'e9es de 8 bits. Ceci signifie que le CPU ne peut transf\u233\'e9rer que huit bits \u224\'e0 la fois. Etant donn\u233\'e9 que chaque adresse de m\u233\'e9moire correspond \u224\'e0 un octet, }{\rtlch \ltrch\lang3084\loch
cela r\u233\'e9sulte \u234\'eatre }{\loch
le plus pratique des arrangements (d'un point de vue mat\u233\'e9riel), voir figure 3.5. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le terme \u171\'ab tableau d'octets de m\u233\'e9moire adressable \u187\'bb signifie que le CPU peut adresser la m\u233\'e9moire en morceaux de 8 bits. }{\rtlch \ltrch\lang3084\loch
Cela veut dire aussi que }{\loch
cette quantit\u233\'e9 est la plus petite unit\u233\'e9 de m\u233\'e9moire accessible d'un seul coup par le processeur. Autrement dit, si le processeur veut acc\u233\'e9der \u224\'e0 une valeur de 4 bits, il doit lire tout l'octet et ignorer les bits superflus. Veuillez consid\u233\'e9rer \u233\'e9galement que }{\rtlch \ltrch\lang3084\loch
la capacit\u233\'e9 d\u8217\'92adresser par octets}{\loch
 }{\rtlch \ltrch\lang3084\loch
ne veut pas dire que le CPU peut adresser n\u8217\'92importe quel emplacement arbitraire de 8 bits}{\loch
. Quand vous sp\u233\'e9cifiez l'adresse 125 en m\u233\'e9moire, vous obtenez tout l'octet correspondant \u224\'e0 cette adresse, rien de plus, rien de moins. Les adresses sont des entiers ; vous ne }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 pas, par exemple, sp\u233\'e9cifier l'adresse 125,5 pour retrouver une quantit\u233\'e9 de bits inf\u233\'e9rieure \u224\'e0 8. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom5685\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich379\picwgoal8310\pichgoal5685\pngblip
89504e470d0a1a0a0000000d494844520000022a0000017b0803000000cbd4504e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000131149444154789ced9deb75ac3a0c465d
0ccd508c9ba11837e33aeedfc3457e611e99d12446b6667d7bdd1b98811c1365077b8c10c600f09e755dc317005e03550013a802984015c004aa002650053081
2a800954014ca00a6002550013a802984015c004aa00265faecabf3ef4feb11fe1db55e972b51eaa28e49fe9704e812a1a812aed802a50850954812a4ca00a54
610255a00a13a80255984015a8c204aa4015265005aa30812a32aa3827ffc33706aa3ca9ca624c50c4d395214f6bf98e4e8540952755314b54659a489bf04eaf
48fc1da8f2a42a5b6c5df96a9615aa8ccb50aad8b0e6fb44e2ef40150955a62dc236559d48c3177d40150955c8106b539817a3f3c40255445409abf6b05265cd
4946e4f740153955f26a7126bf7e3e0e2d802a12aa2cdbd799a26c179a643975404ac20f554454c95370612e6e391da492f04395675549f832b1efae9f969584
1faa88a8f21225e1872a50850954812a4ca00a54610255a00a13a80255984015a8c204aa4015265005aa30812a50850954812a4cbe5e951e401585e0acd20ea8
025598f456c5faf30a1f774efcb80255da21a24ae8c0e75b17f62cc24b1e7bbac78abebadb23b4ef8f1baab4434695d939676e13d55fa8e2e92d1f0e6e812afd
915125a5a8df6dfa5995f06dcb441b267bd9b8421561045571745ab129b734de6fe7b6ffb6376c7a833656c6d09dbed3425bf3c63038a16fa11716aa8822a80a
fdc2e91c116ef92eaa6cfffb64830dffefdd14753bc66f42508e7bf9ceed5bac9bb6772ce3b8a14a3b4455b161f8116e7328aacc6b72c255378147b6d3903734
a45dccba7f277d8b4fcebc6d19aab443f6ac123fc9b85a155bde7071aab31a9698c54eb4659ed7fd3b49a6f86a822a92c88e556e5459d65d1547f8fafb6873f8
5aabe2d22b8c554491fd04143b0e9b54f1c70ee872d71d8d467cfaba7fe71a46379e77dc50a51d72f32a34120d4dc551ec44532634acf565581bd7ab295897e6
dff241faf259890c5b34a9f2aa161c54a91a21a6520b8d7edf746be6123a207a674d02d0a4eee11bc3ab4dabea3bd309895e0dafcab516dc7a136ea8728f2f77
6496777cb5f1c595207ff8c3f4ac6b46c3d582a3c138541991ee1dd0b916dc36dcba9c0c95841faac8a9123bdeeb073725e1872a12aa945a703ecc329f0e5249
f8a18a842aa5161c7542506548465125acda354d489faea22b093f54915325ade2acf25772fa23230d92cf20aa945a700454f92b39828c89353ea3a8524fc141
15566b2fe6cdbe539584c7c4fea7adbd08d857abf212a8b2e3e3a8df9ed251ca86fdb3644e830c49913981d2c74b43fe7c858801546987cce5c2299c2cbc33cb
f1224fda90d31ff734484a8af439817293862e38a7c54740957688a842dd4ece4abad990d31fab34c870fa48574e7cbe3afb8b275e409576088d5596d9dca912
37e4f4c72a0d92ce1e258172db85ee3d4c8b8f802aed105165a1dca63b55e2869cfe58a541d28e7b02e5d61585318bfdf8593a50a51d12aa8411c672a34ada90
d31fab34c8389aadd36c4dbd600355da21a38a4b37949e1e6f9237e4f4c73d0d328f5ec8a628995d6efe81b740957688744073c88ef471d6f266434e7fdcd320
539a47fc783cc79ccab4f808a8d20e9961ed9edde8ee379c977973fc6c7d5c7c025469c738d7801e0105bedaf1f5aae0acd20aa80255984015a8c204aa401526
5005aa30115765bfa9f0f38fbe9f0355da2134af922b2c85c25c612d4ca83d2e0b5469878c2a799ed5e6ba07eb92eb223c0b546987540714db0896ec1991f735
465b0255dad1411557ae2f332a74fd11a8d20e615528b96dcaaacc18ab04a0cab19dd08633b39b53f9d95560540b551a22abcaea26caa7a6b38aff38fbfe3740
957608ab42b898ec2661ca38aa945bc6dc753a09aa1cdbd9db089f809efff01318ad165c482d3fdfa002558eedc4799599a2156aecc71ceba79b1dad169c5d6e
fe4aa0cab19dd046cc888caf034fbbd2bd03bad482bb79b81154b9e5a6ab7e92a1548957341c3aa021194495520b8ebe5e6e3a50127ea822a1ca7edffed6095f
e6a895841faa88a81256f3e9e4dc0329093f549153a53c7b0faa0cc820aa945a70f392a7202b94841faa88a88229b8e1e9ae4ac25713fb978d4ac20f55445479
8992f04315a8c204aa4015265005aa30812a50850954812a4ca00a54610255a00a936f57a50f9f1da492f07fbb2aa285bd32504521e880da0155a00a13a80255
984015a8c204aa4015265005aa30812a50850954812a4ca00a54610255a00a13a80255984015a8c204aa4015265005aa30812a32aaa016dce88c560b2eac4ca7
8354127ea8f2a42a975a70cb1c1f197c4049f8a1ca93aadcd682bb3cc35e49f8a18a9c2aa9140f2a4c0ec920aaecb5e0ee9e2ca024fc50454295aa16dc4db095
841faa88a81256a903baab17af24fc50454e15573f36ab4249f8a18a842aa516dcb568ed0a55c6601455f2145cbaa7ec78904ac20f559e5525e15f3d794249f8
a18a882a2f51127ea80255984015a8c204aa4015265005aa30812a50850954812a4cbe5c15152809ffb7abd2a5c0d7a7c7f8c84fde9caf5745419b4ac20f55fa
b7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac20f55
fab7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac20f5564dac42d63c3d357954b2db8f2cefdfe4303559e6cf3520baebc73bfffd0409567dbbcd68283
2a8332922ab67ae7a7fd0706aa3cdbe6b5161c5419943154a96ac1419551194495b08a0e68684652c59ddfb9d97f60a0cab36d9e6ac1ad5065580651a54cc141
9561e9ad4a02b5e0c66710559aeedf09a8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1ff765534a024fcdfae8aea025f6e392e
fbf2f5aa2868b3dadf1ee672f3d3836e9f22240e54e9df66b5fff121cc5045125daa3873b002aa48a24b9569f6f969cc3919aa2445196728e3c59a98f34f3701
ccd5f279a04aff36cbfedef8905bb9528aa50f29967949bf25eb7c18cc58ba48bd6913b4cacbe7812afddb2cfbd3d96309c90a3e266e9bbca42fe1dc9173ff7d
1afffa6b4ec3534095fe6d96fdc3d92128e1c27b93c9cbbcd1c54fe39632a58c25a9f2f279a04aff36f3fecb3e2d1315b1262fd7743e71c611e1c463d3a0c5de
dcb0f80450a57f9b79ff98a71d461e3e3d3f352fd7a48a37f51924ffe2647e8150a57f9b69ffac41985aa16e683bcb94654eb4a4bc4b9229dcd6bab995970240
95fe6da6fd739e7618d8861be2b78e272fd7ea8ea2309a99535735ffe24ac2ef802afddbbcdfdffbe3b2bceffcedf271a04aff3695841faaf46f5349f8a14aff
3695841faaf46f5349f8a18a4c9be596b19b51a892f0439527dbbcd682a3cfb6e78b7b4ac20f559e6cf3520b8e66482e57f894841faa3cdbe6a9165c38a3ccd3
cffb0f0c5479b6cd632db83877efcccffb0f0c5479b6cd632db828095419923154c9698f506560065125aca2031a9a91547118d68ecc18aa945a70753ac1edfe
0303559e6df35c0b0e5370c3d25b9584c7c4fef00ca24ad3fd3b0155fab7a924fc50a57f9b4ac20f55fab7a924fc50a57f9b4ac2ffe5aafc13a8d174e5df6707
a924fc5fafca3f79a08a46a04a3ba00a54610255a00a13a80255984015a8c204aa4015265005aa30812a50850954812a4ca00a546132862a8f3d9a02aab44342
9570b7ee5a15d9bcf0581179a8d20e0955c2fddc3eb4b2b055314d2a9c419576887440542c73994898e9be6ce69d2a4dcaf642957688a8423523a685840902d8
7883437a1485c98fa608844a242eecd2a21a2b546987882ad4ed181faab0fa50397ea5ba23f15114fba329e2f14ce11ce39d595a14d9842aed1051c519efc3bd
dde44cac4433c742cf6bf5688ab8eb9ac6bee8804643e6c3b259ec44bffd795ef76a00e95114f46aaa8e6099cd17aa52ee1473d79f0baad4add8f89423fabaab
52ce20d5b07631b3fb9eb34aae05b7e6a1d75e14ae8e4e8b9ff4796454b1213ef1ab4f43dbfa5114e508c2632b96af5125d7822b1d6f290a5703552a5c9a7f2b
73717efb1b4bb5afcaa329088a679c8169f3348aee1d50fc216d7818c7b2ee45e16aa0caa199f834b55858249d8dab3a9d7b07142a05d099868a07fcbddd4154
71e1439f5f4b51b86370fefe734ad0e51a903f742ec74753ecaf5af44083a8529e639a8bc21d802a2330882a4b3eab9c261cd33e8201f90350454295389594eb
7aa1031a91915429271314f81a915154099f806c5514ae4649f8a18a842ae1635e4cc2c014dca0745725b33f691013fb63328c2aaf50127e7955721eedeff269
4b66022f4501aab4435e95fc41809f4febcba455e9ea6ffbfc1ba04a3b34a862f21cbf0b97514cb5f20ea8d20e0daa9423b439e9bfacbc0305beda21a24a4a98
dda7b5cb32a6d7a62b24b4db5c1687a3cc67151fa725caca3b705669874cc67e4c982d79b4259f36a6d7da9077ede3535096bc38fc03e54c14735ef695374095
76c8e4d6aea1bbc879b47b3e6dca4d88491c3e4f57ddcc3c1455e6294d92a79537409576088d5542c26ccea3ddf369537a6dc052ae8a0d1d4b581c8eb21aab2c
e1949456de0155da21a24a4a98cd79b47b3e6d4aaf75848f9f8a5d59d447198f305e92a5043abbbf7c09546987842a396136e7d1eef9b4557a6d3e1e532fceef
42958ec8a8921266731e6dc9a74dd75d3757369d62f6b55d6e326b4b07e4e397b2f20ea8d20e910e2827cce63cda924f5bddfa30c7dd4c591c8e32bd9e68d352
afbc01aab44366585b1266f3ca319f365f773d2e6effa17c61f6ee0aed0d50a51db8b20c55984015a8c204aa4015265005aa30812a50850954812a4ca00a5461
0255a00a13a80255984015a8c204aac8a8522e56dc5cb550127ea8f2a42a975a70fb4a8592f043952755b9d482dbabb15628093f54795295f55c0baeacd42809
3f549150a5d4822b2b354ac20f55245429b5e0f6950a25e1872a12aa945a700bce2aa332882aa516dcb1285cde472e1e7f01aa88a952928951617244465125d7
822b2b354ac20f55245429b5e0ca4a8d92f043956755c960627f748651e5154ac20f55a00a932f5745054ac2ffedaa3c59c7eb473e3dc6477ef2e67cbd2a0ada
54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afd
db54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872afddb54127ea8d2bf4d25e1872a
326dbe78700d541983beaa5c6ac1dda6f42b093f5479b2cd4b2db8f4ee4ffb0f0d5479b6cd532db8f2e2a7fd0706aa3cdbe6a916dc4a679757fb0f0c5479b6cd
732db86bf7035506610c55aa1270e7924d2b5419843154a94ac0dd3cf25749f8a1cab36d9e6ac185cf42aff61f18a8f26c9ba75a70eb0c5546650c55f6127097
6731ac5065107aab92c1c4fef08ca24acbfd3bf1e5aafcd787cf0e5249f8bf5d952e05bea08a42fe331dce2950452350a51d5005aa30812a50850954812a4ca0
0a546122a24af804393fdcc82d50a51d32aaccce2dc756cecfef3b7dc3cbad1f0055da21a30a5d233be6f45c1e0bbaf2b77e005469879c2af3b42e21b9c74d21
7f90de3c3e4a365c7f756bd9da00a8d20e29559cdd3a95787fc3f6ca3bb338bf39e156bb773694d541e79eb4b50550a51d72c35a9b5a72c18d284df8523208e9
958b591de880c643ac03725993397c1422199c31a7ae66990d541915b9b18aa3d3c7f69179cf3675c611a5ab59e8931254191539553ca9b2d9101b2319fcf133
71da216f6d02546987982a7e8a12a4a1491abaf828488006bdfee70cd45f0155da2137ac3dde31b5186af5388bbb0d544cbcb12a6e6d00546987f435a0fd7c11
53d90f1f8afdfea2510f0455da21accad26cca9e07546987a82ad6341baf32812aed401202546102556454d90765ee726255127ea8f2a42a975a707186dae7b7
125d42f33150e549552eb5e0e234a3f080ad11f2aab8e5b8fcf0bbf379fcd54dc03bdd3ba0532db8bb9a195a9057254fc2dd942ffa016f4d3571b79fbe192998
83a8526ac1359b86ee8006554a771eaf38c643f6e74b48b70ca24ac9e132766e95b5258e0655ca11866f71e672a1f1670651a5d482a34b605ea92b22aae44c48
3a3f586baaa5abf3267dec54fcb56f2967151feb1eb1351b4495520b2efc209ffc910c84cce5c2940939194a923465b9b56cabbc49caa4dcfeead2e2f00f9433
9135f18f735d2c67583c922a363b0e557e266542a6d45a939721d3692d79933e17c3ba7e96dc559927da6c26335bce618fa24aae05e7158f6d85c62a21133266
b86dbfebb44c79b5256f92467ca187098bc351566315eaf343d6cbf9d473c720aaecb5e0163d536e67445449999051116bf2320572cf9bf4f17aa2bf5c564c47
18ff1c8354fbcb97745725534deccb5e5b6f87842a3913327e6ea10ec8a7568311878f33598ae3219d5559d4a9f205c8a892322169684237a4e665eec963de64
f8fd1b9b16c7a3cc1d904f5f683b27f74545812f2588744039133274d9d694e55a5d4c9be36ea62c0e47995e4fb48946283eaf00316486b5251332aff8e30921
f5e4c7c5ed3f542ee15fafe58367f9f22bcba01d500530812a800954014ca00a6002550013a802984015c004aa0026500530812a8049540580f7ac6aee9905fd
f91f9e6fd3ce5e24bae50000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.4 Stockage en m\u233\'e9moire d'un octet, d'un mot et d'un double-mot}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3000\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich200\picwgoal8310\pichgoal3000\pngblip
89504e470d0a1a0a0000000d494844520000022a000000c80803000000f1fd3a2100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000a3249444154789ced9d6bb2ab2a104619
4c0613e712e792722c1663b1caa9a48a43f3d6b88fad6242f05b3f76440135acc3433bf70a05c03aa35202000646956ffb0a7e00a802984015c004aa00265005
30812a800954014ca00a6002550013a802984015c004aa0026500530812a80095451eab5816f5feb17812a50850954812a4ca00a54610255ac2adc8c275f4ac9
4015ab0a27b614aa401552653d1b54812a50850554812a4ca00a54610255b002620255b002620255300031812a50850954812a4c58aa6c7949f2836f52a00a0b
a882151013a882151013a88201880954812a4ca00a5461c25725cbe9a0caefc2578533f15ba55855b8194fbe9492d9a04a8eb315ab0a5640ab40150c404ca00a
54610255a00a13a80255984015ac80984015ac80987c4795f2c000b40a54b1409555a08a05aaac02552c506515a862615d3e375f9dfc922afd73be910fac8056
295c9587e8d3c47c231f188056295c15216e310155be4ad9aaf422b502aa7c95b255b9dd0761e7257aaaf03086c48d5e6f91368206299d1077ca1836a04a668a
5665d012dc4c999bde7a50105dd8d0ce3cfade4c661e6278696b7a6355d8d806ebf2a14ab1aa50eff1a43e6330b35b6d48d8d07f4cdf61d3cfc14f7f87741ebc
01ac8056295a15db4ddc6954a1a4ee60c2863bd8db467cbceefacf40c7c2c6c653312e1eaa14abcad3fd6bf6aa3c44dc70fd492f7a42bbd13f84ed50c20654c9
4bc9aad0acf565661e8b03106d4dc69bf08300b17d8504555629589541d881841eadd028f42403c28655455b31e88ccfa7706a850da8929b8255b9bbdc4f6d83
99933cc42b6e3855cc7cf46ea628b62f091bdb605d3e54295495297d3fdf700cfd907c241b9bc00a68959f51e5643000ad02552c506515a862812aab40150b54
5905aa585897cfcd5727f81d107e07c404aae087a84ca00a54610255a00a13a80255984015fc9710984015ac80984095a207a0518e1f3ee3df409563aa98eea6
39ab3d1b21ba93aade0e5439a84a23a5142275456413671432575519802a075569cddfb478bef69545fd3fbda0cab115905545eaaf71a4a148aa963e5a9f8ae8
b1c40c26adfb14923628dbe8f64a654a35a14867eba09cad2f362be72e22dde7aa5a38416777b6ddcd5cf36de3d704558ead80ac2ad493881b35889e888a4ecf
455d2a70d3394828faeca8297593499a8a489b931c1b95712ccc4e469dd1e50cc5a6e5fc4524fb7c55d38cbe3ced1cedb8e6ae9c0f54c93100d1077dfd66c430
0d115296d1edb49f8da0490e65e8ac50b6edbaf9dcc456a073c662d372fe22927daeaae9ce50def659d4e072f3940aaae451859aa26b445025a42cde1afb497f
a9112565d52d296dafd5d228d5262de854e992629372e122e2be50d5ec04aebcedb24893260e744ca04a0e55e8bbef683114540929cb822ad2a54c4b4a4237c5
d8a6331ca78a9ca892940b1711f7c5aaa62770e55de5ba73d93ef9862a995640668ed1f9c68c298b1f5aec673b53654c0783b7be48c8a4d89a2ab1aae9095c79
dfe389667b734295832b207aae72330b206a51d398ad4a523e9fc9329aef7a34e343dae4f668d7f9e28ea04a2cb6a68aafeaed04b6bcef4bf63cda832a075740
c48dfe259bd5307d9db4c68d29c7e866102a7c4e9a5cd85572634e1388aa8462abaaf8aa164ed0c6673eed8ed6842ad9de018d410c3949f9c372fa393f3a261f
8b19d6af7052d57fcb6f5e29ab03aaec7a9155b52a3f44b7e7e5c34e55ec9accf5bfad72cbb2d58e0daa94402bb62f7fd45e55a41d6e1b33abeb280155aa679f
2ab684ecec98d78adf57859bf1e44b29995daac4f714d5a8b27705742176a922c3586707a25b05aaac67832ac75431afc747a8326179d2d8ee587594c4615544
d325bbaeab4abaa8585e60c42f2d47ecd3e703e472cc55ec96b9f495570b15ab92b65c94625cda2be747decef4dffec71efd7c28e59115d038a6aad818adff3f
052c57156e4656bee5fee3efc49fe5771c3d8fa3cf55a22a747c2d6eb85c5576af80627ca2198edbcebc69a1c0131f3be931b124f6f54f125599868dd828cb59
b159eca53f6aceb71428791a3b9fd676fe696db8a551ccee70f16ce5aab29e6d5195189f48d1885235f619762b3b31bad8c950debc6d36adeca32a27f191ca45
59ce8acd622ffdd179d065b890d3d8fd0e48bebd031ae5aad4f5a912e313a50b5915ca8625a62f726d56dadb09df212cf4c13eca72ba7f167be98e9a4a960225
4f036f960fa992c427baa03713376b42f2df54b1efcaa22af3f848e5a32ce70a4d622f53559602254f03aa1c5425c62726aaf888f8a92a9d9aa9328b8f0c5196
535566b197a92a4b8192a701550ead80d2f8c464005a56653e00d9bd6954651733bcef0df52ca9329e3a4db1e7852a07a3e0627c226d375355dab7ac7ef1d2fa
48dc982544594e8abdc75e8668b8a540c93df16d3ca0cac1477042c4f8c4c6bce7485431b193216767578de67088aa4c4feca32c27c5de622fedd1b92afe4256
1b733750e5e8d3da59386033fd7de774829a4651caf7b2f1b85cdcbb5ce91f17921da8922fb636fcaaa34ea04abe37cbdd7cb97ade60f00da04ace7740d38790
02aa1c385bb1aaec7e07f437b339ebcf0355ce8a82abcd14a8a24e52a53a53a08a3a4795fa4c812aea14552a3405aaa8337e0754a32950459db002aad214a8a2
f20f40759a02555476552a3505aaa8dcaad46a0a54519955a9d694caff8fa8bcab62e764e4abd714a8a2b2ae802a3605aaa89c0350cda64015955195aa4d812a
2a9f2a759b02555436552a3705aaa85caad46e4a69aa9895c67df8822a475740d59b529c2af7beef85e827fbfabf726754859bf1cf3babde94e2547998bf937c
1f51e5608d1730a54c557a6d474fdfbe96e4419f8f902c53952b9852a62ad491881b69f27a0dbd78f6434816a9ca254c295515dd8dbca87771debc92e4e1865d
bebd03355ec394525521339e77115589c9a30dfbc7ededaff122a694a90acd559eb4188aaac46469aa5cc5943255d1ddc7209ee487572549e6576576a3dbeab9
8c29c5a942cf556e6601d46b3f84d7274996a5ca754c294e15e246238e9e9988a7a0e7b64fbd95248b52e542a694a64ac2109fa2f4d36439aa5cc9948255c9c1
d6ebdb58cfa54c812aef37caaee75aa64095f71be5d6733153a0cafb8d32ebb99a2950e5fd4679f55cce944a7e32f67955ae670a54d957cf054d812a1bebb18a
5cd1942daae4a006555ca0ede5e0ab92e574bfaeca854dd9a04a4e72dfc5c755c97af53f0254d952cf953b15a8b2a91e716557a0ca867ad2097ae63bf801a0ca
867aa0caefdff7c755c97cfd3f0154e1d7736951a0ca967a2e2d0a54d950cfa53d515065433dd71605aa6ca8e7e7bfa583409533eaa912a872463d550255cea8
a74aa0ca19f554095439a39e2a812a67d4532575ab928b6fdf5f114015a8c204aa4015265005aa30812a50850954812a4ca00a54610255a00a13a80255984015
a8c204aa4015265005aa30812a50850954812a4ca00a54610255a00a13a80255984015a8c204aa4015265005aa30812a50850954812a4ca00a54610255a00a93
3a54011f00aa0026500530812a800954014ca00a60625501609d11ffe944c043abf20f18e994e6a6ed48200000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.5 Interface m\u233\'e9moire-CPU de huit bits}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 8088 et 80188 peuvent manipuler des valeurs d'un mot ou d'un double-mot, m\u234\'eame avec leurs bus de huit bits. Cependant, ceci requiert plusieurs op\u233\'e9rations de m\u233\'e9moire, car ces processeurs peuvent manipuler seulement un octet \u224\'e0 la fois. Charger un mot demande deux op\u233\'e9rations ; charger un double-mot en demande quatre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs 8086, 80186, 80286 et 30386SX ont des bus de donn\u233\'e9es de 16 bits. Ceci leur permet d'acc\u233\'e9der au double de m\u233\'e9moire dans le m\u234\'eame laps de temps }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92avec les bus de 8 bits}{\loch
. Ces processeurs organisent la m\u233\'e9moire }{\rtlch \ltrch\lang3084\loch
en deux}{\loch
 banques paires et impaires (voir figure 3.6). La figure 3.7 illustre la connexion au CPU (D0-D7 se r\u233\'e9f\u232\'e8re \u224\'e0 l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 et D8-D15 \u224\'e0 l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 du bus de donn\u233\'e9es).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2160\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich144\picwgoal8310\pichgoal2160\pngblip
89504e470d0a1a0a0000000d494844520000022a0000009008030000001120b0bb00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000054649444154789ced9d016ea33a1445bd
986c86c5b01916e3cd78317c0c49db797977c608fd56e59e23cd88a6b728bc1c19436c5cca0af04f4a5b0baac000a80283a00a0c822a3008aac020a80283a00a
0c822a3008aac020a80283a00a0c822a3008aac020a80283a00a0c822a7fa1d5cfedbac40d37dc54293bf5dfc1cd899e7cbc7e9a4bdc70c34e95a96e8c245b99
fa7f6f86a08a09651e4eee65a9e579be411553551efb31f74f7d7e9e8f4a9dca578fdad3915e9d2d32ef867c6c3862a74a3f01b5adb168fd876533a56eff5ab7
60aecbfeea417d7668a6b279d5ba51ebe7862576aa7496a375a9bdc1d85b94fec2b4fe717a7aa9b2797464cafab1e1899d2a4f1996b26fd7e38a683e74c955a9
7b7db653d6c78627aeaa6c6ab4d24f44fd82a8b657f3f2a9ca675fa5befa351f1b9ed8aa3295fe99b78fde4954e559967628f53c01b59513900dc77d95b6df60
3b7a1eed6840de54392e93f70ba0a99fb0be6e5862a7caab6ff23aecfee3dea38daa7429ca1e6afb9f942f1b96b8a9f24eab4dfdaabe7ed55e9126b3f7075560
1054814150050641959c4255223eaa94ff919f3eb66fc1489573e93355312920aae4695489a08a48a34a0455441a5522a822d2a812411591469588b72a6d2e8f
7cf83eaabce1ad4aa96bcb5dc954f9fc567a60d7f7c35a95a55b92cf0aca54691b3535eee25bfb1d58abf297035727a02913cba480c6aab4b22e25fdeca52a75
1adbf51df156656a67fa2aeb5eaea15ddf116f55fa07dff28622ad4adea8a0cacdc8fa2abb2a79f39156459dad2ebcaddf83b52a8fae4a4d27bce7aa884a9914
d05995fae87d95bcfb915525bd52ce777d43ac55e9776bcf5c01e50d10aadc0dbe03ba08aa8834aa445045a45125822a228d2a115411695489a08a48a34a0455
441a552246aa3065ec1a46aa9c4bd3aa445045a45125822a228d2a115411695489a08a48a34a0455441a5522f6aae4c35550e51d7755e67c60753e0f48cc1843
959b914fd638a34a9d5bfe305293027aab3289e91aa92ab35a9dcca480d6aa6c1ffe09551ecb54d2352e4d0ae8ac4a1f2b7b4295fe6cf599becafdc92677aca7
5451bb41959b917453e55330fea64aa29649018d55395e1e6e558e6988b42af7e7b22a5bb776ebab64fd5a9302a24afe725695453c0ecca480eeaaa83437f623
a822d2a812411591469508aa8834aa445045a45125822a228d2a11541169548918a9c294b16b18a9722e4dab12411591469508aa8834aa445045a45125822a22
8d2a115411695489a08a48a34ac45b95fac887e00b55eae3c1887d03c488fd452cc6914d199b1805f7d36fe25b488e72ea23e0c4123fd980c926d6f93029a0b3
2ac7ebe3cb31ac62f5209302baaba2568312554927a39a14d05c95766acad8521ee3bbbe1beeaa88c7abc85625ed059b14d05a15b16ed4ca44d4046f55a429e9
ecc287da8d49019d5599fbb375c6fb2ad3c293107efa4d7c0bc9511e43d8c62f96b75e2d776b0de03ba08ba08a48a34a0455441a5522a822d2a8124115914695
08aa8834aa448c5461cad8358c543997a65589a08a48a34a0455441a5522a822d2a812411591469508aa8834aa445045a45125822a228d2a116f55da54c47250
42959955c60c488eb20f81144b87a911fba8624036aaad8a3960429559ac746852406755f6d3497ef4e99c65b57c9d49019d5529e7e62cebf085b7f57b401554
1904555065106b554ef65556543139d2f797ce5e01a18ac991bebf74fabe0aaafcf49bf816f2e9ed27efd6a28a037c0774115411695489a08a48a34a0455441a
5522a822d2a812411591469588912acc2ebc868f2a7011548141500506411518045560105481417655000668263790e02a0d556098ff00c69beaa34caa17ba00
00000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.6 Adresses des octets dans une m\u233\'e9moire organis\u233\'e9e par mots. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3765\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich251\picwgoal8310\pichgoal3765\pngblip
89504e470d0a1a0a0000000d494844520000022a000000fb080300000073134f2200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000ade49444154789ced9dcdb5a32018402d
669a49316926c5d88c0d64e3c28d1b178ea0a2268a1f88e08bf79e3323c66f00e10e3f792f316b01f6298a360390a05449ed2bfc05500584a00a08411510822a
2004554008aa8010540121a80242500584a00a08411510822a2004554008aa8010540121a872198a7c4ae7afcf447a50e54cfadf1ecbf7033b2754e4bff1ec99
7d26d2832a67923df20e4964913dd45f5f86a0ca4dc89ee248dd097936cc37a872370655fee916d6bdfed41352963fb28546c5e088ea8b2ee2a9634de21aa0ca
99e809a8e8068b429dbc942979f7a79b689ef94bbf38900f0b9a47d6795528a1da29711150e54cf4aaf6d58f2eb91e289411d94b2d4c16b3d3a88ad2488764ad
495c05543993d1865736eaa279eae9665d156d949ab24ce22aa0ca99181bb257a1e69bce08c53060cc5499d62af9b8aec9a705ce3540953331363c32dde7c5b0
3ef95265e8846250aa9f808a9609e836f4efabe8e1a49f61d4a7393b1fbe55e9b7c97a03f45013d63c711150e54c86a5493b8d0eeafcb132aa2829b2ac1f79f4
6a6696b808a81299222f36aee4e395628c28b64293802a2004554008aa8010540121a87222ef73487437a87222a80242500584a00a0841151022ed56170550e5
2751dd2af942d841154928aafc265a95fd30a38a2014557e13540121a80242500584b0030221ec804008131008411510822ae1f0fa11888d6477b20aaa84e306
aa08e3c49547959f55851d5018eea0ca7e181390005451a08a005451a08a8070bd8b2aa773015524ab39c96aef9aaa08e3c495bfb72ac7f3b9b02a12d1c75145
f87f22d1dda0ca89300185035514a822005514a822005514a822e006aa08e3d801ed105c95cbc10e28107d631ecfe7caaa086a3fc43201599036e61ea8120154
3917540984b431f7409508a0cab9889bc121f6484b1d0055deefbaf94e85821d5020fac63c9e8fb32a4d5bcf4fbe53a160020a84b431f77056a59dff5a15aa88
b8a72a75dbb4a539431511f754a56dab562f4b4af5afb52026d5d6adbad674a76a92aad5ebe5744495342452a5ea24187f5bb32edb615b31a43a51ea7a38ad3a
839ab21b83ccd15915693338c4fab7d3216ea98a1a3cf4c2b6d20387aac7946afb31469f36c3eb6f737456851d501812a9a24707557a3d0c2df394be58f7f936
ba5f9aea3d1d9d5511d47e544578a3475aea007754a531a5afaad2af506a45355853cf8ea8928434aaf4e5d6667af99880546239df8cab098f0f2ea14a2092a8
52b595e9f856af5adaf72cd54ba296b46a97a436d5e5ec882a8948a2ca3836349d0db5a98749f5aa94e3ebfa584e475755a4cde010ebd03021b9a12a4beafa3b
a5a9ea6af5e8063ba040f48d793c9f0bff649909280cd2c6dc035522802ae7822a819036e61ea81201543917713338c41e69a903fc982ac7b30ac99b1d5030ee
a0ca7e181390005451a08a005451a08a005451a08a801ba8228c6307b4c30d54610714863ba8b21fc60424005514a822005514a822005514a822e006aa08e3d8
01ed700355d80185e10eaaec87310109401505aa08401505aa08401505aa08b8812ac23876403bdc4015764061b8832afb614c4002565429f2c23d1f5489c0c5
54c9fb51b6edc7eda77e2557179ed64aa24a04aea54aaeedc81eea4f9ebfd419aa2c425165ac8d4ee7af2ea59c517efc75558471ec8076f850a5c85e63f26754
610714860f55062d14fd4cf4ef0754d90f6302126051257b3eb3ae72a8b20c45959e852ad9e3357b0d55fa5054e9f95cabf429adca03557428aa8cb5d1e9a258
a8a2f599ced7b8b02ac23876403b58de57995451d78b696a5ae3c2aab0030ac3a72aedab6f8fb92a857ec93aa85c5a95fd302620015faa7403cbf7cf808adc3a
a4b4a81285cba9e205aa44e0c7548984fcf65025103750451827ce15558e716155d80185e10eaa086a3faa22bc5161e9a141155411822aa8220455504508aa9c
ac8a304e9c2baa1ce3c2aab0030ac31d5411d47e544578a3c2d243832aa8220455504508aaa08a1054395915619c38575439c68555610714863ba822a8fda88a
f04685a587e63eaaf4913ecf4a4695beec1ba952d775db2e9ebbbd3c43157bd9f751a5e93b19553cb99b2a756747adfe492749a38e8d393d4715619c38575439
865c95b2934295abfe5475dbd495393d471576406188af8a3ad4a51a5df4891a4ca6d3535411d47e544578a3c2d243733755d4a8f22e9bb16c3def985354b196
7d3355d45aa5519ba14995e91455ac65df4c95aecc4aa51aa3caec1455ac65df4795f17d1535b05443d9cd7b7e8a2ad6b26fa48aa21e528d7edf562f52a6d353
546107148498aacca8ccbb28a5dafe54ce6fc439dcde091c6f2f2f6ea94aacce4a5b7a6850e5c4ce4a5b7a6850e5c4ce4a5b7a6850e5c4ce4a5b7a6850e5c4ce
4a5b7a6850254667b9e413a8c8f0a08a0f3ef729cd275091e141151f7cee539a4fa022c3832a3ef8dca7349f40458607557cf0b94f693e818a0c0faaf8e0739f
d27c0215191e54f1c1e73ea5f9042a323ca8e283cf7d4af30954647850c5079ffb94e613a8c8f0a08a0f3ef729cd275091e1f931558e560655b6419545655065
1b5459540655b6b9822a014095f3b9802ac17242955349af4a5022552654d60eb147ee2c0ca8e2539950593bc41eb9b330a08a4f654265ed107be4cec2802a3e
950995b543ec913b0b03aaf8542654d60eb147ee2c0c6955b914a86207550ca86207550ca86207550ca86207550ca86207550ca86207550ca86207550ca86207
550ca86207550ca86207550ca86207550ca86207550c0eaa84c2a11ab15be31b5431449564bbff1d42e3822a86a8926cf7bf43685c50c5105592edfe77088d0b
aa18a24ab2ddff0ea1714115c3a14eafbd9e82e8508dd8adf10daa18bcbab97f8a837e0a62b97265c8ba41959fc25915f330deba73a19c32985fd16c3e44d3a1
1ab15be31b5431b8aa323d8c57ff5519213e1fd3cb5b70bf86972a7ac4f87063764561798299433562b7c637a862f052a5d4cf28ab5754290755b6a71f54f9ab
78a9a21fc6dbcbd0b45f571606a1cacfe0a5ca625469fa6c16a38af551770ed588db166ba08ac14b95ddb58a355f876ac46e8d6f50c5e0a5cab4032a577740b6
950aaafc555c5599bfaf522f37c7e6cace039c1daa11bb35be411583b32a8a7ecc68a6e4d71554f93d1c555950f133a03b71c0145f1caa11bb35be4115435449
b6fbdf21342ea862882ac976ff3b84c605550c5125d9ee7f87d0b8a08a21aa24dbfdef101a175431449564bbff1d42e3822a86835d7c7235ce2c5206aa1850c5
0eaa1850c50eaa1850c50eaa1850c50eaa1850c50eaa1850c50eaa181c544940ead6419519a965b093ba755065466a19eca46e1d5499915a063ba95b075566a4
96c14eead6419519c7bad2ef3726e5a46e1d5499e1d779b36fcda8d72e552667bf5250e582b877ded6b766cc2f4d39b78dfa020d54f9019c3b6ffa6498fe0847
3dfb329ee952693e2064fdf018aafc25fc54d11f17abd564331f55d63e8a8a2a3f839f2afde74f3fd72af30fb8cfd72afeb6a46d1b05aa18fc54e90f3a834f55
3e3ef65e37cdf6b7c2a1ca5fc24f153d74346a99a2be1e63ed6b33e639b303fa09fc54997f6b46b37269a987fd8b1150e58fe0a74affad19abaa0c592e55b17c
310faafc15dc3bcfbc79d2f43ba06ae59251454d522513d04fe0d7795a8752279bb54b46953ec6775041952be1db899aaaaecbbd9803efd5a2caa5f0efc618a4
6e1d5499915a063ba95b075566a496c14eead6419519a965b093ba755065466a19eca46e1d5499915a063ba95b0755400caa8010540121a80242500584a00a08
d1aa0008e85449ad2bfc098aa2fd0f3997180cb7cf5de90000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.7 Organisation de la m\u233\'e9moire dans un processeur de 16 bits (8086, 80186, 80286, 80386sx)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les membres 16 bits de la famille 80x86 peuvent charger un mot depuis n'importe quelle adresse. Comme mentionn\u233\'e9 plus t\u244\'f4t, lle processeur adresse l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 de la valeur depuis l'adresse sp\u233\'e9cifi\u233\'e9e \u224\'e0 l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 de la prochaine adresse cons\u233\'e9cutive. Ceci donne lieu \u224\'e0 un probl\u232\'e8me subtil si vous regardez plus attentivement le diagramme ci-dessus. Qu'arrive-t-il si vous acc\u233\'e9dez \u224\'e0 un mot dans une adresse impaire ? Bon, l'octet le moins significatif du mot se situe \u224\'e0 l'adresse 125 et l'octet le plus significatif \u224\'e0 l'adresse 126. Qu'est-ce qu'il y a de sp\u233\'e9cial ? Deux probl\u232\'e8mes r\u233\'e9sultent de cette approche.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
D'abord, observez encore la figure 3.7 : les lignes du bus allant de 8 \u224\'e0 15 (l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
), sont connect\u233\'e9es \u224\'e0 la banque impaire, alors que les lignes allant de 0 \u224\'e0 7 (l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
), sont connect\u233\'e9es \u224\'e0 la branche paire.  Un acc\u232\'e8s \u224\'e0 l'emplacement 125 aura pour effet de transf\u233\'e9rer les donn\u233\'e9es au CPU par l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 du bus de donn\u233\'e9es, alors qu'on }{\rtlch \ltrch\lang3084\loch
s\u8217\'92attend que cette donn\u233\'e9e soit adress\u233\'e9e dans l\u8217\'92octet le moins significatif}{\loch
 ! Heureusement, le CPU reconna\u238\'eet la situation et place automatiquement cette portion de m\u233\'e9moire sur l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le second probl\u232\'e8me est encore plus obscur. Quand on acc\u232\'e8de \u224\'e0 des mots, en r\u233\'e9alit\u233\'e9 on est en train d'acc\u233\'e9der \u224\'e0 deux octets s\u233\'e9par\u233\'e9s, chacun desquels }{\rtlch \ltrch\lang3084\loch
avec}{\loch
 sa propre adresse.  Donc, la question }{\rtlch \ltrch\lang3084\loch
suivante surgit }{\loch
\u171\'ab }{\rtlch \ltrch\lang3084\loch
Laquelle de ces adresses figurera dans }{\loch
le bus des adresses ? \u187\'bb. Les CPU 80x86 de 16 bits placent toujours des adresses paires dans le bus. Les octets pairs apparaissent toujours dans les lignes D0-D7 et les octets impairs dans les lignes D8-D15. Si vous acc\u233\'e9dez \u224\'e0 un mot dans une adresse paire, le CPU peut transporter tout le bloc de 16 bits en une seule op\u233\'e9ration de m\u233\'e9moire. Au contraire, si vous acc\u233\'e9dez \u224\'e0 un seul octet, le CPU active la banque appropri\u233\'e9e (en utilisant une ligne de contr\u244\'f4le d'activation d'octets (byte enable)). Si l'octet se trouvait dans une adresse impaire, le CPU le transf\u233\'e9rerait de l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 \u224\'e0 l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du bus. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Donc, }{\rtlch \ltrch\lang3084\loch
qu'arrive-t-il }{\loch
quand le CPU acc\u232\'e8de \u224\'e0 un }{\rtlch \ltrch\i\loch
mot}{\loch
 qui se trouve dans une adresse impaire, comme dans l'exemple }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on a vu ci-dessus}{\loch
 ? Le CPU }{\rtlch \ltrch\i\loch
ne }{\rtlch \ltrch\lang3084\i\loch
sera pas en mesure de }{\rtlch \ltrch\i\loch
placer 125 dans le bus d'adresse et lire la donn\u233\'e9e de 16 bits d'un seul coup}{\loch
. Il n'y a pas d'adresses impaires venant d'un CPU 80x86 de 16 bits. Les adresses trait\u233\'e9es sont toujours paires. Donc, si vous cherchez de placer 125 dans le bus des adresses, vous y trouverez la valeur 124. L\u224\'e0 o\u249\'f9 vous comptiez d'avoir une valeur de 16 bits \u224\'e0 partir de l'adresse 125 vous l'obtiendrez avec l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif }{\loch
\u224\'e0 l'adresse 124 et l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 \u224\'e0 l'adresse 125 - ce qui ne correspond pas du tout \u224\'e0 ce }{\rtlch \ltrch\lang3084\loch
que vous vous }{\loch
attendiez. Acc\u233\'e9der un mot se trouvant dans une adresse impaire demande deux op\u233\'e9rations de m\u233\'e9moire. D'abord, le CPU doit lire l'octet \u224\'e0 l'adresse 125 et ensuite, il doit le faire \u224\'e0 l'adresse 126. Finalement, il a besoin de permuter les positions internes de ces octets parce que les deux }{\rtlch \ltrch\lang3084\loch
ont atteint }{\loch
l'unit\u233\'e9 centrale \u224\'e0 partir de la mauvaise position.   }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Heureusement, les CPU 80x86 }{\rtlch \ltrch\lang3084\loch
de}{\loch
 16 bits masquent ces d\u233\'e9tails au programmeur. Votre programme peut parfaitement se servir des adresses qui }{\rtlch \ltrch\lang3084\loch
mieux }{\loch
lui chantent et le CPU interpr\u233\'e9tera comme il faut (et}{\rtlch \ltrch\lang3084\loch
 il }{\loch
permutera }{\rtlch \ltrch\lang3084\loch
finalement}{\loch
) les donn\u233\'e9es en m\u233\'e9moire. Cependant, ceci demande deux op\u233\'e9rations de m\u233\'e9moire (situation correspondant exactement \u224\'e0 ce qui arrivait normalement sur les processeurs 8088 et 80188). Par cons\u233\'e9quent, l'acc\u232\'e8s \u224\'e0 des mots }{\rtlch \ltrch\lang3084\loch
par le biais d\u8217\'92adresses }{\loch
impaires est plus lent que l'acc\u232\'e8s \u224\'e0 des adresses paires. }{\rtlch \ltrch\b\loch
Faites donc attention \u224\'e0 la fa\u231\'e7on dont vous utilisez la m\u233\'e9moire, car de ceci d\u233\'e9pend la vitesse de votre programme. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Acc\u233\'e9der des }{\loch
blocs de m\u233\'e9moire de 32 bits demande toujours deux op\u233\'e9rations de m\u233\'e9moire sur les processeurs }{\rtlch \ltrch\lang3084\loch
de }{\loch
16 bits. Et si vous le faites \u224\'e0 des adresses impaires, les op\u233\'e9rations requises passeront \u224\'e0 trois. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs }{\rtlch \ltrch\lang3084\loch
de }{\loch
32 bits de la famille 80x86 (les 80386, 80486 et Pentium Overdrive), utilisent quatre banques de m\u233\'e9moire associ\u233\'e9es au bus de donn\u233\'e9es de 32 bits (voir la figure 3.8). L'adresse plac\u233\'e9e dans le bus des adresses est toujours un multiple de quatre. En utilisant diverses "lignes d'activation d'octets" (}{\rtlch\ai \ltrch\i\loch
byte enable lines}{\loch
), le CPU peut s\u233\'e9lectionner lequel des quatre octets dans le bus est demand\u233\'e9 par un programme. Et, comme dans le cas des processeurs }{\rtlch \ltrch\lang3084\loch
de }{\loch
16 bits, l'unit\u233\'e9 centrale fera toujours de }{\rtlch \ltrch\lang3084\loch
fa\u231\'e7on }{\loch
que ces octets soient arrang\u233\'e9s convenablement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4200\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich280\picwgoal8310\pichgoal4200\pngblip
89504e470d0a1a0a0000000d494844520000022a00000118080300000045b42dba00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000da049444154789ced9d4bb6a23010405d
4c6fc6c5b81917e366dc8013064e32614093845f10b08a222abc7bcfe9169ef5a052b91d886df47402784f5555e12f8065500584a00a08411510822a20045540
08aa8010540121a80242500584a00a08411510822a2004554008aa8010540121a8024250c5caed9ee5b077f97115a11650a523bc29f0acfca56bf34e4201f78b
a2d0677f5c990127790a2650a5e374beddae492ddef7d5fd74adaa7fb2fa697af4ea4f2d0b3f9f7c1a17e991d7832a1da1dc974495dbbbdf0996dcdfc735c7d3
15fa2a0f578f862b40958ea0caf95fdd45fffcee2d0cec519fd39c0c7e50697e5372065da185a355a590d502aa74d41d7ebbf8813f16bed6e374f5378c977af7
327d2d6aba48daa7ba429f85f72af7cbbf4f98822a3ddd28120a72ab3b2af64014e73af52bb71871c9a18af4aeb656e5cc6ded67f19adc422dbc26e7732349bc
104d5f639a51e5bcbd2a77ddddc727ba10553a820db7307cd4fde4256854b979a6ff8937f72ac26e55145a799f7a43954f125409b3df7aee11068aa0ca7de942
f02fdc016f3f03524c7e02a8f251bc2af7e60ef5140797e6cee5de18f48abf5489af3f8a429fe25026090db63259fe28f19e240e21f146f5daaee99e7f15f72a
7f5555a74a40e2ca9d576bbf4a7b171bfb6ae93f59eeb27ffb3999bb91da185499e22a1e28fe10a8f2ca4536f2ff35500584a00a08411510822a2004554008aa
6879ec8a0d1b8e2a5abeddf93a366c38aa68f976e7ebd8b0e1a8a2e5db9daf63c386a38a966f77be8e0d1b8e2a5a7cfd251f33def495e813c9d5a1920c2a54f9
32a1a3de8775aa08422b75a8200354f93aa80242500584a00a08411510c20c088430aa8010540121a8024250653b1e5bb369766650653bfe822a025a55e4d31a
45e84166407f4195f7618c2a0250c5832a0250c5832a0250c5832a02625336a04295b9d043a9623fce2fab22a05545fe6f42117aa019d0d155791fc6a8220055
3ca82200553ca82200553ca82200553ca822e02fa822a055453ead518432034ae854f939185536425acc77a0ca7c28aa24a0ca7c28aa24a0ca7c28aa24a0ca7c
28aa24d85471e5ebd6563003da88d814fb71d4aa94951beebc6e6d05a3ca46488bf90eb52ad5f0bd32a8822ab3b8aaac8a6e0f555065be03ab67156e4b0affdb
41906eab72957faeac77fd45caf99f17fd23aa08388e2acf5a82e6e4952b621edd562d8a73cdeeb336a82cea31a87b441509c751c50f1ee1c6f619060e9f47bf
55c53126ec96cdcf1fdda35e1501ad2af2698d22941950825295303af8b3bba646c3adf0a48bc72d4301cbe7a37f54ab22c8be5545de504695b5e85429bbb34f
aa12ef509ce7d958e3068fa82239f7415489e775dde5657401f21be9f5a69d59af588d822a1bf115559ed5b3ebf82adcb5548fc15694c4dfd2fa59929f541783
475491701455dab1a1ac6d705d1edd5654a5687f1e1e8bfe1155041c459514e75eb7024ff79c7cd4c10c68236253ecc7e17f96e74319551250653e1455125065
3e14551250653e14551250653e1455127e5915014dac625aa308650694f0cb4bc6de8731aa0840150faa0840150faa0840150faa0840150faa08f80baa086855
914f6b14a1cc80127e5995f7618c2a0250c5832a0250c5832a0250c5832a0250c5832a02fe822a025a55e4d31a452833a0845f56e57d18a38a0054f1a08a0054
f1a08a0054f1a08a0054f1a08a80bfa08a805615f9b44611ca0c28e19755791fc6a82200553ca82260a229f7db5d7f1c54990f3daa2ab778e9ace205f6127e72
f34f5c164f8c2af3a10755e516ec389dfd9fdbedeaf75025094595f61461fb76adb7bc33de8fddab22a055453ead51841e7306743f5dbb931d4695f7618c2a02
464d69b408270b57a27fa8320a4595c85095d3e5723add5165148a2a914495d3f93af819aac45054898cef55e25650e58c2a211455da5384edfb3d5125e8d3ef
4fa7f6bbaa086855914f6b14a1c79c010d5f57e955f1cfdffb4bd3746abfabcafb304615012f4db946c987aadcc38f1607155459083daa2af5c0f2fa7f40f7db
e29052a1ca52e871555905aacc87a24a42a7ca8790370f5536e22fa822a055453ead51841e7406b4965f5645907dab8abca18c2a6b4195f95054494095f95054
494095f95054494095f9505449f8655504b4aac8a7358a50664009bfac8a20fb561579431955d6822af3a1a892802af3a1a892802af3a1a892802af3a1a892f0
cbaa086855914f6b14a1cc80127e591541f6ad2af28632aaac0555e643512541a24a8c5cf3b5daa8a265f7aa38e7eabf929fb9b96854b1b07755ca580f549909
7d7f48318750c5d57638ff2bb524a57f2cbbdd4caa086855914f6b14a1cc8012e4aa14b514febcfecfd355a57b76bb99541164dfaa226f28a3ca5ae4aaf80757
f8d125ecf8c1a4df45958d38842a7e547914657bee70dde9765165230ea18abf5729fd64a857a5df45958d38842af5399f7eabec5419eca2ca46ec5d95f67515
3fb03c9b73978fe16e165504b4aac8a7358a50664009f2576b5db35586d76dc34d4abf9b4315619cf8a8f94245813276aeca8067f72a4ae1a73f4ff50b718ae6
ed077b370cfae328aa7caaaa9f4dca8abd1b06fd812abaaa7e36292bf66e18f407aae8aafad9a4acd8bb61d01fa8a2abea6793b262ef86417fa08aaeaa9f4dca
8abd1b06fd812a2babaa398e3dd41c6b065556d757731c7b28aa2c802a9bc69a4195d5f5d51cc71e8a2a0ba0caa6b1665065757d35c7b187a2ca029f56652be6
6a620b4595055065d35833a8b2397335b185a2ca02a8b269ac993da8624de6c328d2d0646c8d35832a9ba3484393b135d60caa2ce0562d6955a4a1c9d81a6b26
9b2a1bf00555e22fc5b7e48625adc5c433cda14b7b9f6a32b6c69ac9a4caa67c3099c1272bb8da85a23fc0f099c0ec8a68451a9a8cadb16650253d55ffc90ae1
af6727c4f8331778b57603e63b62251f4ca65fad387663f08c6761399a220d4dc6d65833a8929eaa5b03dd8c2723558a4695f9cb0faa2858ea8a557c3099c127
2b4419caeae59998922e5d7be82155f929e67b74bac6afa34a190f938c2a8beb1615696832b6c69a4195b4c6b27b95c5e32ad2d0646c8d35832a698d4733a062
7206b474a7822a7b65a14ba76b3c785dc5a593e3feb32c973f8d43918626636bac195499a8711c33ca7ef3e599f7c710a5a1c9d81a6b0655e679f27f40435065
7314696832b6c69a4195cd51a4a1c9d81a6b06553647918626636bac1954d91c451a9a8cadb16650657314696832b6c69a4195bcf55d4e4393b135d60caaa08a
1054411521a8822a4250e59b6832b6c69a41956fa2c9d81a6b0655be8926636bac1954f9269a8cadb16650e59b6832b6c69a419505d6bd09418126636bac1954
99a8f16021aa9b7ae6d91d78d54996bb3457ac195419d558b010f5d11fb82afd9a54e54996bb3457ac1954496bdcbfd93abc2bd275ebdb876fc32ebaf7dcaefd
faef852ecd156b0655d21af74b389cbfda0c469564212aaa1c0f6ddf0d16868dee559285a8c37b15832d9a8cadb1665025adf160b969f87d37f54caf8a2bcbf9
0f5a119c4e91b135d60caaa435eec78ed2dfa694d5736a216ab2bc9019d031d0f6ddcb42d4f2f59947aac7f25ac3e5d32932b6c69a4195b4c68385a853aaf4f7
28fdef38dd77f4beebd25cb166506554e3eed59332ce809eafcf3c3a55fc45aae002740c56f55df0a1089be5c4338f4e9518b37a5041955f62752f3ec242d4e2
5d8ce5b55a54f9290cfdf80134195b63cda0ca37d1646c8d35832adf4493b135d60caa7c134dc6d65833a8f24d34195b63cda0ca37d1646c8d35832a79ebab07
55be04aa6c06aaa08a1054d90b9ad6652925aaec054debb2941255f682a675594a892a7b41d3ba2ca54495bda0695d9652a2ca5ed0b42e4b295145c2d3cdbd7d
a9fb7075371bb2119ad6652925aa4cd478b432b9488f348c099bae0d79fb46280b9ad6652925aa8c6a3cb132d97be1860bdd93f7df86f7d67a4d9c6141902835
79ebb2941255d21a4fac4c1ebf237ffc35bafdd71b66bd33d2b42e4b295125adf1c46a9ff1b7ff8cbe46b75f69685cc0fc2e3545ebb2941255d21a4fac21ac2f
2e65551633318f7829f28b10f37e708fa675594a892a698d2756268f8f94c4148d2161bd2ab7b57b46db1f93a34a193f986762f5b21bf861593b26494dd1ba2c
a54495b4c613f72acddfe5444c6a8743953da3ed8f8995c9e123115e54e93fd9a90355768dba3f265626fb87c1f7b50f62c2a65f83e843b800ed9b55fd319a06
3bffb3722aa66ab74308b7b5bb669b6ecabe785980a675594a892a7b41d3ba2ca54495bda0695d9652a2ca5ed0b42e4b2951652f685a97a594a8b21734adcb52
4a54c95bdfbca0ca86a0ca66a00aaa0841155411822a47244b2951e588642925aa1c912ca544952392a594a87244b2941255e6790ade57907dfde92ab2941255
266a9c2e32f59483951b83987efde9537fae8c642925aa8c6afcbac8f411de07e7a662faf5a72bce95912ca54495b4c6938b4c8b2a1955463161ab78a0caced1
d678729169fdf78b2a5dccd477d47d9b2ca54495b4c6538b4cfd65e6459562bcfe1455768eb6c6138b4ce337d38d55890f83f5a7a8b273b4357e5d645acf6dca
f86dca935fa3dbddfaa2caced1d6f87591a91b1f6a7c3fe350e510686b3cb7c8746106842ac7405de3d745a6f18999d755b8001d8655354e1799c627c6afd686
fde1fa5354d939b93b25fbfad355642925aa1c912ca544952392a594a87244b29412558e489652a2ca11c9524a543922594a7974556033500584a00a08411510
822a20045540485405e03d8d2e0002fe03bf18a39ac2aca33b0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.8 Organisation de la m\u233\'e9moire dans un processeur de 32 bits (80386, 80486, Pentium Overdrive)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Avec une interface }{\rtlch \ltrch\lang3084\loch
de }{\loch
m\u233\'e9moire de 32 bits, les CPU 80x86 peuvent acc\u233\'e9der \u224\'e0 tout mot }{\rtlch \ltrch\lang3084\loch
avec }{\loch
une seule op\u233\'e9ration de m\u233\'e9moire. Si l'op\u233\'e9ration (adresse MOD 4) n'est pas \u233\'e9gale \u224\'e0 trois, le CPU de 32 bits }{\rtlch \ltrch\lang3084\loch
acc\u232\'e8de }{\loch
au mot de l'adresse sp\u233\'e9cifi\u233\'e9e en une seule op\u233\'e9ration de m\u233\'e9moire. Cependant, si le reste est trois, il faudra trois op\u233\'e9rations de m\u233\'e9moire pour avoir acc\u232\'e8s au mot (voir figure 3.9). C'est d'ailleurs le m\u234\'eame probl\u232\'e8me rencontr\u233\'e9 avec les processeurs }{\rtlch \ltrch\lang3084\loch
de }{\loch
16 bits, }{\rtlch \ltrch\lang3084\loch
sauf qu\u8217\'92il }{\loch
se produit }{\rtlch \ltrch\lang3084\loch
la moiti\u233\'e9 des fois}{\loch
.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom735\shpbxcolumn\shpbxignore\shpleft0\shpright8280{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw552\pich49\picwgoal8280\pichgoal735\pngblip
89504e470d0a1a0a0000000d4948445200000228000000310803000000c795a2cd00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000000f849444154789ceddc4b8ac340104441
ddffd0e3b1d7558b6cd3f40747ec138178bb127a5e107820f00e6577aa5c40284484424428448442442844844244284484424428448442442844ae0be56fd8f8
d973d1a174f7ab1cf213a10c3f64c5e29bc94642e908a5104a472885503a422984d2114a21948e500aa174845208a5239442281da11442e908a5104a4728c575
a17c715259b078c6fb7d177c93fb425931195f08e53442d94328731642398d50f610ca9c85504e23943d8432672194d308650fa1cc5908e53442d94328731642
39cdf819c6ad6786eb42399450e04328448442442844844244284456fd0b84db5df63138db0885c83fda4c919bf77248210000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.9 Acc\u232\'e8s \u224\'e0 un mot \u224\'e0 (adresse }{\rtlch \ltrch\b\loch
mod}{\loch
 4) = 3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un CPU de 32 bits peut acc\u233\'e9der \u224\'e0 un double-mot en une seule op\u233\'e9ration de m\u233\'e9moire, }{\rtlch \ltrch\i\loch
si toutefois}{\loch
 l'adresse }{\rtlch \ltrch\lang3084\loch
de }{\loch
cette }{\rtlch \ltrch\lang3084\loch
donn\u233\'e9e}{\loch
 est un multiple de quatre. Sinon, le CPU emploiera deux op\u233\'e9rations. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Encore une fois, le CPU traite toutes ces situations automatiquement. A condition de charger des donn\u233\'e9es correctes, le CPU fera n'importe quoi pour vous. Cependant, les performances tirent une grande partie de leur profit d'une bonne disposition des donn\u233\'e9es. Comme r\u232\'e8gle g\u233\'e9n\u233\'e9rale, vous devriez toujours placer des mots \u224\'e0 des adresses paires et des doubles-mots \u224\'e0 des adresses qui sont }{\rtlch \ltrch\lang3084\loch
des }{\loch
multiples de quatre. Ceci augmentera la vitesse de vos programmes. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_01_03}{\*\bkmkend p3_01_03}\rtlch \ltrch\fs23\b\loch
3.1.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
ntr\u233\'e9es/}{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
orties}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
A c\u244\'f4t\u233\'e9 des 20, 24 ou 32 lignes d'adresse, la famille 80x86 fournit \u233\'e9galement un bus des adresses de 16 bits pour les E/S. Ceci fait en tout deux espaces d'adressage. Les lignes du bus de contr\u244\'f4le diff\u233\'e9rencient les adresses de m\u233\'e9moire des adresses des E/S. Mais, \u224\'e0 part les fait d'\u234\'eatre diff\u233\'e9renci\u233\'e9es et d'avoir un espace bus plus petit, les adresses E/S ont les m\u234\'eames caract\u233\'e9ristiques des adresses de m\u233\'e9moire. Les p\u233\'e9riph\u233\'e9riques de m\u233\'e9moire et des entr\u233\'e9es/sorties partagent le m\u234\'eame bus de donn\u233\'e9es et en particulier les 16 lignes de poids }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 de ce dernier. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\i\loch
Il y a trois limitations pour le syst\u232\'e8me d'E/S dans un}{\loch
 IBM PC : d'abord, les CPU 80x86 requi\u232\'e8rent des instructions sp\u233\'e9ciales pour acc\u233\'e9der aux p\u233\'e9riph\u233\'e9riques d'E/S ; en second lieu, les concepteurs des IBM PC utilisent les "meilleurs" emplacements d'E/S pour leurs propres besoins en limitant les autres d\u233\'e9veloppeurs \u224\'e0 un moindre choix d'emplacements ; troisi\u232\'e8mement, les syst\u232\'e8mes 80x86 ne peuvent adresser plus de 65 536 (2}{\rtlch \ltrch\super\loch
16}{\loch
) adresses }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\loch
E/S. }{\rtlch \ltrch\lang3084\loch
En consid\u233\'e9rant }{\loch
qu'une carte d'affichage VGA normale peut demander jusqu'\u224\'e0 128 000 emplacements diff\u233\'e9rents, vous }{\rtlch \ltrch\lang3084\loch
noterez un probl\u232\'e8me de capacit\u233\'e9}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Heureusement, les concepteurs peuvent }{\rtlch \ltrch\lang3084\loch
adresser}{\loch
 leurs p\u233\'e9riph\u233\'e9riques d'E/S dans des adresses de m\u233\'e9moire aussi facilement qu'ils peuvent le faire avec l'espace d'adressage E/S. Donc, en utilisant des circuits appropri\u233\'e9s, ils peuvent donner \u224\'e0 leurs composants }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\loch
E/S l'apparence de la m\u233\'e9moire. Par exemple, c'est le cas des adapteurs d'affichage (display adapters) qui, dans un IBM PC, fonctionnent de cette }{\rtlch \ltrch\lang3084\loch
fa\u231\'e7on}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
L'acc\u232\'e8s aux p\u233\'e9riph\u233\'e9riques est un sujet sur lequel nous retournerons dans des prochains chapitres. Pour le moment, pr\u233\'e9sumez que les acc\u232\'e8s \u224\'e0 la m\u233\'e9moire et aux E/S fonctionnent de la m\u234\'eame fa\u231\'e7on. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_02}{\*\bkmkend p3_02}\rtlch \ltrch\fs23\b\loch
3.2\tab Le \u171\'ab }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
iming \u187\'bb du }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\lang3084\loch
Bien que les }{\loch
ordinateurs modernes }{\rtlch \ltrch\lang3084\loch
sont}{\loch
 }{\rtlch \ltrch\lang3084\loch
tr\u232\'e8s }{\loch
rapides et }{\rtlch \ltrch\lang3084\loch
ils le deviennent toujours plus}{\loch
, ils }{\rtlch \ltrch\lang3084\loch
prennent}{\loch
 encore un laps fini de temps pour mener \u224\'e0 bout une op\u233\'e9ration, }{\rtlch \ltrch\lang3084\loch
m\u234\'eame \u233\'e9tant }{\loch
la plus simple des t\u226\'e2ches. Dans les machines Von Neumann, comme }{\rtlch \ltrch\lang3084\loch
dans les }{\loch
80x86, la plupart des op\u233\'e9rations sont }{\rtlch \ltrch\i\loch
s\u233\'e9rialis\u233\'e9es}{\loch
. Ce qui veut dire que l'ordinateur ex\u233\'e9cute des commandes dans un ordre pr\u233\'e9d\u233\'e9termin\u233\'e9. Il n'ex\u233\'e9cutera pas, par exemple, l'instruction I:= I * 5 + 2; avant I:=J; dans la s\u233\'e9quence :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
I := J;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li3969\ri0\lin3969\rin0\fi0{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
I := I * 5 + 2;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li3969\ri0\lin3969\rin0\fi0\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Naturellement, on a besoin de quelque moyen pour d\u233\'e9terminer quelle instruction s'ex\u233\'e9cute en premier. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sans doute, au sein des syst\u232\'e8mes r\u233\'e9els, les op\u233\'e9rations ne s'effectuent pas de fa\u231\'e7on instantan\u233\'e9e. D\u233\'e9placer une copie de J dans I prend un certain temps. De la m\u234\'eame fa\u231\'e7on, multiplier I par cinq et puis lui ajouter deux et stocker le tout dans I, c'est une op\u233\'e9ration qui prend du temps. Comme vous pouvez }{\rtlch \ltrch\lang3084\loch
v\u233\'e9rifier}{\loch
, la seconde instruction }{\rtlch \ltrch\lang3084\loch
de l\u8217\'92exemple }{\loch
en Pascal est un peu plus lente que la premi\u232\'e8re. Ceux qui sont int\u233\'e9ress\u233\'e9s \u224\'e0 \u233\'e9crire des programmes rapides, se poseront la question : \u171\'ab Comment les processeurs ex\u233\'e9cutent les instructions et comment ils mesurent leur temps d'ex\u233\'e9cution ? \u187\'bb}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le CPU est un ensemble de circuits tr\u232\'e8s complexe. Sans }{\rtlch \ltrch\lang3084\loch
se perdre en d\u233\'e9tails}{\loch
, }{\rtlch \ltrch\lang3084\loch
il suffira de dire que }{\loch
les op\u233\'e9rations \u224\'e0 l'int\u233\'e9rieur d'un CPU doivent \u234\'eatre soigneusement coordonn\u233\'e9es ou le processeur produira des r\u233\'e9sultats incorrects. Pour assurer que toute op\u233\'e9ration aura lieu au bon moment, les CPU 80x86 utilisent un signal altern\u233\'e9, appel\u233\'e9 }{\rtlch \ltrch\i\loch
horloge syst\u232\'e8me }{\loch
(system clock). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\fs23\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_02_01}{\*\bkmkend p3_02_01}\rtlch \ltrch\fs23\b\loch
3.2.1\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
h}{\rtlch \ltrch\fs23\lang3084\b\loch
orloge}{\rtlch \ltrch\fs23\b\loch
 }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Au niveau le plus bas, l'}{\rtlch \ltrch\i\loch
horloge syst\u232\'e8me}{\loch
 traite toutes les synchronisations d'un ordinateur. Il s'agit d'un signal \u233\'e9lectronique dans le bus de contr\u244\'f4le qui alterne entre z\u233\'e9ro et un avec une fr\u233\'e9quence p\u233\'e9riodique (voir figure 3.10). Les CPU sont un bon exemple d'un complexe syst\u232\'e8me logique synchronis\u233\'e9 (voir le chapitre pr\u233\'e9c\u233\'e9dent). L'horloge syst\u232\'e8me relie beaucoup des portions logiques qui constituent le CPU leur permettant d'op\u233\'e9rer de mani\u232\'e8re synchronis\u233\'e9e. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Figure 3.10 L'horloge syst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2325\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich155\picwgoal8295\pichgoal2325\pngblip
89504e470d0a1a0a0000000d49484452000002290000009b080300000090d0fb7b00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000064049444154789ced9d8195a320104029
26cda4189ab1189aa1180f108c2e3933186346f2ffbddbecba18669dff02eaa8c68f00aff10640820fffbe6d2b5c004c0119980232300564600ac8c014908129
2003534006a6800c4c0119980232300564600ac8c0149081292003534006a6800c4c7985778226b1c2d4d665a6f6f5ba970153b671b12ef0f6ba49d886a6d6c2
d84fc5753e98b28937f7546abcd1c4251d423b4cf96526479c195e361930e597f159916970b99b94791bc61a5735c9a34ffc655c704fafb1fd60fab84c0653b6
7059897b34c55817b36ec332fbc8be9bad89dfdcc29721fc8faf2e6c59db8d2898b249d1c09a341349c3495af4188e56a6f8f4c3dd4caf2e34ef46144cd96465
4a94237cae4c9749d9bf4d92292e4f6b5cdea4ab71eae260ca16eb79ca3899e222fe6f93e7a6dcd227511760ca26d38e4db2219be2ff0e27b9897f8c3e368f3e
53f38ddda64b81299b4cfbc749866c4af8c18fcbfcaf8ea7c4967e6e34cd683b197f30659b211f807d9812271fab3165581ea3cd73183fbdc66f6d27735a4c79
c5624e92f17f972c9b94d34482d345d702534006a6800c4c0119980232300564600ac8c094261a0e8db821ee2957bbd8970553c484ede46ed3b1b527154ad5a1
586be211dbcd72b94b812962ec30c6c3ade6eedc50ab521d680ba60c2655b6f401a68889776435b9e2d1bede66a149d8b24337f5919822c618b732a55449c6c5
a9c0a95446a611ca8626773ff6b36d31a595e9d4f1ed512519cb2663cd41a98c8c3592b188b2b3cd8a29ada48f0be31f5592d38965e37265e498ab5430e5d789
350743b91e2c5521a411c7947ab73157bedd3adbac98d24adeed7954494efbc795298249efa5c09456b2298f2ac9d994a932b2fc8ad1e7d7298752e62ac9d994
5c1939cd5c064cf975e6836ea54ab29832ce076fa7dac8ce362ba6eca7aa927c5444fa6e4ef7cc600ac8c0149081292003534006a66c73d0be6e07bbcc98b20d
a61430659b658a4d4bbed78d31a57be6149bf90265e98acbf698d23d39c5e539e42d2b2ed7c094ee49556e0f5a565cae8429dd63d6ec5d0f53baa7caf85ebefd
87bc0da66c73902698d23d7996d1fec9b05e0753ba877d9f02a66cb33c24d26eca93b7b92c98b2cdee23adebb698d23d9cf72960ca369852c0946d30a570be29
c223104ac094c29ba6d8f6dbc25fcb1428bc654abc0f78f3fd418e3105dfcee63d53861d4fda93e4ef2453d0ad8177e729df33e5807739c6941ff1edc74d3926
94034c91bdc9377dc3142da19ce7dbeb709fbe37a62809e5f5bb60ca9e3698f29f1698f289775115ca31a61c10caffd6c31425a1604ab586a6f4280a0553aa35
34a54751289852ada1293d8a42e9dd941d3d6a4a8fa25030a5ea51537a14858229558f9ad2a328144ca97ad4941e45a1604ad5a3a6f4280a0553aa1e35a54751
289852f5a8293d8a42c194aa474de951140aa6543d6a4a8fa25030a5ea51537a1485d2b729f1198df7d61e35a54751285d9b628d75cdcfb151951e45a1f46c8a
4ba7075de3c561aad2a328949e4dc9cf176fec5a557a1485d2b329b9cfc68763a94a8fa250ba36659acc5ae35e345cafa5293d8a42e9da94f979b04d6b694a8f
a2507ec09401538e08a56b53ca3ca5e9f18caad2a328949e4db9b1ef7360283d9b320d3bbeb1e85a557a1485d2b329637c0c7973cfaad2a32894ae4d19d365ae
fec9b237af8bc5947d6df49a32faa1daefc1947da1746ecad3488e30e514df30a5019df7a33dca943374c394eb73966e9802e3891f6f9802e371a61c22edce3f
01532e03a6800c4c8133c114f82c980232300564600ac8c0149081292003534006a6800c4c0119980232300564600ac838cf94e5e9ceb6eb534103e799e29d73
66085fc2f71f134574de1df670eee8f3f1cf12618d06b4f31d53c2ab7121a78337e5cab27873c1f73d9217f44023df33c558770fae38738b4be2ed7a1a6f9af0
b48396ea2f68e17ba6dcf3cd04a79b7fa5df34de5bf059078da58220e67ba60cf96e4ec91437a576be6b82a464f498b25210f2c5794af4639c4d719179f439ca
145c390c25a6f83f53144c51871253d2ad58fcdbf31434f91c5a4c49496ebd05ff930ed0e453e839efe3dddbfbc84b53de7f2f58a1c7944340938fd1a129df8e
a1533a33053e06a6800c4c0119980232300564600ac8c0149081292003534006a6800ce38f2b0581aef95b4304f01cff0f67309cc1beb0f6fb0000000049454e
44ae426082}}}}}

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
La fr\u233\'e9quence avec laquelle l'horloge syst\u232\'e8me alterne entre z\u233\'e9ro et un est nomm\u233\'e9 la}{\rtlch \ltrch\i\loch
 fr\u233\'e9quence de l'horloge}{\loch
. Le temps employ\u233\'e9 par l'horloge pour passer de 0 \u224\'e0 1 et revenir \u224\'e0 0 est la}{\rtlch \ltrch\i\loch
 p\u233\'e9riode d'horloge}{\loch
. Une p\u233\'e9riode compl\u232\'e8te est appel\u233\'e9e un }{\rtlch \ltrch\i\loch
cycle d'horloge. }{\loch
Dans les syst\u232\'e8mes modernes il peut y }{\rtlch \ltrch\lang3084\loch
avoir }{\loch
plusieurs }{\rtlch \ltrch\lang3084\loch
de }{\loch
milliers de cycles par seconde. La fr\u233\'e9quence d'horloge est donc le nombre de cycles qui ont lieu chaque seconde. Une puce 80486 a une vitesse de 66 millions de cycles par seconde. "Hertz" (Hz) est le terme technique pour d\u233\'e9signer un cycle par seconde. Par cons\u233\'e9quent, la puce 80486 tourne \u224\'e0 66 millions de hertz, ossia, 66 m\u233\'e9gahertz (MHz). La famille 80x86 a une \u233\'e9chelle de fr\u233\'e9quences allant de 5 MHz \u224\'e0 200 MHz et encore plus. Note}{\rtlch \ltrch\lang3084\loch
z}{\loch
 qu'une p\u233\'e9riode d'horloge (la quantit\u233\'e9 de temps \u233\'e9coul\u233\'e9e pour chaque cycle) est la r\u233\'e9ciproque de la fr\u233\'e9quence d'horloge. Par exemple, 1 MHz aura une p\u233\'e9riode d'horloge d'une microseconde (1 / 1 000 000 de seconde). De la m\u234\'eame fa\u231\'e7on, une horloge de 10 MHz aura une p\u233\'e9riode de 100 nanosecondes (100 milliardi\u232\'e8mes de seconde). Un CPU ayant une vitesse de 50 MHz aura donc une p\u233\'e9riode de 20 nanosecondes. Notez qu'il est d'usage de se r\u233\'e9f\u233\'e9rer aux p\u233\'e9riodes d'horloge en millioni\u232\'e8mes de seconde. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Pour assurer la synchronisation, la plupart des CPU commence une op\u233\'e9ration ou bien sur le }{\rtlch \ltrch\i\loch
rebord tombant}{\loch
 (falling edge) (c'est-\u224\'e0-dire quand l'horloge est sur le point de tomber de 1 \u224\'e0 0), ou bien sur le }{\rtlch \ltrch\i\loch
rebord montant}{\loch
 (rising edge) (}{\rtlch \ltrch\lang3084\loch
c\u8217\'92est-\u224\'e0-dire quand l\u8217\'92horloge est }{\loch
sur le point de remonter de 0 \u224\'e0 1). L'horloge syst\u232\'e8me emploie la }{\rtlch \ltrch\lang3084\loch
plupart}{\loch
 de son temps }{\rtlch \ltrch\lang3084\loch
dans un de ces deux }{\loch
\u233\'e9tats ; il n'est entre les deux que pendant de tr\u232\'e8s courtes p\u233\'e9riodes de temps. Par cons\u233\'e9quent les }{\rtlch \ltrch\i\loch
rebords}{\loch
 sont v\u233\'e9ritablement le parfait point de synchronisation. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque toutes les op\u233\'e9rations de l'unit\u233\'e9 centrale sont synchronis\u233\'e9es autour de l'horloge, le CPU ne peut pas effectuer des t\u226\'e2ches plus rapidement que celui-ci}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Certaines des derni\u232\'e8res versions du 80486 utilisent des circuits sp\u233\'e9ciaux de doublage d'horloge, pour }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
aller deux fois plus rapidement }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
que la fr\u233\'e9quence ordinaire. Par exemple, avec une fr\u233\'e9quence de 25 MHz la puce }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
peut tourner}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 \u224\'e0 la vitesse effective de 50 MHz. Cependant la fr\u233\'e9quence d'horloge interne est de 50 MHz. Evidemment, le CPU ne pourra pas d\u233\'e9passer cette seconde limite. }
}}
}{\loch
.  Cependant, le fait que le CPU tourne \u224\'e0 une certaine fr\u233\'e9quence ne veut pas dire qu'il y aura ex\u233\'e9cution d'autant d'op\u233\'e9rations par seconde. Certaines op\u233\'e9rations peuvent prendre plusieurs cycles pour \u234\'eatre compl\u233\'e9t\u233\'e9es, donc le CPU effectue souvent ses op\u233\'e9rations \u224\'e0 une fr\u233\'e9quence moindre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_02_02}{\*\bkmkend p3_02_02}\rtlch \ltrch\fs23\b\loch
3.2.2\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\lang3084\b\loch
cc\u232\'e8s}{\rtlch \ltrch\fs23\b\loch
 }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
\u233\'e9moire et }{\rtlch \ltrch\fs23\lang3084\b\loch
l'}{\rtlch \ltrch\fs23\lang3084\b\loch
h}{\rtlch \ltrch\fs23\lang3084\b\loch
orloge}{\rtlch \ltrch\fs23\b\loch
 }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
yst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire est probablement l'activit\u233\'e9 la plus commune du CPU. Un tel acc\u232\'e8s est d\u233\'e9finitivement une op\u233\'e9ration synchronis\u233\'e9e autour de l'horloge syst\u232\'e8me. C'est-\u224\'e0-dire, lire une valeur de la m\u233\'e9moire ou \u233\'e9crire une valeur dans la m\u233\'e9moire ne se produit pas plus souvent qu'une fois par cycle}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Ceci est vrai m\u234\'eame pour les horloges dont la vitesse a \u233\'e9t\u233\'e9 doubl\u233\'e9e. }
}}
}{\loch
. Par contre, dans certains processeurs 80x86, cela peut prendre plusieurs cycles d'horloge pour acc\u233\'e9der \u224\'e0 un emplacement de m\u233\'e9moire. Le }{\rtlch \ltrch\i\loch
temps d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire}{\loch
 est }{\rtlch \ltrch\lang3084\loch
mesur\u233\'e9 par }{\loch
le nombre des cycles d'horloge dont le syst\u232\'e8me a besoin pour atteindre une adresse donn\u233\'e9e}{\rtlch \ltrch\lang3084\loch
 ; ceci est une valeur importante puisque des temps d'acc\u232\'e8s plus longs se traduisent en moindres performances. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Diff\u233\'e9rents processeurs 80x86 ont diff\u233\'e9rentes dur\u233\'e9es d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire et vont d\u8217\'92un \u224\'e0 quatre cycles d'horloge. Par exemple, les CPU 8088 et 8086 demandent }{\rtlch \ltrch\lang3084\i\loch
quatre }{\rtlch \ltrch\lang3084\loch
cycles pour acc\u233\'e9der \u224\'e0 la m\u233\'e9moire ; alors que le processeur 80486 requiert seulement un cycle. Par cons\u233\'e9quent, le 80486 ex\u233\'e9cute les programmes plus rapidement que le 8086, m\u234\'eame en ayant \u224\'e0 la m\u234\'eame fr\u233\'e9quence d'horloge. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le temps d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire est la quantit\u233\'e9 de temps entre une requ\u234\'eate d'op\u233\'e9ration de m\u233\'e9moire (lecture ou \u233\'e9criture) et le temps requis pour que l'op\u233\'e9ration soit compl\u233\'e9t\u233\'e9e. Dans un 8088/8086 \u224\'e0 5 MHz, le temps d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire est approximativement de 800 ns (nanosecondes).  Sur un CPU 80486 de 50 MHz, le temps d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire est l\u233\'e9g\u232\'e8rement inf\u233\'e9rieur \u224\'e0 20 ns. Notez que le temps d'acc\u232\'e8s sur un 80486 est 40 fois sup\u233\'e9rieur au temps requis par les processeurs 8088/8086. Ceci parce que la fr\u233\'e9quence d'horloge du 80486 est dix fois plus rapide et utilise \u188\'bc de cycle pour acc\u233\'e9der \u224\'e0 la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0 l\u8217\'92heure de lire la m\u233\'e9moire, le temps d\u8217\'92acc\u232\'e8s se consid\u232\'e8re comme le temps \u233\'e9coul\u233\'e9 \u224\'e0 partir du moment o\u249\'f9 le CPU a plac\u233\'e9 une adresse dans le bus des adresses et le moment o\u249\'f9 le CPU r\u233\'e9cup\u232\'e8re la donn\u233\'e9e du bus. Dans un CPU 80486 avec un temps d'acc\u232\'e8s m\u233\'e9moire d'un cycle, une lecture ressemble \u224\'e0 quelque chose comme dans la figure 3.11. \u201\'c9crire la m\u233\'e9moire comporte un processus similaire (voir figure 3.12). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3825\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich255\picwgoal8295\pichgoal3825\pngblip
89504e470d0a1a0a0000000d4948445200000229000000ff080300000003b5b63700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000123549444154789ced9d61b6ab2a0c851d
4c27d3c1381907e3641cc7fdf7d6f255089040f4d01614eade6bdd7b5a154ceb57352186615921e86f2dc33240508e96e16a5aa11e0452a03c8114284f2005ca
134881f20452a03c8114284f2005ca134881f20452a03c8114284f2005ca134881f274392925073b2ffd20bf2e9002e509a4d4b1a5c457d3969a20a5957e40ca
81404ad40748d9114889fa00293b0229b28f12a614eba7298114d9470953404a2503404a170229b28f12a680944a0680942e0452641f254c0129950c00295d08
a4c83e4a9802522a190052ba1048917d943005a4543200a474219022fb28610a48a9640048e9422045f651c2149052c90090d285408aeca3842920a5920120a5
0b8114d9470953404a2503404a170229b28f12a680944a0680942e0452641f254c0129950c00295d08a4c83e4a9802522a190052ba1048917d943005a4543200
a474219022fb28610a48a9640048e9422045f651c2149052c90090d285408aeca3842920a5920120a50b8114d9470953404a2503404a170229b28f12a680944a
0680942e0452641f254c0129950c00295d08a4c83e4a9802522a190052ba1048917d943005a4543200a474219022fb28610a48a9640048e9422045f651c21490
52c90090d285408aeca3842920a5920120a50b8114d9470953404a2503404a170229b28f12a680944a0680942e0452641f254c0129950c00295d08a4c83e4a98
02522a190052ba1048917d943005a4543200a474219022fb28610a48a9640048e9422045f651c2149052c90090d285408aeca3842920a5920120a50b8114d947
095340ca4e07dfabcc070129550552641f254c01293b1db4434a23a68094a605522a0ba480943c81149092a79f21a5258114284f2005bab1400a94279002e509
a440790229509e400a94279002e509a44079fa2152fe8b75b541bf259002e509a440790229509e400a94279002e509a44079fa6952fe9dafabbf847a02292025
4f2005a4e409a414559d0cee260452404a9e400a48c91348012979fa215252819482ea96949c2302520a0aa480943cfd0829575be3745352965159384ff34177
6a932a6af370dc8c94d17ec8694e3fe7320cafb5b3fd12ecfa8193a334a9a4368fc6cd48d9166fe706e5b09be54fb3c29174392967ed3147b72565793e360ea6
e169172fc3b2aec4c373e4a42ce3f2782c66cd329ad6d4cafe3f8f8fa9a8d5758e45894a71f7246598c7d7dae1393fed4693fda39c53e6d746d3b06c8b866919
1fa6d56b73db7619e67938babf79cfe45a47a2484dc17b92b26c20980decc96474a48ce3f0582529ab3bcdcce69d5d496d67dbbc88bdfe08540005a4ecebcffb
94e17566d8640eb53fa78cf3b2a6a48c0fbafabcbe21bba96bfb5a54c02b92df7f055040cabe32486177a9fc3e4523653ba72cc314ce29a1ed3c7c79a352fbcb
ffb1035b5c19a4982bcfc35e3e5ed79c6d1135d9562c8e9a89a8da563e060bd5406da771c3e82b336bff46ab75ff4daf5a78ea38a0152bd9f8e388570e29db25
e4e9b77fbd76a4986b8b3d55bcee68b78dcc1ded1673b12b27d7f6aba370c6a9bcde0e3e327edc6b65035aeb7e442bde7b0cc6c7718cbc683e336599f9cde9ec
d6981b14b789f83b8b659f5878c215bfe63e3ebc6bd98e717a586d406bd98f6869db3b6d3fe0caa4fcad4a21b7936e0cebeee6b35b5c4b4a14d1a21b452da235
2ecfc96d4821ade7303fc610cb7a9d88c6390d92657f8a32a42c25036ba4d3fc87536e963f23258a6891f3a945b486c7eb9e8436b4212df3660cb1ace545ce92
06c9b23f44a363c9a76172c2c0c037e71419d11a3d294944cbbb17af1726a465691a592ccb5e7de22059f68768919433ee6195bd55dbdd277bf0f7293ca215ce
2949446b5843f8ca84b4264b0a8b65f9fb141124cbfe0c3ba41c7953e47abde5aee5eb5c4cced9e377a4849b40719f9292428b6d48cb911262598c94f7ef2b77
4939ea8a182d11764ded391b13bed7fa7bc8df07238545b428a0a544b406f7feb1d890d6b67c194616cb9a06adcbec4fa090f29737558b946b30617baebe8337
f6c2496111ad617071ab4d2ca2e5474f9e2ea465568e3c96e5626151902cf313a4a4e8de944b26b0ae17fd61ae193963de279b1ee376c17cf59249ee6598b8c0
60fdd0dee76306e1422f035a21a22536a44d16fe4676235f67482345f7a64232c1730395fe78d78c9c31ef93d9a403d74b861d9761b27e17717f731f577eccaf
7470f589bc29964c308cf487b966b31b3c8c4243cb710c918cb8f8fb3b75df9da2727c9fc2bd29964cf0ba4d72a4acde3523678cfe980dc6c15d158f4db8fabb
3b79ef977fde8ff41729fec69692091452fc26e48c993f360be1994d4a994ff3a14edf7f8faca8a468de944f2630ae17fd61aed9609d31e793d9a483398794cb
7599b375fa5ebf911e4fd1bca9212413bca8701ed8b6c66e421fdd7d03b3590f520e76fad77ef7229bcb78fc85aa41d3afc3a43b9137cd9b8a920a9678937879
a9d4d9dabaead7fd272a3bf1aad7b9fcf8a8aba1b0af835f6d8efb9caa2b7df3c37dfb832be30c87c983bb41d3404a56d442e900a45c78c370c08a8d6c9a70a7
8984fad0a77d47214f8a6e3e1ecbf278ae7b4153de19b57771d4776cbd3b29973be8eafe5d64730b779a48a80f7d2ecfe7eb9d0b795274f3b9fd7bec064d5967
7613d7d95b9682944bbf00fdb4e2229b36dc69af17b37f0262b5fea68f6ece26e069572a4153d999ed6ddeb9481d197a7352ae775635545cbcca863b2d29f6b5
236515d14df74f0d9acace6c6faeb377ccac959f725a7d8cef743d29da69850e2e853bedb1b5af19292cbaa991e2cf19b233b389efec1d2b6be5a75c7e00b2d4
46002c6185229b14ee9c1c170f410a8b6e7a52b4a0a9eccc6ff228404a91fc94060e40869a00654d2f4121b7c4dc9b86a413460a8b6e7a52d4a0a9ec6ca538e9
9bde727e7e8a7c3420cd4fa1cc149f9f62db9b8bd8cb952b5c16a3985a214539adb0ff4568734d361252535064a2caacb7fccbc0dcfc14f168409a9f429929e1
9981c1943820be8b96c528a86640599b1f0acacf4f891e0d58a3fc14aa7c119e19d85ef8c1e4726531caaaa963d3f608737e7e8a783440c94fa1cc14ffcc4070
e1b66b6699b218a5d5da81699995ecfc14f968809a9f42092a94a662487984c1e4afcb6254507b87a55d54b2f35356f168409a9f42952ffc3303b64cc6b41807
7efeba2c4615b578540895c3ef2a3f83a060d5d7fcfc14f968409a9fe213dc5d7e8a8d023eb756739307a5c153ca26fb351e6e218eff513c433c41a6ad79c7ac
ecfc94280125c94f499f19e09bb47847db2629466f90b2a351de19c46bdeb7e8c6e33e0d8372108d32812cb7628b672da37fac6a8b6fd0a5c92617ccbe9fd085
4b3b10e90a7fd7c800296d6a371a650359fe2ef231d98a692cf8654f3836b98056cc03ebc2ade1e90a1935326e4c4acba0ec46a3443c6b76490533cf6f67850d
c20a1ed072d7a590ae90532303a4b4a9bd68d41491b2b2e7f5ecd39a11292b21c4025a236b65ffe5d4c8b82f294d7a635e7bd1a84352b4734a58e1035a292939
8ed02e2997f8ec67aa695076a3512c9e3526a498724ce2ece349e101ad292125a746c62e2991277640ddbecffe81d77e9e1a27652f1a45812cb76215a46c6ecd
c31d385f3dc39c53f82994d63052326a64e492b2a3834c960f1f16384b4d8362b4178d3af8e96fabc290fd9cacd3d7ec2d92d2497159ff2b73da159f5d64b26c
5b33bfdf79eddc697fbbb26545b54fcafb7ab9c2cb54eb63a9a4905b2e9d76c56717992cb39c9cc579edfc1983b72b5bd6d32f82f2fa796e55452bf5ade7bcad
e6ea239d76cd67e7992ccead5fd92ad3cc3f63f07e65cb7afa4d526a4a23658a4959430e93f4d9e3fc049e85328666ecb6e9bdca96d5d4b68bdca4de26453ba7
84152c0b2525a5214708a0bc2d358fd6faecab74da359f9d67b26c270d9e853225a4bc5fd9b29a7e80944ad58077b593c9647c76e9b4ab3e3bcb643128f02360
bd764ecadb952d6ba94750e233f2d9d9a63bf1946c9ffdc069ffc86bdfdd6bd1efa54752623542cabeaafaec8a76e744fa46cd8342930abb0814a5a1ac5407c3
3f7475a6de1f21ace9b3ebd2e7442aa2f703c9e7849e6952613f0b8b4d4359a90e8688699da51ec692f5399192d8af5c627e7bdb6fd1dcf9994ad02682ecde9a
3754c3266d2ede52ac9ab7a82d83c57374112857db82164bfff324f5434af448631afb8d964cf45b9ce84e9c22c8f4969e78b4556792e6b27fba65672daacbec
f2452645a0dcb030d5c1983a22e554174d9d13298dfdb225f4dbb35b9ac5ab7fbcd1be9dc354e169f355f6ef48e1938b5796256574d75c478a5dfc6c9a94e83e
e15433d53991d2d8af58b29a636a8c7efd7d4ef6857dc8d1bcf56f94e6abecdf47a75d8bfaa249855d04ca91b284dfcbd22a2971b38b4809c0a6b1df78c9f8a4
6721424a171d80c1bf195534b4de8639b4a82f9a54d83f4a4506adb60e860f789d293546eb5cb4d847bbc84553e7444a63bf6c09fdf6889491aa885004d9bca5
3793bb9a3d0ece2936563db016d5654e20f655b44679daea1ce963c9d6458b7db4ab5c34754ea434f6cb97d06fcf7e3437251b4565ec5b7ab3354c9b47fddb58
356b515d0d0d9139ed661d3cc735f2d1ae74d1b875790bd98fce9f0616fe96d7b0c9bb3fe72d2aabc6a4c25f6a9794f1b1463eda952eda175a4651e2277a0be5
6a9f94d19f0289942b5db42f34c948d97446e0ec17a593625db4c847bbd245832ed7ce1dadbd6d8b7cb40b5d34e872ed5d7df4bbb7cb5c34e872eddea734a583
c18368d57e1ecb2713c79f9d57d6b2d4c85b732edac1c52efb59c74fa603c74536a887b1e45c528e4b738394efd401293478300dec31c4685cc14e02af94e656
278edf8627c6b42e376deba78dbf20afac65b54f0a2faaed4614a271052ab2ad94e656278edf862794badcb4adf6ac24d401293478e09348fcb230aee0461d94
d2dceac4f1af155a5deed9c502946725a1f649f1a592cdc8821db389c6154291ed248f459d387e1d56ad2e374d8ee47b58410a572fa4b011de24f5cbddc5a6a5
b9f589e357fe38a3afcbed26470229ba9a27c557d336230b7644211e57a05187b434f7f62e9d387ef5292dbc2e376deb7ac0a045a4e649e145b529096c8ac715
5cd24a5a9a7bd0268e5f877555ea72d3b6bc079012d43e29f1c882a8a4cde7365a57a534f7fec4f1695dee78900283165c3d9002b5209002e509a44079022950
9e400a94a75e4839ae9fa2ae7d23b9446b8fdc14a95e4839ceae52d7be110cd1da239622d53d29fb5363c9b92776b597d51225bedc5ecd93428fbe6ecf0650ae
894b51b109267c6a2c5644db55e936c342a6e449686e725b5c1a8a3ee13ce5a6d836ae5cf7bdcf32cd93428fbebe48a1fc9190a2b225a088a9b14275159790b2
35a19227b2b96fa24e38ef13594c1baab242edefaa0e48592917c5e78f6c8b7d21153e35965fe8924b6c137bf1e0cd9fa36ba24e38ef7353a88ddd478ba9e827
aa0f52cc9c48943fe25254a8900a9ff0c82f742903b6892585371f59a90b25abc5671c501bd301bdbead3a2165dce6ca63f923e1e79d4c8db5890e3535b1079a
371f9f2a29aebd078ddad8ca4d13ce2957db70287af4d596407e0cae2e912fa4c2a7c6f20b29b9849af84d42f33990a24c38ef72535c1bb7c9a3edafaaae3a20
e549d54d287f8452547c211536355658e8a688b74d78aa8acb6df1a46813cefb44166ab32d75afefaa0e4849934b64b522114b8d268ce7a92d5173a50d7bade4
bfdc3c5da50b52a006d43c29ed3dfa7a53354f0ad488400a94a7f649391c6cb978feef3b6526b44fcaa17972d0eee8ee573c5aa6adc951bce99dc60c7f8a941d
ed27267c1b2001292d29ccdbbdcdf2cde6eeb6a90172faef5599ff5b2426bc36095db8740231634b98fd5ba9f57df16c4c57aa03524c4902ff0c6898bbdba606
f840bc2dc4add4b4108909dbf891efc2ad59d9142d6cf6efb4d6f740290957cdc674a53a20651b300ed362fa48a92875318742dc694d0b9e98300f7cfa6f775d
0a53b4f0d9bfd35adf2c6de17655333a20653573f1121061eeee29226565a552e4fcdfd170339bfe7b64adec3f3efb775aeb7b0e690bb7ab85d009298f30a0e7
e6ee3e24453ba784157efaef94147ee34b090ffe66386cd761a9efafd53c2936eb60a259bed9dcddacd4c5989022e6ff9e04297cfaef292185cffe9dd6fa9e43
dac2edaa6674408acd3573b37c87c4334a0d10d37f7b52c4fcdf2c31c1662ff88f4c6b18296cf6efb4d6f7ccd216ee5635a37952362d19af952661d28dfde9bf
8f66ff66090f6a07f74a43e88294f75564fe6f243c70fd282945e6ff46c203d7af920295164881f20452a03c8114284f2005ca134881f20452a03c8114284f20
05ca134881f20452a03c8114284f2005ca134881f20452a03c6da440508eee95e3077daae57f3dfe8db0dc5f0d0c0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.11 Un cycle de lecture de m\u233\'e9moire sur un 80486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2025\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich135\picwgoal8295\pichgoal2025\pngblip
89504e470d0a1a0a0000000d4948445200000229000000870803000000e4c4399b00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000cde49444154789ced5d8bb1ac200ca518
9bb1189ab1189ba19537e3131242f8e8a2e22a7b7366ee5de52786b38070362ab308049f61945102410d8c7a9aad821e204c11d4419822a88330455007618aa0
0ec214411d8429823a0853047510a608ea204c11d4419822a88330455087ef30a5e136d5fd951514214c11d4e1cf31e54555e90b7dcd538429cf4198224ca9c3
5f644a8b9a342ba71b08531e2ea71b08531e2ea71b08531e2ea71b08531e2ea71b08531e2ea71b6c31c5e842e03ccd7b6515f33445af4c31f3aee1f690dad4e8
eda22a1a60bf05f79031456fae1618a5d6c819226717afa2ebceb77fcb3a65caa4c6417dfaade686f59250a3769852d100eaf4b7b9d4a7d8d20a177517195d84
9a842907cab166dafd32ebedb29218bdd5d2b688879862c6c1dedcfa7d805003df0a579b5173a6186d86c1b828a3a12a900bfecf7a98ce562fab6db74c719806
6dd05c66707675265afb693dafc15984cd8bedc052ba525668336a9fcc45e48de60ed67247db3ecba8e6e106a6a8d9d2548df3a8f0a258a525ed53e635d1b4f2
680d5393d183cbb52687bc46ad77707a744c6bdb255346055f15308b35ed68ff066f5eb336a199551ee1aeb3c6989072046bbba861a2645844d268701005dfd1
a75822b848e84cb4678ad66a5862a6586b68fb39bb3388c4bcf3c711fa486dbb648a9dfc69d61dcfcebcb60b46f3c2d05188807f7a0c29b5b7b63d4d9a276d34
de02f6fbbadc364f512b792d5c55a84f593bca25678a1e70f4592d08497d5e305313f4ca146b0c0d66d16ac619c5ac988980295904cc53344ba9b11417c59a87
e629acd1f08082971b99c2e6487c9e52628aed53ccdacd529f12f2ceaad144a55fa6d896043b8d8c10de44195382edc2b710526a2cc545b1e6614ca150de5677
33c57562030c1feb9863833039f56e4804d773dac84101a914e69df4ce8cfd706d7b648a33d930a2596646086fde29650ad91d6c3b5180d658cae248149a6752
854683030cb6ad65ee638aedc0c6601c357aa6b89e6d424b8c0a26e6368925f7e4e2306f4329479f4c59bf3c301ad8b528bd704278f33ac3962266a5e14a18e0
ba6e1cce59325fc412371a1cf0e0b64c89c11e5bcccc27a7b4ee686be223e2cf390abb8e4e9912d6687353ccd1471e1132650149e85c0a8dcbbdd2122df67dee
5f71f3e89529bf80164c31ad16d63e4298f21c642ff9e172ba8130e5e172ba4199293bdbd77ea7ebd0f6f5f9bdee18bd33854906364c9c051f9072302bdf2000
293365678eea1fb30e3d6eb55aa4ed9c295c32b061e22c78ef7121896356bee1212367ca87ed6b61caf9727001d22dc5b7604a5aa550fc379852dcbef66202bf
6d0d9f6cd71b9405a82f80d46df6bad3daf6c914d00938d3fa8f5c21e08e5c137b59810f306055d076f80cab79dd3e2126262b6fe80f1adc70c294e2f6751013
b86d6bfc0cbbdea02cf0fa0248dd66af3bad6d974c419d80950c18b47041d6e152cd8a925300ecb8796d07b5c930b1c4c1ca65fd418b1b2e8f3ef1f6351313e0
72b4fd0cbbde33de0badccbad42df6bad3daf6c814d209c4a34f22eba06d5526e2808048db4119409ec08565d1e8938a461adcf0e63c856d5f333181df3db74c
09bbdea02c407d01a46eb38399d6b647a6904e209ba77059c7e489e193fb0052b5d9e08132289e78ca989294dee2867798e2e7452826c899c2264ea02cb0ffb9
f44098b2f8361e8b4ce1d20cfcef93fb002ef740d181ab004fbcc1949613db9c2985ed6b1213c0b6b5ff54b4eb0dca02d41760ea367bdd696d7b640ae9049029
13634a5008602a45c92960c2d1698a3240339930cc782b17f5072d6e385b4f296c5f333181ad0e7e2abe6b6e0d87fa0248dd66af3bad5a8f4c219d8097e9a452
00185e9c54035407909c02b013026d0799dc4b147893f8e24ba291cb379cafbc15b6afcba2822c8149634ba717d029533213cce513931e44f202156b39d25c2c
6d517f7015b2eff37039d5f89eb6a30c61cac3e554e37bda8e3284290f97d30d84290f97d30d84290f97d30dca4c39a927c95411ad55127f9429b77b1ba94199
2927d73fb2e9796b63fe51a6bca2f7fac0941d770d495c5115214c6973adcd98bdf66995c35722670a281d9cc8041515e4eb029d3a8c43505b70ed45a68a8073
3728ad89aebbc7e89329b9b78b38c41970b5aa1bf3f19741ce56de70685617e613b9136c83bccce8148be1394edd70ca142f3eb122139052c4be2ebcf4c1c779
ed45d12b83fba13ded005d768fd12553ec3a7be2ed22f17fe1042676977859bc4b1a672bdabd716684b0891b13da202f7359f82916c3729cbbe14cf3b6b8d107
4426d05731798a9542f8fd2edae872da0b555045804b07dad8bcbcacdf23531c5196d8db05f37fe10d8856a51f9d936405f7f9ac199dfd20d11c3c1ce4654209
f12514cb71f28613a6f8fd6b109940b94c9e024e1d025382f622ec60a62e1d7c8eebee317a650afdde98f9a9a090c5190f3f461c9fb5ff05b3630ac47911904b
442785322dd8291613729cbce132535064e2cae58213ea21789fe2b41781296162eb2207cab15c758fd1215354c4948d665c0d08a3752cf88998322ca43cf085
4cfc39e22353428e93379cea6815fcda403991094929c8d7050d9e1047da8b922a025d3a18d7e5cc0ddc63f4c914de86c14f05fe7903bad234f96773b642c3a1
19bdfd5c223c99fc403fecf429508c6239cedd70ae6402f1094852bc5f0b202fef12312ef868c85511dea5c368f3cf5ebe7201fd3145254c097e2ac29f33200c
f3349553cc70de8c683f48445aa0b150e6127731500ccb71ee86f3f594486b32b3e3b2ccc24467e931cff20767b479b2fce92f98857de14b1a1fc313f1f6a97b
a2ccbc6b1c82ecfbdc5acea1ab195db1885095e80e0853ee2ce7d8783bd5ac895525ba03c2943bcbf9a50d6761ca8de55c9fc2bf08754cb9ff2d1b75e88f291b
317bf63c24f938dc32d9bb3c6a2f57c714bf2094ab7ebfab03ee8b293b5dca5ede430bd907ec3fc323b64eb2d45e6e8b29b494b7edc2e1f46adf7974c794cda8
bd6cbce93ec93e8e7e53f3a5cff34ce17203af2df07282b5af23e900c46cbc41e22674c59490c26ee0da4ede2a0b40c1416fd8487d8804172291ac808409ccc4
1bee2f50af10bbd0b01f46631e1dc20f782c29a80e98dc2075e1607f24eba5033ea6f806899bd01353d8d843de44ac230ba7e050e1cd13910f11e6dc229615a0
306166262e0b3dbc5e2172a1410e37ac638e39243fe2b124670a971b2cb10b07c70b5a3cc498e21b246e42674cc1232fe4600e46f00d1b2e76211581a2945e77
1046181426701317851e4caf402e34608882bd481d891fe87235375c187d54ce940599c2a403c494744fbdeeca67d011535897a289298b37af5a680ac27d8828
d6745c56b09030819bb8ecfe22e815c885c6943285879f660a971bd06d32a604e940ce940fd3ab5734f31799e20f67c614342f34a48d8c7c88a8a8e92259010a
13b889b7dc5f78bd02b9d0c8fa140cbfc6142e37a0d20253987460ca98f2c10983babc12d50f53a25b7563333005cc4b6fd8207ba3851539b760b2824898c04c
5c747f01f962171a260c6de8b5c4871ff0585298d132b9019c8fbc4fe113351793efa9ef59ef1a59ba624a38b14f1c038e3e0a14009a1228ee438439b7602201
2e4c885f8e52707fa160308b5c68907f0dcf14167e613d25dd9c2e3b6128c46c044557bbc6956e9812c73a3dc9cc4ef867a22f30e9d19ca6998b87e1d8cf6823
171a5947bff972902d7c7ddfe712597a614a7c83eb83ab392d353b871b96ce9fd8213c4f968e98c24feda2c58d4f8405dce042e399bd6475922c9d30e5f2ccfd
8d784c75708a2bfd30a5c9355e8527f529c7c9d207537eb24b795ac974902c5d30e5c3fdbc45eb73148f6bde0e4d595413b4aaf7e11887ef2a7adae171a62c47
3a961e98f2e90ac2944ba86cc44e98928490b70b94fe90b78bbbe53c4df112a62c2dd6fabf8aad9a166e817e12eaa428ec87c277cb799ae23d4c39bfcaf20876
989287a1af8a1977549129b7cb799ae24d4c59ca1dcb9bea17b0c19462f0a817ff3235c59872bb9ca7295ec69425274b277d0ca0dc231a303248510253fa9adb
be8f294b4c967ec6238bcd9ec6ce61bd3605dd54347da7cafd782553f894a5a3a9cbf613f2848eb7409b426e421abe53e57ebc94294bf644fc7475aaf0a99e5b
2a911ef05ea62c09599eae4c053aa9e639bc9a294b4496a7abb20b3f523e5d8ffbd011535edd0cefafe155bc9c29e964e5df2bb053d1af5be86be88b29ea698e
00f62afa75137d0b2f674a8aa739022854ac8b21f21284292750a89830e565789a2380bc5ebf4f1461ca19e4f5fa7da20853ce20afd7ef134598720679bd7e9f
28c29433c8ebf5fb4411a69c415eafdf278a30e50cf27afd3c4f84292790ae1bfffad6204298721845a63c6d98fb214c398c0253fe023a63ca1b204c11d44198
22a88330455007618aa00ec214411d8429823a0853047510a608ea204c11d4419822a883304520d88130455007618aa00ec214411d8429823a0853047510a608
ea60992210d4a0172f97826761fe0340ae7be8bf8ea6d80000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.12 Un cycle d'\u233\'e9criture dans la m\u233\'e9moire sur 80486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Notez que le CPU n'attend pas pour la m\u233\'e9moire. Le temps d'acc\u232\'e8s est sp\u233\'e9cifi\u233\'e9 par la fr\u233\'e9quence d'horloge. Si la m\u233\'e9moire n'est pas assez rapide, le CPU lira des donn\u233\'e9es incoh\u233\'e9rentes dans une op\u233\'e9ration de lecture et ne placera pas des donn\u233\'e9es correctes \u224\'e0 la prochaine op\u233\'e9ration d'\u233\'e9criture. Ceci fera s\u251\'fbrement planter le syst\u232\'e8me. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les p\u233\'e9riph\u233\'e9riques de m\u233\'e9moire ont plusieurs caract\u233\'e9ristiques, mais les deux principales sont la capacit\u233\'e9 et la vitesse d'acc\u232\'e8s. Normalement les m\u233\'e9moires vives dynamiques (Random Access Memory) ont une capacit\u233\'e9 de quatre ou plus Mo et une vitesse d'acc\u232\'e8s moyenne allant entre 50 et 100 ns. Vous pouvez acheter des composants plus gros et plus rapides, mais ils sont beaucoup plus chers. Un syst\u232\'e8me 80486 \u224\'e0 33 MHz utilise des m\u233\'e9moires de 70 ns. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Attends ! A une vitesse de 33 MHz une p\u233\'e9riode d'horloge dure approximativement 33 ns. Comment un concepteur de syst\u232\'e8me peut se d\u233\'e9brouiller avec des m\u233\'e9moires de 70 ns ? La r\u233\'e9ponse demeure dans les }{\rtlch\ai0 \ltrch\lang3084\i0\loch
\u233\'e9tats d'attente }{\rtlch \ltrch\lang3084\loch
(}{\rtlch\ai \ltrch\lang3084\i\loch
wait states}{\rtlch \ltrch\lang3084\loch
). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_02_03}{\*\bkmkend p3_02_03}\rtlch \ltrch\fs23\b\loch
3.2.3\tab Les \u233\'e9tats d'attente (wait states)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un \u233\'e9tat d'attente n'est autre chose qu'un cycle d'horloge suppl\u233\'e9mentaire servant \u224\'e0 donner \u224\'e0 divers p\u233\'e9riph\u233\'e9riques le temps de compl\u233\'e9ter une op\u233\'e9ration. Par exemple un 80486 \u224\'e0 50 MHz a une p\u233\'e9riode d'horloge de 20 ns. Ceci implique une m\u233\'e9moire allant \u224\'e0 une vitesse d'acc\u232\'e8s de 20 ns. Mais, en fait, la situation est encore pire. Dans beaucoup de syst\u232\'e8mes il y a des circuits additionnels entre le CPU et la m\u233\'e9moire : la logique de d\u233\'e9codage et de mise en tampon. Ces circuits suppl\u233\'e9mentaires ajoutent des d\u233\'e9lais additionnels (voir figure 3.13). Dans ce diagramme, le syst\u232\'e8me perd 10 ns pour le buffering et le d\u233\'e9codage. Donc, si le CPU a besoin d'un retour des donn\u233\'e9es en 20 ns, la m\u233\'e9moire devrait r\u233\'e9pondre en moins de 10 ns. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4080\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich272\picwgoal8310\pichgoal4080\pngblip
89504e470d0a1a0a0000000d494844520000022a000001100803000000a9e7afd700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000dff49444154789ced9dcbb5ab20148629
26cd580ccd580ccdd0c099649089930c3cb079f888ca4e4413e1ffd6ba0922f178cdb778b92542eb1e80345a4015c0c2a8220060606b15f16d5fc105802a8009
54014ca00a6002550013a802984015c004aa0026500530812a800954014ca00a6002550013a802984015c004aa0026500530812a0c543ba465b5e1a535abe2c2
001905e5a89050879dcf8f53b52aad528a534940154bd5aa70bf75a862812ac3562384eced330c423443b6c92455a44929fa103de26092edcd1650b7534ffa7b
54ad8ab1408db6a46a85698f8c2f5a848eeccde448dba191460e6936cc9bb8b98a46936ba4570dd4ac8a6a8d0471704335096932aa6cbc0dc25741a6b479b729
257cbe12b50c896a56c5327443481a5b45d876287cfd6484a95a4c82904e99b6a19193d5a4695e0f5a26b5aba2621d32b4265a8a90eb54915615a568bc64f6b4
a2516e87a989eae9e6429550814c3a1e61ba45d36eb3a54339a1a823d35201234d3dd7ae625564e86e38822a2441ecabda1e4c4b7d15e38aa6be8a768320b75b
b42fc72d958a5571b3b5b1531a6b95663c874b03632f158da14d315ba0751f94155dba9a55e9b55aec68e8c9146e5c5364c81e9619a966a4dc57aeca6eda6a46
ca3d54d9c33050aa02a802984015c004aa0026500530a95e157ec7b4a62eec12d5abc21fc45435dc59a06655dcfd1da8c2a46a55540f55f8d4ab8a0cf1273e4e
52287ab7d914b9123cb2a55a57c097ac947a55d14ab436fe24c6499a84ee6f148fa2065584bb3fd88f222adf82f9fcc805a8579560838f9374091720d9c40049
35444c0e25dffb23eca78d7e1da812e22429e182dbd4a08acba000a658f2bd3f12c978e65f01aa84301511a3abd754f9283e7ffc7b0619cffd0b4095892aaebd
915e153d6d80965479f7d72f4efe2fe6a46a55dcb8a61fa9425268dabcd908384581920d54e9eb56a5b55fdd4c95de0da1dd4e1a0a35e1f1c2fdaa9cfcffcb4c
cdaa2cdfd6d1ea7567f3f9c3a68578d2d7ae4a1aedfa2c9fc7e597220a5449d28616e9430af1a4872a0c96c3faeb03aa0026500530812a800954014c6a574525
87c1e9129550bb2ae9e7d36b7a827d13a8b2bf44254095fd252225df01aa5b15e16f04fa6546ddba29764788af5d58897473e676f33a5efe2257ac4a5867342c
336ac36a69bdaf185ffbba1229c5dfae0255ca24062df9b849b7ad46f1b50b2b916e2f27c953e5ef0d76ff2f3352af2a619dd1b0cca812931d4a2cad44ba3d70
862a6512d6190dcb8caea9325b89740ba85226619dd1b0cc685c053bc6d72ead44ba7948a85228619dd1b8cc28bdeb717cedeb4aa4db4764ed842a9723ae336a
df9bb06df784c4d24aa45bb055619d1f54f921c2a2a26199d118563b245e5722dd80af0a27681baa14cc1baa300e06550a06aa0026a3eba8e4fca753a10a1818
5d47a974a3967742153055a5d7b7e59d180181992ab3aa03232030305545c9e59d6880c0449566fe9c33540103182c9fcc3bf7487eeb4e0a5439991a54e10055
92d4a00a464059a84215c6c1a04a12a8e2ca43952445a8a26fb3797da87200eedbe5b4e629faefa92295122b3ba14a36bc2afb0ff45555d677724f08aa242942
15ddc8f9b2a521c1ad33a14a922254d9d88906281b50c595872a49a08a2b0f55924015571eaa24a941150e5025497e554e623a0527e7537093921801e5a00855
16e655564aae9e3d5449025586f2fb2f423ea0ca31aae846ced662812af9395795ee394f645165e16ca04a76ce55e5d9cf1367a8c2bd0efb2f423ea0ca5754c1
08280b55a8c2387ba892e468553abbaf3389bb4d584362e2af373b9f561b2a4125ef7fa30454f9f6594c385a15fb17fc9c6977efdd964f98d4b3ebfcf6e3de3f
ef9d352726a04a5daa74775b4dfcfd3da86a317f2f26fccbdd6d3f5dfe5f289964365b8bc1f2e11cadcadffd497fa5f3638c2161fdf8f3cd8d6d88eccbc37f63
2ec15645bedc11c208283f47ab6244e9ba35553a52a5b33c9c3454a1c4045795665b158c80b270b02a0fd76f5d6980babf597b139f20483f4a9008985c29b97a
f65025c9c1aa983ac3c8103a26cfd0c97d0eaa98ed8735ea69063d7727964ff05559381ba8929d8355a1cbffec1fb14f324a7855ee7e93deee7fa30454f9f659
4c385a95bf476c5fba6e9e88451ea3b75102aafc1287ab7214b8077436a5a8b239af8211500e4a510523a0c32942157d93b35f24832af929421549b37093b381
2ad929429506aa9c4011aaa866b301e25e87fd17211f55a8b2ff50dc3fc8d9f98711502eaa50857130a89204aab8f25025095471e5a14a12a8e2ca43952445a8
9258619203544952842aa915263102ca4119aaacef4403948d225449ad30c93818544952842a1b3ba14a36a08a2b0f5592d4a00a07a892a406553002ca4215aa
300e0655924015571eaa24294215796bd77642956c94a18a5add0955b251832a1ca04a921a54c108280b45a8b2b1130d50369654d14abf7f20a892954ba8a2a8
4236097a973683ea77b97de250252b575045593b7a6117426a946acd1654f9025750852a945eb526659d31825c5e150e5025c95c152de26c5631aa60049485b9
2ade0b8b6b896e3b5459f84af29d391aa093d95245482984dea3ca42a96c409593d95445346dbf670404553ee602aaccfb2a9420551aa872221750c58f80b41e
ab42f688d7b8f8313fac0a07a892646b5e25aa62776bf172a365c2f9aa6c124a6104948dd7d9da36ced606557498b7dde2745578a001cac6ab2aa66279b907a4
d57695d24395cc5c44958f802a59812a50850954f98a2acc7250659b1a54c108280b27a8a2a4d4d39c134103948d1354916af83f431526d5aa22a739270255b2
71862aa3d54fa00a934a5551c3d317180131a9549546dea6392782115036aa182ca78b4195345085802a69a00a0155d2401502aaa4a941156639a8b2cd3983e5
2fcfd6620494832a544917832a69a00a0155d2e4576584bfb37c9362abd4d140953cb02f668a755552a58e06aae4817d3153fcb02adcebb0ff22e403aa7ca756
c1082807fe62ee3fd071aa74cf5da6a001ca04fb62a6d85065f4633d9fa8f2dc591341953cb02f668a2d55b64ba598aad27750e53b9ca04a3b2cae0055b8d4a9
ca8e5ae56e3f6354e9ec7b47dad88c619ba50af73aecbf08f9802a6faa627cb0b6fcd9f3a4737d74fdb37b0cdbac83600494859f56e541358739c9ee6e0642fe
5c6dd6689ba30ae3eca14a92335449945aa7f3ed8269899ef15ca9dd19b6a1ca595c4315234637ae5546db50e52c7e5a95d0003d4c4f360c846cd6781baa9cc5
4fab426d8fad418c1f8f70ae4f5bdb0cdb9c8330afc3fe8b908f4a55f97cb6b6f327695f9efdc3663d67db0c553002cac229aa6c97da96c5cd9e3c864994bb1d
fe3cde9888430394871354d93b5bbb17a89207f6c54c71dc3da0bd40953cb02f660aa89215a88228382695aa922875341801e5c15fccfd07fa655518674f057f
882a5499e4bd963a19a8920da8424095345085802a694e5045df1a35cd3911ae015025c909aa48a5b012c2bb54aaca4bce89a001ca86572503eb0d10d6ad7d9f
9f5525dfa1d0adcdc3afaa9295d1c1a1cac740158c809840158c8098401534404c7e509543812a1f53a72af2d6ce723e440dc7e9e5fcf77d57802ad720ccd6ce
7366a5dcb44c1a392a94f82df90854b9064c555af5fa23e04b7caa0ab31c54f9224c5598dffae7b50a46403f0faf5b3bfbd6856a84907dafcd17d80cb926cfa9
224d52d1876c09f3ded20f53a95bbf041aa06bc054c55830ae78cc562b746f74d1f109a29bc990d4a191460e692ea4f984b8514d43695b7c09a8720d78aaa8d6
48301a24d9aa44483dae6cbc0df6d32ed5da379bb2f10d365f89e5de0e54b906fc7995513784ac3175846d86c2d7ef025e6ea404219d486d1334699a97631250
e51af05551431d129b132d45c855be9742052d54cdb4a2715153a6225aebe66204740dde5125b61fe39e47986ed1b4db6e695fd094a29e4c6b4b1867d60e8c11
d03560a9426dcf680aceab420ec4beaaedc0b4aeaf625cd1d457d1f48f3e38eeeb4c4103740dd8232031ea94865aa519cfe16ad74109c55d83634bb4f449b97a
51a1ca356036405a2d7634f4640a57ebd7fc98b73252eea1ca5538ebce72bb3252eea1ca5538479561a0b40054b906bf12af8211d0cfb3f0959c7d0a1fc6ef7d
9dda54f901a00a6002558a831bb3f24e490b54290e767cd31b252d50a524dcfd9d8354b92ad5a8f2d6ffd1cde443950975a8f2de9858d2dd9d18266955a084cd
6f471ed952adecfb51c992a94095b7e74fb412add2314cd2054ceafe6683667d0cad7db133b28dbfb51c4a964ce9aa7c36d5e66c70619221e522241b11541947
4cc6922553b62a9fcecafa68d93ea862532eec4d4555dc3605300d254ba6605538f75956e6f8876ead53254457afa9b2119f5f0e05abf2812bf1930baab80647
0affbc8f7a09d9872a97e6d306280a32a47c1cadb4cffa687a44cc46e5439582f84495d6169fab4247926e67eba323dde38550a514de36a55fb9ada3d5cbce66
f961d312a941959e6cc97d48edfa2c6b71f9e551892a47d0fa06a916a0ca0e96c3fa4b05aa0026500530812a800954014ca0ca028bcb8aba874d356b35c12281
2a0b2c45b53514d6d4ac2f70503c5065810555f4e89661a54095051684882108f5025516b0b1b421aad6bdd0ccac72af7d587d3406ddd601545940d0e24b4320
82d96a850aaf71f5d110745b095065018a956d87f002356b80623ca5585944b248a0ca0254a1a85555c2eaa33ea8b616a0ca0243d8f58a2a6ef5d15a9e15f340
9505a60d909eaba2e3233f50a576dceaa2d4adf571b4b3be8a5b7d14aa00d18608cb18473b9d57b1bbe93131a802e2a2a2cb32d4782b08aa0026500530812a80
0954014ca00a6002550013a802984015c004aa0026500530812a808955e5fd85b0408dd85ae5dbbe824b00550013fd0f73e2528e887aa07a0000000049454e44
ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.13 D\u233\'e9codage de d\u233\'e9codage et de mise en tampon }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il est d\u233\'e9sormais possible d\u8217\'92acheter des m\u233\'e9moires travaillant \u224\'e0 10 ns. Cependant, elles sont extr\u234\'eamement on\u233\'e9reuses ; elles sont aussi tr\u232\'e8s volumineuses, consommant beaucoup de tension et g\u233\'e9n\u233\'e9rant trop de chaleur. Ce sont de mauvais attributs. Les superordinateurs utilisent ce type de m\u233\'e9moire. Mais ils co\u251\'fbtent aussi des millions de dollars, occupent des pi\u232\'e8ces enti\u232\'e8res et requi\u232\'e8rent des refroidissements sp\u233\'e9ciaux et d'\u233\'e9normes alimentateurs. Pas le genre de chose que vous voulez placer dans votre bureau. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si les m\u233\'e9moires avec des co\u251\'fbts raisonnables ne marchent pas avec des processeurs rapides, comment les compagnies se d\u233\'e9brouillent-elles pour vendre des PC rapides ? Une partie de cette r\u233\'e9ponse peut \u234\'eatre fournie par les \u233\'e9tats d'attente. Par exemple, si vous avez un processeur de 20 MHz avec une m\u233\'e9moire ayant une dur\u233\'e9e de cycle de 50 ns et vous perdez 10 ns pour le buffering et le d\u233\'e9codage, vous disposez de 40 ns de vitesse m\u233\'e9moire. Et si vous pouviez vous permettre uniquement une m\u233\'e9moire de 80 ns sur un syst\u232\'e8me travaillant \u224\'e0 20 MHz ? Ajouter un \u233\'e9tat d'attente qui porte le cycle de m\u233\'e9moire \u224\'e0 100 ns  (deux cycles) r\u233\'e9sout le probl\u232\'e8me. En soustrayant 10 ns pour le d\u233\'e9codage et le tamponnage, on a 90 ns libres. Par cons\u233\'e9quent, une vitesse de 80 ns pourrait r\u233\'e9pondre convenablement avant que le CPU r\u233\'e9clame les donn\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Presque tous les CPU ordinaires existants fournissent un signal dans le bus de contr\u244\'f4le pour permettre l'insertion d'\u233\'e9tats d'attente. G\u233\'e9n\u233\'e9ralement, les circuits de d\u233\'e9codage testent cette ligne pour ajouter une p\u233\'e9riode d'horloge suppl\u233\'e9mentaire, si n\u233\'e9cessaire. Ceci donne \u224\'e0 la m\u233\'e9moire suffisamment de temps d'acc\u232\'e8s et permet au syst\u232\'e8me de fonctionner correctement (voir figure 3.14). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Parfois, un seul \u233\'e9tat d'attente n'est pas suffisant. Consid\u233\'e9rez un 80486 allant \u224\'e0 50 MHz. Une dur\u233\'e9e normale de cycle de m\u233\'e9moire devrait \u234\'eatre inf\u233\'e9rieure \u224\'e0 20 ns. Par cons\u233\'e9quent, moins de 10 ns sont requis apr\u232\'e8s avoir enlev\u233\'e9 le temps requis par le buffering et le d\u233\'e9codage. Si vous \u234\'eates en train d'utiliser une m\u233\'e9moire \u224\'e0 60 ns dans le syst\u232\'e8me, ajouter un seul \u233\'e9tat d'attente ne r\u233\'e9glera pas la question. Chaque \u233\'e9tat d'attente vous donne 20 ns de gain, donc avec un seul de ces \u233\'e9tats vous aurez besoin d'autres 30 ns.  Pour travailler avec une m\u233\'e9moire de 60 ns, vous devrez ajouter trois \u233\'e9tats d'attente (aucun \u233\'e9tat = 10 ns, un \u233\'e9tat = 30 ns, deux \u233\'e9tats = 50 ns, et trois \u233\'e9tats = 70 ns). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4125\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich275\picwgoal8310\pichgoal4125\pngblip
89504e470d0a1a0a0000000d494844520000022a0000011308030000002f73dd7900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000015cc49444154789ced5d6192b42a0cf430
73190fe3653c8c97f11cdfbf57c51b208180e0a0c228b3dd55bb3b8a662336e89836195605009fb1aec33a0040013455eee62bd0034015a010a00a5008500528
04a802140254010a01aa008500558042802a40214015a010a00a500850052804a80214e27eaad48c7dde7a20bf0e50052804a8d2c8971a5df32c3c832a4fb103
aaec0054896d802a19802ab10d5025035025b251c3956a761e055025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a0
4a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c0155
1a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251
c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f00
55221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900
aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550
a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b355c01551a7900aaf4015025b251c31550a59107a04a1f0055221b
355c01551a7900aaf4015025b251c315502563a102aa1c09a8d216a04a64a3862ba04ac6c283a8f210574095670354690c5005542904a802aa14e277a8f22480
2a40214015e02f0354010a01aa008500558042802a40214015a010a00a5008500528c475aafc17a39267c0c300aa008500558042802a40214015a010a00a5008
500528440baafcfbcba8745e1e0850a5322a9d97070254a98c4ae7e5810055eaa28dacfb110055ea0254d901a82201aaec00549100550ee1eed37527409543b8
fb74dd0950a5c8147fb8fb74dd0950a5c8d40f75cb69802a25967ea95b4e035429b1f44bdd721aa04a81a19fea96d300550a0cfd44bfd4c82607aa7c32f40bfd
5225f120a8f2c1ce2ff44b852300553edbf9858e0155f650892a3fd131dd1f405b802a0ead0ee08ad575daae5be6e58085cdc6299345a843955f986e9b1dc0a9
be99727badc3f06e538b6d5c4cfbb0c39d2166c672f6182b53a563aeb4f3ffe49d8b3ec9dbf36a4efdb89a86613e489569b89b2abf7017d7f200cedde75aaaac
e34b13611e46b3f27dbacc5f73c2c74952655ac799375c274ba961794d6a995e33ed344ccbc664b13fa08a41db03b8409561d153c1302ea3d973a6fd13b3caf0
7adf97d086c3bc4e2fbb30adc39b1e668bf54d9d7563b2d81f7c5936782c5556cd04738acc7c3239aa4cd3f00aee55743b6fb8e82d2c9da6852622c517a0c864
b13f15c38555ccdc83d6d3e219fbee5e655866b3ab3eaf7e56999655855431cd76c355df16cf962afa16996e58dcbd8a3459ec0fa8a2d1fc0a7a8d2afe5634b8
57d9528556afc3fcfec854d1abedcd8aa0caf1bb5b50c5a0fdcdd6f1ff20a862ae142f4392f755479e6977d5a150a7dd50b7becc895d87697edb99ecb4320f29
93a5fe802a16dfa34ae9ff9054d1978bd11b1add575e731db153c6c0cba3d9e83d8398c6493e857e37264c16fa03aa301adf9893f5b3ffc43f3a5997602e5896
d486b4c92a174233e1e702802a8ce6dfdfe81f74fb55b1a65ea58699fbf0bd03e8942ba00ae38b07d0e7c402aa30beea7f8f64015508dff6bf3fae802a84affb
5f30b1e48429ebb4ffe525294939a47249a122556a58b90f3750fd2357365a138b75f84095e493d88cb172802a843bfcff34b1b8b33b051b4d7b273d2b49f154
99ce1d2aa86271d3f573872c566b6284274667e244287689d429af49c706d7d76b5d5fa3ca4a528431da9f8c1df1155431b8ed562bc715ab35b1c213a3336111
8a5ac7f1bdc4ea94d98827dfdbbe7f5e39498a3466376163473c05550ceebb2b4f4f2ca435b1c213ba642cb4da5c800696206829dc625428b6312149098d596b
4be63ab5e328a86270a7fb29aeb080c0084f882af6335385379a8c84897f929294d098b5c6c60eb809aa68dcfb553f31b1d0d9b5c2133ab9f6b3a08a5d1a7354
71b34668cc6ce28c1df01254d1b8fba9d0862ca435b1c2137baee9b3a0ca6a2f340155529294d098dbe405aa9cc0dd54d95e85bcd6c4dca07a118aa08a791b68
520155929294d098b1c69f0f78584f865dc1ca6d7880f7db8945fcb6da9284662db12a294909852b4b7acf0f0e822aea29de3f3c2c04aa683cc4fb67c79b4115
8dc778ff64b2802a0fc373b9528f2a158c00ca71653740532e28389d22630b50e579b0cafedd2d0202ec3d4a0b5e2d4bb51c70ab47aa541c2a8fc501aa6430b9
07bac996e31e7545956c829adf83d511984131ad3eef8522410137682dc2aaa33befcd571b58a6ab93d51a2cce8e37c12a8440bdf03985465f54512a93a0a60a
8e0fb69322a1120cc3ba0c947167f1792f5850e09eddbf66fd603f901dd829c76a0da8e16dca9be016a95e2848a1d12955e204356278d895e11a2d003203d08c
38f33e9e1964bc68164840b4dd3d58a4e12cf768739c2b47024d94c73d5b759930940bf39893eea2414aa63df00dc284bb3479f542490a8d4ea9124977a4b8c7
ae8cd6e808991e8033f5b0b2836c968396243f9bdd43fb748ec41e8d8e53b1be40fbebf35ecc1155149d74b33825a8a28843de84a00a078f4a5268744a95289b
8c10f7d04ab1860440764bb35a91095ea4051b9c8f7757a17da68adba3d5716af32f6684cf7bb14b95d4ace21bd844822a2597f44ea9a202e98e8cadd2ca608d
32bd633c7cff1d67fb415ba245b790d85d85f6ddf8e53ddac09cd661d6e7e63db788bc172428a086882a26615330ff38aa0813ae451c56410a8d9ea9e287427c
2ab76ba691be7efa0164cf86db7e9662f78f54f17bb4c1325895daa8b5028bcc7b4182026e508157faeee9c5d719975cc37495fce2482dd108fbf015a845edc2
a64826a89167d627a3a11f12001155265270d020338bb430f305edb533abd8e13c883d9a612df89cd8c5a7265d366de996dcaa105d53c50d057966ed4ab9c60a
80882a9c218b06995da405bde376f7c8be1dce628f07e17d7fbe36a36f775409911c0adb956240b99e5ce5a21410957dfd957b3c0726f96823db9d53e528d629
c81c1d2d027bf8635499c3476673b327683f883f4615e03c76a9928ce0eed718f90b41df87e072168c8348528502b873e2199ead31922f31d2289227b1d34551
539eb7b4e1b5ca3a5f46dcb597b3601c446e56a177eed3eb298a952a31f205aaec7451d4947786363cd4dbdf3e359ff030aac4c917e8a904855524556cf0d5b4
703e06bb97fd2d0517575d2ea2ca7ee99bc75385ba93bb8f64298aa3e49405e3abf84095b81ec8ec1f4945b3ca62e2b7e63127e563b0015dbbaf145c5c0275d1
3c78bd41dc7b66652acf08539836a43fefb330493adbdfb42d4b86be7e6aa83b5dd1162b4bf15172af4bf91a3ecd2a610497831e89122362a2594430c6456aeb
3c18e24421d4814c46d97bc4cd449e114f616763326741d299484ddb262443df017527773da7be90d3f9c3a8a2c208ae9f553625466c50ee4517a08102baaeea
88504b5c007591e39f5be77b8f3b379167445078f0bd3dac019d89d40b9f9aad64e82ba0eee4eea3a82047c9e7a752455cf2e5bd4a8a2a9309a8cd7e5691d1df
eb372bd445d4814c46257bcf7373437541616d838e7288e86c7f53fa116741dd429589bb8fa94251f2c752458a19a8c6081f812f3142217de2c88b03bab4af54
4b5c80d4f5284946df7becda36cf0851784b9598ce8bd689ccfed4dc439559763d5365f5f3e4fa48aa4831831e802377ae2831f2be0fe3902ce563984d9baf3a
52e16b347791ed40db6f71ef51e76ef38c380a3b6dd04a01674967fb9bb6650bdf3f35d49daefb14f942517212ad7c15850ff6c59797b0c6882b316238cf9b04
7f83aa2317415d441d68c918f51ef37a9b67445098af54962a019ddd6f312f7dffd4f8eedc94d40efe7c11d562405f78f6661006ff83b421327b8852893c2311
95376572d6cdefcdfffd16bed59d07508d2a6bad276c80c603bb139165a010a00a5008500528449e2a7bca9333317ca073e4a9b2770f7e26305b11fbfaa9abd5
7052fb6350e4a8b21fc1bf9d2afbdf2493ad075c4dedff34adca1d4852255d292419c3a75a2326ee6f25294e99c20548c64335c24b90a54a3efb4ca6b44ecac0
07aa347c4ff9d948522553292415c3e75a232327f070ca145f80a45ee77afd942b6713e8a764f69974359cb0b40e6b5d98d0e9314263e35a359dfeb177018ad3
0da462f82e60c8c9015899e2b401ab52d55eb6f1fa292e6723f55361f69974359cb0b40e6b5d7897e41871c2964bd574fac7877b15295649c6f0f51fda842429
f4471420a9491545da14a727d1ab1d9d65f6994c359ca0b40ed9538ed029950b4795af55d3e91f1fa9e27a241dc30f6e0e489262fe9036a001558c7e8af424a1
7e2a482992a9861394d6e17c1acecbc4187102846bd574fa479a2aa94a21e918be9de1f5269c1c809429a200496daae8ab9ad49378ae6eb2cff0c1644aeb109f
9354f1420b659976ad9a4effc83c5749550a49c6f0dda81e7d3a8181ce1f1720a94915d24fb19e24d04f85d96732d57082d23a9c4fc3799918233c28789f93d5
74fa47ee115caa52483e861fd42071ebebc7edbd7e8a781beaa794cc3e93ab861394d621ad8b2774628c3861cba56a3afda3af1890d04f4584740aab60f3701b
2975c9f279678c483dccf79545b7a33faa0037a12faa3c50f0f377d01755801bd15084f0e79e7cff381a8a105a4c56bbfff0962a39e71ce8110d45082da8b26b
f3eb5572e28d7f3b84784084c0e1d49c0821c824604ce7ca945c7077b7b1e84ce587c1e527257f902a6911028553732284309380de3c57a6e492bb17abe404c3
20a892635bd6295507c4f6ca26e5c968e2a23665c71d194fbe8b0322041b4ecd8a10c24c02b453aa4cc92577af56c90986415025875bac2421ac036290487932
3819c32d194fbe8b0322041b4ecd8b10824c024a65cb945c73f76a951c390cc22a39eea8b77540fcff08529e2cbe2c48f83f7e12e522040aa7ee891094cb2460
4cab7499924beeaaab5572a263930cf654713fb24e0e292044ca93c59705b9258dc577512e42a0706a5684106412501c054e9429b9e4aeba5a2567330c3c8313
5491f7bf4e01e15c597c59903f4b95a40881c2a9591142904940f763ae4cc97954a8922387415825c7b5c81f915a669bf264f1654178e8fc707aed23228428c2
ba11216c7308c84d6adcd6d6a8922386c11256c9e116f92352cb6c539ed03d300944edd0f9dd89a5bf18508e7e3b54d44de29bfa12b7a55be2755e0191aeb363
bf25fe6e40b33faa1c47a52a39450f721f551ea82efe02552a55c9f9eb0a883f4115a0064015a01079aadc1ed2079e853c558aab60ec84f41fa886ddf0fa03d1
cf8d83d5be18fd530f598aa992c18eb2a5d9db0f97e8b7d9f983b5a8395cccedbb9a57e05d2ee6078e9813c8508573072811d32f08e96f62facaec960ae9df85
8b5429837900bc1fc7e8ef35a2345528a21ec6f43f87f4d526a6afec6e8990fe39182a7ad63aea490a06795d82065bfdc54b4cdc0af73dd8ac31e360597c7320
5a91c34178429e293db66800bd7f71d199757256ec1e94bca3276454704a294995d52a553e85f4d526a66f764b86f44fc1523160ad178bf011c9bc2ea906b9d7
3cb8408edfc4362eae3914adc8e1e03d61cfcc9eeb382eabfee5042dc28add839277f4842455e6982aca8b9a7643fa9b983eed9608e99f02aba7246b954aa94a
688bb8c11dc738f915ca9f79ea948537535bd18a1c0ece13e799dd9b2f408b2860e29370acae1bbbc271aaec87f4a3987e4895eb3777937d659efe233fad9714
0cf2ba0c718362c50d4b4ccc28e7ab0bdb7b378eb32fa8168956c470587cfe9849becc2fa8320f911539e2ba425a5b4b11f530a6ff39a4af3631fd902a32a47f
168bae83179033bcf524010953256a70c7c19932ec25658dec0c9ed729d18a1b0e8b4c35b45085beccac1238fb3354712fff0731fd8290fe26a61f5145568b39
03aec0c2f70436654640c130afcba68199612426b442cd43b0891e1fa3688e442b6238f84eb16b796c09aaacee4a48568219b1a75bdbdc73959321fd8f31fd8b
5d63a8284ed060cb11490a06795d640397840924263ebd8edf8438e39b03d18a1c0e625619a4904650c59a1156dce46c442f1d3de83e1e03aa14d23f8998c232
9145729b64c39ada52aca1e313f7af7b3eecad0d5ac27162be927714ad3e112eac13d27f30d6a95a9aa94fb8fb81e41120b2bcc5dcd31dc4f700aa0085384b95
df7ee91f48a0982ad1e3b39e6edd812a383babdc4895ba4aaaeba58dc4ae87c430bd29c2d24f6bf99d7fffd2ffbc8ab7feef7de9bfaef6e37abd1ab1eb218543
6f1a964c64d9bef32f5ffa77415275e74bff9f7204051b16015429455e84304e2e18ea120b282a8670d705289d23c8484558646297ac1cc40944585be5a426a9
ac4271a3db5cd69189cb1cf90976a6ecca34f372d91916c37c54c23c1e79aa4c2f255efa7741d269b8f14dee648e202b152191092704d21b0a8188d556893441
dbac4271231ba6ff138b5c629917cb52fccc4b91541b8cfcac84793c76a8e2141dc12bc0d378e74bffa91c412420a154f9b4344981086babbcd4249155286a54
6c8aab1d511bcfac91cc8b03c872e6555e0c53a084793c3254992906e65efa1741529628dc81648e204e01a4745a3abf240522f4e3a426a9ac4261a36253d60c
175f08cb1cf951c3b21439f32a2f862950c23c1eb9db5a5f896074b30a876459a270039239821cb707bf34850211fe21a94932ab50d8e84c39c18933e6f346c9
5d6dab6c575e0c53a084793cb2172056fb842d897c195f452a47100b4826cb6e2a4b34040211fb23d2046db30a458dde9435435296500ee3275896a5b899d76e
ce62980f4a982e824ef97b95672253a8c8dedeae62e9dd260422f4e3a426c9ac4261a33365cdb094252c73e4275896a58899976aad89623439254c17cfbed38f
e01eaca2c81761e1fb01311f6e066bac5809fe6ce42ce1d49a16b9ac9b4f9999774f09d3856ce56722cb5f14999c47cec92e9eadfc0c55ba109974e1640e3f43
15a0354015a010a00a50889fa1ca83bfe0ff087e862a2a7839295eece0dbd1e3d11955581fa01f4418c58129a3ad2509b36ee28cfb26378c59348df47979bdc0
98f3e88c2aac0fb02fbd5a318d2689fe34731a0afdd4543f835d5ca3f93cfaf7e18113e88c2a5e1fa0a651fff0aad52e28e5ee5acc226d3fb917403b89e23e11
9d5185f5013a9eb30e56ae329a38ce4bb95c4aef4dde14318bb6d17c7e0d552a42fc5df44515a70fd091e0f7d565d4c1387d99d1f24e7feb6aaf488b6bb4da1b
dca75c435f5471fa007ba342d92f4c95b8854b60ae144876b15f4eaca16f727b08cb3d157d5145e803f45c319a35afc9124368080c3d86811b954db581ebcf25
7446956c9a0b0da74958dd629053a3b73c7d0f436f54016e03a802140254010a01aa008500558042802a40214015a010862a00508015c156a008ebfa3fff907c
eb7c4b9e0f0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.14 Ins\u233\'e9rer un \u233\'e9tat d'attente dans une op\u233\'e9ration de lecture de m\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Inutile de dire que pour la performance g\u233\'e9n\u233\'e9rale du syst\u232\'e8me, les \u233\'e9tats d'attente ne sont pas une bonne id\u233\'e9e, car, pendant que le CPU attend que la m\u233\'e9moire lui fournisse des donn\u233\'e9es, il ne peut rien faire avec ces derni\u232\'e8res. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ajouter un \u233\'e9tat d'attente pour un cycle de m\u233\'e9moire dans un CPU 80486 }{\rtlch \ltrch\lang3084\i\loch
redouble }{\rtlch \ltrch\lang3084\loch
le temps requis pour acc\u233\'e9der aux donn\u233\'e9es. Ceci }{\rtlch \ltrch\lang3084\i\loch
divise par deux}{\rtlch \ltrch\lang3084\loch
 la vitesse de l'acc\u232\'e8s m\u233\'e9moire. Ex\u233\'e9cuter un \u233\'e9tat d'attente dans chaque acc\u232\'e8s de m\u233\'e9moire c'est presque comme couper en deux la fr\u233\'e9quence d'horloge. Vous obtiendrez beaucoup moins de travail termin\u233\'e9 dans le m\u234\'eame laps de temps. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous avez probablement vu une annonce comme : \u171\'ab 80386dx, 33MHz, 8 Mo de RAM et 0 \u233\'e9tats d'attente\u8230\'85 seulement pour 1000 $ ! \u187\'bb. Si vous lisez plus attentivement le slogan, vous remarquerez que le fabricant est en train d'utiliser une m\u233\'e9moire dont la vitesse est de 80ns. Comment peuvent-ils mettre en \u339\'9cuvre des syst\u232\'e8mes qui tournent \u224\'e0 33 MHz sans aucun \u233\'e9tat d'attente ? C'est facile : ils mentent. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Cependant, il est toujours possible de concevoir un syst\u232\'e8me de m\u233\'e9moire que, }{\rtlch\ai \ltrch\lang3084\i\loch
sous certaines circonstances sp\u233\'e9ciales}{\rtlch \ltrch\lang3084\loch
 r\u233\'e9ussit \u224\'e0 fonctionner sans \u233\'e9tats d'attente. Beaucoup de mod\u232\'e8les de marketing pr\u233\'e9voient que si leur syst\u232\'e8me arrive \u224\'e0 fonctionner sans \u233\'e9tats d'attentes au moins parfois, alors ils peuvent se vanter qu'il le fait toujours. En r\u233\'e9alit\u233\'e9 les gens du marketing n'ont aucune id\u233\'e9e de ce qu'un \u233\'e9tat d'attente est, sauf le fait qu'il est une mauvaise chose et son absence est une raison de se vanter. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Cependant, le fait qu\u8217\'92un syst\u232\'e8me comporte des \u233\'e9tats d\u8217\'92attente ne veut pas du tout dire que le syst\u232\'e8me est lent. Les concepteurs mat\u233\'e9riels peuvent faire recours \u224\'e0 plusieurs proc\u233\'e9d\u233\'e9s pour atteindre un \u233\'e9tat d'attente z\u233\'e9ro la plupart du temps. Le plus commun de ces proc\u233\'e9d\u233\'e9s est de se servir d'une m\u233\'e9moire }{\rtlch \ltrch\lang3084\i\loch
cache}{\rtlch \ltrch\lang3084\loch
 (prononc\u233\'e9 \u171\'ab\~}{\rtlch \ltrch\lang3084\i\loch
cash\~\u187\'bb}{\rtlch \ltrch\lang3084\loch
 en anglais). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_02_04}{\*\bkmkend p3_02_04}\rtlch \ltrch\fs23\b\loch
3.2.4\tab La }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
\u233\'e9moire }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ache}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous analysez un programme ordinaire (}{\rtlch \ltrch\lang3082\loch
tout comme certaines recherches ont fait}{\rtlch \ltrch\lang3084\loch
), vous remarquerez sa tendance \u224\'e0 acc\u233\'e9der de fa\u231\'e7on r\u233\'e9p\u233\'e9titive aux m\u234\'eames emplacements de m\u233\'e9moire. De plus, vous remarquerez aussi qu'un programme acc\u232\'e8de souvent \u224\'e0 des emplacements adjacents. Le nom technique donn\u233\'e9 \u224\'e0 ce ph\u233\'e9nom\u232\'e8ne est \u171\'ab }{\rtlch\ai0 \ltrch\lang3084\i0\loch
localisation temporelle des r\u233\'e9f\u233\'e9rences}{\rtlch \ltrch\lang3084\i\loch
 }{\rtlch\ai0 \ltrch\lang3084\i0\loch
\u187\'bb}{\rtlch \ltrch\lang3084\i\loch
 }{\rtlch \ltrch\lang3084\loch
(}{\rtlch\ai \ltrch\lang3084\i\loch
temporal locality of reference}{\rtlch \ltrch\lang3084\loch
) et \u171\'ab }{\rtlch\ai \ltrch\lang3084\i\loch
localisation spatiale des r\u233\'e9f\u233\'e9rences }{\rtlch\ai0 \ltrch\lang3084\i0\loch
\u187\'bb}{\rtlch\ai \ltrch\lang3084\i\loch
 }{\rtlch \ltrch\lang3084\loch
(spatial locality of reference). Quand un programme emploie la localisation spatiale, il acc\u232\'e8de \u224\'e0 des adresses de m\u233\'e9moire contigu\u235\'ebs. Et quand il emploie la localisation temporelle des r\u233\'e9f\u233\'e9rences, il acc\u232\'e8de en fait, de fa\u231\'e7on r\u233\'e9p\u233\'e9titive, et pendant une courte p\u233\'e9riode, aux m\u234\'eames adresses. Les deux formes de localisation se produisent dans le programme Pascal suivant : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
for i := 0 to 10 do}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li4253\ri0\lin4253\rin0\fi0\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
A [i] := 0;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans cette boucle, il y a deux occurrences chacune ayant une localisation spatiale et temporelle des r\u233\'e9f\u233\'e9rences. Consid\u233\'e9rons la premi\u232\'e8re, qui est la plus \u233\'e9vidente. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans notre code Pascal, le programme r\u233\'e9f\u233\'e9rence la variable i plusieurs fois. La boucle for, compare i \u224\'e0 10 comme condition d\u8217\'92arr\u234\'eat. Elle incr\u233\'e9mente \u233\'e9galement i \u224\'e0 la fin de chaque tour. L'instruction d'affectation utilise \u233\'e9galement i comme indice de tableau. Ceci montre l'action de la localisation temporelle des r\u233\'e9f\u233\'e9rences puisque le CPU acc\u232\'e8de \u224\'e0 i en trois endroit du programme dans un court laps de temps. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ce programme montre \u233\'e9galement la localisation spatiale des r\u233\'e9f\u233\'e9rences. La boucle initialise \u224\'e0 z\u233\'e9ro les \u233\'e9l\u233\'e9ments du tableau A, en pla\u231\'e7ant un 0 dans le premier emplacement de A, un 0 dans le suivant, et ainsi de suite. En supposant que Pascal stocke les \u233\'e9l\u233\'e9ments de A dans des emplacements de m\u233\'e9moire cons\u233\'e9cutifs}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Et il le fait, cf. d\u233\'e9but du chapitre 4.}
}}
}{\rtlch \ltrch\lang3084\loch
, chaque it\u233\'e9ration de la boucle acc\u232\'e8de \u224\'e0 des adresses de m\u233\'e9moire adjacentes. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans le programme ci-dessus, il y a un exemple suppl\u233\'e9mentaire de la localisation spatiale et temporelle des r\u233\'e9f\u233\'e9rences, quoiqu'il ne soit pas aussi \u233\'e9vident. Les instructions de l'ordinateur qui demandent au syst\u232\'e8me d'effectuer une t\u226\'e2che sp\u233\'e9cifique apparaissent aussi dans la m\u233\'e9moire. Elles apparaissent s\u233\'e9quentiellement (localisation spatiale). L'ordinateur ex\u233\'e9cute \u233\'e9galement ces instructions de fa\u231\'e7on r\u233\'e9p\u233\'e9titive, une fois pour chaque it\u233\'e9ration (localisation temporaire).  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous jetez un coup d'oeil au }{\rtlch \ltrch\lang3084\i\loch
profil d'ex\u233\'e9cution}{\rtlch \ltrch\lang3084\loch
 d'un programme, vous d\u233\'e9couvrirez qu'il n'ex\u233\'e9cute normalement que moins de la moiti\u233\'e9 des instructions. G\u233\'e9n\u233\'e9ralement, un programme ordinaire peut n'utiliser que 10% ou 20% de la m\u233\'e9moire qui lui est allou\u233\'e9e. \u192\'c0 un moment donn\u233\'e9, un programme dont la taille est d'un Mo peut n'acc\u233\'e9der qu'\u224\'e0 8 ou 10 ko de la m\u233\'e9moire destin\u233\'e9e aux donn\u233\'e9es et au code. Donc, si vous avez pay\u233\'e9 une outrageuse somme d'argent pour des m\u233\'e9ga RAM sans \u233\'e9tats d'attente, vous n'en profiterez que rarement ! Ne serait-ce sympa si vous pouviez acheter une m\u233\'e9moire plus modeste mais r\u233\'e9attribuant dynamiquement ses adresses lors de l'ex\u233\'e9cution du programme ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
C'est exactement ce que vous permet la m\u233\'e9moire cache. Elle est situ\u233\'e9e entre le CPU et la m\u233\'e9moire centrale. C'est une petite portion de m\u233\'e9moire tr\u232\'e8s rapide (z\u233\'e9ro \u233\'e9tat d'attente). Contrairement \u224\'e0 la RAM ordinaire, les octets apparaissant sur la m\u233\'e9moire cache n'ont pas d'adresse fixe ; le syst\u232\'e8me peut donc r\u233\'e9assigner l'adresse d'un objet de donn\u233\'e9es. Ceci lui permet de garder les valeurs qui ont derni\u232\'e8rement \u233\'e9t\u233\'e9 acc\u233\'e9d\u233\'e9es dans le cache. Les adresses inutilis\u233\'e9es par le CPU ou qui n\u8217\'92ont pas \u233\'e9t\u233\'e9 acc\u233\'e9d\u233\'e9es derni\u232\'e8rement, restent dans la (lente) m\u233\'e9moire centrale. Puisque la plupart des acc\u232\'e8s de m\u233\'e9moire sont des variables r\u233\'e9cemment utilis\u233\'e9es (ou des adresses qui se trouvent au voisinage des adresses derni\u232\'e8rement utilis\u233\'e9es), les donn\u233\'e9es apparaissent g\u233\'e9n\u233\'e9ralement dans la m\u233\'e9moire cache. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La m\u233\'e9moire cache n'est pas parfaite. Bien qu\u8217\'92un programme puisse employer un temps consid\u233\'e9rable pour ex\u233\'e9cuter du code \u224\'e0 un endroit donn\u233\'e9, il appellera finalement une proc\u233\'e9dure ou ira se balader dans des sections de code \u224\'e0 l'ext\u233\'e9rieur du cache. Dans de telles circonstances, le CPU devra s'adresser \u224\'e0 la m\u233\'e9moire centrale pour charger des donn\u233\'e9es. Puisque cette m\u233\'e9moire est lente, l'insertion des \u233\'e9tats d'attente sera requise. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un "cache hit" ("r\u233\'e9ussite de cache") se produit chaque fois que}{\rtlch \ltrch\cf2\lang3084\loch
 }{\rtlch \ltrch\lang3084\loch
le CPU y acc\u232\'e8de et y trouve des donn\u233\'e9es. Dans ces cas, le processeur aura acc\u232\'e8s aux donn\u233\'e9es sans \u233\'e9tats d'attente. Un "cache miss" ("\u233\'e9chec de cache" se produit chaque fois que le chache n'a pas de donn\u233\'e9es ou que le CPU acc\u232\'e8de \u224\'e0 la m\u233\'e9moire centrale. Le CPU devra alors lire les donn\u233\'e9es dans la m\u233\'e9moire conventionnelle, r\u233\'e9sultant en une perte de performances. Pour prendre avantage sur la localisation des r\u233\'e9f\u233\'e9rences, le CPU copie les donn\u233\'e9es dans le cache toutes les fois qu'il acc\u232\'e8de \u224\'e0 une adresse que le cache ne contient pas. Puisque ces m\u234\'eames adresses sont susceptibles d'\u234\'eatre acc\u233\'e9d\u233\'e9es t\u244\'f4t, le CPU \u233\'e9conomisera du temps en les ayant d\u233\'e9j\u224\'e0 sur le cache.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme d\u233\'e9crit ci-dessus, la m\u233\'e9moire cache traite l'aspect temporaire de l'acc\u232\'e8s m\u233\'e9moire, mais non l'aspect spatial. Quand on acc\u232\'e8de \u224\'e0 des emplacements de m\u233\'e9moire sur le cache, la vitesse du programme ne sera pas meilleure si on acc\u232\'e8de constamment \u224\'e0 des emplacements cons\u233\'e9cutifs (localisation spatiale des r\u233\'e9f\u233\'e9rences). Pour r\u233\'e9soudre ce probl\u232\'e8me, beaucoup de syst\u232\'e8mes de m\u233\'e9moire cache lisent plusieurs octets cons\u233\'e9cutifs en m\u233\'e9moire conventionnelle quand une adresse n'est pas trouv\u233\'e9e}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Les engeigneurs appelent ce bloc de donn\u233\'e9es une }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
ligne de cache}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 (cache line).}
}}
}{\rtlch \ltrch\lang3084\loch
.  Le 80486, par exemple, lit 16 octets apr\u232\'e8s chaque \u233\'e9chec. Si vous lisez 16 octets, pourquoi les lire en bloc et non selon les besoins ? Il s'av\u232\'e8re que beaucoup de puces de m\u233\'e9moire disponibles aujourd'hui ont des modes sp\u233\'e9ciaux permettant d'acc\u233\'e9der rapidement \u224\'e0 plusieurs emplacements cons\u233\'e9cutifs dans la puce. Le cache exploite cette fonctionnalit\u233\'e9 pour r\u233\'e9duire le nombre moyen d'\u233\'e9tats d'attente requis pour acc\u233\'e9der \u224\'e0 la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous \u233\'e9crivez un programme qui acc\u232\'e8de al\u233\'e9atoirement \u224\'e0 la m\u233\'e9moire, utiliser un cache pourra en fait vous ralentir. Lire 16 bits apr\u232\'e8s chaque \u233\'e9chec de m\u233\'e9moire cache est plut\u244\'f4t cher si vous avez juste besoin de lire quelques octets dans la ligne de cache correspondante. N\u233\'e9anmoins, les syst\u232\'e8mes de m\u233\'e9moire cache font un bon travail. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il ne devrait pas surprendre que le rapport entre les }{\rtlch\ai \ltrch\lang3084\i\loch
hits}{\rtlch \ltrch\lang3084\loch
 et les }{\rtlch\ai \ltrch\lang3084\i\loch
miss}{\rtlch \ltrch\lang3084\loch
 cro\u238\'eet avec la taille (en octets) de la m\u233\'e9moire cache. Par exemple, la puce 80486 a 8 192 octets dans le chip de sa m\u233\'e9moire cache. Intel se vante d'atteindre des probabilit\u233\'e9s de succ\u232\'e8s jusqu'\u224\'e0 80 ou 95% avec ce cache (c'est-\u224\'e0-dire que le CPU y trouverait des donn\u233\'e9es avec 80-95% de probabilit\u233\'e9s). Ceci para\u238\'eet tr\u232\'e8s impressionnant. Cependant, si vous jouez un peu avec les chiffres, vous d\u233\'e9couvrirez que ce n'est pas aussi surprenant. Prenons en consid\u233\'e9ration le cas 80%. Alors une adresse de m\u233\'e9moire sur cinq ne se trouvera pas dans le cache. Si vous avez un processeur de 50 MHz et une vitesse d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire de 90 ns, sur cinq acc\u232\'e8s m\u233\'e9moire, seulement quatre se feront en un seul cycle d'horloge (car les adresses correspondantes se trouveront sur le cache), et le cinqui\u232\'e8me demandera au moins dix \u233\'e9tats d'attente}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Les dix \u233\'e9tats d'attente se produisent comme suit : cinq cycles d'horloge pour lire les premiers quatre octets (10+20+20+20+20)=90. Cependant le cache lit toujours 16 octets cons\u233\'e9cutifs. La plupart des m\u233\'e9moires permettent la lecture consecutive d'adresses en environ 40 ns, apr\u232\'e8s avoir acc\u233\'e9d\u233\'e9 au premier emplacement. Par cons\u233\'e9quent le 80486 aura besoin de six cycles d'horloge additionnels pour lire les trois doubles-mots restants. Le total est 11 cycles ou 10 \u233\'e9tats d'attente.  }
}}
}{\rtlch \ltrch\lang3084\loch
. Le syst\u232\'e8me aura besoin de 15 cycles d'horloge pour acc\u233\'e9der \u224\'e0 cinq emplacements de m\u233\'e9moire, ce qui fait, dans la moyenne, trois cycles d'horloge par acc\u232\'e8s. C'est l'\u233\'e9quivalent de deux \u233\'e9tats d'attente pour chaque acc\u232\'e8s \u224\'e0 la m\u233\'e9moire. Maintenant, croyez-vous encore que votre machine tourne \u224\'e0 z\u233\'e9ro \u233\'e9tats d'attente ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il y a cependant deux solutions pour am\u233\'e9liorer la situation. En premier, vous pouvez ajouter plus de m\u233\'e9moire cache. Ceci am\u233\'e9liore son rapport de succ\u232\'e8s en r\u233\'e9duisant le nombre d'\u233\'e9tats d'attente. Par exemple, accro\u238\'eetre les chances de 80 \u224\'e0 90% vous permet d'acc\u233\'e9der \u224\'e0 10 emplacements de m\u233\'e9moire en 20 cycles. Cela r\u233\'e9duit le nombre moyen d'\u233\'e9tats d'attente par acc\u232\'e8s m\u233\'e9moire \u224\'e0 1, un progr\u232\'e8s substantiel. H\u233\'e9las, vous ne pouvez pas d\u233\'e9monter la puce 80486 et souder plus de cache dans la microplaquette. Pourtant, le CPU 80586/Pentium a une m\u233\'e9moire cache bien plus grande et il fonctionne avec moins d'\u233\'e9tats d'attente. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une autre moyen d\u8217\'92am\u233\'e9liorer les performances est de construire un syst\u232\'e8me cache \u224\'e0 deux niveaux. Beaucoup de syst\u232\'e8mes 80486 fonctionnent de cette fa\u231\'e7on. Le premier niveau est le cache \u224\'e0 8 192 octets dans la puce (int\u233\'e9gr\u233\'e9e). Le niveau suivant est entre le cache int\u233\'e9gr\u233\'e9 et la m\u233\'e9moire centrale, c'est une m\u233\'e9moire cache secondaire mont\u233\'e9e sur la carte m\u232\'e8re (voir fig. 3.15).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une m\u233\'e9moire cache secondaire contient de 32 768 octets \u224\'e0 un Mo de m\u233\'e9moire. Des tailles communes de cache sur les PC sont 65 536 et 262 144 octets. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez vous demander : \u171\'ab Pourquoi s'emb\u234\'eater avec deux niveaux de cache ? Pourquoi ne pas utiliser un seul gros cache de 262 144 octets ? \u187\'bb Eh bien, la m\u233\'e9moire cache secondaire n'op\u232\'e8re pas avez z\u233\'e9ro \u233\'e9tats d'attente. Un circuit }{\rtlch \ltrch\lang3084\loch
supportant}{\loch
 262 144 octets de m\u233\'e9moire de 10 ns (20 ns pour une dur\u233\'e9e d'acc\u232\'e8s totale), serait cher. Donc, beaucoup de concepteurs de syst\u232\'e8mes utilisent comme caches secondaires des m\u233\'e9moires plus lentes qui requi\u232\'e8rent un ou deux \u233\'e9tats d'attente. }{\rtlch \ltrch\lang3084\loch
C\u8217\'92est encore }{\rtlch \ltrch\i\loch
beaucoup }{\loch
plus rapide que la m\u233\'e9moire centrale. Sa combinaison avec le cache primaire int\u233\'e9gr\u233\'e9 permet une meilleure performance du syst\u232\'e8me. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez l'exemple pr\u233\'e9c\u233\'e9dent avec 80% de probabilit\u233\'e9s de succ\u232\'e8s. Si le cache secondaire demande deux cycles pour chaque acc\u232\'e8s de m\u233\'e9moire et trois cycles pour le premier acc\u232\'e8s, alors un \u233\'e9chec de cache comportera seulement six cycles d'horloge. La moyenne de la performance syst\u232\'e8me serait de deux cycles pour chaque acc\u232\'e8s m\u233\'e9moire. Plus vite que les trois cycles demand\u233\'e9s par un syst\u232\'e8me sans cache secondaire. De plus, ce dernier peut mettre \u224\'e0 jour ses donn\u233\'e9es en parall\u232\'e8le avec le CPU. Donc, le nombre }{\rtlch \ltrch\lang3084\loch
de}{\rtlch\ai \ltrch\lang3084\i\loch
 miss}{\rtlch\ai \ltrch\i\loch
 }{\loch
de cache (qui affectent la performance du CPU), baisse consid\u233\'e9rablement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pensez peut-\u234\'eatre : \u171\'ab Ceci a l'air int\u233\'e9ressant, mais est-ce qu'il a un rapport avec la programmation ? \u187\'bb. Tout \u224\'e0 fait. Si vous \u233\'e9crivez vos programmes soigneusement, de fa\u231\'e7on \u224\'e0 tirer avantage du fonctionnement du cache, vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 am\u233\'e9liorer les performances. En mettant des variables que vous utilisez couramment dans la m\u234\'eame ligne de cache, vous pouvez forcer cette m\u233\'e9moire \u224\'e0 charger ces variables en groupe, en \u233\'e9conomisant des \u233\'e9tat d'attente suppl\u233\'e9mentaires pour chaque acc\u232\'e8s. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3255\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich217\picwgoal8310\pichgoal3255\pngblip
89504e470d0a1a0a0000000d494844520000022a000000d908030000003977eb1f00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000bf749444154789ced9d8b99a320144629
26cd588ccd500ccdd0c076c17a79a911e51ac0c0e43fdf37665609d7c4131e5eb223b401208fd6420b0018902adff6158c0054014ca00a6002550013a8029840
15c004aa0026500530812a800954014ca00a6002550013a802984015c004aa3cc0bf1b7cfb5ccf812a0f00550013a802984015c004aa00266c05a0caaf43aa70
d63943959fc7aa922f06550054014ca00a6002550013cc800013cc8000137440800954014ca04a3dee244906cca440957afc802adc828d4fa500a8f200744698
01d5e11754c917832a0ca00a015518401502aa30b09797d39b67812acde849950a15f5ab0ab760e3532900aa3c00b7cd842a797e41957c31a8c200aa10508501
5421a00a03a8424015063fa00ab760e3532900aa3c006640f5385145abbb7f80a66355f2c5a00a83a42aca7dd296732466bb47d181f9fc84a14a3bfa5545593b
c4443f4a49fa1754f926fdaa621b14a3e4f21b39437e40956fd2ad2a5ac8f0eb9f50855bb0f1a914d0ad2a5e0bc2f544afb155c10ca80e1955c43c0ba1075725
5f0caa30c8a92226b9d90755be42b7aabc8f55dc6f569509aa7c836e55f13320ad77aa587dd67f1f802aede85795cd7d9555152aa3d7aee940bfaa700b363e95
02fa55c5c878b736aaa2e38ddb13fa550533a03a2455591a96630e48abf326c574ad4abe18546170a2ca7d58aa703ee0ef9ff722a04a3d1e56e57eb59f9e8f03
aad403aab8285025cb0fa8c22d5816a925508555eda7e7e3c00ca81ebfa00a270a54c902555c14a89205aab82850250b547151a04a961f50855bb02c524ba00a
abda4fcfc78119503d7e41154e14a89205aab82850250b547151dc99d31a1df3b62ee7628dce53401556b59f9e8fe3ae2aaeecb4d5e3fba640155eb59f9e8fe3
e60cc82fde121db4245b4655e564494950e58a8f5461d47bcd8d199078d119ca17a962d7fd29df0109355dae016ccbb0aaa47774ac0a330a3d4a5a6ebe6c95fb
a61c7d99c5a9226625c5ddff1da216508517ed515596c663694eac1e64888aaad078f76bcd0a54e1457b5615b5d832fb598f9c445485bedb0255a0ca46151aae
68ab87a4ff3124aa623750e58fabc28a135591be25b1dfb1945065e50754b93303a2318af6aad00f5459f905559851cc7a67961e97818a90be33822a06aa6ca2
bcefd4df9a1b1f802abc685f53a51fa00a2f1a54812acc68c5aab0e240952c3fa00a56c1d5e117546146b97d6e8f015578d1a00a546146832a508519ed495552
0b263b00aaf0a215abc28af3ef74c1640740155eb46255eee480b060f29c5f508519851e370b26cd1c164c523288964fda1bfdb457babdb37cd11ef5bafdaa6e
025578d11e5565b360725e3633a50bc54c0b6ba5a21594e665d72928bb57eb87b288c3ab12fe4bbfbfa4ca66c16458fd46435d4506d1425b27c752c80d80e92d
50ed97dc8eae8af893aac40593ee2fad2d2d0659a25c33e316dbdaadf07f7a409b69bafda2ee32b82a6218555871822a71c1e46207e1d6ab5843f6aab881efd2
b83c30041e5a15b19ad2bd2af756c1ad0b267dbfb25345fb016f10448a8bbf50518d91551143a9c28c62cc76c1a4a1190f2db0dda96247275acceb7ab9f5cf9c
b4636055c45f56c584477a89d35babe2f6ce6bc98bbf90548f7155117f56953de93f36ad77639347d6db0eab8af81555183cf3e5d44155118d543939d4f52ab8
f9a10cc0f0aac43d6e5baa4afa1856c1996155595d893bdcb65895e4c1ce3ba067802a876a53bba1cac0aa9866aa240e43150355deab852aa70cab8abda69bcb
5a5195e3f1ae67404f31b22afb1d6e5b4595c4629862553003aac347aabced70db3aaabc974007648655e57839ebaa72a81caa0caccafb1eb7ada5ca7bef0655
065525d947d82d5469c6b0aa1c76b96db7aa70df07fe9bf03443aa929ea4d86d25550e9517ab8219501deea972329fb5db3aaa1c2b2f5785f1baa04a9edbaa34
fd1e1026cb490654c57eec13adb73d06559a319e2aa90e623d08559a31a42a1707830e9735dc0e51f80e65cf6853b02c524b8653e5b251e95815cc80ea704f95
aba355543904a9a14abe185461c057e5ba51812a0d194c958c2950a521e3a9727dbc8e2aef71a08a194d955ca3d2b12adc8265915a329c2a9902ddaa8219501d
98aa641b957a7f67791f091d90194b95bc2950a52183a9922d02559a31902a8c46a59e2a7b57a08a194d956c45fdaac22d5816a925e3a8c269542aaab2730533
2033902a2c537a56851111aae4e1a9c2a808aab4631455788d4a4d55b6ae401533942a9c8aa04a3b065185d9a874ac0ab76059a4968ca10ad794aaaa6c5cc10c
c80ca40aafa28e5561c4832a7932aab01b15a62af7b9f3628e40957ae4556156c452854db1231ea8528f6b556e7caca14a3b0650e54e075057955aae6006548f
9c2aec8afa550533a03a5ca9726b54d9b12a8c685025cf3feee72e4b5d552ab90255ea7171796f5e2ca8d28c8e5449b26929ee50ebc4a0caca00aa7c604abd37
bc8a2bec33822a59ae4cf923aa600654872b553e31a5e21b5ec315fb4a18a1a0cae7549aac7efb14a04a736edd5269770ec5754095e674604a9593802aade9a1
51a9a60ab76069ac7674aecab74fc1d46b5530036a471fa6d4380f74406de9a3fb315025d0b52adf3e0507547174ab4a378d4a0557a04a53fa31a58e2adc8265
915ad2ab2a1d99527e329801b5e4efa9c20803558607aa10508543a12b50e577802a06aaf0802ae60155b4ba3a7a797045eacf827ffabc0365ae6006c440d13b
f0ba08aff68f69e6f9ec7919aabdb472559e5fbf579bb6aa6831d1e6e28bebfe925f373dc7e7335b233377e10a5461d46eab56429e16e05cf3f3a7339ecb952a
570f5469aa8af61799de66a126216247b2fc6e8f85bd744505f55687ae866ad1663d4a8ff35a5e2e6dd6729cb661df2c6d8fa7ecf675d1fbdd01aab45545f9cf
f444aa885949e18799afe580a27f84bdf632db9dc716c47522e1283d23949f4934a996c1108d87661f456b1bd65927ebf5409f3f17aa6409aad88b389970f98c
bb96f67afabdf6d2cf2639b8783955fc51fb0c577ef27ddbb2d7d617a2d8cbaa9c968971ce67f49468f80ecfa962fb9b79f97dbbbc20ec759d8749b602ae7438
ea9a1d5b5efa08562f398910c56a324dbb5300c53c385631b155593fea61ef952aafbd2a2afc8b7e6c4d8b2a524c4a8528b671f1bf556b55c01333206bcc5615
1d3fea3b55c8ab4407e4c72afe6852151b41aeaa2ce6f87aaa8d55405b55dc28d50ab355c5b8498b7e53c5ee3c0e6bfd0cc81f3d5145b9db37f1965ea867aa34
0302adefd6ca3832d9a962e7b6b3796f55969d53ea1cad6ffe68ba03b2936f3f933266d33861a8528de63920a5927998446a885a86645925ae8efafaf6c78293
e87fead15166f9bc0198a79bcd43b881a34551be50a7354fa338f7944f6a1ca2e91b4215ca10df506516b11f2a32c5769eec1a18e926b5bb51b08d34822b1da9
d21b2f3bee660f8bf3aa28373c4b0cc7a0cad8a4f25117e455f1c9d344470555c6267615b3f03d5a4872ceee71cd80d27c6e5125242d5d26930ea84da3b4b911
100abe674dd7501d02554e51fee6ccbc5cbc993aa390e4a447b9fcc40c287555cb458e494b7b647777c0d51725f0050f59d318aa47bea54aaf1f9d2d2a341ec6
dedb09494ef7388998ebf499ec3569698f6c7296a1baf8a25dc174d6b468794e4bbea54ab7cdec0ef5a2e641b81b86219da4fc7aad98eb743b5e6bd2d2673263
ce323c6ff39aa9e02615e66a8aa1ba04aa5c332d1754113aa18aef62dc8e4dd2d21f99f6af72335671050f59d318aa4ba0ca19dade949122dec60b494ef738af
aac42455485a8634f8b47f677df2d467baa438644d0bef1836a6b12a61881fe706038df943aa33a6314392932eb98e238bd90d35a45893962151f536ea88f755
42c163d6f42463da056d555987f87e6e30d2985f86bbb5c2a731d724a7880b82ad2aeec09ab4f4aa1ceeb4c4e4a92f78c89ac6503dd278695318e2fbb9c16063
fe65dc601f63e62624390fc94e9faddc272d13e3d33010d16f15ae15f53a5269acca76099a9d1b0c36e62f43f6d9587ecc43aaf8b9c16063fe12e65e87601ff3
4007644c18f21f574af63de6075b5aafad7543fc7541e350637eb0a5f57796fd4024cc0dc61af3832dad6fc1c539837edbb129813e68089059064ca00a600255
0013a802984015c004aa0026500530812a800954014ca00a6002550013ab0a000cb06204f0d0fa3fb2823d5d58e135500000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.15 Un syst\u232\'e8me \u224\'e0 deux niveaux de cache}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous organisez votre programme de fa\u231\'e7on qu'il tend \u224\'e0 ex\u233\'e9cuter la m\u234\'eame s\u233\'e9quence d'instructions de fa\u231\'e7on r\u233\'e9p\u233\'e9titive, il y aura un haut degr\u233\'e9 de locali}{\rtlch \ltrch\lang3084\loch
sation}{\loch
 temporaire de r\u233\'e9f\u233\'e9rences, et il ex\u233\'e9cutera plus rapidement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03}{\*\bkmkend p3_03}\rtlch \ltrch\fs23\b\loch
3.3\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseurs \u171\'ab hypoth\u233\'e9tiques \u187\'bb 886, 8286, 8486 et 8686}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour comprendre comment am\u233\'e9liorer les performances syst\u232\'e8me, il est temps d'explorer les op\u233\'e9rations internes du CPU. Malheureusement, les processeurs de la famille 80x86 sont tr\u232\'e8s complexes. En discuter l'organisation interne cr\u233\'e9erait plus de confusion que d'\u233\'e9claircissements. Par cons\u233\'e9quent, nous utiliserons d'abord les processeurs 886, 8286, 8486 et 8686 (les processeurs "x86"). Ces processeurs \u171\'ab hypoth\u233\'e9tiques \u187\'bb sont des simplifications extr\u234\'eames des divers membres de la famille. Ils mettent en \u233\'e9vidence les caract\u233\'e9ristiques architecturales importantes de la famille 80x86. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\loch
 part }{\rtlch \ltrch\lang3084\loch
leur mani\u232\'e8re d\u8217\'92ex\u233\'e9cuter }{\loch
les instructions, les processeurs 886, 8286, 8486 et 8686 sont identiques. Ils ont tous le m\u234\'eame ensemble de registres et ils ex\u233\'e9cutent tous le m\u234\'eame ensemble d'instructions. Ceci introduit d'autres concepts, mais analysons-les un \u224\'e0 la fois. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_01}{\*\bkmkend p3_03_01}\rtlch \ltrch\fs23\b\loch
3.3.1\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
egistres du CPU}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les registres du CPU sont des emplacements de m\u233\'e9moire tr\u232\'e8s sp\u233\'e9ciaux et sont construits avec des flip-flops. Ils ne font pas partie de la m\u233\'e9moire centrale, le CPU les impl\u233\'e9mente sur puce. Les membres de la famille 80x86 ont diff\u233\'e9rentes tailles de registres. Les CPU 886, 8286, 8486 et 8686 (les x86 d'or en avant) ont exactement quatre registres, tous }{\rtlch \ltrch\lang3084\loch
de}{\loch
 16 bits. Toutes les op\u233\'e9rations arithm\u233\'e9tiques et de localisation se font dans les registres du }{\rtlch \ltrch\lang3084\loch
CPU}{\loch
.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque le processeur x86 a si peu de registres, nous donnerons \u224\'e0 chaque registre son propre nom et nous nous r\u233\'e9f\u233\'e9rerons \u224\'e0 ce nom plut\u244\'f4t qu'\u224\'e0 son adresse. Les noms des registres x86 sont :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab AX\tab \tab - Le registre accumulateur}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab BX\tab \tab - Le registre de base (adresse de base)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab CX\tab \tab - Le registre compteur}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab DX\tab \tab - Le registre de donn\u233\'e9es}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
A c\u244\'f4t\u233\'e9 de ces registres, qui sont visibles par le programmeur, les processeurs x86 ont aussi un registre nomm\u233\'e9 }{\rtlch \ltrch\i\loch
pointeur d'instruction }{\loch
(instruction pointer) qui contient l'adresse de l'instruction suivante \u224\'e0 ex\u233\'e9cuter. Il y a aussi un registre }{\rtlch \ltrch\i\loch
flag}{\loch
 (qu'en fran\u231\'e7ais on nomme parfois }{\rtlch \ltrch\i\loch
drapeaux}{\loch
). Ce registre peut se souvenir si une valeur \u233\'e9tait plus petite, \u233\'e9gale ou plus grande qu'une autre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les registres font partie de la puce (on dit, dans le jargon, qu'ils sont }{\rtlch \ltrch\i\loch
on-chip}{\loch
) et sont trait\u233\'e9s directement par le CPU, ils sont beaucoup plus rapides que la m\u233\'e9moire. }{\rtlch \ltrch\i\loch
Acc\u233\'e9der \u224\'e0 }{\rtlch \ltrch\lang3084\i\loch
un emplacement}{\rtlch \ltrch\i\loch
 de m\u233\'e9moire demande un ou plusieurs cycles d'horloge}{\loch
. Acc\u232\'e8der \u224\'e0 une donn\u233\'e9e dans le registres ne requiert ordinairement aucun cycle. Par cons\u233\'e9quent, vous devriez essayer de garder les variables dans les registres. Certes, l'\u233\'e9ventail des registres disponibles est tr\u232\'e8s restreint et beaucoup de registres ont des buts sp\u233\'e9ciaux qui limitent leur utilisation comme variables, mais ils restent un excellent endroit pour stocker des donn\u233\'e9es temporaires. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_02}{\*\bkmkend p3_03_02}\rtlch \ltrch\fs23\b\loch
3.3.2\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
u}{\rtlch \ltrch\fs23\lang3084\b\loch
nit\u233\'e9}{\rtlch \ltrch\fs23\b\loch
 logique et arithm\u233\'e9tique }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'unit\u233\'e9 logique et arithm\u233\'e9tique (ULA, ou ALU en anglais) et l'endroit dans le CPU o\u249\'f9 se produit le plus d'action. Par exemple, si vous voulez ajouter la valeur 5 au registre ax, le CPU doit :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\loch\f9\loch
\u8226\'95}{\loch
 Copier la valeur dans l'ULA depuis le registre ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\loch\f9\loch
\u8226\'95}{\loch
 Envoyer la valeur 5 dans l'ULA}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\loch\f9\loch
\u8226\'95}{\loch
 Informer l'ULA d'ajouter ces deux valeurs ensemble}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\loch\f9\loch
\u8226\'95}{\loch
 Retourner le r\u233\'e9sultat au registre ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_03}{\*\bkmkend p3_03_03}\rtlch \ltrch\fs23\b\loch
3.3.3\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
u}{\rtlch \ltrch\fs23\lang3084\b\loch
nit\u233\'e9}{\rtlch \ltrch\fs23\b\loch
 d'Interface des }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
us}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'unit\u233\'e9 d'interface des bus (UIB, ou BIU en anglais) est responsable du contr\u244\'f4le }{\rtlch \ltrch\lang3084\loch
du}{\loch
 bus }{\rtlch \ltrch\lang3084\loch
des adresses}{\loch
 et }{\rtlch \ltrch\lang3084\loch
du bus }{\loch
de}{\rtlch \ltrch\lang3084\loch
s}{\loch
 donn\u233\'e9es quand ils acc\u232\'e8dent \u224\'e0 la m\u233\'e9moire centrale. Si un cache est pr\u233\'e9sent dans la puce du CPU, alors le UIB est \u233\'e9galement responsable de l'acc\u232\'e8s aux donn\u233\'e9es dans le cache. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_04}{\*\bkmkend p3_03_04}\rtlch \ltrch\fs23\b\loch
3.3.4\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
u}{\rtlch \ltrch\fs23\lang3084\b\loch
nit\u233\'e9}{\rtlch \ltrch\fs23\b\loch
 de }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ontr\u244\'f4le et le }{\rtlch \ltrch\fs23\lang3084\b\loch
j}{\rtlch \ltrch\fs23\b\loch
eu }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\lang3084\b\loch
nstructions}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une bonne question \u224\'e0 poser \u224\'e0 ce point serait \u171\'ab Comment un CPU effectue pr\u233\'e9cis\u233\'e9ment les t\u226\'e2ches qui lui sont allou\u233\'e9es ? \u187\'bb Ceci est r\u233\'e9alis\u233\'e9 en lui donnant un ensemble fixe de commandes, ou }{\rtlch \ltrch\i\loch
instructions}{\loch
 permettant son utilisation. Gardez \u224\'e0 l'esprit que les concepteurs de CPU construisent ces processeurs \u224\'e0 l'aide d'un ensemble de portes logiques ; ce sont elles qui permettent de r\u233\'e9aliser ces instructions. Pour garder le nombre de portes logiques dans un ensemble raisonnablement petit (en termes de centaines de milliers), les concepteurs des CPU doivent n\u233\'e9cessairement restreindre le nombre et la complexit\u233\'e9 des commandes que les CPU reconnaissent. Ce petit ensemble de commandes est }{\rtlch \ltrch\i\loch
le jeu d'instructions du CPU}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans une \u233\'e9poque ant\u233\'e9rieure \u224\'e0 celle de Von Neumann, les programmes des syst\u232\'e8mes informatiques \u233\'e9taient souvent }{\rtlch \ltrch\i\loch
c\u226\'e2bl\u233\'e9s \u233\'e9lectriquement dans les circuits}{\loch
. C'est-\u224\'e0-dire, }{\rtlch \ltrch\i\loch
c'\u233\'e9tait l'impl\u233\'e9mentation mat\u233\'e9rielle des ordinateurs qui d\u233\'e9terminait le type de probl\u232\'e8mes que l'ordinateur en question devait r\u233\'e9soudre}{\loch
. Pour modifier un programme, il fallait donc refaire ce "c\u226\'e2blage \u233\'e9lectrique". Une t\u226\'e2che bien ardue. L'\u233\'e9tape successive fut d'impl\u233\'e9menter les syst\u232\'e8mes d'ordinateurs}{\rtlch \ltrch\i\loch
 programmables}{\loch
, qui permettaient \u224\'e0 un programmeur de changer l'impl\u233\'e9mentation mat\u233\'e9rielle d'un programme \u224\'e0 l'aide de fiches et de douilles (sockets, plug wires, en anglais). Un programme d'ordinateur consistait donc en un ensemble matriciel de lignes trous (douilles), chaque rang\u233\'e9e repr\u233\'e9sentant une op\u233\'e9ration pendant l'ex\u233\'e9cution d'un programme. Le programmeur pouvait s\u233\'e9lectionner une des diverses instructions en connectant une fiche dans une douille particuli\u232\'e8re de l'instruction d\u233\'e9sir\u233\'e9e (voir figure 3.16). Certainement, la difficult\u233\'e9 majeure avec ce sch\u232\'e8ma \u233\'e9tait que le nombre d'instructions possibles \u233\'e9tait s\u233\'e9v\u232\'e8rement limit\u233\'e9 au nombre de douilles qu'on pouvait physiquement placer dans chaque ligne. Cependant, les concepteurs de CPU ont rapidement d\u233\'e9couvert qu'avec quelques circuits logiques suppl\u233\'e9mentaire, ils pouvaient r\u233\'e9duire le nombre de douilles requises de }{\rtlch \ltrch\i\loch
n }{\loch
trous pour }{\rtlch \ltrch\i\loch
n}{\loch
 instructions }{\rtlch \ltrch\lang3084\loch
\u224\'e0 log}{\rtlch \ltrch\sub\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
(}{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
) trous pour }{\rtlch \ltrch\lang3084\i\loch
n }{\rtlch \ltrch\lang3084\loch
instructions. Ils r\u233\'e9aliserent ceci en assignant un code num\u233\'e9rique \u224\'e0 chaque instruction, puis en encodant cette instruction selon la disposition d'un nombre binaire, \u224\'e0 l'aide de log}{\rtlch \ltrch\sub\lang3084\loch
2}{\rtlch \ltrch\lang3084\loch
(}{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
) trous (voir figure 3.17). Cette am\u233\'e9lioration n\u233\'e9cessitait huit fonctions logiques pour d\u233\'e9coder les bits A, B et C du le panneau de raccordement, mais cela valait la peine, car il r\u233\'e9duisait le nombre de douilles qu'il fallait r\u233\'e9p\u233\'e9ter pour chaque instruction.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3015\shpbxcolumn\shpbxignore\shpleft0\shpright8325{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw555\pich201\picwgoal8325\pichgoal3015\pngblip
89504e470d0a1a0a0000000d494844520000022b000000c90803000000d56382ba00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000092749444154789ced9d0172ab20108639
8c97e1305cc6c370190ee313d3bc6a10761117ccf6ffa69369ba91cdc0170494c684b000401382597f0060b0b932da58f00dc015c005ae002e700570812b800b
5c015ce00ae002570017b802b8c015c005ae002e700570812b800b5c015ce04a82db1eede077f140e0ca07f6e75e0db89200571266226e7d97b7f13ce0ca0961
fbc946e7e96fea0257127c3cff4c451bc26cdcdfd305ae24d8ad4f298d575655ac9fa973953ae04ac2cb12978d4751caaf500a5c49706eed587cc1959fb1cc9f
db2a035752fc3a6fce9e60fe6f80e8f98e9e015c015ce04a42d896e3a6d16fe379c0958475e43a075f9812cfa6708e520c5c495847b53e146639dbca4a61ecab
16b892b05a107cc995dde39f429f2beb19e26739ed6a012ef62af9f1cad6af84fc49689d46e934499d2b2e7609a1e92ab19f57e1f2e39575e83b1566cdf3bcbe
0195a7287daebc7f2ed3581bafec1a6f69d0e78a6ffd58375e15b4cdb23e1575ae2cf3d438a375c57559138875dbd9ada2a8bcb0a8cf95e17867268daae873a5
7ce30907ea7edb625cf3e52275aeb4deb546dd6ffb8e670724f3b654a7b16351e7ca1257d26ccb34846a6622ae77a94ea12bab2aed27a2ebe8dd32a2ce95799a
e6e2aa2d3da2986d61704a1ebe4d81f2f3a02f1ed0e873855ede274614add706bd2ddfb8bda50fd7ca1fda52ea5c61408c28a801476bbfd032a019ba7b409f2b
736992b2418c281ce7739feb96c8a5bab67eabbc4e288c3a57182d511c5170c7130d139dd5e6af5cacd3e7caee310735a2e090ed961803a606e6699c67fa5ca1
fa95e689c8ebe8ac6be444cc37a49f63d1a32e36a97325c453ba2b3616310f6a9fd37a5bfaec4f0d1dcfd0c51b75ae30609da65a3ebbe585e3a6fb259a4b68e0
efba427c38f3ed419c43c80b5273c350c96dc372b8720f8cd100b1b2fa22af12b17388bcbe503cc7514dd17c774e03ea5ce1ec012bcf8388b1eb521e0c3542cc
cf5ea9072dc8a97345b425378a3d17632dee45e66d128b6d53dc9032e11c740f8c7350e326d4d6ddab7e2add1f43309b79d8457475ae305ad286b809357bd60f
73142edf3d155b99b17ab3a5cfee2f222e51f86992ef3933a87385d13fc74da8858d856b5baca395bc11c43c86bc2fae987e2e4f74dc2a9a1f35b855e70a6346
ba8e1f436163a15b6285e49db3e58e835c0229a627e6f39e2a5c1275ae708696737163a15d5ccb66307af5a694fec97760aa73a51d3fd9f80de7570f67adde64
714d47cb02576ea7ed2af6c8c53602b802b8c015c005ae002e700570812b800b5c015ce00ae002570017b802b8a87485b824744758b6f4cbc945d1e78af98508
5371d1b040e9d2a873c5986283dc19962dbd3ab938da5c31e51abd372c5b7a65727994b9f25b8da735bafb5b216c32e1b4f40725ef802e570e9598d6e8f12f44
5c347c7be93d50e84af6e91d61937b3a38790f54b95259ff4bf9e5b28d7f6ff22e0c72e533e3eef6d4b8e522de5676611b4e527f271fc68af09236576db857f2
2e3cc495ddf39ffd10f6c29b623457e1007957e49277619c2b7676d62fdec62d2fb3718b73f16d7867d65fdc32f93b5c49dbe37ab8da959ec9bb30ce15139630
c5334d3ce3c4e7fe1d7afd5f3fb802575e695f2e98c5be765c9a5f376cfcb6c105aec09577dab72bf15f76f9bd2b6ba7e26f73251d32606c7b9de1aec4bd5b3b
57e2de6e63dd72d995a43d8870a13d4ec2861fee9abc0ba35d898f7b57e2bffc9cde2fa92eb5ad75cfc2b22fbfadb42e8c76255817472cd6beddb0efc5962b6f
ea58c39ff5dd18669d544625ef81aa75db431d9bb4be0f4d900d1b7e385b7affe41d50e9ca0e225e77785b5836790794b9f259a344988a8b866f2e5d1e6dae1c
ab54342c5bfa85e4d2e87365a1aaf39e70263e34b9300a5d0142c015c005ae002e700570812b800b5c015ce00ae0a2d115d1250eea62ccd0e4b2e873a562f1b3
3edc6f61f6427269b4b9628e10f1dac3dbc2b2c9e551e68af98488d71dde16c675e667b1abc5b31addfd8d088bddbf2295bc03ba5c39d66152a36d61dc17a7cf
95ecd37bc3b2a5d726ef812a574e3f8c44d8e45edddaba5d9377e121fb9993bdefc1b9faeff54bea8fe8b8a97ebddc9a9c70afe45d78882bbbe7afbdefab28a1
fadbb918cd553840de15b9e45d78eadef7794985a24ba5dbe37ab8da959ec9bbf0dcbdef4ba8feca41b822cae8bd64f9bdefcb24315e291c807310c16857f27b
df6dfd7706329a0b63dbeb0c7725b7f7dd5ef882c8d3f620c285f638091b7e1873e6bbd2be5d898f677bdfaf7ded6c5beb56368f68e9b5c97b30da95dcdef7b5
6f71f5df686d0e5578fe5136e7cf92033261c30bf74ede0355ebb6ef4a341fbfde1b36c75f1f92bc033a5df98588d71dde16964dde0165ae7c56a96858b6f4ea
e4e2a8736521eab32dbcf0c3fd934ba3cf95f3d33d3fdc78f8d0e4b2687405c800570017b802b8c015c005ae002e700570812b808b465788f52a6a39eb96f098
e4b2e87365e8d2e9d0e4d26873c51c21e2b587b7856593cba3cc15f30911af3bbc2d8cebcccf62578d67357a5b58b6f42bc93ba0cb95631d26157a12bef1d6b4
a1c97ba0d095ecd37bc3b2a5d726ef812a574e3f8c44d8e45edddaba5d9377e121fb99d3ef7dc7def79ae45d78882bbbe73f7bdf3df6bec395575a6aefbb5f52
a1e852e9f6b81eae76a567f22e3c78efbbafde4e06574419bd972cbff7dd1aec7d6727efc26857f27bdfd7d35175a97473616c7b9de1ae64f6be87e5e2782569
0f225c688f93b0e1873167be2beddb95f878b2f73d4ccb85795063eb56368f68e9b5c97b30da95dcde776f2facafbc6ad01c9e11e1fc67391336bc70efe43d50
b56efbae44f3f1ebfd61d9d2af24ef804e577e21e27587b78565937740992b9f354ac46b0f6f0bcb2697479b2bc72abd3dbcf0c3fd934ba3cf15f2744e5437d5
1ab7848592cba2d11520035c015ce00ae002570017b802b8c015c005ae002e4f70a5fe1a2118c1135c41b7f61d3cc115f01dc015c005ae002e700570812b800b
5c015ce00ae002570017b802b8c015c005ae002e700570812b80cb135cc13d09dfc1135c41b7f61d3cc115f01dc015c005ae002e700570812b800b5c015ce00a
e002570017b802b8c015c005ae002e70057079822bb8cefc1d3cc115746bdfc1135c01df015c015ce00ae002570017b802b8c015c005ae002e700570812b800b
5c015ce00ae002570097972b003088ae8c16167c0521fc0393d764ae59df2f1a0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.16 Programmation par un panneau de raccordement}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2580\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich172\picwgoal8310\pichgoal2580\pngblip
89504e470d0a1a0a0000000d494844520000022a000000ac08030000006298776d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000a1049444154789ced9d8b99a320144629
c6662c8666288666288695870a191e170d4ad8ff7cb39b519c68e404910bc29406a08e520c000a9b2a8abded2bf801a00a2002550011a8028840154004aa0022
500510812a8008540144a00a2002550011a8028840154004aa0022500510812a8008540144a6514571be887c32e39cafb2f0f72bfffa2139d4ca57e10e6091c5
5d7d66c39ad866fdbbd953cca28a5ab6ff64eae43acc4754f9e4cdb4e5ebc7e4ded8ec547077008bdb55e67c7fae4e6db6ad7bab2bf42caa70fb85cd172becf8
2f8d90a254e65c87db9c15c1016477b5a532618b1eb915814ab04d30c1ec1f997f7c5da55d678b505332ada25c527e975954a97d04fba52e5da0fc57feebb0e0
d5ed22bb2ba38ad42637b61f29fdf2ae8a1026c9256e5f0c692e6aaad751270fef7f5165fb9e16ceaadcbea44b9792fd50653b00c68bbb6287168b2d8bce65bb
4e999a0a0b57335dffe0df6316556a5f2ef31165bee6ca17ce59a1d0b94e58aa983a4b615767e66fd519263f5461c13650e506aeae922f182a75955a55e63aae
aeb29f6356da5594f972812a7d90943ba06cd1e3ca9b2e554419dc0199db2129b2bb8a1d3854d9fc97ae7ea2c3ba0a872a1791aef922876d57c996392ee70aa6
dd402e47bbcaba1531855d9daa6c1f66db94afeebab97273e1d2b661c8adf3774050050c09540144a00a2002550011a802884095deb89b15c96dcb8f5bf84da0
4a67a4b43fdc3586d89f1f05aa7466b5ff4c9bade27e21870d2bdbc8b26b37316dcf4268b1f22e218756a04a675c33996fcd2fb799d930b23a23c7a6617751a6
40ead441a20da8d2991655f4478c67313f2ee6f0c091d6802a9db9a3caaab682c5440472fde61e651e55fc63102be957932fd35257d11faa48b9aa6af78ac798
4595e09999f792bf7d2e447807248a7740a72a3e72ac4d6facad625bea69f31c73a8f2f180d54a7a6bf23de8ed2aa72a3e72ac6dac5cf06ea3099a9842953f0f
e3ada4b72503c74caae84c85e54f32cb2457eb3bff3533a812e5efdfcc6e49ee56bb9d800954f9c8dd3f99fdb1dc980c76665125bfdcaa0654c9f0a42a9fbb59
e3dfd7d43694b74d553e2ac92cb3945a7193e80e88fa0159c3b64ff1a62ae1f26a1b1cd4fa8a2a95f7bb451459267f40a8921c93abcd30aa85b3556a261f5045
3faa4ad45a5bf980ee610d82737356dcff03f1b42a8931b9866d89efdb34bfedd0aa4431205dfc80429aa14a269ebc09651a76ff6f55dc4b3426d720d4f53277
1e556cb2afb2b1f2b62ff08e2ad1985c03df2bb9d3556b1b54d14a0a6210fa0dde51458763723738e3eb626f112eaa72fd6eb8b72a715da55caa70b96585df6a
296ffb02efa8625e4255b6b3285bee25e3b725a872a39de526516459173fa0296e59505719acbdeb1d55a231b9dad56ad5be4dfbfb12ae282cbd544fbe0dbd5d
452e5caccaf6a5b577404374683a99a0b5360af2b1445ed39311022a30832ab54e0895647442a031852ab5ae4d6dc93f7f363a31872aba96d5f7928161125582
dcbe949ceef40442a65105f406aaf466ef79cdc2853a3e4f320f4f7f03a8d2193fa2ddf53e6818decea29754d2d34095cef85162aef74179c898ed9a713468db
02c874d4304d71c23df4d03c3bddae7b03a8d29923eac5c285dca6ae6b86ef9e619f8dee7ee3f6a194db8b62285566a54195a36bc61e0259f7df844b3005cbaa
a0caa434a87274cd8803abf60fcefe0928556e53691879ab5de5a89ed4eb2a7aef9a7106dff752854ba5a0ca7718b6b5f618d1cec28524ce0eff9c74a68eba8a
4b711d134c3254b9415b90a7f2e75f3e367abb8aeb9ae19f93cefcec50b6a3865c3837b308b87edaeb3b0d2b53a8c23e694a46b890c60caa84399cca6d5232cb
2503cf34aa64967464ca9fa57a32d899409564dee7971b93c1cefcaa244b994af26f9f904e0c35bcdd3cd7aa7daec964e5a3925cbb5e351f449ee80ea8ad5184
c55370bf2cf050c3dbf9a5c960efab5279bf5b4491e5c6f1fbae4545058b6f32d4f0763712b3f96d1b55796378fb3eaebd38bcfd7c70fad162eba6e06662b573
dad9209078eb29eaa30d6f57edcd4b63ab12c58074f1ab703e383d0a0019556c432ff38f52ffdec13531daf0f6fc5494f9b71dfa02d4a28a0e1bf24355b4fd0e
d9df1f9caefdf3f0c61ade5e9ad434fbb643576bbfa58a7bd92edbafcdcc30d6f0f64bb3998c7db31c4596f50d55ecf992e2bde7a80f35bc5d5cea095851e5e5
26b828b2ac89aaecd1e55d15e9eb2a5bca7b73780c35bc9dad97266c6361f6b27431c1a2a54af257cf07bd5de554658f2efbc8f2766be4ee80f6c729bcc204ad
b561b7a4e0d73fe91fbf52930780257f7dfc28265065fa4e08c711c9f5c5e9c6a650e56edfa5c14d198439548972bb929c4a8729046651a55acfb8970c665205
7406aa74c7369a51676f0f5ab0eb77d7cf02557ae3c6b553676f6767a70375ac1903a8d299c5763b20cd88ea1fabcffcb4edec5833c6fced50a53b41c0f00c81
a5f08fd5dffb1ab07dcd20f3b74395ee905509624041888c8d327f3b54e9ce0555dcb4edfb9a41e66f9f47155ac3492ebd63031cb9aee21fabcffcb4ed6c5f33
c8fcedb3a832706b6d7007541ede2e8edea476da76b6af1964fef63954a9c4802ac99d6340f60d49ed2aee3a6355d9fb1cd83563ccdf3e852aec93a6e4f123cb
6330832a610ea7723b5877211978e65125b590584349fef1f3d1890954f9ccdcca726332d8995f9564315249feed13d289a186b7eb1987b74791e5b6e8df58c6
8e35bc5dce37bc3d8a2cb70f6f1f88a186b75f9b12b5559567c72c479165d2ecedabb02f98bdbd36bcbdbdad696c55a218902e7e15dceced6684fbf682d9dbdd
4b76783b67edc1f6c12f400daae8e01cb1f2b62f30d8f0f62b835147afd69255714f47872a3a544567676fbf707e46bf590eeb2ae552c5cedeeecf11666f3f5f
12c3dbcd95ba3d845a51e5f526b8f00ea898fd4ceb5315ccdeee5e72b3b79bf517de37cc5e962e2658b45449febe2a2db3b7fb73344477a690095a6b112e7c86
195441278447984295b1bb36cdc21caa44b95d494ea5c31402b3a852ad67d092a738139d98479561f10150d71a7de50e6f10a04a6fc227a6374cc93d1e50a533
4bf8c4f4f23820e5ca9cd1da5376a04a77d8f9520eec703f0bf7a0e50e54e90e599520ea312250a53b500510095429d755a04a86b7e62a799c4095f298655357
e15025b1e73776fa06812ae576157f0734ea89c1050810812a8008540144a00a2002550011a802884095ee849d10c6bd15ae03557a134ddbde36bc7d2ca04a67
a24e08c5e1ed261bccb32046ed8a0055bac3522f29b894ebc05d11a04a77c8aa68c6d4c04143a8d21dba2a7c1fa80c55fe4fc8aa283bc21faafce17fec84a08b
0a2cd2d76cc7ec8a804e08dda1aa62a7fde1e37645c0050810812a8008540144a00a2002550011a8028840154004aa0022500510812a8008540144a00a2082c8
322082c83220820b102002550011a8028840154004aa0022500510812a8008540144a00a2002550011a80288401540c4a802000553aabced2bf809a00a20a2d4
3f112756d7e14957120000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.17 Codage des instructions}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4185\shpbxcolumn\shpbxignore\shpleft0\shpright8280{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw552\pich279\picwgoal8280\pichgoal4185\pngblip
89504e470d0a1a0a0000000d4948445200000228000001170803000000b0174f5200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000fb249444154789ced9d8995ac20104509
c6640c866408866408c61170c38d6251ace977cfffd3d3621736be41a028106600208e00808411adb50a1800a10012100a2001a10012100a2001a10012100a20
01a10012100a2001a10012100a2001a10012100a2001a10012100a20c1592846ca4e5d270b2965af6f3edfcbf26b709928ffcbddc564307ebd5e9af5b52d8c85
62baf187ee2fd3edf732d7c9e30de8ca2fc2159e95a3fd45dec93299ce89647d6d0b63a1f8db72fd572c961fe728adca6facb36f6f634c9699a6f5fada16c642
895db7bb75778f265f27d5b8081197653aaad366fbda96ff2c94f1d97ea3043dd5ea352ee211a18c8f55e1da26f36b53180b25561dd8efa5af9fedb293521437
3f9f14ca8892e16b3b180bc5b751ae2b85c8adab7367c3364ad5dbd94df6e7d7b630168aa6f47a2eab1d5fd7dc769f293cd8ebb1d6acf4e6d7b63016ca28123f
8471811be2b8ac6fbc446e7446c366d24de328771793837d389acd6b53380b05bc08840248402880048402484028800484024840288004840248402880048402
4840288004840248b016cab40a5d6e7aece3f9397fd272198c85b25db1303d798824e767fc49cbc5f0154ab8b6655972521170b45c0e5ba188fb624b4c4e2803
8e962bc055289bb23a2bb6b2e4e7326e63b9064c851296d4a1dc22c94324393fe34f5aae0267a15cbecd4926960247cb55e02994d33fb7ebb7893721963337cb
557858287bdb7df8bb7b9b11ae775f2fc7920ff7e4782033e34f5aaec3cb42d9beef076d67c2f719f91f0be920944872c1ede466b90e2f08a55776f5096d6327
94b0712ad21e955d27c578bcd34d8412b3f748c66d2cd7e105a10863e3b0c6dfc60ac4bdf76152e33bb99c936a1642f98f4271ff3b17c334bf1f51660ddc4d36
8b47cfbf158a9142e8ad50e4dcb4ad21149154aa65b7939be53abc2694c1050baf429142f69d0bd6cd14caa18b70fd964527f639cb55784d28f6e7562846fa4e
4f96507246a722c909b7939be52abc2614dddb486bd9cfc2b06d59b39c936c3728a743a945928748727ec69fb45c059e23b3734989ddaf19c9a7e95532fe8ee5
1a3017ca4a5a7aece3f9397fd27205b80a655f6e65c94945c0d172397c8532440aad2cf9b98cdb582e86b150d6827b24f9b98cdb582e84b550c07b4028800484
02484028800484024840288004840248b0164a9d7194dc690ecc2c17c2582865c39822925e27e3cf582e86ad5084b82fb6487aece3f9397fd272395c8522f6a4
a5c73e9e9ff3272d5780b75036bfc6266f449273668db0b15c03a642090bea506c91e4ddbcc29442e768b90a9c8572f9363139a5d4395aae024fa19cfeb94592
c5d5d92985ced1721d9a07a9cb3e639bf04321c5eae594e458c6dc2cd7a17590ba8decb9d94af4caeca1900ea51a492eb89ddc2cd7a17590ba9acf4a335b2c94
98bd47326e63b90e1f08526f52a3c4ec3d92711bcb75f84090ba11e56d143c7a9ea67d90ba16e9bb051f8a4ddc97eaee40d9ede466b90ecd83d4557a7d12ed1e
c7fa92fb8f1fff5c6f73e666b90aad83d43377a84e2b454a72c2ede466b90aad83d4c57858a6ef271f96d3a1d422c9e191b432e768b9063c4766e79212eb6fc7
0778989e924cc89895e51a7015ca526ea73a494e4e28038e962bc0562843a4d0ca929fcbb88de572f80a6588155a24bda0cc395a2e85b15086689bae2cf9b98c
db582e83b750c06b40288004840248402880048402484028800484024870160a79c02df2f1da197fd272297c8522b6a4a7c73e9e9ff3272d17c3562862475af2
3ebd5ec69fb45c01ae42d917ea854ffeaa5823c9f9197fd2720d980a2528aa4ba19c9c4b4a8ee7cccb720d380b257c773dc3ed7c5ae1757234636696abc05328
a7a518799f707a62ce5fb75c85ff2194b31ae6e6fc48727ec69fb45c87f641ea323d46fd506a31a10c29c9b18cb959aec30782d44d976ef6504887528d2417dc
4e6e96ebd03a483d6f9bd272a1c4ec3d92711bcb75f84090bac90bebb939c2f1ef1e354a2c485d66c61e1f0ea08df224ed83d447c9642d7b51b1d753703b1958
ae43f320f56139926276574a89ef63a7e7e7fc49cb55681da46ebb3ce90be92496e269f25db55e96f1d72c57a17590ba3b9e61775b6ee2586ac7e463b52ecede
1073e665b9063c4766979214cb2f6742d9a6473e9e9c3127cb35e02a94b558cf4bad2cf9b98cdb58ae005ba10c91528b156a7e9973b45c0e5fa16ccbed81e4e7
326e63b914ce4219a2830965c9cf65dcc67211cc8502de024201242014400242012420144002420124201440e255a164ac7a0f3ec2ab4241ddc5173c7a000908
0590805000090805908050000908059080500009080590805000090805908050000908059080f71890e0eb3d36bdec95352aa55dd169a4bf0a62dee77bb67b7b
0fe7f62d6c1f3dc6de6dbbb28a98df1879b518dc2138f3fc1c547837b0158a5f4b524d77ddfe505a5dacdd249685e4c65ac80c762539bb90dcb4d482ecc7147b
4cb8352aad4925bbf465a0fe376c8522b6bf18f70cba5c5f723cc52f24d7b9e536dc7bbdacc721075b04ee9f558952369169a93cc73f10cad844b102b1cbf174
e74f0f318ba2f7f5d0f2de1d1b0ff5c61f73a2db2ef70366fe8150062f12d98d8f137575aebff77e21b950286273cef41883508eb015ca543798a58db2b4558e
ac42710bc94584821ae50cb642d141afa79b1682eb4fdba0622b8a40285a0cb605dc99b08d3240287bd80a65ac1a36e3286692883e1b22d9d4286e21b9a1effd
03ab97caf574ec67fd31e96c422847f80a05bc0a8402484028800484024840288004df6906d2af78ed5fb4948d9d33b6f3d52dbdb0f381bf09339e603b5ff36b
d4ece1ab2db7ecb493f7086ca71968eddc36fec58dccb6558afb6ebddefc724967fc2645f36bccecd18565b6c9efc0f6d1d30ff3ae84e37f795be4ce19ac7afb
87e9bcc34af9c29739abf05f66627f987956cbe662bc437adaf76c3d55afaf51b3ce37debbd1403ff423367e709f20d4c3b791ad50a641b1cd30fce5f770ee1d
3bfe3a8dbc5a91286dffe9db4744f2f5acae84f562941fec1d36db57a94e9bed6bccecbc0389d2f67aa5cb63f183fb84216377ac347e4228c3f63c3bdbc0d882
eeee3e93753d6742e982c31edd8b6967114169a3d873bc83a25f8c2d7e709ff0fc33e8f7843258f78e7b46c8cde3a0caf5ec8522e6d2f587eddbf9f479d7b3d8
ee67c2d7475e306235b6f8c17d028472494a1b650884d28d4d09ad6f8495c5d234d9b55102e7b667ae64ba25fdde6ca7a77387b54659fce0dd269b27612b14e5
7b3d8ad0eb598532798787aef7164cbdeee555afc7b551647027ed951ab9bec6cc5a4558335ada368a5a264438a1f80408e51afa38ca2a94c93b3c39999dd7b9
16cbf0c97e1c4549171db02d653bc7ca6c5eefccda1fb64af1665437f57a563fb84f8050c006db4baa580ba600a170c24c7da00640288004840248402880045f
a104bd9e79a02186085e001db64209bcc7633f91f62d20945cd80a2518991d3a7df72da4f31c8f958f1d8350fe05a4c1562881af67b8ad24c62a6772188f72b2
839bb7aa02a7fc825094d99cda474e06e7fc825006a315d1d10cae602b94b08d725fa3486dc43cff44464e06e7b0154ae03d1e6eeffd9864bfa472ab9ea08d92
075ba1ecc751ee1ab3bd54d64fec272a4dd34e411a7c85025e054201242014400242012420144002420124f80a25985f400f529fbeedc52ae795d975e14bb033
a88d8b0bba8d6b7e0cb64209e6172404a9df4c34a85e10bba9102518b9046e540c984e80ad5082f905f701603ea07b760e29fbe7ed56345f57fa73cb9cdb638f
5ce3e26628605abf5daaabd5b99f86ad50026fe0bda7cf0774cf42f1a1e9fe3737acefc3abcc0361997bc7659129af1071b138f7e3fc82507c407778d7a6dffc
1afa6ea5920702bdeb096559bffd720791a7f905a1f880ee53a16c66203cd046a9279479fd76ddc97a2b7524c15628c1fc82fb368a0fe83eaf51fc0c84878452
af8d32ff25d825dd1100964430bf201ea4ee1645d1611b6558662048bdcc697ae01a5571afc72ff8d36ba97ccfa7016c8512ce2fb81d47f101dd76b2819c7b3d
6337675a28609e8130767e64f581945ae328d3faedc2c7d63779f8f0150a78150805908050000908059080500009be42d945a7a7741a45b81ff673059016417f
cdb4d039bcc719eca2d38941ea1e3f88f2fc3ae18911f4d7d8cfbb6589e13d4e268c4ebf0d525f97385f8665a7fdb07bf727ef97567c606d3452043d85c54501
ef71327b17cf9d509625ce83f1fb659856ccf1614f5f639121788ff34811caf2ff2094f9686f8adb11846bcc372465ef67cbc07b9c4a15a174f351ad9e5895b3
6a8de21a27f01e27b38f4e2fab51c676cc037d094a043d89c5bb0def7132fbe8749250660ff2f2cff8364a858e09e51ab3719f1feb3c788f33d845a79384327b
9067efb17725cf13151ebfc66cdcb2e9d268788f1bb17ef5279e3cff0a08c5625a3511f9f0db4201642014400242012420144082b350dc8513775217876905ef
7cedcd359660fc36edd356962d86dcf80ac5f8f074e24eeadb6905663ef238db6b2cb26307d9ec288a6ab6653c5fa108e7bca7ec523a2d822fe62dd4c57ca4ee
5eea916b2cc16bc376e13badb1555c2aa10fe7ba8af08be00f625e115fcc47eaeea51eb9c6522b1ed36a9ec12f08657505fa2dd417e760ddbdd423d7586a65a2
6b53a1fc9850a62dd4972355f7528f5c6309ab1f50cbae8db381bb50286d94a9e2b0edd9690bf5f5c87bd758826fa38cf5a111d30cebd7e12e14ca4eea7e117c
77baabb8c57ca4ee5eea916b2c41cfbd1eb7557693870f77a190c651fc13c6f554bd50a62375f7528f5d630976753135cfc06ff2f0e12c14f022100a2001a100
12100a2001a100129c8512f42892e6a6bff7957d4ec513e705bcc7d9849ed9b4708bb7beb2bfc60ab120ae2fafe13dce21f0cc52765277b1eaefeea4eeafb13c
48dd09c58d0dc27b9c41e047b9f916d34eeaa2c52ea59526492d5f11dee30ca84269b9937a6da1c07b9c0155282d7752af2d14788f33083cb37735caba8ef9eb
3ba957148a715b3bc17b9c4ee099bdf916621856a1f06da3d8de0ebcc73904e328778d59bf93faf4947a7727f55a4291f01e0316402880048402484028800484
02487016cac6334bdf201be4c157285bcf6cc206d9200fbe42d97a66a3b1c776e92df1e2f0c9ff83af50b68359f70e1cab12a5dc2ae720975f108a7394742f3a
78fe23bf2294e181dd6a7f8aff2194fb368a9fc701a114f13f8472dfeb99db286f5dd7bfe47f08251a7bdcab3727a1fc47380b05bc0884024840288004840248
402880048402487016ca669a41853870700b5fa18401e08fec090856f80a250800bf8d03b7e3b69dc1648322f80a65173373f72d7aad24261b94f11342319dc0
6483427e42284337bb7a30d920979f108a969dc16483327e4228c2e80e930dcaf805a15889488dc9064570160a78110805908050000908059080500009080590
8050000908059080500009080590805000090805908050000901008d36fb04016efc01f287b0c220b6eca30000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.18 Codage des instructions avec des champs de source et de destination }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Naturellement, certaines instructions du CPU ne se suffisent pas \u224\'e0 elles-m\u234\'eames. Par exemple l'instruction }{\rtlch \ltrch\i\loch
move}{\loch
 est une commande qui transporte des donn\u233\'e9es d'un emplacement de l'ordinateur \u224\'e0 un autre (par exemple, d'un registre \u224\'e0 un autre). Par cons\u233\'e9quent, l'instruction }{\rtlch \ltrch\i\loch
move}{\loch
 demande deux op\u233\'e9randes : une op\u233\'e9rande de }{\rtlch \ltrch\i\loch
source}{\loch
 et une op\u233\'e9rande de }{\rtlch \ltrch\i\loch
destination}{\loch
. Les concepteurs de CPU encodent normalement les op\u233\'e9randes de source et de destination comment faisant partie d'une instruction machine, certaines douilles correspondraient aux op\u233\'e9randes de source et certaines autres aux op\u233\'e9randes de destination. La figure 3.17 montre une combinaison possible pour traiter ceci. L'instruction }{\rtlch \ltrch\i\loch
move}{\loch
 transporterait les donn\u233\'e9es de registre de source au registre de destination, l'instruction }{\rtlch \ltrch\i\loch
add}{\loch
 ajouterait la valeur du registre de source \u224\'e0 la valeur du registre de destination, etc. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un des principaux progr\u232\'e8s fournis par les machines VNA dans la conception des ordinateurs fut le concept de }{\rtlch \ltrch\i\loch
programme stock\u233\'e9}{\loch
. Un gros probl\u232\'e8me avec la m\u233\'e9thode des douilles \u233\'e9tait que le nombre des \u233\'e9tapes d'un programme (instructions machine) \u233\'e9tait limit\u233\'e9 au nombre de lignes de trous disponibles dans la machine. John Von Naumann et d'autres ont identifi\u233\'e9 une relation entre les douilles du panneau \u233\'e9lectrique et les bits dans la m\u233\'e9moire ; ils ont imagin\u233\'e9 pouvoir stocker les \u233\'e9quivalents binaires d'un programme machine dans une m\u233\'e9moire principale et de pouvoir les charger depuis celle-ci dans un registre sp\u233\'e9cial de d\u233\'e9codage (}{\rtlch \ltrch\i\loch
decoding register}{\loch
), connect\u233\'e9 directement \u224\'e0 l'instruction en train de d\u233\'e9coder les circuits dans le CPU. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'id\u233\'e9e pouvait \u234\'eatre r\u233\'e9alis\u233\'e9e en ajoutant encore un circuit suppl\u233\'e9mentaire au CPU. Ce circuit, l'}{\rtlch \ltrch\i\loch
unit\u233\'e9 de contr\u244\'f4le}{\loch
 (UC, ou CU en anglais), charge depuis la m\u233\'e9moire les codes des instructions (\u233\'e9galement connus comme }{\rtlch \ltrch\i\loch
codes d'op\u233\'e9ration }{\loch
ou }{\rtlch \ltrch\i\loch
opcodes}{\loch
) et les transporte dans le registre qui les d\u233\'e9code. L'unit\u233\'e9 de contr\u244\'f4le contient un registre sp\u233\'e9cial, le }{\rtlch \ltrch\i\loch
pointeur d'instruction }{\loch
qui contient l'adresse d'une instruction ex\u233\'e9cutable. L'unit\u233\'e9 de contr\u244\'f4le charge le code de l'instruction de la m\u233\'e9moire et le place dans le registre de d\u233\'e9codage pour l'ex\u233\'e9cution. Apr\u232\'e8s avoir ex\u233\'e9cut\u233\'e9 l'instruction, l'unit\u233\'e9 de contr\u244\'f4le incr\u233\'e9mente le pointeur d'instruction,}{\rtlch \ltrch\lang3084\loch
 il cherche}{\loch
 dans la m\u233\'e9moire la prochaine instruction \u224\'e0 ex\u233\'e9cuter et ainsi de suite.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En concevant un jeu d'instructions, les concepteurs du CPU choisissent g\u233\'e9n\u233\'e9ralement des opcodes qui ont une longueur multiple de }{\rtlch \ltrch\i\loch
huit bits}{\loch
 de sorte que le CPU }{\rtlch \ltrch\i\loch
puisse facilement retrouver des instructions compl\u232\'e8tes en m\u233\'e9moire}{\loch
. Le but de ces concepteurs est d'assigner un nombre appropri\u233\'e9 de bits au champ d'une classe d'instructions (move, add, substract, etc.) et aux champs d'op\u233\'e9randes. Le fait de choisir plus de bits pour les champs d'instructions permet d'avoir plus de commandes, le fait de choisir des bits additionnels pour les champs d'op\u233\'e9randes permet d'avoir un plus grand nombre d'op\u233\'e9randes (par exemple, emplacement de m\u233\'e9moire ou registres). Il y a des complications suppl\u233\'e9mentaires. Certaines instructions n'ont qu'une op\u233\'e9rande ou m\u234\'eame, n'en ont aucune. Au lieu de gaspiller les bits associ\u233\'e9s \u224\'e0 ces champs, les concepteurs des CPU les r\u233\'e9utilisent souvent pour encoder des opcodes additionnels, encore une fois avec davantage de circuits. La famille Intel 80x86 profite totalement de ce fait en utilisant des instructions de un \u224\'e0 dix octets de long. Etant donn\u233\'e9 qu'\u224\'e0 ce stade, un tel degr\u233\'e9 de sophistication serait trop complexe, notre attention se basera d'abord sur les CPU x86 qui font usage d'un sch\u233\'e9ma d'encodage diff\u233\'e9rent - et beaucoup plus simple. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_05}{\*\bkmkend p3_03_05}\rtlch \ltrch\fs23\b\loch
3.3.5\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
j}{\rtlch \ltrch\fs23\b\loch
eu }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\lang3084\b\loch
nstructions}{\rtlch \ltrch\fs23\b\loch
 x86}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le CPU x86 fournit vingt sortes (ou classes) d'instructions de base. Sept de ces fonctions ont deux op\u233\'e9randes, huit en ont une et cinq n'en ont aucune. Les instructions sont }{\rtlch \ltrch\i\loch
mov}{\loch
 (deux versions), }{\rtlch \ltrch\i\loch
add}{\loch
, }{\rtlch \ltrch\i\loch
sub}{\loch
, }{\rtlch \ltrch\i\loch
cmp}{\loch
, }{\rtlch \ltrch\i\loch
and}{\loch
, }{\rtlch \ltrch\i\loch
or}{\loch
, }{\rtlch \ltrch\i\loch
not}{\loch
, }{\rtlch \ltrch\i\loch
je}{\loch
, }{\rtlch \ltrch\i\loch
jne}{\loch
, }{\rtlch \ltrch\i\loch
jb}{\loch
, }{\rtlch \ltrch\i\loch
jbe}{\loch
, }{\rtlch \ltrch\i\loch
ja}{\loch
, }{\rtlch \ltrch\i\loch
jae}{\loch
, }{\rtlch \ltrch\i\loch
jmp}{\loch
, }{\rtlch \ltrch\i\loch
brk}{\loch
, }{\rtlch \ltrch\i\loch
iret}{\loch
, }{\rtlch \ltrch\i\loch
halt}{\loch
, }{\rtlch \ltrch\i\loch
get}{\loch
 et }{\rtlch \ltrch\i\loch
put}{\loch
. Le paragraphe suivant d\u233\'e9crit }{\rtlch \ltrch\lang3084\loch
le fonctionnement de chaque instruction}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 est constitu\u233\'e9e en fait de deux classes d}{\rtlch \ltrch\lang3084\loch
'}{\loch
instructions fusionn\u233\'e9es dans une seule. Les deux versions de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 prennent les deux formes suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab m\u233\'e9moire, reg}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
reg}{\loch
 est n'importe lequel des registres ax, bx, cx ou dx ; }{\rtlch \ltrch\i\loch
constante}{\loch
 est une constante num\u233\'e9rique (en notation hexad\u233\'e9cimale), et }{\rtlch \ltrch\i\loch
m\u233\'e9moire}{\loch
 est une op\u233\'e9rande sp\u233\'e9cifiant une adresse de m\u233\'e9moire. La section sivante d\u233\'e9crit les formes possibles qu'une op\u233\'e9rande de m\u233\'e9moire peut prendre. L'op\u233\'e9rande "reg/m\u233\'e9moire/constante" indique que cette op\u233\'e9rande sp\u233\'e9cifique peut \u234\'eatre un registre, une emplacement de m\u233\'e9moire ou une constante. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les }{\rtlch \ltrch\i\loch
instructions arithm\u233\'e9tiques et logiques}{\loch
 prennent les formes suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab add\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab sub\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab cmp\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab and\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab or\tab reg, reg/m\u233\'e9moire/constante}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1134\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab not\tab reg, reg/m\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch \ltrch\i\loch
add}{\loch
 ajoute la valeur de la seconde op\u233\'e9rande \u224\'e0 la premi\u232\'e8re (qui doit \u234\'eatre un registre) et laisse le r\u233\'e9sultat dans la premi\u232\'e8re op\u233\'e9rande. L'instruction }{\rtlch \ltrch\i\loch
sub}{\loch
 soustrait la valeur de la seconde op\u233\'e9rande de la premi\u232\'e8re et laisse le r\u233\'e9sultat dans la premi\u232\'e8re. L'instruction }{\rtlch \ltrch\i\loch
cmp}{\loch
 compare les valeurs des deux op\u233\'e9randes et enregistre le r\u233\'e9sultat afin qu'il puisse \u234\'eatre utilis\u233\'e9 avec l'une des instructions de branchement (qui seront d\u233\'e9crites sous peu). Les instructions }{\rtlch \ltrch\i\loch
and}{\loch
 et }{\rtlch \ltrch\i\loch
or}{\loch
 permettent d'effectuer des op\u233\'e9rations logiques de type AND et OR entre les deux op\u233\'e9randes et laissent le r\u233\'e9sultat dans la premi\u232\'e8re op\u233\'e9rande. L'instruction }{\rtlch \ltrch\i\loch
not}{\loch
 permet d'inverser les bits d'une op\u233\'e9rande de m\u233\'e9moire ou de registre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de }{\rtlch \ltrch\i\loch
branchement (control transfer) }{\loch
permettent d'interrompre l'ex\u233\'e9cution s\u233\'e9quentielle des instructions dans la m\u233\'e9moire et transf\u232\'e8rent le contr\u244\'f4le dans une autre zone, soit inconditionnellement, soit apr\u232\'e8s avoir test\u233\'e9 le r\u233\'e9sultat d'une instruction de comparaison pr\u233\'e9c\u233\'e9dente. Ces instructions sont les suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab ja\tab dest\tab  \tab -- Jump if Above \tab \tab \tab [si >]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab jae\tab dest\tab \tab -- Jump if Above or Equal \tab \tab [si }{\rtlch\dbch\af19\dbch\af19\hich\af11 \ltrch\fs18\loch\f11\loch
\u61619\'3f}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab jb\tab dest\tab \tab -- Jump if Below \tab \tab \tab [si <]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab jbe\tab dest\tab \tab -- Jump if Below or Equal \tab \tab [si }{\rtlch\dbch\af19\dbch\af19\hich\af11 \ltrch\fs18\loch\f11\loch
\u61603\'3f}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab je\tab dest\tab \tab -- Jump if Equal \tab \tab \tab [si =]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab jne\tab dest\tab \tab -- Jump if Not Equal \tab \tab [si }{\rtlch\dbch\af19\dbch\af19\hich\af11 \ltrch\fs18\loch\f11\loch
\u61625\'3f}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab jmp\tab dest\tab \tab -- Jump (saut inconditionnel)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab iret\tab \tab \tab -- Revenir d'une interruption}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les six premi\u232\'e8res instructions de cette classe permettent de v\u233\'e9rifier le r\u233\'e9sultat d'une instruction cmp pr\u233\'e9c\u233\'e9dente pour }{\rtlch \ltrch\i\loch
plus grand que}{\loch
, }{\rtlch \ltrch\i\loch
plus grand ou \u233\'e9gal}{\loch
, }{\rtlch \ltrch\i\loch
plus petit que}{\loch
, }{\rtlch \ltrch\i\loch
plus petit ou \u233\'e9gal}{\loch
, }{\rtlch \ltrch\i\loch
\u233\'e9gal}{\loch
 ou }{\rtlch \ltrch\i\loch
in\u233\'e9gal}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Les processeurs x86 effectuent uniquement des comparaisons non sign\u233\'e9es. }
}}
}{\loch
. Par exemple, si vous comparez les registres ax et bx avec cmp et vous ex\u233\'e9cutez }{\rtlch \ltrch\i\loch
ja}{\loch
, le CPU x86 fera sauter le contr\u244\'f4le du programme dans la destination sp\u233\'e9cifi\u233\'e9e si le contenu de ax est plus grand que le contenu de bx. Si ce n'est pas le cas, alors le contr\u244\'f4le tombera dans la prochaine instruction qui \u233\'e9tait pr\u233\'e9vue dans le programme. L'instruction }{\rtlch \ltrch\i\loch
jmp}{\loch
 transf\u232\'e8re inconditionnellement le contr\u244\'f4le \u224\'e0 l'adresse sp\u233\'e9cifi\u233\'e9e. L'instruction }{\rtlch \ltrch\i\loch
iret}{\loch
 retourne le contr\u244\'f4le depuis une }{\rtlch \ltrch\i\loch
routine de service d'interruption}{\loch
, sujet qui sera trait\u233\'e9 bient\u244\'f4t. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions }{\rtlch \ltrch\i\loch
get}{\loch
 et }{\rtlch \ltrch\i\loch
put}{\loch
 permettent de lire et d'\u233\'e9crire des valeurs enti\u232\'e8res. }{\rtlch \ltrch\i\loch
get}{\loch
, interrompra l'ex\u233\'e9cution du programme et invitera l'utilisateur \u224\'e0 entrer une valeur hexad\u233\'e9cimale. Cela fait, la valeur sera stock\u233\'e9e dans le registre ax. Alors que }{\rtlch \ltrch\i\loch
put}{\loch
 affiche (toujours en hexad\u233\'e9cimal) la valeur du registre ax. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions qui restent ne demandent pas d'op\u233\'e9rande, elles sont }{\rtlch \ltrch\i\loch
halt}{\loch
 et }{\rtlch \ltrch\i\loch
brk}{\loch
. }{\rtlch \ltrch\i\loch
halt}{\loch
 provoque la terminaison du programme et }{\rtlch \ltrch\i\loch
brk}{\loch
 interrompt l'ex\u233\'e9cution du programme en le laissant dans un \u233\'e9tat qui en permet la reprise. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs x86 requi\u232\'e8rent un opcode unique pour chaque instruction et non pour chaque classe d'instructions. Quoique "}{\rtlch \ltrch\i\loch
mov}{\loch
 ax, bx" et "}{\rtlch \ltrch\i\loch
mov}{\loch
 ax, cx" appartiennent \u224\'e0 la m\u234\'eame classe, elles ont diff\u233\'e9rents opcodes, car le CPU les diff\u233\'e9rencie. Cependant, avant d'observer tous les opcodes possibles, il serait peut-\u234\'eatre utile d'approfondir toutes les op\u233\'e9randes possibles pour ces instructions.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_06}{\*\bkmkend p3_03_06}\rtlch \ltrch\fs23\b\loch
3.3.6\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
ode }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
a}{\rtlch \ltrch\fs23\lang3084\b\loch
dressage}{\rtlch \ltrch\fs23\b\loch
 des x86}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions x86 utilisent cinq diff\u233\'e9rents types d'op\u233\'e9randes : registres, constantes et trois diff\u233\'e9rents sch\u233\'e9mas d'adressage ; chacun de ces sch\u233\'e9mas est appel\u233\'e9 }{\rtlch \ltrch\i\loch
mode d'adressage}{\loch
. Les processeurs x86 supportent le }{\rtlch \ltrch\i\loch
mode d'adressage des registres}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Techniquement, les registres n'ont pas d'adresse ; n\u233\'e9anmoins on va appliquer cette notation pour des questions de commodit\u233\'e9. }
}}
}{\loch
, le }{\rtlch \ltrch\i\loch
mode d'adressage imm\u233\'e9diat}{\loch
 et le }{\rtlch \ltrch\i\loch
mode d'adressage direct.}{\loch
 Le paragraphe suivant explique chacun de ces modes. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les op\u233\'e9randes registres sont les plus faciles \u224\'e0 comprendre. Consid\u233\'e9rez la version suivante de l'instruction \line mov :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab ax, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab ax, bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab ax, cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, dx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La premi\u232\'e8re instruction ne fait absolument rien. Elle copie la valeur du registre ax dans le registre ax. Les trois instructions restantes copient le contenu des registres bx, cx et dx dans ax. Notez que les valeurs de bx, cx et dx restent les m\u234\'eames. La premi\u232\'e8re op\u233\'e9rande (la destination) n'est pas limit\u233\'e9e au registre ax ; vous pouvez d\u233\'e9placer des valeurs dans n'importe quel registre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les constantes sont \u233\'e9galement faciles \u224\'e0 traiter. Consid\u233\'e9rez les instructions suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, 25}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab bx, 195}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, 2056}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab dx, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions sont toutes simples ; elles chargent leurs registres respectifs de la constante hexad\u233\'e9cimale sp\u233\'e9cifi\u233\'e9e}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Toutes les constantes num\u233\'e9riques dans les x86 sont hexad\u233\'e9cimales. Le suffixe "h" n'est pas n\u233\'e9cessaire. }
}}
}{\loch
.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a trois modes d'adressages qui concernent l'acc\u232\'e8s des donn\u233\'e9es en m\u233\'e9moire. Ces modes de chargement prennent les formes suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov\tab ax, [1000 + bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La premi\u232\'e8re instruction utilise le mode d'adressage direct pour charger dans ax la valeur de 16 bits stock\u233\'e9e dans l'emplacement de m\u233\'e9moire qui commence \u224\'e0 l'adresse 1000 (en hexad\u233\'e9cimal).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction mov ax, [bx] charge le registre ax de l'emplacement de m\u233\'e9moire indiqu\u233\'e9 dans le contenu du registre bx. C'est le mode d'adressage indirect. Au lieu d'utiliser la valeur dans le registre bx, l'instruction acc\u232\'e8de \u224\'e0 l'emplacement de m\u233\'e9moire de l'adresse qui appara\u238\'eet dans bx.  Notez que les deux instructions suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab bx, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
sont \u233\'e9quivalentes \u224\'e0 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sans doute la seconde s\u233\'e9quence est pr\u233\'e9f\u233\'e9rable. Cependant il y a certains cas o\u249\'f9 l'usage de l'indirection est plus rapide, plus court et }{\rtlch \ltrch\lang3084\loch
meilleur}{\loch
. }{\rtlch \ltrch\lang3084\loch
O}{\loch
n verra certains exemples plus loin, en analysant les processeurs x86 individuellement.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le dernier mode d'adressage est le mode index\u233\'e9. Un exemple de ce type d'acc\u232\'e8s est donn\u233\'e9 par : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov \tab ax, [1000 + bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette instruction additionne l'}{\rtlch \ltrch\i\loch
offset}{\loch
 1000 au contenu de bx pour produire une adresse de m\u233\'e9moire \u224\'e0 charger. Cette instruction est utile pour acc\u233\'e9der \u224\'e0 des \u233\'e9l\u233\'e9ments de tableaux }{\rtlch \ltrch\lang3084\loch
(array)}{\loch
, \u224\'e0 des enregistrements et d'autres structures de donn\u233\'e9es.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_07}{\*\bkmkend p3_03_07}\rtlch \ltrch\fs23\b\loch
3.3.7\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
ncodage des }{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\b\loch
nstructions des x86}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien qu\u8217\'92on peut}{\loch
 arbitrairement assigner des opcodes \u224\'e0 chaque instruction x86, gardez \u224\'e0 l'esprit qu'un CPU r\u233\'e9el utilise des circuits logiques pour d\u233\'e9coder les opcodes et les traiter de fa\u231\'e7on appropri\u233\'e9e. Un code d'op\u233\'e9ration normal du CPU utilise un certain nombre de bits pour identifier la classe d'instruction (comme mov, add, sub), et un certain nombre de bits pour encoder chaque op\u233\'e9rande. Certains syst\u232\'e8mes (par exemple CISC ou }{\rtlch \ltrch\i\loch
Complex Instruction Set Computers}{\loch
), encodent les champs de fa\u231\'e7on vraiment complexe en produisant des instructions tr\u232\'e8s compactes. D'autres syst\u232\'e8mes (par exemple RISC ou }{\rtlch \ltrch\i\loch
Reduced Instruction Set Computers}{\loch
) encodent les opcodes de fa\u231\'e7on tr\u232\'e8s simple m\u234\'eame si ceci repr\u233\'e9sente un gaspillage de quelques bits dans l'opcode ou m\u234\'eame si ceci limite le nombre des op\u233\'e9rations. La famille Intel 80x86 est d\u233\'e9finitivement CISC et }{\rtlch \ltrch\lang3084\loch
elle dispose d}{\loch
'un des plus complexes d\u233\'e9codages d'opcodes jamais con\u231\'e7u. Le but principal des processeurs hypoth\u233\'e9tiques x86 est de pr\u233\'e9senter le concept d'encodage d'instructions sans l'encombrante complexit\u233\'e9 des processeurs 80x86 tout en montrant le style d'encodage CISC.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Une instruction x86 classique prend la forme repr\u233\'e9sent\u233\'e9e dans la figure 3.19. Une instruction de base peut \u234\'eatre longue un ou trois octets. L'opcode de l'instruction consiste en un seul octet qui contient trois champs. Le premier champ, les trois bits les plus significatifs, d\u233\'e9finit la classe de l'instruction. Ceci fournit huit combinaisons. Comme vous vous souvenez, il y a vingt classes d'instructions ; on ne peut pas encoder 20 classes dans trois bits, donc on doit inventer un truc pour traiter les autres classes. Comme vous pouvez voir dans le figure 3.19, l'opcode de base encode les instructions }{\rtlch \ltrch\i\loch
mov }{\loch
(deux classes : une o\u249\'f9 le champ rr indique la destination et mmm indique la source, une o\u249\'f9 le champ rr indique la source et mmm indique la destination), }{\rtlch \ltrch\i\loch
add}{\loch
, }{\rtlch \ltrch\i\loch
sub}{\loch
, }{\rtlch \ltrch\i\loch
cmp}{\loch
 et }{\rtlch \ltrch\i\loch
or}{\loch
. Il y a une classe suppl\u233\'e9mentaire : }{\rtlch \ltrch\i\loch
special}{\loch
. Cette classe fournit un m\u233\'e9canisme permettant d'\u233\'e9largir le nombre des classes disponibles ; on y reviendra sous peu. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3300\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich220\picwgoal8310\pichgoal3300\pngblip
89504e470d0a1a0a0000000d494844520000022a000000dc080300000069ba7aac00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000016d449444154789ced5d0bb6a3200c6531
dd8c8b71332e86cdb018a74212120189bfd679cd3df3a67e8068bd052497e0c26c30f4118233aa18347853c560d060a955dcb7f96af80f605431286154312861
543128615431286154312861543128615431286154312861543128615431286154312861543128f177a9f26d3fecdf00ff42812adfbea4eb604cb91235aa347f
9c1f38718711f727abca0fc3a86250c2a86250c2a86250a24715f91d9f3a31eb4e18551e0aa38a41096b800c4a6c52253857af239a27e6d689e97ddcbf9c2f73
8cef33e3abac964637b8696039f0c4e44637beffe94f1855aec0e71a20374c7308b564eee5e7506671f8af3811e63783769d30aa9cc707a932357384ea993655
f69f30aa9cc707a932374eb4ce18559e05a38a4109a38a41894daa4cd19fc8fa18dd136133077b37116f4022477ebe13fc2b4e8cf04f7fc2a8721e36ae6250c2
a86250c2a86250c2a86250c2a86250c2a86250c2a86250c2a86250e257a862b800fc9bb57940860d54a862307460543128615431286154312861543128615431
286154312861543128615431286154312861543128615431286154312861543128615431280154f1c416daf246200387d52a0625802a8126fdd256181b594e62
0cc3d4dabb0a610caf5708af816df1cd2fa1fb95068f7167ea29c3e8f94efc987c35e9f5f87c03e45efce6e4de55f0cef961f97be52d76f07a839b1893f670c2
af74fdcd0ea84b1c1cc52aaba60c6ef4c593c21cb77718be4095d0debb0adef9f75f583e698b1dbcc3e436d2f3ac5b0e13a710fc7058ca91b64751d7aca87214
a3f6ebf8025536f6aec272ede92f6fb183b7d8dc0452250c4b10bc71f6e38bb5bb7045fc10a55c2a436876e2566c762637a45c83f32fa04a3cc1ca4ded2d36f1
31079e5e76dea787e5742ebe7b0f46954f00a9e2fcb85c4870deb3409a583f784f4fcdb9e0977fef47fea643aa7ac330f878c80def9674c915375803c4cbf5ef
93d312557169e2530e381d77e05a58f1dd7b30aa7c0254ab4442382fdb5da48a1bde7d95e0bd4f0df338c413b201f2cb135f12877473a2afc2cb8d2787319644
3996d36907aec51aa0a752654e54597abaac8b815489adca1467df248ed4a99202688525e92ca9c2cb4dfbaf5812e448a7d30e5ccb7eaa18eec59a2a91137496
7750e159a4e75ca70af5824baab07253de7176f32c6a02e8441b551e8a1555a651bccec0935c9efcc41e383cd5694d95d8a6bc96e624764f185578b9a90808ff
9c72c0e9b84354998c2a8fc2ba5691733cf1473fba177436bc5b0663e08473306a8854599a90819a225eabb072dfddda9831eea71c703aee105572f1bd7b30aa
7c05f5978ee0ab49ca97595f262a323971d6f3d3b240e518a851e5afe2f2debb51e5af225ced5b33aa189430aa189430aa189430aa7c1c35d54a4d88f2341855
3e8ed5ab4972f371aa94ef2efbde66eaa94fbf1119553e8eca33a391dbd1d5139439ea69d4a3f4076054f904a6d7186694882ca3ac4b1de261546ccc9a91b401
b216d098409a2c3059342729e1224589add552fa14077097c3cb216191ec30954c18f76aa28c2a1f40548e30b94af2bb38142c2521cab29dc423902e694c300d
1e4d9a93947091a2e0007d52a740fe95452843a864dc9b64fb94a34695fb81ca1192abc467eb190dd60d504c973426948672074ae882f45653fe95452843a864
fceede8b51e57e4c2025604ff5bd3730b140a5af0271633955626e90a424aa50623f09aaac2c62195c251346b73360b851e57e24e5c8202a0027246475aac812
f2635fe4056baa546a956c315f05a959429e40a08551e57e046806f8531da9cb2aa832b1a79f34269406ab8fa43999902a21d6513ed9c0fc2b8b508654b3bc0b
37aa3c0e3ea94a385502f51b04556610a2a436859424bc560149ca722e3eb7e15df6fbf014671a617e6911cbe02a99258151e58128e4294ded996f6c17651527
83385c15c484c6b60a46956f208c4ea9277a1032553c5e3c6ef8e377b3edc5b8c0401fbcf0d6f6d7302967693d0a4895e086016689a40d3ab003aa89215d03d3
d2e6c64e9d5a21dc34b2b55dd83c6bf48f03a9328cf1ed2a6fd08123d8a24ad740ea7b0d2fd6f5db0d5e786bbbb479d2e81f072d1d95e7a0a50d3a50207a1270
462c792ad23c58702d6c51a56720a457bd39cfc63d745bb9f0d676c5e639a37f1c6276210d37e3904eadf3953c093823163d157177791f8bae850daa740d2c13
55d214eee32d012fbcb55db379cae81f4311cc444595200799c39cfd1a341b369d02d7c24eaa88f2df1fa9bb70221a449f2ac264b6793a044515dd42afd0a35c
8de2a275b58a8f802cd1938033626136ec8454096caa53155503acfcc98de39826481eef35286a157e4b64f394d14bf1053dca0a2daa6cf755e44f304f7c1d47
2405d62ae05ad8d957e1e5bb61796c71c8f14478a56e5f45566460f3a4d126a6a42199c750c41b4b09981e25694a488f32a01ca5a647e1721494a8b08869b1df
584b43a6533f3366499d4c4c3d543a6dba3720f1138c9e049c110bb361c1e9e0c0b5b0f70d28971fb07a8a651f1e7de8bf01b15b229b278d3681b5f05297b278
63d0db9bb91e053425598f8243f3353d0a97a3a04485454c8bfdc65a1a0abd02fdcc1881053a99592ad3a2cafb7511bc47b841078a1b4f4d4c9a118bb361a30b
22b919c66daa6c1b1846f8725ff3a9210e5e786b7b6d733a6bb479318c2a2cde5836cdf428401ed4a32055aa7a14294799299c0ac093486595063eb115499d4f
e86466a94c932a3b466bb15b2b9d11417c6ce1e7466b3955c8f787bdbd78518e5c7ba02941910152a5aa47e1de4094a830a2c77e632d0d98c6a82b8e1273fdc3
0655f6e133bdf03f820daaf05a654ecf34b6ed6baa54f528851c651c185552bfb196064ce3337494f816aa5c3e23f62fc38d282b115499c43384a7049a12d4a3
40beb9aa47e13440894a7e96a9df584b43a1579222c6516292cab0b82df92eccb37c3f966f3dc94a0455869a1e053525a84701394a558fc269801215f62c63bf
b196064d63d4154a8c25f2b82db938a3cafd70b52a98f5f60448f2543fb1a147290eb5d264d3be95b892d5a8723ba6a93aacf7c5dede31d31b6f40b7e1232f21
c2c857452ad35857a47dafb777cc7453af9223bf5f8c9e010faf70a7c42342972276ea563dc6f734c14a13cdd15a8afc7e357a0668fce78c78448c35f39d8655
346a8295369a3ea0768b96fc0887d767e919c8e30d27c423429722452a6daa2c46ff1bc10a0cdf5fb3ee89aa949667796e5205fc08f3c1f559ba0616f7743270
5c3c22ddd67ca74d9564f40ec1ca2dd5b31bf9c749ab2ae9858a2adc0d9b5d17c72aea9a81951e86dee90f8b475454917785466f11acdc80b35f51adb04e2255
ad22f424339b31bb1f5503dc731d8fbe9295a3dd065dadc2ac92d13b042b62f9951cac82af7a16d5006219b42c29c81136282f6804d247b98a0b485a4952b038
a4530b206c4247020a9b7a918e557d95a256899dc483d56ac5c0aa569969f8f2b07844d35729ee2af940ae17aca471720858918355304102aeda929741639282
1c6103f38246003fd6abb8a0a41525054c53206da69259619bb7d17c036ad52ae847384c959a81a256893778423cd27c03daaa55c6b32a990648621077e80ab2
2021afda32af140a2048872c9ebb00467c6b2b567121492b8bd241a1dbf3f26b7316243812246ca0ad5769f58b3cb5ea87beb7ae011c5739271e11ba14b1d3e8
d646a3f708568087e95bcbc12ab23f88566da1834252401136202f2cd881eb76406fdcd12a2e2469058fcec8a9926da692a930a173ace1c868edd9c6fcc7466b
732d32896015f9b11507a899875f6f4a80792b546155254c7e9b32557c8d2a68616255d436cc07743fe2e31df3c21baf8219b86a0b1d90920288b08179616d17
5ce225f5da435ec50525ad4895a4a65b51052d5029814274346054b91fe98991b800835588f6068365e43f2629c00164cc0b1a01f88869c42a2e206925aa2cea
edd78a2ad49160856dbf0219553e85b0fa94285b48968e7a4f61759297e5d991950de81b77aea8d7481b551e8fd31136de2fcfe182be7aa55b8bd0f5054f3821
5a06fc158e8d66e1771abd05e7236c2c0327e707160b11027ae9b54133f68f2c770c84a541761706cde0ba835b8dfe71144370e8a5d706cdd84d959e8158e010
ae0b9ac17507b71afde32806f6c9672246c309fdf98a7d6c1ba029e75705cde0a30eb71afde358bb0b67e684a9759bfbf315fbd83440f5ff5541336646955b8d
2a1056dd8e7a20b475aa12d1a9b9f78b77f2de748e511e93b24f15e9cce3ce853c0ab80b0555b8853cd7ffa2a01973832a971bed43aee5c22f6c335509b7f4c1
f792da4b6b4ed58ff77e0f558433af3f5f5161bea855d62287055705cd985bb5cad546fb60ab706f2ce732f6bfd183ee5a4915e57bd59a2a5b7d15fef353cc57
eca3e8ab480ba445b8286846a3af72bdd136923484d6729971bb5cce855265bd8a90b1c06d44aac4bc8bfa3e29f017dac35efae0ffa76cfc9adc7672ca565085
bd1a142f282b677d67be621fe51b10afb7dc2b957d59d00c4e955b8d3601d2105acb659e9bcbb9602aa657e132162c305225890ede3fde74c9498f9cf6d207ff
3f661317e5b793d32765284408f8c5d68366f4e72bf6b169207930862b8366f07afe56a30da034a4d600e53e1f357ce85544bd0a93b1d0d57ac8f1a67d70f0d2
164b87bdf4c1ff8fd9c41dfbede4f85952453b5adb9dafa8476be034f80bfa0b7b476b2f315a07694ceb7d15c75f1b6636bb1df42adc8b08a09f7b2c75d9a0e6
147ae8e983ff3f57fb2a1bc9e1b34215c35d4069489b2a2239d52aa057d9a4caa2ad4c0a15ff6eb83ceec107ff7fae526523399ea20c4695db411a534e95c672
2e734ac5f52a0daaa4c817d3fceefec21bff523aeca50ffe7fccf64ee479195bc9f1d3611ea3ca0780d210f11a5c5fce055331bd4a932a71dc6272d47040c335
e241fe7fcac65f5853248e6672cae6681e8951e513a88642686c6f6441e05bdaceeed5c2379a10aa1f57813c4695ff113dc5742bd3fbad6a67194b26c8b3f106
f47fe38fdd8e443872775e66d295c13235f52ab705cde818c0b91df3754133b8a16da32658d94053af725bd08c8e817830c639ba2a680637d4336a8295369a3e
a0862f0b5773a9c6ff5662d3403af8ba32688630d4316a8295265a9ee5b9451558cda51aff5b090555700ec39e628b42aa71323a466d959726345429e681cf8d
f8df4a280c9c5ce645439586d18704cda82cd1f1c1553baa50d52a85b243cc3c9a29feb7129b0658ad7251d08c56ad52357a8f6005e253409cab1c3723890f68
398d28428d112f4089c0d7dee01286af40d357a9d52a2baa5c5dabc0aa76d704cdd0d62a694ef80d82158a4f91e25c51dc8c749c96d3888204887b11350a62ed
0d38f43d34f52a8ddf1faee6c2a832cdea913f5970fb079e4694af0a9aa1ac55ce06ea6882da68213ae53fbb14bd02225c3009674c896b6f3ca401aae8551add
5a5ccd255365e84d765da3d3ad5d1c2261be326886a25b9b8cde2358211102148c713330e2dd9c97d3888c48712f28653e71f175edc481d15a590b4629dcd557
75011e345a4b2284f4ac296e06ab5546721dcec9670c2214bef6c673a87210370dd4fd25900821f7055f8e8ee7e534e6e8654e6a39d228e4b53752f5f3bd5fc0
69aad86a2f7da00801be678a9b9156e3a0e534e6245101793bc4c0606b6fc4c53cbef72e6f9ee58fa02533adc5b8e0312c568dfde5d7b5074615831215aaec58
5af019239b7d28162fac8dbdad55afbf0da20a7ae7d17daf0a9af1dc6f928b0df8ad346f6b9997b9d62278ebb333905e05bdf3d575969bb9efbfc063106283d6
a2cb020e07c6c4a2218fbdc12f808dab38383017abb7736050eec5a30173211f092e5a66b7d2baad4c15b168885125634d1574b4ad1c6e040aca0d2f76c1dfe1
5ebb006c009fdd4aebb6882aab45438c2a191aaa48c75a98d91840d08576fa02145411d1401255dc6ad110a34a86aa56e113c13128f78c339abe3ddedc80a656
1113dcb101128b863cf3debe034d5f45fcfaa28b4250e58e2813e7a1e8ab546a9599dca0498b6054c928a8527b03e2d2a6e8a2a0b5c8d35cc82742f30654ad55
8416c1a892515085dcf78df012c945816b918f8f1da5e24322fc569a5133b0af22160d79e8cd7d05fb476bc3e6ee33a118adad0b9a8c2a19e60302d4e6653eb6
cafc0a8c2a80dabc4cff207dd4f7615431286154312861543128b1f106b48d4b179abf1dca4ec7b109633fd2fb6dea557a41332e5d3dfc7a88ab9722958d1b53
05132fc27afc88aca5a957e905cd783655e4d58b21daad1b53cd162355cb8fc95a9a3ea0fab40d986e2b169a7f26c468ad14a974a852861197c1c9d9d4db9f92
b5b43ccb73fd1b4dd36de542f3cf845f5323d718bd5aa50c232e82936755cb6fc95a145411729599a6bb8db9227e229454915e73d4e7acc3888be0e44cd5f253
b2164dadc267b72ffec1d5eae1cf84b656e1de654c538611e7c1c9b3aae5b7642d8abe0afbe1a549b4ff1b55b6fa2ab55aa512469c0727cff38d7f4bd6d2d4ab
546b95348976b5d0fc33d17c03ead72a651871119cbc12d6e337a992051dd56e6d9c6e2b179a7f26c4d54b914aa75b5b861197c1c9695ce5c7642d7b476b43ed
e3f9508ed61e8dc2f3ab54f9611c0a48fe7303fb86f96040f25f91b518550c4a18550c4a18550c4a6c50e5a32d707332d1f5b38c5af7d513abfc48efb58942af
821baaf82a97a139d471540a224429ad602b123db1ca8fc8529a28f42ab8a18aaf72dd65b49e5267a4a335615a88529ac15676999a7f64f8a48972b416bd6bf5
40247cd5f9141b3efe1653a51e63c8c3a2f54b9c6ffa998ab5ea6302b97afd623205a04fb92973ba965e28fa1ae4e87dde690658698955e6ca9af73f8916555a
8148d8f22e101b3e8d6c2707eb6bf2b868bd10b3f0b5ea5302b97a7d74a62c01e82137654e1e965e28fa1a1a54690758698a55e672cdfb9f84862a32be0a2eef
125340e4f8ec950e401c2966618bc24002b17abd47b6d149c8cc2e05cdd542d1d7a0a18a4eac923f8d2add5a65b57041faa3c8f1efe7f782e55553d45e5a6f9e
5185fe20013bc2bcb370923293fb6e3b147d0daa5a45275629d7bcff4968fa2aebe550d25ff2c50f31fe373aa57329eb5a85febc5b1fc175a2f23560e6895d18
9acbdca250f45568fa2a4ab10a7d1a55aa5469c457c98f9822c7cf593e38a747f10ad0088d10139e13232510473c66c6dc90199b844e28fa2a5a54690658698a
55f89af7bf8c26551a814844fd001ca1a50bb10d19624237be5bf89442d621b8c43d3549941973a7ccc8836e28fa1a5a54690658698955c49af7bf8c53a3b5f5
970f4fe7964aa032daba2a3784e264ca9c4ff442d1ef42ebbe6c5c651b77f980de2fb37106c4a1413cccfc59f4c42a36b07f93bb70191839ec173895f9287a62
951f91a534619e65831246158312461583124d11422f68c6c3c1af3e6fffdff7f465344508bda019cf06bffabcbdff9e2aa3c10f0d147f3fda43707555919413
2cb200264228b406526a90c0c40642a87031f8d5af5d406b3091036a1c84c821860a81331bba873f8ebd5459c90926c7450885d6404a0dc062161bdc19756307
55b8c801340e52e4104385a0faa1ad7bf8e3d050a52e422059401621145a032135208b2836780997e2c5d8a6cada034a22074fae262672805021617ec2cad85f
83aa56a9ba0b491690450885d640480dd0e28c6203f73daa8815261cfdcf1635e62287182a24ab1feeb9e0c7637fad22e504e3c0440885d6a04515f6437e54ad
320e59e390450e29548851e578ad92d7afc7c75d680dd801ea0bba6476111b80d6e016e86b15217240427091c372ec4554f9bc73ea21d8dfade57f8924244228
b406ec005102aafba4448842855bb0a35bcb450e54ab7091430c15c2ce3c7309bebb716eb476f35540be52aed5087e26a1c2f7d11339c8334fb8e22fe06303fb
955fe277b4068683f8aa0fe82b5a03c34198bbd0a08451c5a08451c5a08451c5a08451c5a08451c5a08451c5a08451c5a0c44215834183103e17f1cdf05fc3a8
625022847f76a661665fb167ec0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.19 L'encodage de base des instructions x86}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3270\shpbxcolumn\shpbxignore\shpleft0\shpright8280{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw552\pich218\picwgoal8280\pichgoal3270\pngblip
89504e470d0a1a0a0000000d4948445200000228000000da0803000000bb16498c00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000158c49444154789ced5d8bb5a32010a518
9bb1189bb1189aa118563e330c5fc724be6471eed97d31f251e00690b90eca0a040c288180818328dfa6aae03f801045c0821045c0821045c0821045c0821045
c0821045c0821045c0821045c0821045c0821045c0821045c0c2ac44f9b6096d0ed00af544f9f60d7d0e42944fa2264af787f90701775ce4db353c09b29a9d94
28ddab09b810a2085810a2085810a20858f833a2a85ec020e4430142940f6044945da9358b4b52a976c0a6d4d60c10a2fce71810452f07579acdbeeffd00bbe8
464075d9fe0d7d3e4088f2010c88b269dbf9e9bb83a51760b65680eaf41ba613b2a955edabaa49b7ab4d6d9baa2fd20d10a27c0203a228fc434fc04137a033de
5c1d7a14fcab028c3df873294088f23efe43a25c0f10a2bc8f33a274471821cab3f0f21ca51bd09ca30851fe770c886296f018438223766df5d5a71e21caff8d
9375942d8b8b476b6f8165534b8b5ac69b1ff7468abd17729c0bffaa802dfee3070851de872ce10b5810a2085810a2085810a2085810a2085810a2085810a208
58780651041f4056b353bed7f3eddb98041551a6c3b76b7812d01a9d9328824f4388226041882260418822604188226041882260418822604188226041882260
41882260418822604188226041882260e1d944d9fd9b6b66d3671129b48fbd9e45ab60b6b308dac4a376ccec3e636efba55b7f0340148d74d1cf218e5e5c698d
c20638bef58bbffa9a326a5d9509ae6458d882c57e879ccb0bacf04b5d157af068c674f7593513a4b8bdd51edda384926f67bff400b3fbc6588fd89beb4ee8bb
8e67d7f15768b765cc36066b7a63e1eef038bfcf8228af62e3b63e1025f58ba73de4cfc36c66598c595672440f01fbe2bb73957a94a3ec83e2fbb671bd897107
3bff07064431eba2dd05f446dfc28d4d4e4f614c9beece1ff9bbdbdddbbd2ed5aaf4b2e19d5b9a6f28ee4104b3ee310504bb2f47f0ea8269e14fca30e1d07394
5eafeeff928ec8498ca7b6d07a2bce0d86438f0f0ac1de2d9432dd980580284a6fee02461d43486a1ee81bb4c63653ca68f7ef68f0830ce13afe3edd29b51e05
71a9fc01197a68befa08dc9d9fa1e598c5841431d87f89f742b23f2dc39444d1ae39dc271e919318cf55eaf19574e99428e12d7bca869228ec7924f6289e0e4a
e71403a2a8f598a318ede6ca2ec2b6fa807ce8f1532a17d9b86c6c3e47a1f9c230891da0a79e852ff15e5e187ae6220afc4f47e424c61b13e578bad15aeb46be
2f13c506a2148e3481287e3cd915bc15b1a93651823308e3a2da9c2834dff07db161900c8cf7c1e14bbc17210a8f28fbf51e25fd44df208a67449e6d8c142f1e
5ab94d149cfbd64421f986b49b55366fdb387516a2387089b26ed77b94f4d463ae4f666d208af3c39a5fd4c1b5fb4e9a3bb6e95e12c553757103899f9610a2d0
7c4316d11162481183fd17240a7b4afe64a2c4af3da234f3757389c57f6efc25b7b247c9df84802b6e47c6269e718b2f78bd7821208a1b3c561c84688f42f23d
26b33ea1ff1e52c460ff0589620b0fd4fd323c791d6579695933f632fc879e1aeda44637a3d437a9eb48552295856a1a9c67c8ac834713e59dc65ef9eb6ddfc0
c7c7856713a5f3d3be37e59fc07c9ac70f278a800b218a8005218a800521ca1fa365746c094d7e0d42943f46f138128c799428f5f3cab5279876ecb79f828428
7f8c468be18adfa6da11ea14ed38ecf5f8172044b91ffbb2190b1210b7a2eafa8fb86ce7d429a009090751b6123524314e1290384d4988e8a4267e9c72b9ef7e
b1d69d76a7b22be275880ac66c57154f4294dbe19521448e12ec2b0ae448160531411c12e3050d09c481b3415312223aa9092cc507f5494c5f5c31e691a960d4
4131ae9633a610a2dc0c3025a21cc5b7ac262428871e1f0f2cd596684d5c6a8311bd729758a4317d71c59847a682d197672d4294bbb147b10069d3e3db4ae400
8d398aa21a07b4651e8d1e242781281859ef19518a2b421e5405633675b1dd852877232843d6ecc7aff0e7dc274a9e436a7427202889d2e851d215d35da05ac5
a49702b810a2dc0d130700daa61b4e5433a2eca4ed838604e340d71134253b10c5f8fe49876b40fae28a318f5cad72642e44f931e8a01aa14431385fc88862a3
d0248c26a814a13d4a949cb830df6eeb91f7717af76f0e41fafc8a900755c1b80842949f436569eeeaca74e7b8caab0a34d9e9a66ddb748e5910a2fc3dccc697
dbfe0c84287f8ffddabbcebf01218a8005218a80054214783541ff61c77897d786b22c7f59a62950350c1205dc39c0e7df20ae155e59fc61c42dcb322cd3ee17
9fcca5b7ce2fe1d4fcf60919c1a751dd3412055e6cc2179cfe049d4aec3de3339ffdcbb20ccbe45717d685ac6d7c1f5f901114e813055e954caf4cf66036070b
86f0e858c11bb603fc31f85d08b17ca460db4ec6efe4b5e138c730a35be2f9215e22a5c90a5594655426030b99cb45bb3b1b7b30fd1fc5a8bc70c45b48b5128a
82e55fa1f82d19015511400384c688b9aaad19276f9956d3ac8ddac8df1404abc1f8395f1fb1940543383856c09e3b1ca3df051f2b44f2b66d347e13af0d5a71
cce8c10eaf55ba044943efaf28cbb04cee25cbcdbf3f372af23b505b5a95255e3842f5c0fd86b2c4a2a4f2c3da6a4b46405504d000be9ee31957dbad3879cb34
9a86bad348a51810a57e4d1be0ae179d29246bf74ae61beb163f622c9f898eef6c524b44220ac38ceecfc36b9fee12344dc2882855998ec3ec6defcf83128578
e1b0598d81b8c060392df8e848a2845c4690ab082c7ab9805a20d59ac5c95bc6d64dd3ac8e618f52bda61d61c2dc2fd4b84b00866d9b8e83f16b89b17c90496f
d47af384cd8862cfcde840147a094c9330ec518a32edea1846431e774d512851d07013ab07ef37c6884581f2677555ca08a829071a80748bbeb65b71f296b155
d3a821515ae379b747f1d66af895637bc6e9623c0e1f5b8ca52cdab6c744199ad1b31e655bf334f4fefa7394b24c6a75447159add7145f7c0c88427b9458165f
9492284d1941a522d856429450dbad3879cbd44d734294d61342a7478999444378b850eae10c0c08d1ef828f058dbe24a250af0d58a2b119dd8621365d82a621
183df5e46532b13bf5f3809bd65adc9c32142323ca9eb5606ca35814287f4c679b32024a026880449450dbad3879cbd8ba6948c39052e0821bb87380cf2eb422
fe13427b8261dba663f0bb1062c59c15d55d11af0d89fa6333ba8d1e1be012591a5aaaa22cdd32c559824f7fe73a4a28464694b5252380a240f963f19b32024a
02680052045fdbad3879cb349a86bad348d9bdb332db76d3108e3d2f8b587d2f0dd5b98e19bd6d47aff3f9a595d9a69fd1543d3950a7d20e18c808aa53bd38ad
9629223792de66ebf99b05c4dfc7be3767c95fac9ed72e7d1b513eee77e13fc5beb578f2cdea79edd2623d16b0204411b0204411b0d078ea9901bff0b47327a2
45e733721e562e951e256d0bd24fc3328b5c9a5c7ff621a0d2a174cba4e33aed8d82945b9e6f60cdb3db1257aeca6acf6a6516b705f938de14995c40b922db2f
131ac07e4c90728653a2bc90d949a4d2d6c320e3ae4126526e784263998de5abc1a2c82417595422930ba86d3c43a2f8f5ffdb0429d90629c9dd04dd16c6d743
b64f4c5297241f199836ca45c247bdcf8aff4b6adfa91360ab3372cd28208a99ed677e894bebb16510456dc95895363c49fa8a005d0846ce4426b9c8a212995c
40c36a3c208a0923ce6d82144d4b93dc4d106d0aecab92f68921ea92e42303d246b9087c94fbac84bfa9f689bc24bf66c89964362cc688283deb31254adaf0c4
a2e5042be88ac8a410595422930b1811a528934e668dbb0429c192932c10f15652d5a57d556c2156f1a9d078aca955688341b3da6705fea6dac7c2d5cd150341
9b32c0b047e95a8fa9f95ba776ce7cb31045014764528a2c4a91c9050c7b94bc4cfefc122e7dd31445c7dc7d6992bb895475b8af0a9eccd425e82323a68df20c
5069047326d96725fc4db5bf51a2a46b869c31b38e422d613447e1f4283951aa1ec562439d894c6a9185beb06b5f7183fd394ad5a358acbf9b0429d883ec99bb
89a2eae889c82d5097c40890b64114f2338852a13dd57ed6a3e4cdb542668ce797eaa987d5a3804e825e39e92bb082a0ebe0884c0a91452d32b9805a8732ec51
fc407e9b20c537ee9636c7582a5ec0be2a78225797441f199036ea7840ce137a4d93f659097fc9cfd48f350551e00a988b41271b1dd47a14ce6416741294286b
b1a107bd558ec8a41059d422930ba87428fdc96cecb45d6f72e33a4ad29980bb896ca4017717e93f5197c0633ba48d7291f8e1e364fbaca8a86a244f1cdb5210
05ae40331b3ff6bcb232db1a12fcdcbe9b82273239d544f0f1732bb3a6f8cc51df258987fc354560f68c49ce14d78833e2933b3aaba8ebb69eb6c08231ca095e
c1db3e328ec765f381bef205a2340516223fb909effbc8700b25ef3fd089f558c0821045c0821045c04283283ff3a4f006ca320ccaa4eff2d152c114d38df686
2b65ac1a7e11f9ea1a53b1dac05b88a67e24912851b3f1b7fe51ee41a9431994c9b8c50975ab7f9474a98202cd27c52a560de5a87df566757e35c5fa79904449
b814351b57fda3fca1cf0e364a1dcaa04c7ed569357f2147a10bcdfd0d5718cbd1c1967cf9fa395198dd68a347015b5a7a4fb703948c384903ee21f24b286d3c
fd32213b6ef48f12a51fb4a67a1bae60aca447c9642a70afee8f4feb5625c2ca841b5ce3b7f041ff8664f49ed4383a26eb1285585c7b203a07f0d9f15b28adc6
8332e17073a77f9420fdc0dd56aced6eb802b1881e85ca5420434f94202b507b2c58505f856fe183fef5c9b29bd2e3e8f889090644e9588fa9ce61dd7e70e819
11a52853bafbdbfca380f4a335f424772458c9603b043d0a91a9e0adea98e2184e8d8a3da1cf3d7e0b1ff4af4f46efcae731880e9fbc1ea56d3da67292edaa4b
f5bfc0b047c9cb843dca7dfe51d0774c7b8ea28a5f233a33887a146a2b8cc09fbacfd51d20fd636b840ffad736e72883e8f1933547e9f628167b946dfd41a28c
e6284599608e729f1c05c5257da264d1b147897a9421519c6a322850f4316469f866c12a9ffeda265106d1210813944439f78f128912250d773f54be82528732
2893f22a547da37f14f41d4389d2d970c58658548fd2214ad0ffecf698f446a1a9cb3d7e0b1ff4af4f7644d2348f5174f85490a6220ac73f8a059d83174d9ce9
b7bf805287322893eb5fd61be528282ec91f7cdb1bae402ca247e912c50b23778543461cb2363849ff86647422169cae74a36332856f86bcb3325b79d9f8195c
589935f73fb535fd5e748e074900d0f55dbc6fc736b4f1f3d751343c5c8bade77fc3990eba97e818832fe6e112c5344294ff0fe6156b5c31d9e4e54112095104
2c0851042cbc4614ff666b37a8c27543fe91e2ad67a919a412bf854a6670eef642a79701daa1d5a9eb4b59eec58dd717c02a7717df747b31092a9901cbedc535
a2bc50ff7e15e165bd76293338717be15e2bf82db7178de5ee6faf80d70b6ea76f5e187cb335d8c7c1ad4270cb50a7de17db70ce00c6f523c4af2be9740a3d31
bc5ca8ea55d231adddd5eedc87257898885ba424cf17a1b8b8374ae92124db48e5eb728e178882430fece311dd2ac0561ed525365b3b6740e3ba5ad0cb4191df
c9ebf5c31bb4d4283828934643d87d3a03f43011b64841cf17e13cee8d527908c93652f9ba9c634494be51d0ff43670b3690417786246f47299d33a0a3056560
bf9132bf978d2f23a2b45e52bf771f169419285cc826366d086d7808c93752f9e9a1a76b14f4ffa2af0474ab40b6f2c82f11159e99730674b4a07c3d2d3b86ef
b712a5f5927a34d7df3445419941bc05f07cb12b1a0a0634e22124df48e5978972d2a3686277f33b48ec9d1e654fe62dc821cd2e7d576248f8fb4419cd519a3d
4a7839fe4eb7171bec4e903c5f901e654303a10d76e12832a11ba9fc32514e7a14dcc723b85570c996165156782f9f3a6740470bbe1e42b71f4ee1f62c63e5ee
08b5bb8b618f72afdb0b9419a4dfd5a2f07cda1bc5dac24348880944095dcff7e6b3ef4c66a37d1cdc2aa8b4954719bfe19c018ceba11736241c76017963afd4
cadd457f32ebae79abdb0b941928b8b7a80a0c5e3f706f146b0b0f21c5462ade69c86d02f053bcb7841f64a836fe187b63fca2b3f803470b99fdfc9d39c36fad
ccf6fc79b4bc54d0cac943be5ba4f76d3d0cb70a2f35f9faf27a9be0067cc028c870abf00a517e669954e020d663010b4214010b4214010b9313e5d4e95f6741
f61d979473624ea214ee2e066e2fbcfb875a95a2cf16931e87298952babb18b9bd408b50b119cb7cb5f21ea6240ada70a2cd67e0ca2311a5d88c65c65a790733
1305acc8c49a5c0188526dc63263adbc83a711a5b48847a2a86a3396196be51d3c8d28d54bea38f4149bb1cc582bef6066a2b4e6289d1ec5e29be0a04a99b156
dec1d444693df5747b9442953263adbc83a989526fc75221cd518acd5866ac957730295100a72bb35d55dbccb5f20a2627ca293aee1f6409bfc4d389d271ffd0
da21efd9783a51044c0851042c4c4e94d311e4adf7be9e3493999328e5ae1a7d571ebc5d263ce0213aa9119e2446989228a5cc60e0cae3c24b5fe9a5e8a44698
afee7a989228e512fee0a5b6682aa4fb4cd86a8b8930822531425223cc58776dcc4c94c6cbea1560c19eee33516d31015e82418c90d40833d65d1b4f234ad328
58ec33516d3191dc49830a413d4edef434a2348d82b6d86722df6202b895c408e95969c6ba6b6366a2b4e6289d1e25df67a2d862226e5d91c897d40833d65d1b
5313a5767fd1eb51b27d26aa2d26708e023b09a01a61c6ba6b636aa2d4ee2f2a84f6cef699b0d51613648ee237de4a6a8419ebae8d498902385d997dd379cecc
75976372a29ce2a59d2a48e20fdeca6fe3e9447969a70ac093c4084f278a8009218a8005218a80858710e5aadb8b0c4f9ab3763127518aed57cedc5e9ce049b2
932ea6244ab9fdca99db8b53cc5745973125514a47c4676e2f4ef5283356d1453c8128a76e2f4ef5283356d1453c8d28afe95166aca28b781a515ed0a358218a
7d06514edd5ed8b11e4588621f429433b717a77a9419abe8221e419433b717a77a9419abe82226254a89eb6e2ff2581fbc95ff140f214a171c3d8a2ce15b210a
478ff224d949174f278a8009218a8005218a8005218a8085398952e85106fe51044c4c4994528f32f08fd245bd73f9b7f732ff2ea6244abd31769f28bbdfa67b
5f3663cd6656b7b9bbde96ddedfaad8f336a83d3e1cc63f174a2a855ef2afe3da8a08f6ec3b86d16b6556963d56eb6054efb338fc5d38852588f75f275b06ede
379b63890bf5038ddf462e9e96a167c6f2f77b94dc7a0cdb3959c70c1d3d156cce5f4e708d721c92d37f75f7bf88a711a5dfa36c2b30c29dd81d2d8cda7d8f62
85288f234ad1a378bd893230e658f7b13bf5cae6dd832ae7620988b2cf58516c3c8e280576a57cb7e1461b6084f2e662753c0eb9d348147fe6b19894281760c8
dfec942e4fdb073f1d0b51043c0851042c0851042c0851042c0851042c0851042c0851042c0851042c0851042c0851042c28ab040206e4bd5a010fff009846f8
e8e59a8e090000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.20 Encodage d'instructions }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\loch
une op\u233\'e9rande}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour d\u233\'e9terminer un opcode d'instruction particulier, vous avez simplement besoin de s\u233\'e9lectionner les bits appropri\u233\'e9s des champs iii, rr et mmm. Par exemple, pour encoder }{\rtlch \ltrch\i\loch
mov ax, bx}{\loch
 vous s\u233\'e9lectionnerez iii = 110 (mov reg, reg), rr = 00 (ax) et mmm = 001 (bx). Ceci produit l'instruction d'un octet 11000001 ou 0C0h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certaines instructions x86 requi\u232\'e8rent plus d'un octet. Par exemple, l'instruction }{\rtlch \ltrch\i\loch
mov ax, [1000]}{\loch
 charge le registre ax du contenu de l'emplacement 1000. L'encodage pour l'opcode est 11000110 ou 0C6h. Cependant l'encodage pour le opcode de }{\rtlch \ltrch\i\loch
mov ax, [2000] }{\loch
est \u233\'e9galement 0C6h. Evidemment, ces deux instructions font des choses diff\u233\'e9rentes, la premi\u232\'e8re charge ax \u224\'e0 partir du contenu de l'adresse 1000 et la seconde charge ax du contenu de l'adresse m\u233\'e9moire 2000. Pour encoder une adresse selon les modes d'adressage [xxxx] ou [xxxx + bx] ou pour encoder la constante pour le mode d'adressage imm\u233\'e9diat, les opcodes doivent \u234\'eatre suivis par une adresse ou une constante de 16 bits, avec l'octet moins significatif juste apr\u232\'e8s l'opcode en m\u233\'e9moire et l'octet le plus significatif \u224\'e0 la suite. Alors, les trois octets encodant }{\rtlch \ltrch\i\loch
mov ax, [1000] }{\loch
seraient 0C6h, 00h et 10h}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Souvenez-vous que toutes les constantes num\u233\'e9riques sont hexad\u233\'e9cimales.}
}}
}{\loch
 et les trois octets encodant }{\rtlch \ltrch\i\loch
mov ax, [2000]}{\loch
 seraient 0C6h, 00h et 20h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'opcode }{\rtlch \ltrch\i\loch
special}{\loch
 permet au CPU x86 d'\u233\'e9largir l'ensemble des instructions disponibles. Celui-ci traite divers types d'instructions ayant une ou aucune op\u233\'e9rande, comme montr\u233\'e9 dans les figures 3.20 et 3.21. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3240\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich216\picwgoal8295\pichgoal3240\pngblip
89504e470d0a1a0a0000000d4948445200000229000000d80803000000191c83b900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000007b649444154789ced9d8b75a33a104055
0ccd508c9aa11835a3627888af401a79c88b17c773efd92404619bd877f56318b93802bc26bae8003444f7b4adf017c014d08129a003534007a6800e4c011d98
023a300574600ae8c014d08129a003534007a6800e4c011d7fcf94a7afbdff224fbf95b7f883a6fc5ec16f3ed76fbefa4782298f1560ca9bc19467c094c70a30
e5cd7c8c294e2a3897880598f2668ed3f5cef96ac1d028e8ebcf751989285e04533e9dfd7487611cbb5029085da360a87eeed3738905f5e7124f4b5d80296fc6
e51bd1570a7c940ac228fc1f4f1bddad17b94e87ecbf45a97aba1660ca9b397d88d5d6405d702e110b842687d6e7c3c19467b0678ad8c8604a933f6e8ad81df9
413f452ca83e17a67c3caf8725511afba482f4a8ca738531dc1dfb60ca87739cae775df5634fd3266241ee4356d24b132dc28b2cf7fd0f95470c9712b10053de
8c78baf70b7ef3b97ef3d53f124c79ac0053de0ca63c03a63c5680296f06539e01531e2bc094378329cf80298f1560ca9bc19467f883a67c0f4fbf95b7f87ba6
c033600ae8c014d08129a003534007a6800e4c011d98023a300574600ae8c014d061cf94e05a5b2061cf14f819f64c39ee08ac6d81843d53687d7e06a69cb740
0253ce5b208129e72d90c094f3164860ca790b24ec99023f03534007a6800e4c011d98023a300574600ae8c014d08129a003534007a6800e4c011d98023a3005
74600ae8c014d08129a003534007a6800e4c011d98023a4c9a12c2652304f1d831ddb52cddb76ce97e6683a644d7f72e661bfb8e1ac14dffa4bb3c2cddfd61d0
947eaa087c9f6dec3b04302561d094a51ac936f61d35a606663365482be5c6de85214cbbd37aba98f2cd2c9fae0bfbc6be433a7c35c5f5a177cb773fba21fa0e
53be9a57a62c6b66effd96dd94a51aeae6ef533db396fcebb37f0e4c29ea9430931dbe98321c8bf24ca64cad8fc3942fe7453f45aa53162b9676c8473750a77c
3dafc63e429d320bd5c5e97b703eede830e5db714b6fe3d8d87754384c49cd4f3ffde27ce7d31a771e53be9e9b73b4c7e3a6afd42aa53e8d3453f7b59834e57f
105d8883c9770c536e926653ccd527094c011d98023a3005749834a518fbb4213e2561d094223e65ec9dfc1e109fb262d094628e360eed4f1c5312064d29aefb
343f71e25356ec99525c4b1e9b9f38f1292b98723585f8943a9852d429c4a754b167caab7e0af129750c9a528c7d74750af129e64c29e353743d5ae2530cfdb5
2b37e7688fc78dc4a78012e2534009f129004d300574600ae830694a31e4217fca6b0c9a72a44b59e352c89fa2c1a029fbd4ec169742fe140d064dc96e435e2f
12923f45813d53f2d406f336f9535460cad514e253ea604a51a7109f52c59e29affa29c4a7d431684a36d4a98e7d884fa962d0942c5d4ab8c4a954203e65c5a2
2977e7688fc346e2534009f129a084f814802698023a4c9a7223d03a0b2bb0146250c1a02945d4412b2b46566069485cc1a02945d4412b2b06a66c1834a598cd
6f49e062df4d6d958ffdac531cfec9297e22f64c29ae108e4d535c0c935aae1bd24a0c510c8dfb7e3025ff595c1f9c2ba0a9a94a3fa683a420160b604afe73bc
5e1f9cfb29de8d4b74826b84507e3df64c69f7538a3a65faf2dd6a8ae5c6c7a22945d441a34e096eeac24e5f6bc4d360581583a6945107728f36b839b66d3325
354456b168cacd641876ab9113264d811f8029a003534007a6800e4c011db64db9b962a5692c9ab285a36c812a8dac18c6230d720c9ab287a3082b6b37303cf1
66d194e386b0f50250232b46f47368ca9a1123dd1566b69d326cca7651b9951523451a7443583362a4dc2966676c31e56c4a79ff7abe2003ad8f315a754a71ff
fa764bb2c3147b7f7da39f52a9538e07608a355a639f6a9db266c4186dde91bc60d9943d5045ce8ab199b264c448479a0d903469cace8d39da70fa6110dba680
1e4c011d98023a300574d836e5d51a1cad5fad61d1946bd4819415e31272603c02c1a02945d4819415a33485395a635c66f3a5ea22ac2931f68537883ab0c6f9
0ae1289be2c25c8b6c0b6f1075600dd994d305c29438652edf17dea0f53146a34ec92f102ed9f2c3782cbc8129c690fb29973a659c4d3916dec014635cc63eaf
ea9463e10da20e8c718d3a107bb4e3d2fa1c0b6f10756014ed1d61c780c7ec20d9b829a007534007a6800e4c011d98023a302541568cd75834650f4759371a59
3160c7a0297b38cab6a1c98a61791e7fc1a029d9946c6d0df68d14623004f2616c60ca69c9858c391186271fc606a6e4a6649792978b3e9e7c181b98725ec665
bf94bc04bb79f2616c604ade4f29eb14f2616c60ca791997233c65f225a47e0af93016306514b262a4e14ee7c987b161d29482da1c6d6a829620dbf5987f7942
1f08a608c469584c93938129126936c5f814ca094c011d98023a300574600ae8b068ca353e45ca9f0239064d29e253a4fc29178c4fe81b34a59ca3addf43187d
ecbab824edf2d17c880aa69c769c8feac3e0e27e1fbbf110154c39edc8731dcc3b7bbfdf9d4ceb63ef0d68d429d9c5e479a7ef306501534e3b8a3ac553a7ac60
ca69c7b94e199222e9fdf16e0ebdfed7e7f95160ca69c7f9a87e0e4ae953f694248fed101593a6e848fa9c073b9607c99822633ca7f5154c1189c3d367f05160
0ae8c014d08129a003534007a6800e4c011d98023a30057424530034588ee3023d11534045fc0f0302c5433e0188fa0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.21 L'encodage des instructions sans op\u233\'e9randes}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3240\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich216\picwgoal8295\pichgoal3240\pngblip
89504e470d0a1a0a0000000d4948445200000229000000d80803000000191c83b900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000ffa49444154789ced9d8ba1abac128529
26cd580ccd580ccd508c4798191e8a3a1e4de226ebbbf7fc71cb43a32b88b01ccd04c031de1b0034cc4af9b65ac15f004a013aa014a0034a013aa014a0034a01
3aa014a0034a013aa014a0034a013aa014a0034a013a0aa57c7b06ea46a6febed217592b65534ddb3afb66c271916f1fe24ee083d9b75236cb022d500ad001a5
001d500ad0f164a598ad84ed947602947203bb4ab1c6d8326f5a1aeb849c32270ccd84c9d4a72b97184e9ef6dd1428e56dec29651ca7e9e58abcb2e05e75424a
090963535c735dcd046fddb6207409b8fa7c843da584055f9cde94607d9d9052ac9b367efc61e1d54ad86c20168d504ef09b295b0950ca0d1c29a5794a970993
394a880b1bd70f5c7dfe04500ad0f106a5342f3250ca5fe7fffa29eebffa2950ca5fe6bfee7dfcd6bd4f4808a5d6454637b9f61d3794f23738184f79354f7b18
362913aaf194f640cb34b4075ae871e8f14442d8c6c92250ca0d3c798cf6b6ad43293700a5001d500ad001a5001d500ad001a5001d500ad001a5001d2da5f443
7fdfe89bac94d21fdf3ec49dc007b367a5801b8152800e2805e88052800e2805e88052800e2805e88052800e2805e88052800e2805e880528ea91e716a66709e
97da39bd75e51ff439ba665eed363fce35a5d0b7ad0ec4312ee61e8eb27d1d4bf363e3c4511916c119a6418edc60ac3cc3d2cce98d7579952c499165b57b6bbf
c925a5b857f846e140c80ab3fd0df9c07a330cc653208dc74367b3fd9dfc582a888f40ce698bc5aa7d582aa5cdbd4ab137d476492954d2aa1a4a39b0c39cdb86
06a57ec6ec998852fcf072e182e06cf9c81c9fcd7255ce69d2ef272ed2d5643403951a8c7bf1610b2965bd3e365073aed0608738249657c506dcb96a1fbcf5af
57c8e3073bd233789c1eff9a938739b9d8990bc762ad14daba7f0d5b8bc2f8a288397937e64cdbb2a1031bda136fe257b9baefef479462dcfcab9c0563e6ab48
3ee4ac9479653a00c67817fe3ff9590bdc79f1c3e07ccc6b0637c456372ee4ab4f55af19bd8d6df5fc7b9a9beb70b068553c60f385aedc0737d734ce87d4bcc6
58e72475d15fbce7c5ce5c38166ba584ea87f0efb5b1581ec7f07b1bd26eec5d7db89526b9c427de2feffcdb496d4ad48371f52e8b52cc107ef37efeb9c7ef64
8790b0b8fa38c33f9070844836592955bd8e5785ec763edbe3c0abc2515bee03355076de2e55eeb92efe8bf7fc5d571f17f7c8d3feb6165359fa06c5d5a7540a
bf88d9178953ad94cb0de2db29fa2941298b0078a294812e16c11d16d658b3a1147ab03a669d2aa554f5fad0932665f8f0bf78358bceb3b9ca61acf721eec2dc
de18aedc735dfc17eff9fb9492feb51753d95da5844baa73aeaef78f2b252ce74e82282564926eea144edc8652287f4b2945bd9e6eb6c2dab9a99acb1a5945ed
51bd0fa494b94d29cfcb9c5e76b69fa094f17c9b92fb297f502921b6a15dfca0a9c335ca9919c36171a6ea868952e2777fd175257641a496b2de90f165b80d0a
3d1523ab82fa86a9de07daa09b0c57ee259dfe12a5dcd127bca294c19e6f53f2bd8fff433dda89db94ec3f4eeba71844847f10cea44bc794e3ae26a5846bc290
ae438534ca7a438a54e1e8e748abc221f375ded0a38ddbe13a8749d2e9af5c8bb93c7e754529fce7965296a40e60fc7d905cfe1aed4eb877ad2cad26d3ad72ad
ff6c6c835751d3b0ecd12e37e85b9bbfde7e5f1a4f79fdd7f6b99df903b73ecf62eed7ae8ef7ce0ff36eae8de65f38dbc31f18787b166363f4cc7fee285e9c21
fc7fa5a045f963602e19e88052800e28e514fba6925dae3b4e78e317f6e10a50ca29f6ad024cfb86e4fa6d0a6f5cb50ff703a59c62fb2ced0f985bb356cac110
fb3a59a3943bc6eddb4029db902d843d1e533695b011647c599f52d98412cf62f05ef05af692c454f2aea4f2ecd6a03273fe319a03c2a565a43947367370a5bc
71fa88d9a59eb80dde12978abb763350ca36e214891e8f6c2a899610f990d46801a10271a49a7c21e22509a9753d939846a88c798d4e3640e9c953c2198a345b
64e76dc896a814efe1cd47034ad9449c229ead21536cf9cb69dac14a6a6cf69dcc7024474b7262e77ac448c2170a2a13fda2b4014997eb884b9324c6ca3ea469
56b6a04c694bd6a45dbbf9684029dbf862bacf25abc0986790d98a9294c23e1297d6262f892deb494692bc11aa2c6e40d2452931c32869b40f32dd48f9e2e58b
b7644ddab59b8f0694b249e114299552b629646f13a5888f242b2579490aa5a49e2d4f0fc732664a6d4a9ea12ef6a2a194dc43a66dd07f539b72fb042c94b249
e11491ab06f95ac355843f5cd2c4987d244929d94b32963e02329290f4b84c3c07d1516893d1c4147bc11b977d90ec733eda46dad268c49c70f7a80b94b2cdc2
2922a692313e0414fab2d2c290852f62ab36a588a7474b52cf40eb06d9087559e6c5972d8c2643de0bde387fc4ec9c8f6a4e5b225b8ab97fd0054ad96179a7e9
ebcf45b26b4c7bfa3275b5ecea2c61892e595536dffa2832f87abd5be6ba0928e531cc77bafec18fb64029cf210c953cd78c01a5001d500ad001a57c99e785bf
d8004ad9e6963bcd23b34123fd943fe1639eebb652e4319de527b8c07a7c3d0da89e2eb9bffe2db49422214e969fade27fa5edfc1f4647d706eb57311f284315
ff21cef473e48ae44c885717f220888d203b02e29a644648257211361370c979d540bb531a13c21e7295d91ff10e5a4a91c7fc969fbf461e82ad623e501c8a40
19ff8166fa479e086667c1c4b3d1c16f202e83ec08886bc48c904be4226229e092af318dfdc64ab87caa32f91ade73341a4a9139ede56703b1765e7f98f18194
4a29623e4c694abfb19afe4ace82d2b760d3bc9e3802e8ea13138b1245113613d83c2d34a5c9a6543e55e9de32df938e46fb69d3bc3ff9b3593c7ee7e2f7d013
a552aaa76e431c8a40b15a66fae733365f2f92b3201761a5548e80d44f31ae28514e608ba520ee4e91b92c9faacc73506f391ae794b20c60406ec0e2f7d0133b
4a913665b13ac426f0753775a194ca11509cdeb2635b2885cc044ba534da143b3c4c29cb00068666baebf017bd40a1b326bb50ca980f465e9d66fa6916579c05
e5698fbffdca1130160d412e51162133c1284ae1dd61e303974f557e5c297bfd94669bf2c1c7a83f8a890e67b354ca90424c14abd34c3ff57693b3a06c200cdf
b0e41b460e922156b85cedc2b620912f7877c4f8c0e5a5cacf2b65efdea7d5a694bf879e6846b70ca7632336469daf557695afe5456855ba4aabd77fe2d83747
de24c4c9f2b3519c1d5d374472791ae3d8bca0f6da801e72718c567e761d8ee18e6d07c007e3503c8b4bf33e1b3f3bd023d794f260e30db819cc25031d50cab7
a9df64f25cbb8aae470bfeeba6e7b088abde64b259e41133f61ad7417e93cdbaf813bec3c7f98f09dbcd22458c56ad5de53b6846ded29b6c7e8be44421fb4776
8d48e889388644012a227191d652808b7829292d26cb22d59b4cb6ec2aa5512619624a9bcc67d08ce6ef287d749581a62bf7417a230ad93f0ad788849e0813e8
314005110d24bc3646af88e3b985c56455a47a93c9965da59caa4c8698d226f319143384d38e52e8c52d62a0e9cb7dc0be0fb17f64d708c535e009f4e26ccd8b
295445f8b0341f942c26eb22ceacaf3e2bbb4aa51431c4543e978f705229ad19c264a0e9cc7dc04e14b17f54ae913c815e1cbdbcd666a514169375919652a6a5
5da5528a4c47963699cf70b64d69cc10a629cccedc07ec4411fbc7422972486aa5f0daa24d99b2c5645d6453297523bea9942fb7297bfd94769b3215fe887e60
278ad83fdc32940a4da0d74a496b63808b90bfb498ac8ad44ad9b0ab9446994229d926f31934f73eda36a533f7813851d8fe513ad1c27a094a910b84455e4b01
2e287fb698ac8ad44ad9b0ab9446994229c387e7ef55ae83a31eedc44ae9cb7d909d286bf1bbf49f76520a7031d55692834660c3aed230ca6cdb64dec5c531da
e577e8694cf7c2c5f4d60017cd19fbcf5fe9e13ad8e48a13e5ce0017cd19fbcfdb64e03a003a30970c744029400794729ee77a48dec9febdcfd6df0bfa3c729b
b7179d8d302ad9f3a7882fe5302ac62f1c395b8d97fd207b63b4e24b398c8ad1e791cbee92691283497c854a1cf58a6be35bd2df1ab5e439eccdfba4c9c2a3a8
18e9cd355d91dd2553fd8e15790c995c16ef8d5af21c76e69265b17a827d599cae3ef2f290ae28dc2553f58e953981d4c3f3bbef8c5af21c4e2aa5f9043bbdad
a69f091fa670974cd53b561ccf6e91cbe2bdcf8d3f87b36d4afb09f6e9c3d1e93e42e12e99aa77ac70200acef0c34ad9eba76cb429d387fd571fa170974cd53b
569ce1d817d16591ec4d9d8b65efde4794721415835c35dd3dd95dba4ba6a978c78a33dcc4449745f21ef539aa94d8f5a748037c1015c3196bba1de95dbc7765
fda6965fe1e2186d6a49babbf3010be04f013ae04f013a30970c7440294087ae47bb4fe7b78720a2711d1c45c540a3f40b685c07475131a0945f40339a7f1015
a3301d7415150354286608a71da5d0d5474c077d45c500152795d29c2114d34167513140c5d936a5354328a683cea262808a93fd94769b3291e9e0379dc8bf82
c675701815434c077d45c500152ad7c151540c311df4151503545c1ca315d78134243fe4d7f835e03a003ae03a003a30970c7440294007940274ec2b056f6f01
4253298b6818875131c00fd074322da2611c46c5003fc0c6c85bf594e961548c185504f4cd8e521a6f5a5817a7e792435491b7ed2278042795d27e82bdbfb72b
801567db9466540cdff173c98039d94f69b6291455e433fb0bbec59e525af73eeda81821aac827f6167c8f3da5acdfdeb22ece71de4c7f219940cdc5315af6a7
604ab97fe04f013ae04f013a30970c7440294007940274e8ee7d00d0f8538ee2a7805f40e34f398a9f027e01cdbccf51fc14b1a7207a4acf28e692a783a74dc5
9e82e8295d735229cdb964b2a7207a4adf9c6d535a73c9644f41f494be39d94f69b5296c4f41afb76f34fe94c3f829644f41f494ae51f9530e23021a09de859b
9f6eb938464bfe14444ff901e04f013ae04f013a30970c74402940874e29701f803dd7c1ca7dd0280ed7c1afb0e73a58ba0fc02fb33bf2b67e07fb92e03af0d6
bf5edebf829668f95d3b0bbe8842294751319c316e08ff62e8fcc16190a54b4e2aa53543e8e6a4f07e9f902fe61dd079e990b36dcac60c61f96f42d49d1e39d9
4f69b7294ba5a04de9108d520ea262d44a19b7ba34e06fa351ca41548c5a2903ac077d72718c56deda92321a84c8e8949b5d07b04876cbcdae033f363382bf0f
e692810e2805e88052808eeb4af196feed24830ed0f853b6a3625443b3db59400768fc29fb5131a094df403546bb79babd2d95c25131fc601cf95664041774c0
35a554571f898a113fad04cb80523ae1a4521673c9a552242a06a9c64ab00c28a513ceb629f55c72a914898a614529142c034ae984fbda942aefac1404cbe88b
fbda941415235e81ac04cb80523ae1c61ead44c570c6d897956019504a27dc3a9a4f6d4db83445db1b8c2a3d71ffbc8f37ce8f6848bae30d3384613405cd4977
602e19e88052800e2805e88052800e2805e88052800e2805e88052800ec3b3c3001cb011960b801aefff0180ecfc3942916abe0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 3.22 L'encodage des instructions de saut}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a quatre classes d'instructions prenant une seule op\u233\'e9rande. Le premier opcode (}{\rtlch \ltrch\i\loch
ii}{\loch
 = 00) admet un ensemble d'instructions sans op\u233\'e9randes (figure 3.21). La seconde possibilit\u233\'e9 (avec }{\rtlch \ltrch\i\loch
ii }{\loch
=}{\rtlch \ltrch\i\loch
 }{\loch
01) est \u233\'e9galement un opcode d'expansion qui fournit toutes les instructions de saut (voir fig. 3.22). La troisi\u232\'e8me combinaison (}{\rtlch \ltrch\i\loch
rr = }{\loch
10) est l'instruction }{\rtlch \ltrch\i\loch
not}{\loch
. Ceci est l'op\u233\'e9ration logique NOT qui invertit tous les bits dans le registre de destination ou dans l'op\u233\'e9rande de m\u233\'e9moire. Le quatri\u232\'e8me opcode (ii = 11) est inutilis\u233\'e9. Toute tentative de l'ex\u233\'e9cuter arr\u234\'eatera le processeur avec une erreur d'instruction }{\rtlch \ltrch\lang3084\loch
non permise}{\loch
. Les concepteurs des CPU se r\u233\'e9servent souvent des opcodes de }{\rtlch \ltrch\lang3084\loch
ce genre }{\loch
pour pouvoir ensuite \u233\'e9largir l'ensemble des instructions (comme Intel a fait en passant du 80286 au 80386). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a sept instructions de saut dans l'ensemble des instructions x86. Toutes prennent la forme suivante : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
jxx\tab adresse}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction jmp copie la valeur imm\u233\'e9diate de 16 bits (l'adresse) qui suit l'opcode dans le registre IP. Par cons\u233\'e9quent, le CPU chargera la prochaine instruction \u224\'e0 l'adresse vis\u233\'e9e. Les six instructions restantes sont des sauts conditionnels. Elles testent certaines conditions et passent le contr\u244\'f4le \u224\'e0 l'endroit sp\u233\'e9cifi\u233\'e9, si les conditions sont vraies ; elles passent \u224\'e0 l'instruction suivante si la condition est fausse. Ces six instructions }{\rtlch \ltrch\i\loch
ja}{\loch
, }{\rtlch \ltrch\i\loch
jae}{\loch
, }{\rtlch \ltrch\i\loch
jb}{\loch
, }{\rtlch \ltrch\i\loch
jbe}{\loch
, }{\rtlch \ltrch\i\loch
je}{\loch
 et }{\rtlch \ltrch\i\loch
jne}{\loch
 permettent de tester }{\rtlch \ltrch\i\loch
plus grand}{\loch
, }{\rtlch \ltrch\i\loch
plus grand ou \u233\'e9gal}{\loch
, }{\rtlch \ltrch\i\loch
plus petit}{\loch
, }{\rtlch \ltrch\i\loch
plus petit ou \u233\'e9gal}{\loch
, }{\rtlch \ltrch\i\loch
\u233\'e9gal }{\loch
et }{\rtlch \ltrch\i\loch
in\u233\'e9gal}{\loch
. Normalement, on les ex\u233\'e9cute imm\u233\'e9diatement apr\u232\'e8s une instruction }{\rtlch \ltrch\i\loch
cmp}{\loch
, puisqu'elle ajuste les flags }{\rtlch \ltrch\i\loch
moindre que}{\loch
 et }{\rtlch \ltrch\i\loch
\u233\'e9gal}{\loch
 que l'instruction de saut conditionnel teste. Noter que les opcodes }{\rtlch \ltrch\lang3084\loch
possibles}{\loch
 pour les instructions de saut sont en r\u233\'e9alit\u233\'e9 huit, mais le x86 n'en utilise que sept. Le huiti\u232\'e8me est un autre opcode }{\rtlch \ltrch\lang3084\loch
r\u233\'e9serv\u233\'e9}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le dernier groupe d'instructions, les instructions sans op\u233\'e9randes, apparaissent dans la figure 3.21. Trois de ces instructions sont des opcodes ill\u233\'e9gaux. L'instruction }{\rtlch \ltrch\i\loch
brk}{\loch
 (break) arr\u234\'eate le CPU tant que l'utilisateur ne le red\u233\'e9marre manuellement.  Ceci est utile pour mettre un programme en pause pendant l'ex\u233\'e9cution pour en observer les r\u233\'e9sultats. L'instruction iret (interrupt return) permet au contr\u244\'f4le de revenir d'une }{\rtlch \ltrch\i\loch
routine de service d'interruption}{\loch
 (RSI ou ISR en anglais). On discutera de ces routines plus tard. L'instruction }{\rtlch \ltrch\i\loch
halt}{\loch
 termine l'ex\u233\'e9cution d'un programme. L'instruction }{\rtlch \ltrch\i\loch
get}{\loch
 lit une valeur hexad\u233\'e9cimale entr\u233\'e9e par l'utilisateur et la stocke dans le registre ax ; l'instruction }{\rtlch \ltrch\i\loch
put}{\loch
 envoie en sortie la valeur dans ax. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_08}{\*\bkmkend p3_03_08}\rtlch \ltrch\fs23\b\loch
3.3.8\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
L'}{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\lang3084\b\loch
x\u233\'e9cution}{\rtlch \ltrch\fs23\b\loch
 des }{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\b\loch
nstructions }{\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9}{\rtlch \ltrch\fs23\b\loch
tape par }{\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9}{\rtlch \ltrch\fs23\b\loch
tape}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un CPU x86 }{\rtlch \ltrch\i\loch
ne termine pas}{\loch
 l'ex\u233\'e9cution d'une instruction en un cycle d'horloge. Pour chaque instruction, il passe par diverses \u233\'e9tapes. Par exemple, pour ex\u233\'e9cuter l'instruction }{\rtlch \ltrch\i\loch
mov reg, reg/mem/const}{\loch
, l'unit\u233\'e9 de contr\u244\'f4le effectue les commandes suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction dans la m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour le registre IP pour pointer sur l'octet suivant.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction pour voir qu'est-ce qu'elle fait.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger l'op\u233\'e9rande de 16 bits de l'instruction dans la m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, mettre \u224\'e0 jour IP pour qu'il pointe au-del\u224\'e0 de l'op\u233\'e9rande.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande, si requis (c'est-\u224\'e0-dire bx + xxxx).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker la valeur trouv\u233\'e9e dans le registre de destination. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une description \u233\'e9tape par \u233\'e9tape peut aider \u224\'e0 rendre clair ce que le CPU est en train de faire. Dans la premi\u232\'e8re \u233\'e9tape, il recherche l'octet de l'instruction dans la m\u233\'e9moire. Pour ce faire, il copie la valeur du registre IP dans le bus des adresses et y lit l'octet \u224\'e0 cette adresse. Ceci prend un cycle d'horloge}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Ici, on consid\u233\'e9rera un cycle d'horloge et un cycle de m\u233\'e9moire comme s'ils \u233\'e9taient d'une dur\u233\'e9e \u233\'e9quivalente. }
}}
}{\loch
.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Apr\u232\'e8s avoir charg\u233\'e9 l'octet de l'instruction en cours, le CPU met \u224\'e0 jour le registre IP pour qu'il pointe sur l'octet suivant dans le flux d'instructions. Si l'instruction courante compte plusieurs octets, IP est en train de pointer sur la premi\u232\'e8re op\u233\'e9rande de celle-ci. Si au contraire elle est une instruction d}{\rtlch \ltrch\lang3084\loch
'un seul octet, alors}{\loch
 il pointera sur la prochaine instruction. Ceci prend un autre cycle d'horloge. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La prochaine \u233\'e9tape est de d\u233\'e9coder l'instruction pour voir ce qu'elle fait. Ceci indiquera au CPU, parmi d'autres choses, s'il faut charger des octets d'op\u233\'e9randes additionnels dans la m\u233\'e9moire. Ce}{\rtlch \ltrch\lang3084\loch
 qui }{\loch
prend encore un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pendant le d\u233\'e9codage, le CPU d\u233\'e9termine les types d'op\u233\'e9randes que l'instruction demande. Si l'instruction requiert une op\u233\'e9rande constante de 16 bits (c'est-\u224\'e0-dire, si le champ }{\rtlch \ltrch\i\loch
mmm}{\loch
 est 101, 110 ou 111), alors le CPU chargera la constante dans la m\u233\'e9moire. Cette \u233\'e9tape peut demander z\u233\'e9ro, un ou deux cycles. Elle demande z\u233\'e9ro cycles s'il n'y a pas d'op\u233\'e9randes de 16 bits \u224\'e0 charger ; un cycle si l'op\u233\'e9rande de 16 bits fait bien partie du mot (autrement dit, si elle commence \u224\'e0 une adresse paire) ; deux cycles si la derni\u232\'e8re condition n'est pas satisfaite (elle commence \u224\'e0 une adresse impaire). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si le CPU trouve l'op\u233\'e9rande de 16 bits, il doit incr\u233\'e9menter IP de deux pour qu'il pointe sur l'octet suivant l'op\u233\'e9rande. Cette op\u233\'e9ration prend z\u233\'e9ro cycles ou un cycle d'horloge. Z\u233\'e9ro cycles s'il n'y a pas d'op\u233\'e9rande et un cycle si l'op\u233\'e9rande est pr\u233\'e9sente. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ensuite, le CPU calcule l'adresse de l'op\u233\'e9rande si celle-ci correspond \u224\'e0 une adresse de m\u233\'e9moire. Cette \u233\'e9tape est requise seulement quand le champ }{\rtlch \ltrch\i\loch
mmm}{\loch
 de l'octet de l'instruction est 101 ou 100. Si le champ }{\rtlch \ltrch\i\loch
mmm}{\loch
 contient 100, alors le CPU calcule la somme entre le registre bx et la constante de 16 bits ; ceci demande deux cycles, un pour charger la valeur de bx et l'autre pour effectuer la somme entre bx et xxxx. Si le champ }{\rtlch \ltrch\i\loch
mmm}{\loch
 contient 100, alors le CPU charge la valeur de bx pour obtenir l'adresse m\u233\'e9moire. Ceci demande un cycle. Si }{\rtlch \ltrch\i\loch
mmm}{\loch
 ne contient ni l"un, ni l'autre, alors cette \u233\'e9tape est saut\u233\'e9e et aucun cycle }{\rtlch \ltrch\lang3084\loch
n\u8217\'92}{\loch
est consomm\u233\'e9. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Trouver l'op\u233\'e9rande peut prendre de z\u233\'e9ro \u224\'e0 trois cycles, selon la nature de l'op\u233\'e9rande. Si elle est une constante (}{\rtlch \ltrch\i\loch
mmm}{\loch
 = 111), alors cette \u233\'e9tape ne demande pas de cycles parce qu'on a d\u233\'e9j\u224\'e0 trouv\u233\'e9 cette constante dans la m\u233\'e9moire dans une \u233\'e9tape pr\u233\'e9c\u233\'e9dente. Si l'op\u233\'e9rande est un registre (}{\rtlch \ltrch\i\loch
mmm }{\loch
= 000, 001, 010 ou 011), alors un cycle d'horloge sera consomm\u233\'e9. Si c'est une op\u233\'e9rande en m\u233\'e9moire align\u233\'e9e sur un mot (donc \u224\'e0 une adresse paire et alors }{\rtlch \ltrch\i\loch
mmm }{\loch
= 100, 101 ou 110), alors il se produira deux cycles d'horloge. Si c'est une op\u233\'e9rande non align\u233\'e9e, trois cycles seront requis. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La derni\u232\'e8re \u233\'e9tape de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 est de stocker la valeur dans l'emplacement de destination. Puisque la destination de l'instruction de chargement est toujours un registre}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Dans cette version de mov, naturellement (n.d.t.)}
}}
}{\loch
, alors cette op\u233\'e9ration demande un cycle d'horloge. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans son ensemble}{\loch
, l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 prend en total entre cinq et onze cycles, selon ses op\u233\'e9randes et leurs adresses de d\u233\'e9but (paires ou impaires). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le CPU fait ce qui suit pour une instruction de type }{\rtlch \ltrch\i\loch
mov mem, reg}{\loch
 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction dans la m\u233\'e9moire (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour IP pour qu'il pointe sur l'instruction suivante (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction pour l'interpr\u233\'e9ter (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger l'op\u233\'e9rande dans la m\u233\'e9moire (z\u233\'e9ro cycles si le mode d'adressage est [bx], un cycle s'il s'agit du mode [xxxx], [xxxx + bx] ou xxxx et que la valeur xxxx qui suit l'opcode commence \u224\'e0 une adresse paire, et deux cycles si la valeur de xxxx commence \u224\'e0 une adresse impaire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, mettre \u224\'e0 jour IP pour qu'il pointe apr\u232\'e8s l'op\u233\'e9rande (z\u233\'e9ro cycles s'il n'y avait pas cette op\u233\'e9rande, un cycle si elle \u233\'e9tait pr\u233\'e9sente). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande (z\u233\'e9ro cycles si le mode d'adressage n'est pas [bx] ou [xxxx + bx], un cycle si le mode est [bx] ou deux cycles si le mode d'adressage est [xxxx + bx]). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir du registre la valeur \u224\'e0 stocker dans la m\u233\'e9moire (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker la valeur charg\u233\'e9e dans l'emplacement de destination (un cycle si c'est un registre, deux cycles si c'est un mot commen\u231\'e7ant \u224\'e0 la bonne adresse ou trois cycles si l'adresse est impaire). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le timing pour les deux derni\u232\'e8res \u233\'e9tapes est diff\u233\'e9rent par rapport \u224\'e0 l'autre version de }{\rtlch \ltrch\i\loch
mov}{\loch
, parce que, dans cette instruction-l\u224\'e0, la donn\u233\'e9e \u233\'e9tait lue de la m\u233\'e9moire ; cette version de }{\rtlch \ltrch\i\loch
mov}{\loch
 "charge" une valeur }{\rtlch \ltrch\lang3084\loch
\u224\'e0 partir d\u8217\'92}{\loch
un registre. Et elle demande aussi de cinq \u224\'e0 onze cycles pour s'ex\u233\'e9cuter. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions }{\rtlch \ltrch\i\loch
and}{\loch
, }{\rtlch \ltrch\i\loch
sub}{\loch
, }{\rtlch \ltrch\i\loch
cmp}{\loch
, }{\rtlch \ltrch\i\loch
and}{\loch
 et }{\rtlch \ltrch\i\loch
or}{\loch
 font ce qui suit :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction de la m\u233\'e9moire (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour IP pour qu'il pointe sur la prochaine instruction (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger une op\u233\'e9rande constante (z\u233\'e9ro cycles si le mode d'adressage est [bx], un cycle s'il s'agit du mode [xxxx], [xxxx + bx] ou xxxx et la valeur xxxx qui suit le opcode commence \u224\'e0 une adresse paire, et deux cycles si cette valeur commence \u224\'e0 une adresse impaire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, mettre \u224\'e0 jour IP pour qu'il pointe apr\u232\'e8s l'op\u233\'e9rande constante (z\u233\'e9ro cycles ou un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande (z\u233\'e9ro cycles si le mode d'adressage n'est pas [bx] ou [xxxx + bx], un cycle si le mode est [bx] ou deux cycles s'il est [xxxx + bx]). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir la valeur de l'op\u233\'e9rande et l'envoyer dans l'unit\u233\'e9 logique et arithm\u233\'e9tique (ULA) (z\u233\'e9ro cycles si elle est une constante, un cycle si elle est un registre, deux cycles si elle commence \u224\'e0 une adresse paire et trois, dans le cas contraire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger la valeur de la premi\u232\'e8re op\u233\'e9rande (un registre) et l'envoyer \u224\'e0 l'ULA (un cycle).  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Demander \u224\'e0 l'ULA d'additionner, de soustraire, de comparer ou d'effectuer un AND ou un OR (un cycle).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\lang3084\loch
Garder}{\loch
 la valeur charg\u233\'e9e dans le registre de la premi\u232\'e8re op\u233\'e9rande (un cycle).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces instructions demandent entre huit et dix-sept cycles d'horloge pour ex\u233\'e9cuter. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch\ai \ltrch\i\loch
not}{\loch
 est semblable, mais }{\rtlch \ltrch\lang3084\loch
elle }{\loch
fonctionne un peu plus rapidement parce qu'elle a une seule op\u233\'e9rande :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction dans la m\u233\'e9moire (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour IP pour qu'il pointe sur l'octet suivant (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger une op\u233\'e9rande constante dans la m\u233\'e9moire (z\u233\'e9ro cycles si le mode d'adressage est [bx], un cycle s'il s'agit du mode [xxxx], [xxxx + bx] ou xxxx et la valeur xxxx qui suit le opcode commence \u224\'e0 une adresse paire, et deux cycles si la valeur de xxxx commence \u224\'e0 une adresse impaire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, mettre \u224\'e0 jour IP pour qu'il pointe apr\u232\'e8s l'op\u233\'e9rande constante (z\u233\'e9ro cycle ou un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande (z\u233\'e9ro cycles si le mode d'adressage n'est pas [bx] ou [xxxx + bx], un cycle si le mode est [bx] ou deux cycles si le mode d'adressage est [xxxx + bx]). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir la valeur de l'op\u233\'e9rande et l'envoyer dans l'unit\u233\'e9 logique et arithm\u233\'e9tique (un cycle si c'est un registre, deux cycles si elle commence \u224\'e0 une adresse paire et trois cycles si elle commence \u224\'e0 une adresse impaire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Demander \u224\'e0 l'ULA d'effectuer un NOT (un cycle).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Stocker la valeur charg\u233\'e9e dans l'op\u233\'e9rande (un cycle si c'est un registre, deux cycles si c'est un mot commen\u231\'e7ant \u224\'e0 la bonne adresse ou trois cycles sinon). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'instruction }{\rtlch\ai \ltrch\i\loch
not}{\loch
 peut prendre de six \u224\'e0 quinze cycles pour ex\u233\'e9cuter. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les sauts conditionnels fonctionnent comme suit :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction dans la m\u233\'e9moire (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour IP pour qu'il pointe sur l'octet suivant (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'adresse cible depuis la m\u233\'e9moire (un cycle si xxxx est une adresse paire et deux si xxxx est une adresse impaire).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour IP pour qu'il pointe apr\u232\'e8s l'adresse (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Tester les drapeaux (flags) }{\rtlch \ltrch\i\loch
plus petit que }{\loch
et }{\rtlch \ltrch\i\loch
\u233\'e9galit\u233\'e9}{\loch
 du CPU (un cycle). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si la valeur du drapeau est appropri\u233\'e9e pour le saut conditionnel, le CPU copie la constante de 16 bits dans le registre IP (z\u233\'e9ro cycles s'il n'y a pas de branchement, un cycle dans le cas contraire). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le saut inconditionnel est identique en termes d'op\u233\'e9rations \u224\'e0 l'instruction }{\rtlch \ltrch\i\loch
mov reg, xxxx}{\loch
, sauf que le registre de destination est le registre IP x86 au lieu que ax, bx, cx, ou dx. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions }{\rtlch \ltrch\i\loch
brk}{\loch
, }{\rtlch \ltrch\i\loch
iret}{\loch
, }{\rtlch \ltrch\i\loch
halt}{\loch
, }{\rtlch \ltrch\i\loch
put}{\loch
 et }{\rtlch \ltrch\i\loch
get}{\loch
 sont sans int\u233\'e9r\u234\'eat ici. Elles }{\rtlch \ltrch\lang3084\loch
figurent}{\loch
 dans le jeu d'instructions principalement pour des programmes et des }{\rtlch \ltrch\lang3084\loch
preuves}{\loch
. On ne peut pas vraiment donner un comptage des cycles puisqu'elles peuvent prendre une quantit\u233\'e9 de temps ind\u233\'e9finie pour compl\u233\'e9ter leur t\u226\'e2che. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_09}{\*\bkmkend p3_03_09}\rtlch \ltrch\fs23\b\loch
3.3.9\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
d}{\rtlch \ltrch\fs23\b\loch
iff\u233\'e9rences entre les }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseurs x86}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tous les processeurs x86 partagent le m\u234\'eame jeu d'instructions, les m\u234\'eames modes d'adressage et ex\u233\'e9cutent leurs instructions \u224\'e0 l'aide de la m\u234\'eame s\u233\'e9quence d'\u233\'e9tapes. Alors, quelle est la diff\u233\'e9rence ? Pourquoi ne pas inventer un seul processeur au lieu de quatre ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La principale raison de soulever cette question est d'expliquer les diff\u233\'e9rences de performance reli\u233\'e9es aux quatre caract\u233\'e9ristiques mat\u233\'e9rielles : les }{\rtlch \ltrch\i\loch
queues de pr\u233\'e9chargement}{\loch
, les }{\rtlch \ltrch\i\loch
caches}{\loch
, les }{\rtlch \ltrch\i\loch
pipelines}{\loch
 et la }{\rtlch \ltrch\i\loch
conception superscalaire}{\loch
. Le processeur 886 est un "p\u233\'e9riph\u233\'e9rique" bon march\u233\'e9 qui n'impl\u233\'e9mente aucune de ces caract\u233\'e9ristiques raffin\u233\'e9es. Le processeur 8286 impl\u233\'e9mente la queue de pr\u233\'e9chargement. Le 8486 a une queue de pr\u233\'e9chargement, un cache et un pipeline. Le 8086, \u224\'e0 part d'avoir toutes les caract\u233\'e9ristiques pr\u233\'e9c\u233\'e9dentes est muni aussi de l'op\u233\'e9ration superscalaire. En \u233\'e9tudiant chacun ce ces processeurs vous }{\rtlch \ltrch\lang3082\loch
pouvez}{\loch
 voir les b\u233\'e9n\u233\'e9fices apport\u233\'e9s par chacune de ces }{\rtlch \ltrch\lang3082\loch
technologies}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_10}{\*\bkmkend p3_03_10}\rtlch \ltrch\fs23\b\loch
3.3.10\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseur 886}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Celui-ci est le membre le plus lent de la famille x86. La dur\u233\'e9e de chaque instruction a \u233\'e9t\u233\'e9 trait\u233\'e9e dans la section pr\u233\'e9c\u233\'e9dente. L'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
, par exemple, demande entre cinq et douze cycles pour ex\u233\'e9cuter, selon les op\u233\'e9randes. Le tableau suivant fournit le timing des diverses formes des instructions }{\rtlch \ltrch\lang3082\loch
du}{\loch
 le processeur 886. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\b\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\b\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tableau 19 : temps d'ex\u233\'e9cution pour les instructions 886}
\par \trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
Instruction }{\rtlch\dbch\af13\dbch\af13\hich\af4 \ltrch\fs18\loch\f4\loch
\u61537\'3f}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
Mode d'adressage }{\rtlch\dbch\af12\dbch\af12\hich\af5 \ltrch\fs18\loch\f5\loch
\u61682\'3f}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
mov }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
(les deux formes)}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
add, sub, }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
cmp, and, or}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
not}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
jmp}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
jxx}\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, xxxx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
8-9}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
7-8}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
9-10}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [xxxx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
8-10}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
10-12}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [xxxx+bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
10-12}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
12-14}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[bx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
7-8}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
8-10}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx+bx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
10-12}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
9-11}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
10-13}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx+bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
12-15}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
xxxx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-8}\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch \ltrch\fs8\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a trois choses importantes \u224\'e0 }{\rtlch \ltrch\lang3082\loch
noter}{\loch
 ici. En premier, }{\rtlch \ltrch\lang3082\loch
les instructions longues }{\loch
prennent plus de temps pour s'ex\u233\'e9cuter. En second lieu, les instructions qui font r\u233\'e9f\u233\'e9rence \u224\'e0 la m\u233\'e9moire, }{\rtlch \ltrch\lang3082\loch
au lieu qu\u8217\'92}{\rtlch \ltrch\lang3084\loch
aux registres}{\loch
, ont une ex\u233\'e9cution g\u233\'e9n\u233\'e9ralement plus }{\rtlch \ltrch\lang3084\loch
lente }{\loch
; ceci est particuli\u232\'e8rement vrai s'il y a des \u233\'e9tats d'attente associ\u233\'e9s \u224\'e0 l'acc\u232\'e8s m\u233\'e9moire (le tableau ci-dessus }{\rtlch \ltrch\lang3084\loch
suppose}{\loch
 z\u233\'e9ro \u233\'e9tats d'attente). Finalement, les instructionsns utilisant des modes d'adressages complexes sont plus lentes. }{\rtlch \ltrch\lang3084\loch
Celles}{\loch
 qui utilisent des registres comme op\u233\'e9randes sont plus courtes, n'acc\u233\'e9dent pas \u224\'e0 la m\u233\'e9moire et n'utilisent pas de mode d'adressage complexe. }{\rtlch \ltrch\i\loch
C'est la raison pour laquelle vous devriez garder vos variables dans les registres }{\rtlch \ltrch\lang3084\i\loch
chaque fois que vous pouvez}{\loch
.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_11}{\*\bkmkend p3_03_11}\rtlch \ltrch\fs23\b\loch
3.3.11\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseur 8286}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La cl\u233\'e9 pour am\u233\'e9liorer la vitesse d'un processeur est d'effectuer des op\u233\'e9rations en parall\u232\'e8le. Si, dans le timing donn\u233\'e9 pour le 886, l'on pouvait effectuer deux op\u233\'e9rations pour chaque cycle d'horloge, le CPU pourrait ex\u233\'e9cuter les instructions deux fois plus rapidement avec la m\u234\'eame vitesse. Cependant, d\u233\'e9cider simplement d'ex\u233\'e9cuter deux op\u233\'e9rations par cycle n'est pas aussi facile. Plusieurs \u233\'e9tapes dans l'ex\u233\'e9cution d'une instruction partagent des }{\rtlch \ltrch\i\loch
unit\u233\'e9s fonctionnelles}{\loch
 dans le CPU (les unit\u233\'e9s fonctionnelles sont des groupes de composantes logiques qui effectuent une op\u233\'e9ration commune, comme l'unit\u233\'e9 de contr\u244\'f4le et l'unit\u233\'e9 logique et arithm\u233\'e9tique). Une unit\u233\'e9 fonctionnelle peut ex\u233\'e9cuter seulement une op\u233\'e9ration \u224\'e0 la fois. Par cons\u233\'e9quent, vous ne pouvez pas faire deux op\u233\'e9rations en m\u234\'eame temps qui utilisent la m\u234\'eame unit\u233\'e9 fonctionnelle (par exemple, incr\u233\'e9menter le registre IP et faire la somme de deux valeurs). Une autre difficult\u233\'e9 }{\rtlch \ltrch\lang3084\loch
\u224\'e0 remarquer est }{\loch
qu'une op\u233\'e9ration peut d\u233\'e9pendre du r\u233\'e9sultat d'une autre. Par exemple, les deux derni\u232\'e8res \u233\'e9tapes de l'instruction }{\rtlch \ltrch\i\loch
add}{\loch
 impliquent }{\rtlch \ltrch\lang3084\loch
l\u8217\'92addition des deux valeurs et la garde du r\u233\'e9sultat}{\loch
. Vous ne pouvez pas stocker un r\u233\'e9sultat avant d'avoir effectu\u233\'e9 une somme. Il y a aussi d'autres ressources que le CPU ne peut pas partager entre les \u233\'e9tapes d'une instruction. Par exemple, il y a seulement un bus de donn\u233\'e9es ; le CPU ne peut pas charger un opcode en m\u234\'eame temps qu'il \u233\'e9crit une information dans la m\u233\'e9moire. L'astuce pour concevoir un CPU qui ex\u233\'e9cute plusieurs \u233\'e9tapes en parall\u232\'e8le est d'arranger ces \u233\'e9tapes de fa\u231\'e7on \u224\'e0 r\u233\'e9duire les conflits ou bien d'ajouter des composants logiques de fa\u231\'e7on que deux op\u233\'e9rations (ou plus) peuvent se produire simultan\u233\'e9ment en s'ex\u233\'e9cutant sur diff\u233\'e9rentes unit\u233\'e9s fonctionnelles.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez encore les \u233\'e9tapes que }{\rtlch \ltrch\i\loch
mov reg, mem/reg/const}{\loch
 n\u233\'e9cessite :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction de la m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Mettre \u224\'e0 jour le registre IP pour pointer sur le prochain octet.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction pour voir ce qu'elle fait.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger de la m\u233\'e9moire l'op\u233\'e9rande de 16 bits de l'instruction.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, mettre \u224\'e0 jour IP pour qu'il pointe au-del\u224\'e0 de l'op\u233\'e9rande.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande, si requis (c'est-\u224\'e0-dire bx + xxxx).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\lang3084\loch
Garder}{\loch
 la valeur trouv\u233\'e9e dans le registre de destination.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La premi\u232\'e8re op\u233\'e9ration utilise la valeur du registre IP (donc on ne peut pas ex\u233\'e9cuter en parall\u232\'e8le l'incr\u233\'e9ment) et le bus pour charger l'opcode de l'instruction de la m\u233\'e9moire. Toute \u233\'e9tape qui suit celle-ci d\u233\'e9pend de l'opcode charg\u233\'e9, donc c'est improbable qu'on p}{\rtlch \ltrch\lang3084\loch
eut}{\loch
 mettre en parall\u232\'e8le cette \u233\'e9tape avec toute autre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde et la troisi\u232\'e8me op\u233\'e9ration ne partagent aucune unit\u233\'e9 fonctionnelle et ne d\u233\'e9codent pas non plus un opcode qui d\u233\'e9pend de la valeur de IP. Donc, on peut facilement modifier l'unit\u233\'e9 de contr\u244\'f4le pour qu'elle incr\u233\'e9mente IP en m\u234\'eame temps qu'elle d\u233\'e9code l'instruction. Ceci permet de gagner un cycle dans l'ex\u233\'e9cution de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La troisi\u232\'e8me et la quatri\u232\'e8me op\u233\'e9ration ci-dessus (d\u233\'e9coder et, de fa\u231\'e7on optionnelle, charger l'op\u233\'e9rande de 16 bits) n'ont pas l'air de coller ensemble en parall\u232\'e8le, car, pour savoir s'il est n\u233\'e9cessaire de charger une op\u233\'e9rande de 16 bits en m\u233\'e9moire, le CPU a besoin de d\u233\'e9coder d'abord l'instruction. Cependant, on peut projeter un CPU qui anticipe et charge la valeur de 16 bits pour qu'elle soit disponible en tout cas, au besoin. Mais, il y a un probl\u232\'e8me : il faut avoir l'adresse de l'op\u233\'e9rande \u224\'e0 charger (donc la valeur du registre IP) et on doit attendre l'incr\u233\'e9ment de IP avant d'aller charger cette op\u233\'e9rande. Si on incr\u233\'e9mente IP en m\u234\'eame temps qu'on d\u233\'e9code l'instruction, il faudra attendre le prochain cycle avant de d\u233\'e9coder l'instruction en tant que telle.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les trois \u233\'e9tapes suivantes sont facultatives, il y a plusieurs s\u233\'e9quences d'instructions possibles \u224\'e0 ce point :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#1 (\u233\'e9tape 4, \u233\'e9tape 5, \u233\'e9tape 6 et \u233\'e9tape 7) - p.e., }{\rtlch \ltrch\i\loch
mov ax, [1000+bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#2 (\u233\'e9tape 4, \u233\'e9tape 5 et \u233\'e9tape 7) - p.e., }{\rtlch \ltrch\i\loch
mov ax, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#3 (\u233\'e9tapes 6 et 7) - p.e., }{\rtlch \ltrch\i\loch
mov ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
#4 (\u233\'e9tape 7) - p.e., }{\rtlch \ltrch\i\loch
mov ax, bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans la s\u233\'e9quence ci-dessus, l'\u233\'e9tape 7 d\u233\'e9pend toujours des \u233\'e9tapes qui pr\u233\'e9c\u232\'e8dent ; par cons\u233\'e9quent, celle-ci ne peut pas s'ex\u233\'e9cuter en parall\u232\'e8le avec }{\rtlch \ltrch\lang3082\loch
une autre}{\loch
. L'\u233\'e9tape 6 est \u233\'e9galement reli\u233\'e9e \u224\'e0 l'\u233\'e9tape 4, puisque cette derni\u232\'e8re utilise la valeur du registre IP, cependant l'\u233\'e9tape 5 peut ex\u233\'e9cuter en parall\u232\'e8le avec n'importe quelle autre. On peut donc \u233\'e9conomiser un cycle dans les deux premi\u232\'e8res s\u233\'e9quences }{\rtlch \ltrch\lang3082\loch
avec le r}{\rtlch \ltrch\lang3084\loch
\u233\'e9sultat que voici}{\loch
 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#1 (\u233\'e9tape 4, \u233\'e9tapes 5/6 et \u233\'e9tape 7) }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#2 (\u233\'e9tape 4, \u233\'e9tapes 5/7)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
#3 (\u233\'e9tapes 6 et 7)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
#4 (\u233\'e9tape 7)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Certainement, il n'y a pas de moyen de d\u233\'e9doubler les \u233\'e9tapes 7 et 8 dans l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
, car elle doit d'abord r\u233\'e9cup\u233\'e9rer la valeur avant de la stocker quelque part. En combinant ces \u233\'e9tapes comme ci-dessus, on obtient ce qui suit : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'instruction }{\rtlch \ltrch\lang3084\loch
depuis la m\u233\'e9moire}{\loch
.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction et mettre \u224\'e0 jour IP.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si requis, charger l'op\u233\'e9rande de 16 bits de l'instruction dans la m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer l'adresse de l'op\u233\'e9rande, si requis (c'est-\u224\'e0-dire bx + xxxx).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si besoin, charger l'op\u233\'e9rande et mettre \u224\'e0 jour IP pour qu'il pointe au-del\u224\'e0 de l'op\u233\'e9rande.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker la valeur charg\u233\'e9e dans le registre de destination.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En ajoutant quelques circuits logiques suppl\u233\'e9mentaires dans le CPU, on a pu ex\u233\'e9cuter l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 avec un ou deux cycles d'horloge en moins. Cette simple optimisation fonctionne bien aussi avec beaucoup d'autres instructions. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre probl\u232\'e8me avec l'ex\u233\'e9cution de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 concerne l'alignement des opcodes. Consid\u233\'e9rez l'instruction }{\rtlch \ltrch\i\loch
mov ax, [1000] }{\loch
qui appara\u238\'eet \u224\'e0 l'adresse 100 en m\u233\'e9moire. Le CPU consomme un cyle pour charger son opcode et, apr\u232\'e8s avoir d\u233\'e9cod\u233\'e9 l'instruction et avoir d\u233\'e9termin\u233\'e9 si elle a une op\u233\'e9rande de 16 bits, il emploie deux cycles additionnels pour charger cette op\u233\'e9rande (car cette derni\u232\'e8re appara\u238\'eet \u224\'e0 une adresse impaire - 101). Et ce qui est vraiment ironique est que les deux cycles additionnels employ\u233\'e9s pour charger ces deux octets sont superflus, car, d'apr\u232\'e8s tout, si le CPU a trouv\u233\'e9 l'octet }{\rtlch \ltrch\lang3082\loch
le moins significatif}{\loch
 de l'op\u233\'e9rande quand il a saisi l'opcode de l'instruction (n'oubliez pas que les CPU x86 sont des processeurs de 16 bits et recherchent toujours des valeurs de 16 bits dans la m\u233\'e9moire), pourquoi ne pas enregistrer cet octet et utiliser seulement un cycle additionnel pour trouver l'autre ? Ceci ferait \u233\'e9pargner un cycle quand l'instruction commence \u224\'e0 une adresse paire (et l'op\u233\'e9rande tombe dans une adresse impaire). Pour r\u233\'e9aliser cela, il suffit d'un registre d'un octet et un peu plus de circuits logiques, et en vaut bien l'effort. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pendant qu'on ajoute un registre pour servir de tampon aux octets des op\u233\'e9randes, on pourrait consid\u233\'e9rer quelques optimisations additionnelles qui peuvent utiliser la m\u234\'eame logique. Par exemple, consid\u233\'e9rez ce qui arrive avec cette m\u234\'eame instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 ex\u233\'e9cut\u233\'e9e ci-dessus. Si on charge l'opcode et l'octet }{\rtlch \ltrch\lang3082\loch
le moins significatif}{\loch
 de l'op\u233\'e9rande dans le premier cycle et l'octet }{\rtlch \ltrch\lang3082\loch
le plus significatif}{\loch
 de l'op\u233\'e9rande dans le second cycle, on est vraiment en train de lire quatre octets, et non trois. Le quatri\u232\'e8me est l'opcode de l'instruction suivante. Si l'on pouvait enregistrer cet opcode jusqu'\u224\'e0 l'ex\u233\'e9cution de l'instruction suivante, on pourrait \u233\'e9conomiser encore un cycle de son temps d'ex\u233\'e9cution, }{\rtlch \ltrch\lang3082\loch
puisqu'il }{\rtlch \ltrch\lang3084\loch
n\u8217\'92y aurait plus }{\loch
\u224\'e0 charger l'octet de l'opcode. De plus, puisque le d\u233\'e9codeur de l'instruction est inutilis\u233\'e9 quand le CPU  est en train d'ex\u233\'e9cuter l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
, on pourrait \u224\'e0 ce moment d\u233\'e9coder la prochaine ex\u233\'e9cution pendant que l'instruction courante est en train de s'ex\u233\'e9cuter, de fa\u231\'e7on \u224\'e0 \u233\'e9conomiser un autre cycle de l'ex\u233\'e9cution de la prochaine instruction. En moyenne, il y aura recherche de l'octet suppl\u233\'e9mentaire toutes les deux instructions. Par cons\u233\'e9quent, impl\u233\'e9menter ce simple sch\u232\'e8me nous permettra d'\u233\'e9liminer deux cycles }{\rtlch \ltrch\lang3084\loch
additionnels}{\loch
 dans \u224\'e0 peu pr\u232\'e8s 50% des instructions ex\u233\'e9cut\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
P}{\rtlch \ltrch\lang3084\loch
eu}{\loch
t-on faire quelque chose \u224\'e0 propos de l'autre 50% ? La r\u233\'e9ponse est oui. Notez que l'ex\u233\'e9cution de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 ne comporte pas un acc\u232\'e8s \u224\'e0 la m\u233\'e9moire pour chaque cycle d'horloge. Par exemple, quand on est en train de stocker une donn\u233\'e9e dans le registre de destination, le bus est disponible. Pendant les p\u233\'e9riodes de temps o\u249\'f9 le bus est disponible, on peut pr\u233\'e9charger des opcodes et des op\u233\'e9randes et enregistrer ces valeurs pour ex\u233\'e9cuter la prochaine instruction. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'am\u233\'e9lioration majeure que le 8286 a eue par rapport au 886 a \u233\'e9t\u233\'e9 la }{\rtlch \ltrch\i\loch
queue de pr\u233\'e9chargement}{\loch
 (prefetched queue). M\u234\'eame si le CPU n'est pas en train d'utiliser l'unit\u233\'e9 d'interface des bus (UIB), celle-ci peut charger des octets additionnels dans le flux des instructions. Chaque fois que le CPU a besoin d'une instruction ou d'un octet d'op\u233\'e9rande, il saisit le prochain octet disponible dans la queue de pr\u233\'e9chargement. Puisque }{\rtlch \ltrch\lang3084\loch
le UIB}{\loch
 saisit deux octets \u224\'e0 la fois et le CPU consomme g\u233\'e9n\u233\'e9ralement moins de deux octets par cycle, tout octet que le CPU charge normalement dans le flux des instructions, sera d\u233\'e9j\u224\'e0 pr\u234\'eat dans la queue de pr\u233\'e9chargement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez cependant que rien ne garantit que toutes les instructions et les op\u233\'e9randes seront en attente dans la queue }{\rtlch \ltrch\lang3084\loch
au}{\loch
 besoin. Par exemple, une instruction }{\rtlch \ltrch\i\loch
jmp 1000}{\loch
, rendrait invalide tout ce qui se trouve dans la queue. Si cette instruction appara\u238\'eet aux emplacements 400, 401, et 402 en m\u233\'e9moire, la queue de pr\u233\'e9chargement contiendrait les octets des adresses 403, 404, 405, 406, 407, etc. Apr\u232\'e8s avoir mis \u224\'e0 jour IP \u224\'e0 l'adresse 1000, les octets \u224\'e0 partir de l'adresse 404 ne seront plus d'aucune utilit\u233\'e9. Donc, le syst\u232\'e8me devra s'interrompre un moment afin de charger le double-mot }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l'adresse 1000 avant de continuer. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une autre am\u233\'e9lioration qu'on peut apporter c'est d\u233\'e9doubler le d\u233\'e9codage de l'instruction avec la derni\u232\'e8re \u233\'e9tape de l'instruction pr\u233\'e9c\u233\'e9dente. Apr\u232\'e8s que le CPU aura trait\u233\'e9 l'op\u233\'e9rande, le prochain octet disponible dans la queue de pr\u233\'e9chargement est un opcode, et le CPU peut le d\u233\'e9coder en pr\u233\'e9vision de son ex\u233\'e9cution. Sans doute, si l'instruction courante modifie le registre IP, tout le temps employ\u233\'e9 \u224\'e0 d\u233\'e9coder la prochaine instruction sera gaspill\u233\'e9e, mais puisque ceci se produit en parall\u232\'e8le avec d'autres op\u233\'e9rations, ceci ne constituera pas un grand inconv\u233\'e9nient pour le syst\u232\'e8me. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3795\shpbxcolumn\shpbxignore\shpleft0\shpright8280{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw552\pich253\picwgoal8280\pichgoal3795\pngblip
89504e470d0a1a0a0000000d4948445200000228000000fd0803000000a1bf7c0200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000e2a49444154789ced9dcbb9ab20144629
26cd580ccd580ccdd0402667904926197805447c006e1105eef7afc1911844b7ae03a844d900c0319201406014a5b4aba001200a200151000988024840144002
a2001210059080288004440124200a200151000988024840144002a2001210059080288004440124200a20715914334e4e9c59e24c665009d745e9c40829ab64
524db8bcb4425084eba270725681baa45df2892295067d37d618b629eaa684ae4898ec551bd54f1fe74c4c8cd9e8b28142e4697a4c93c274e3c299905cc9f01a
4de855c2d82246537a317decf4777a3ee38233b446b593a733db9b2457558339fcbda96106e388f9236c1d327dd7a935b3ce645ff26e9b4bfbb35672f651842a
4a98d3203e26e62c3b51cc77faaf7664d3f6943ed217b9b43f6be50651d459d0d8c4504511034469809ca2e8a647dafe869ccf7154427fda343d1ca2b443a6eb
28e64446d719aa3ca9cf6e74fda27aaf2ff50b6761bb223aa533f101a2b442a62bb37c72425512eab3eaa1cae98b419d17eb531c95b06a4cdf419446b8e35e8f
14b6f5b18dcf7ca14d2c32850b287da42f927b7f56419537054b1fe98b94de7db70051f2537af7dd42e5a294de921334b9d1742a17e5998709e500a21460214a
e94da102514a0051ea03a2e401a21c30ddbfe1ab42ae0e508228f5718b287ab0a3f40f326184f54194fab84594e537bb15b26355204a7de414651ed5a8ea123b
f071b74276ac4a7e51e6bb0a7701510e5889624735ea7105d3c047cf2a0f55c92d8ab02bd4531eab0753812807ac44b1a31acd20c87097f64895cca208b3619d
1913c1f5e83b887292aca2d8518d47a20cd695c097994531eb11fd349ca16310e53cd7c7a398516babc16a0451a2d54a5e51a4eb2a6951384449e0ba2866d4da
6ab0da3ce4f160d1902a794559186b36f30551ce936184db60c7c76e45f19cf3ec16f6aa729f288c73c6244439cf6551a43d93d889d253aead7955b95114f6ea
079cf52490e15e8f0cfe469d7425dfa3cabd7d149d703dab3c409427b661abca2d673d522e45713dab3c40946758ab92fd3a8aeec3764b515ccf2a0f10e52996
d54a6651cced047d02ef1ebd30f7acf200519ec3a9925b94b152d9dd4d08f7ac9280284fb21f7e5acfb61d00519e655205a2544765a26c55a96bdb224094e759
aa52dbb60581282570aad4b76d01204a09deee975fa537850a44298169759a3205a294c0f66437aad4b7a10e8852027776bc52a5c22d9d812825786f4dd19b58
754304514ab0ba326b55a9bbcb02514ab0126556a56a53204a0936a20c2b578a6e5910885282bd284b550a6e5818885282b828f56def0051cae011a5f67e0a44
29c19128f56d31442982afe9a9bc4e812825f08ab2a04253204a0976a2b05bc8b9c910a50410a53e5a1125ff4a20ca29204aa6d2204a01204a7d40944ca54194
024094fa8028994a832805088892f79c7799f5fa39364429414814c2a289a29cd93aeffa204a09204a7d4094734b85d607514a0051ea03a29c5b2ab43e885202
88521f10e5dc52a1f54194121045117cff6c6c8872132d8bc27bf1da2e0a516ea26951c450a528b5921ca40eb06551bafda6439430c941ea005b1645f4bb4e0a
4409931ca40eb06951f64718a284490e5207d8b0283e204a98e420758010e5d452a1f5419412b8d8204a469283d4014294534b85d607514ae062832819490e52
0708514e2d155a1f4429818b2d2a8a7c75bb77ee409430c941ea001b16850b81eb2827480e5207d8b2289e45214a98e42075800d8b223bbe73a54a514c96cfed
261c901ca40eb061517c542acaf7fb1bffb839dfe587a7480e520708514e2d155a5f5c949f394e6e0e44c9828bed7f12e537363e5f95f73b26477e6ffbf12192
83d4014294e852fa67a3ddf1fa08a27c462586e14fd52c9fdff0fb7edef6e34390778d375088125d8a7542f4915d74421435f9fea96a646e7aecc76720ef1a6f
a00d8b22d97e885b7651d47915cf22ca9f92e34fb53aae8f327d7c06f2aef106dab0289de708df224ab71b9abb5b9220cad7744e7e8b1ac57e7c06f2aef106da
b028fc195164cf64f8fb791a3b42f6ace7a352bf61aa5ddcc76720ef1a6fa00d8b225f7cd7cdbca533ebbb04bc59f2f03aca579ddea88ae4a3e3d3eeb88f8f40
de35de401b1645e8d667cd1d4d8fb8dc99d57ca7943a4d7e9bbec9fcf111c8bbc61b68c3a20c9cefda845bfa2882edee526f97a4deebf9d8ab267fea8cc77d7c
02f2aef106dab2281e6e1145e613a524e45de30d14a2449752a2c476114429898b2dde47f19c8cdcd299bd7ad65309e45de30db461517c87afca7b3d95901ca4
0eb06151b8a7e7c0065b0b1c3ef013a29c0af47f14255a3844490b14a21c2e412a0da214c0c5065132921ca40eb061517cec44e1db6b2010252dd0ff5d14c65e
fb1caeccf5bcf3409492b8d82e8b22d876300944490bf43f17e5d549d6ef72b832d7f33ce545ee1caf4a83280570b15d15453239bcd82e872b733dcf531e4499
026c5814c15fdebbc78b7caaddd98c3b822849b42c4abf1f65b01545373beb837dbf28f1251aa56551067954a3f49ed7824194245a1685f3ee40147398d7c349
204a122d8be263258a9c7a27ab4b29102589ff5a14fbb39f557716a224f15f8b12cce1ca5ccff3e486280688122f19a24c409478c91065a26951f6ef75aa6298
41726135d3b2283df3bf01acb428b5921ca40eb061517c4ffb23881219477b1e885212171b44c94872903ac0964579ed4d8128619283d401b62c8a07df25fc4d
0e88921428448128a440210a4421050a5162a24c0fbc083fc40da294c4c506513242d87d61200a4421d1b228a1f7f540143fa11848b42c4ae87d3d10c54f2806
124d8be25914a28409c540a2655142efeb5988d209c53a074449a165517c6c4431886d0e57e67a9ea73cb1cdbb5f9f99d20f987b14e4a30f8584284b08f77aec
94268a1ec9101ebe4415e5b778db8a7b56f5734fad5610765f64b74194e8123a5786c7870e8ba8204a2e5c6cc54591baed0a8f87248aa2dee0f4673f40945cb8
d88a8b32aa2282d5c940166518f40b12de7f2aafd6c3a686ef605f10a69f82ae5f0af6e7a610250251149e361ec54e89a2c4a189625efea58fd55719b248a917
b198a7e47f3fa34e7fc3efef3b9a63a71025065594669ee1a6ea909f7e958671e2ed5253b4e6bd2ceaed3da6d37bc7db299383d4014294c32548a54545d155c3
18977989937905d8949a6a8daf29e6a78ee6ef638eea2ff36b379283d4014294c32548a5c544f94d99bca2cc3588e26394f9bedd14a284218ae263258af7ba6a
01514c445fd50bd9373d4686cff2ad3d760f647ee75372903a4088422c39bc3e330d1f202bc1d423f94d9d5993b2b5863ac519cf8c7ee364ecc8beed14a2c4f8
cf44b101fd86cfd41579cf9d925994bfe90b3df973538812e13f1365c5f7bb4f193edfcf62324ff3911ca40e10a2104b0eafcf4c331fd51b480e520708518825
87d767a6e504a0921ca40eb061510e1f1f0a51562407a9036c5894e3c787fa46934094b4401b16e5f8f1a1bed12410252dd08645213c3e5425e595116e474094
92b8d8ae7566bda349204a5aa0ffb528bed12410252dd0ff5c147f0e57e67ade79204a495c6c102523c941ea005b1525f0bb9ca528fe2c10252dd09644a1709c
6f589639a5933715a294c4c5b6126505e1977ef12cf789925c58cd40149d4ede5488521288521f10659ff314b604885280c745395834be1ab30044290044a90f
88425814a240940010654b4ba2048ede598665990120ca96a64459e6211c417f16889244b3a2240351928028269dcc5c2a44799ee745b95e1a4429c08128db07
82fa9181e7694194241a1485314ed9e6fd53ada7c5ed14a29ca13d515837fed9ff4e63f7cce0f3a208b12bb5f7554b72f17254885292982892d9a3d9ab47b849
2ef5ef05c558cf082ebb7e9a9f208a507dd3f50b727bf74b0fe924129eba08a29420264a3f1f9a4e8ce9f1e88a8ea9c79d3321d9ab17d3fc2451760bbd5c6768
f1347588520b31516c13a38f56c785aa60d4ffbd9acfe43c3f284af82cd7882258c74ceda2ca6436ad933d632f9d912f4e8bed14a23c0fa546d153ceb40eb328
6e7e9a28f2c5f50fdbe5f8f9d59b82a7f458a3a89490e6b7efdd54c140949250fa28da03deed4499e6278932365d66b19e71feea4cc1537a14c5f66c55160e51
2a207ed6a36a7fd521d16dce2c4a3f89226d5b94d4f44c7f7bf5fa96a99c293d9ac1214a651c5d4761ac335d073ecca28cb3bbf9e4850fd744d18d8c704dcf98
b64d8f8028f510176590d3f58ecd550f77261b2b9b248aeab6da9a694a8ffb49709711a2d4c0812897088bb246eed272f03808514a528328d4e2e62944791e88
521f1005a290802810854473a298b392c563d942f77402c44489bfeccb5fdc3c8528cf734a1445f8bdc43b22a2a86bb02c7a6eed296e9e4294e7a18862c717a8
916c7a8c01b5f0f9d0b2edbcf99ee209204a4928a2d8f105fa5e9e1a63402d3c284a3f956c2ea7e97bc6cbf4416910a500345116f7744e343d6151d49d44dd34
2939cc3d63b1481f9406510a401365c82dcacbccd672987bc662913e280da214a08c28b6642387be67bc4c1f9406510a10bd8ea29a1cc98695287d0e51a6d10a
aa3cc6cd9de265faa034885280a828ea662eebd7a20c7ae0018db0289275dda8e158fc8b4ff78c97e9786910a5005151fcffddf42b656151c65296ef66dfdf3f
8e9506510a7020ca35bca2a433970a519ee7715172940a519e07a2d44753a2e4615896990b8852828028798128a78028994a8328058028f50151329506510ae0
11e50e726e3244290144a98f3644a91f88520288521f10250f10a50410a53e204a1e204a0916a234034429c0bb6d4aefbe5b8028f929bdfb6e01a2e4a7f4eebb
0588929fd2bbef16204a7e4aefbe5b8028f929bdfb6e01a2e4a7f4eebb0588929fd2bbef16204a7e4aefbe5b8028f929bdfb6e01a2e4a7f4eebb852a4501f501
51000988024840144002a2001210059050a200708c44850228c87f5c2c9818cfdfe1ff0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.23 Un CPU avec une queue de pr\u233\'e9chargement}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette s\u233\'e9quence d'optimisations du syst\u232\'e8me demande tout de m\u234\'eame quelques modifications dans le mat\u233\'e9riel. Un diagramme du syst\u232\'e8me dans son ensemble }{\rtlch \ltrch\lang3084\loch
se voit dans}{\loch
 la figure 3.23. La s\u233\'e9quence d'ex\u233\'e9cution des instructions suppose maintenant que les \u233\'e9v\u233\'e9nements suivants se produisent en t\u226\'e2che de fond :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si la queue de pr\u233\'e9chargement n'est pas pleine (g\u233\'e9n\u233\'e9ralement elle a une capacit\u233\'e9 allant de huit \u224\'e0 trente-deux octets, selon le processeur) et }{\rtlch \ltrch\lang3084\loch
le UIB}{\loch
 est disponible pendant le cycle d'horloge courant, charger le prochain mot de la m\u233\'e9moire et \u224\'e0 l'adresse dans IP au d\u233\'e9but du cycle}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Cette op\u233\'e9ration charge uniquement un octet si IP contient une valeur impaire. }
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7 }{\loch
Si le d\u233\'e9codeur de l'instruction est disponible et l'instruction courante ne demande pas une op\u233\'e9rande, commencer \u224\'e0 d\u233\'e9coder l'opcode en t\u234\'eate de la queue de pr\u233\'e9chargement (si pr\u233\'e9sent), sinon, commencer \u224\'e0 d\u233\'e9coder le troisi\u232\'e8me octet dans la queue de pr\u233\'e9chargement (si pr\u233\'e9sent). Si l'octet d\u233\'e9sir\u233\'e9 ne se trouve pas dans celle-ci, ne pas d\u233\'e9clencher cet \u233\'e9v\u233\'e9nement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le timing d'ex\u233\'e9cution de l'instruction fait quelques suppositions optimistes, \u224\'e0 savoir, que tous les opcodes et toutes les op\u233\'e9randes d'instruction sont d\u233\'e9j\u224\'e0 pr\u233\'e9sents dans la queue de pr\u233\'e9chargement et que l'opcode de l'instruction courante a d\u233\'e9j\u224\'e0 \u233\'e9t\u233\'e9 d\u233\'e9cod\u233\'e9. Si }{\rtlch \ltrch\lang3084\loch
cela se r\u233\'e9v\u232\'e8le faux}{\loch
, l}{\rtlch \ltrch\lang3084\loch
'ex\u233\'e9cution d'}{\loch
une instruction 8286 sera retard\u233\'e9e pendant que le syst\u232\'e8me charge les donn\u233\'e9es de la m\u233\'e9moire ou d\u233\'e9code l'instruction. Ce qui suit, d\u233\'e9crit les \u233\'e9tapes pour chacune des instructions du 8286 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i\loch
mov reg, mem/reg/const}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si n\u233\'e9cessaire, calculer la somme de [xxxx+bx] (un cycle dans cette \u233\'e9ventualit\u233\'e9).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande source. Z\u233\'e9ro cycles si c'est une constante (}{\rtlch \ltrch\lang3082\loch
en supposant}{\loch
 comme \u233\'e9tant d\u233\'e9j\u224\'e0 pr\u233\'e9sente dans la queue de pr\u233\'e9chargement), un cycle s'il s'agit d'un registre, deux cycles si c'est une adresse de m\u233\'e9moire paire, trois si impaire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker le r\u233\'e9sultat dans le registre de destination. Un cycle.  }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i
 }{\rtlch \ltrch\i\loch
mov mem, reg}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si n\u233\'e9cessaire, calculer la somme de [xxxx+bx] (un cycle dans cette \u233\'e9ventualit\u233\'e9).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande source (un registre). Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker la source dans l'op\u233\'e9rande de destination. Deux cycles si c'est une adresse de m\u233\'e9moire paire, et trois si c'est une adresse de m\u233\'e9moire impaire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i\loch
instr reg, mem/reg/const\tab \tab (o\u249\'f9 instr = add, sub, cmp, and }{\loch
ou}{\rtlch \ltrch\i\loch
 or)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si n\u233\'e9cessaire, calculer la somme de [xxxx+bx] (un cycle dans cette \u233\'e9ventualit\u233\'e9).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande source. Z\u233\'e9ro cycles si c'est une constante (}{\rtlch \ltrch\lang3082\loch
en supposant }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92elle \u233\'e9tait d\u233\'e9j\u224\'e0 }{\loch
pr\u233\'e9sente dans la queue de pr\u233\'e9chargement), un cycle si c'est un registre, deux cycles s'il s'agit d'une adresse de m\u233\'e9moire paire et trois s'il s'agit d'une adresse impaire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger la valeur de la premi\u232\'e8re op\u233\'e9rande (un registre). Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer la somme, la diff\u233\'e9rence, etc. comme il se convient. Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker le r\u233\'e9sultat dans le registre de destination. Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i\loch
not mem/reg}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si n\u233\'e9cessaire, calculer la somme de [xxxx+bx] (un cycle dans cette \u233\'e9ventualit\u233\'e9).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'op\u233\'e9rande source. Un cycle si c'est un registre, deux cycles s'il s'agit d'une adresse de m\u233\'e9moire paire et trois s'il s'agit d'une adresse impaire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Inverser la valeur. Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker le r\u233\'e9sultat. Un cycle si c'est un registre, deux cycles si c'est une adresse de m\u233\'e9moire paire, trois, si c'est une adresse impaire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i\loch
jcc xxxx\tab \tab (saut conditionnel, cc = a, ae, b, be, e, ne)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Tester le drapeau du code de condition courant (plus petit ou \u233\'e9gal). Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Si les valeurs du drapeau sont appropri\u233\'e9es pour le branchement correspondant, le CPU copie l'op\u233\'e9rande d'instruction de 16 bits dans le registre IP. Un autre cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\i\loch
jmp xxxx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Le CPU copie l'op\u233\'e9rande d'instruction de 16 bits dans le registre IP. Un cycle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme nous avons vu pour le 886, nous n'allons pas consid\u233\'e9rer le temps d'ex\u233\'e9cution des autres instructions x86, car la plupart d'entre elles sont ind\u233\'e9termin\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les instructions de branchements semblent s'ex\u233\'e9cuter tr\u232\'e8s rapidement dans le 8286. Cependant, elles peuvent courir tr\u232\'e8s lentement. N'oubliez pas que le fait de sauter d'un emplacement \u224\'e0 un autre rend le contenu de la queue de pr\u233\'e9chargement invalide. Donc, }{\rtlch \ltrch\lang3084\loch
m\u234\'eame si }{\loch
les instructions de branchement }{\rtlch \ltrch\lang3084\loch
ne }{\loch
demandent }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92}{\loch
un cycle pour s'ex\u233\'e9cuter, elles forcent le CPU a vider la queue de pr\u233\'e9chargement et, par cons\u233\'e9quent, consomment plusieurs cycles pour charger l'instruction suivante, les op\u233\'e9randes suivantes et d\u233\'e9coder cette instruction. Donc deux ou trois instructions apr\u232\'e8s le saut sont n\u233\'e9cessaires avant que la queue }{\rtlch \ltrch\lang3084\loch
revient \u224\'e0 }{\loch
un \u233\'e9tat }{\rtlch \ltrch\lang3084\loch
habilitant le }{\loch
CPU d'ex\u233\'e9cuter des op\u233\'e9rations en parall\u232\'e8le. Ceci entra\u238\'eene une importante implication }{\rtlch \ltrch\lang3084\loch
\u224\'e0 l\u8217\'92heure de programmer }{\loch
: }{\rtlch\ai \ltrch\lang3084\i\loch
\u233\'e9vitez les sauts aussi souvent que possible si vous vouez que votre code soit efficace}{\rtlch \ltrch\i\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les branchements conditionnels }{\rtlch \ltrch\lang3084\loch
n\u8217\'92}{\loch
invalident la queue de pr\u233\'e9chargement }{\rtlch \ltrch\lang3084\loch
que }{\loch
s'ils effectuent le saut. Si la condition est fausse, ils tombent dans la prochaine instruction }{\rtlch \ltrch\lang3084\loch
qui \u233\'e9tait indiqu\u233\'e9e }{\loch
et continuent \u224\'e0 utiliser les valeurs de la queue, }{\rtlch \ltrch\lang3084\loch
ainsi que toute autre }{\loch
instruction normale. Donc, si, en \u233\'e9crivant vos programmes, vous pouvez d\u233\'e9terminer quelle condition est la plus probable (par exemple, }{\rtlch \ltrch\lang3084\loch
plus petite que ou ne pas plus petite que}{\loch
), vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 arranger votre code de fa\u231\'e7on \u224\'e0 faire \u233\'e9chouer la condition }{\rtlch \ltrch\lang3084\loch
dans le cas }{\loch
le plus commun, au lieu }{\rtlch \ltrch\lang3084\loch
d\u8217\'92effectuer }{\loch
le saut. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La taille des instructions (en octets) peut aussi affecter la performance de la queue. Pour charger une instruction d'un octet, }{\rtlch \ltrch\lang3084\loch
il ne faut jamais }{\loch
plus d'un cycle d'horloge, mais, pour charger une valeur de trois octets, cela demande toujours deux cycles. Par cons\u233\'e9quent, si la cible d'une instruction de branchement constitue deux instructions d}{\rtlch \ltrch\lang3084\loch
'un octet}{\loch
, le UIB peut charger les deux instructions en un cycle et commencer \u224\'e0 d\u233\'e9coder le second octet pendant que le premier est en cours d'ex\u233\'e9cution. Si, au contraire, ces instructions sont de trois octets, le CPU peut ne pas avoir assez de temps pour charger et d\u233\'e9coder la seconde et la troisi\u232\'e8me instruction dans le laps de temps n\u233\'e9cessaire pour qu'il termine avec la premi\u232\'e8re. Vous devrez donc tenter d'utiliser des instructions courtes autant que possible, car elles }{\rtlch \ltrch\lang3084\loch
am\u233\'e9liorent}{\loch
 la performance de la queue de pr\u233\'e9chargement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La table suivante fournit les temps d'ex\u233\'e9cution (optimiste) des instructions sur 8286 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Tableau 20 : temps d'ex\u233\'e9cution pour les instructions 8286}
\par \trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw30\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
Instruction }{\rtlch\dbch\af13\dbch\af13\hich\af4 \ltrch\fs18\loch\f4\loch
\u61537\'3f}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
Mode d'adressage }{\rtlch\dbch\af12\dbch\af12\hich\af5 \ltrch\fs18\loch\f5\loch
\u61682\'3f}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
mov }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
(les deux formes)}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
add, sub, }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
cmp, and, or}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
not}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
jmp}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
jxx}\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw30\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw30\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
2}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
4}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, xxxx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
1}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3-4}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-6}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [xxxx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3-4}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-6}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg, [xxxx+bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
4-5}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[bx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3-4}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-6}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3-4}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-6}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx+bx], reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
4-5}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
reg}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
3}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
5-7}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
[xxxx+bx]}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
6-8}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\row\pard\trowd\trql\trleft709\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2408\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3685\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4819\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5857\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6896\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7935\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\fs18\loch
xxxx}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\fs18\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
pqp}{\rtlch \ltrch\super\fs18\loch
a}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa0{\rtlch \ltrch\fs18\loch
2}{\rtlch \ltrch\super\fs18\loch
b}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\fs18\loch
2 + pqp}\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch \ltrch\fs18\loch
a. Perte de la queue de pr\u233\'e9chargement}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\fs18\loch
\tab b. Si le saut \u233\'e9choue}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Noter la vitesse de l'instruction }{\rtlch \ltrch\i\loch
mov}{\loch
 sur le 8086 par rapport \u224\'e0 celle de la version 886. La raison de cette am\u233\'e9lioration est que la queue de pr\u233\'e9chargement permet au processeur de d\u233\'e9doubler l'ex\u233\'e9cution des instructions adjacentes. Cependant, cette table }{\rtlch \ltrch\lang3084\loch
est plus qu\u8217\'92optimiste}{\loch
. Notez la condition : \u171\'ab }{\rtlch \ltrch\lang3084\loch
supposer }{\loch
que le opcode dans la queue de pr\u233\'e9chargement est bien pr\u233\'e9sent et qu'il a \u233\'e9t\u233\'e9 bien d\u233\'e9cod\u233\'e9 \u187\'bb.}{\rtlch \ltrch\lang3084\loch
 \u192\'c0 }{\loch
ce sujet, consid\u233\'e9rez les trois s\u233\'e9quences suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
????:\tab  \tab jmp, \tab 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
1000:\tab \tab jmp, \tab 2000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
2000:\tab \tab mov, \tab cx, 3000[bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde et la troisi\u232\'e8me instruction ne s'ex\u233\'e9cuteront pas aussi rapidement que dans l'estimation donn\u233\'e9e dans le tableau. Chaque fois qu'on modifie la valeur du registre IP, le CPU vide la queue de pr\u233\'e9chargement et il ne peut charger et d\u233\'e9coder la prochaine instruction, mais devra charger l'opcode, le d\u233\'e9coder, etc., ce qui ralentit l'ex\u233\'e9cution de ces instructions. Dans cette \u233\'e9ventualit\u233\'e9, la seule am\u233\'e9lioration }{\rtlch \ltrch\lang3084\loch
possible a \u233\'e9t\u233\'e9 }{\loch
de mettre \u224\'e0 jour IP en parall\u232\'e8le avec une autre \u233\'e9tape. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Normalement, inclure une queue de pr\u233\'e9chargement augmente les performances. C'est pourquoi Intel en fournit une pour chaque mod\u232\'e8le 80x86, \u224\'e0 partir du 8088. Dans ces processeurs le UIB charge constamment les donn\u233\'e9es de la queue de pr\u233\'e9chargement chaque fois que le programme n'est pas en train de lire ou d'\u233\'e9crire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ces queues fonctionnent de fa\u231\'e7on optimale avec des larges bus de donn\u233\'e9es. Le processeur 8286 tourne beaucoup plus rapidement que le 886 }{\rtlch \ltrch\i\loch
parce qu'il peut garder pleine la queue de pr\u233\'e9chargement. }{\loch
Cependant, consid\u233\'e9rez les instructions suivantes :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
100:\tab  \tab mov, \tab ax, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
105:\tab \tab mov, \tab bx, [2000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
10A:\tab \tab mov, \tab cx, [3000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque les registres ax, bx, et cx sont de 16 bits, voici ce qu'il arrive (}{\rtlch \ltrch\lang3084\loch
en supposant}{\loch
 que la premi\u232\'e8re instruction a \u233\'e9t\u233\'e9 trouv\u233\'e9e dans la queue de pr\u233\'e9chargement et a d\u233\'e9j\u224\'e0 \u233\'e9t\u233\'e9 d\u233\'e9cod\u233\'e9e) :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'opcode de la queue de pr\u233\'e9chargement (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Il y a une op\u233\'e9rande pour cette instruction, donc l'obtenir de la queue de pr\u233\'e9chargement (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir la valeur de la seconde op\u233\'e9rande (un cycle). Mettre \u224\'e0 jour IP. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\lang3084\loch
Garder}{\loch
 la valeur charg\u233\'e9e dans le registre de destination (un cycle). Charger deux octets du flux de code. }{\rtlch \ltrch\lang3084\loch
D\u233\'e9coder}{\loch
 la prochaine instruction. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Fin de la premi\u232\'e8re instruction. Il y a actuellement deux octets dans la queue de pr\u233\'e9chargement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'op\u233\'e9rande de la queue de pr\u233\'e9chargement (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction pour voir ce qu'elle fait (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 S'il y a une op\u233\'e9rande pour cette instruction, l'obtenir de la queue de pr\u233\'e9chargement (un cycle parce qu'il manque encore un octet).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir la valeur de la seconde op\u233\'e9rande (un cycle). Mettre \u224\'e0 jour IP. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\lang3084\loch
Garder}{\loch
 la valeur charg\u233\'e9e dans le registre de destination (un cycle). Charger deux octets du flux de code. }{\rtlch \ltrch\lang3084\loch
D\u233\'e9coder}{\loch
 la prochaine instruction.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Fin de la seconde instruction. Il y a maintenant trois octets dans la queue de pr\u233\'e9chargement. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'octet de l'op\u233\'e9rande de la queue de pr\u233\'e9chargement (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'instruction (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 S'il y a une op\u233\'e9rande pour cette instruction, l'obtenir de la queue de pr\u233\'e9chargement (z\u233\'e9ro cycles).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Obtenir la valeur de la seconde op\u233\'e9rande (un cycle). Mettre \u224\'e0 jour IP. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-131\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 }{\rtlch \ltrch\lang3084\loch
Garder}{\loch
 la valeur charg\u233\'e9e dans le registre de destination (un cycle). Charger deux octets du flux de code. }{\rtlch \ltrch\lang3084\loch
D\u233\'e9coder}{\loch
 la prochaine instruction.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Comme vous pouvez }{\rtlch \ltrch\lang3084\loch
le }{\loch
voir, la seconde instruction demande un cycle de plus que les deux autres. Ceci parce que le UIB ne peut pas remplir la queue aussi rapidement que le processeur ex\u233\'e9cute les instructions. Ce probl\u232\'e8me est amplifi\u233\'e9 quand on limite la taille de la queue de pr\u233\'e9chargement \u224\'e0 un certain nombre d'octets. Ce probl\u232\'e8me n'existe pas dans le processeur 8286, mais il existe certainement dans les autres processeurs 80x86. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous verrez bient\u244\'f4t que les processeurs 80x86 }{\rtlch \ltrch\i\loch
tendent tr\u232\'e8s facilement \u224\'e0 \u233\'e9puiser la queue de pr\u233\'e9chargement}{\loch
. Naturellement, une fois que celle-ci est vide, le CPU attend le UIB pour charger de nouveaux opcodes de la m\u233\'e9moire, ce qui ralentit le programme. Ex\u233\'e9cuter de plus courtes instructions aide \u224\'e0 garder pleine la queue. Par exemple, le 8286 peut charger deux instructions d'un octet avec un seul cycle de m\u233\'e9moire, mais il prend 1,5 cycles pour charger une instruction de trois octets. Normalement, il emploie plus de temps \u224\'e0 ex\u233\'e9cuter quatre instructions d'un octet qu'une instruction de trois octets. Ceci donne \u224\'e0 la queue du temps pour remplir et d\u233\'e9coder de nouvelles instructions. Dans les syst\u232\'e8mes munis d'une queue de pr\u233\'e9chargement, il est possible de trouver huit instructions de deux octets qui op\u232\'e8rent plus rapidement qu'un ensemble \u233\'e9quivalent de quatre instructions de quatre octets. La raison en est qu'avec des instructions courtes, la queue a le temps de se remplir de nouveau elle-m\u234\'eame. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Morale de l'histoire : }{\rtlch \ltrch\i\loch
en programmant un processeur }{\rtlch \ltrch\lang3084\i\loch
avec}{\rtlch \ltrch\i\loch
 queue de pr\u233\'e9chargement, utilisez toujours les instructions les plus courtes possibles.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\i
 }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_12}{\*\bkmkend p3_03_12}\rtlch \ltrch\fs23\b\loch
3.3.12\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseur 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'ex\u233\'e9cution des instructions en parall\u232\'e8le \u224\'e0 l'aide d'une interface bus et d'une unit\u233\'e9 d'ex\u233\'e9cution est un cas sp\u233\'e9cial de }{\rtlch \ltrch\i\loch
pipelining}{\loch
. Le processeur 8486 incorpore le pipelining pour am\u233\'e9liorer les performances.}{\rtlch \ltrch\lang3084\loch
 \u192\'c0 }{\loch
quelques exceptions pr\u232\'e8s, on verra que ce moyen permet d'ex\u233\'e9cuter une instruction par cycle d'horloge. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'avantage des queues de pr\u233\'e9chargement \u233\'e9tait que le CPU pouvait d\u233\'e9doubler le chargement et le d\u233\'e9codage des instructions pendant qu'elles \u233\'e9taient ex\u233\'e9cut\u233\'e9es. Autrement dit, pendant qu'une instruction \u233\'e9tait en \u233\'e9tat d'ex\u233\'e9cution l'unit}{\rtlch \ltrch\lang3084\loch
\u233\'e9 d'interface des bus chargeait et d\u233\'e9codait l'instruction suivante. Dans la mesure o\u249\'f9 vous acceptez d'ajouter des composants mat\u233\'e9riels, vous pourrez ex\u233\'e9cuter presque toutes les op\u233\'e9rations en parall\u232\'e8le. C'est l'id\u233\'e9e qui est derri\u232\'e8re le pipeling. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1965\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich131\picwgoal8295\pichgoal1965\pngblip
89504e470d0a1a0a0000000d49484452000002290000008308030000007f557b8d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000c8f49444154789ced9d8bb9ab2a104629
c6662c86662c866628c6c33c9087a80898987de6bfdf49dcb9ce0c91155018512991a842d6fdb78a445712524475125244751252447512524475125244751252
4475125244751252447512524475125244751252447512524475125244751252447512524475125244757a9414bb98bafdec337e0b32eda610b8c3d617c0a9c7
7c195086263d49caacf40cbe2f40b04ae95b7e17f6db203d69d5fe753b4cbd0ce619b69760d6aa07b40e3d480afa85afa5cf41b0f662879d81fba796a6324171
9abfee3c8d20a5c75a4ff71be0517ab24de1da74bf626534fe9416d77cc06fc2a43fac9ba4ac4061f3f182a3dd6638f75533aacfc5b7da138cfd20298e0764c5
81602778b3088b81a8ee3dec789b14d3d8a44007d2ca982bf000525c577bb3af8da5dc219dbbcbd018fbd16b9f057b7604c16aa5f1e7ec48316e537790b274f4
f4adc65619b30cf94ddb762fca1dc0a91db42e3d7d950c3f7e0041cd46eb854971473cb902b849cad2da7f8422dd972bbe3b8f1e524bf73b5b2f28fa8086ad2d
f673a4186827919419bf9ed210097e9718313a5c370f5d478ba2bbcc0754125ce4b6b72970a0f497ba9f47cf68155d92babe7952f3344fdb19ad7b8f7fd97749
51cd9dbdeb023bda8511a4b8027454b59ae69e9eb747cf8ebc19fe56fecbe1f56df2c9a765bf78f540ea2bc0f7caffd1d17cab16f3ad133251a73e3cef63f4b7
1a1351a764865054a767cf685bd567dd69de5df2110e0678185d9b4f92d265d83191d71dbcafe4231c0cf03058424ac95a4829f815520ad6424ac1af9052b016
520a7ebf45cad9d57265551fb9789894cb92f7461fe461b01e2705a6d90b03e8a703e3a1aad1fa6846ef68fe2498cfcefaeea0a627e5a0e015258fa3df1d3e2a
9062cae5b8f430588f93921cd830c153490aec668e2efc2e498119968bb99afd9493272535bc53f2fae8fbf805528036553f39f6f3a42c7a813ad7303fa82145
655d0e67ff55660d894fce1c0d619cd7a03fc8f3c08f8fccfd174303bb58b7af759bbcb560e6b62b9165bf9175420a1517f6f3252f058d42a7d1c93b053559f8
d86fea206cb01fde33784bcc0a4518ad4f9102a9ce9a4851d332e1a63aca33d991a2d11c0dd7695a9ca1db869ccba93435eccd39ad0e0c663cd26a76ffac51b3
9914b55678fce7c44b4e0afc5f262a94fc683a3822c527f541784de1a7c9879f293cd73f86481dc46d0a76614c4af09698158a305a1f20057a6b4b3f32684131
9c3b5e763d0c9c9332293447433452e4cfc43fddbdb9e6531d348080f0c1acd1279382999ba997400a9e66d86d3f2a0c3a3aec542252b46f0b92f0ca24e1b723
e23d96ce686764057b9fc85b625628c2687da84d59689c19beed123eae2505f25cfc3835655852f6dcc1e875daa6b081e1cad33b5296d44bd6a6c4259f7c916a
48e13605138f880fd82c911217a044ca6a277f9e1279cbcb5d321ca94f91421d4d2b29d84f2dccdc8ae86c1f1f9bdbc8c09c9032efac6352e642c96b48b19eb4
105e1f9032ef1d64c7c6f532480ae7971229e52ef0c749c1bb2e347e51d8b4cb0d52ecacd01cfb8205cd15b5bc86bc1e9ae3d90775213626c57b703f55f72345
8f87e729545cfc318792d79082d1ada2f2ae3129d07b4178c5ed0c87481c840d268bf3d6159fdeaca959a108a3f5a9335ace87849b1060d35493a2f0be053447
43f6e4faa359992ccb3237a7d118328b4999c00a1c2bd8654ebd64a4703c0b2fb069ab49e1b1a0283c93e2c36b6c797897b3335a3c04b867e46d9763ba331cab
cf8dd19af07a351c1548c9ccc9307e2d0da944e6b610cf1d661b7d6a322f7b84ef963c8b7e1e9efc6e0528f53e3ec974efedf0db3fa0ff70dee76234ecacb1ab
0b7deee03cfcc1794a431146eb3f24a5d0b7e7d64f92721e5e48b96ff8182915d64f9252e74048a93714523a3d0cd67749393841bc51d5a5f3bbc313e2aa9b6d
3e41caf189f13d524a7e7e989493a9ff83cfe3aabe481c88fedf361215996fa78fbc5f450ec246cacdd9fe109adee122792a23717252bb2705fccc37fcfc2e29
d37cbcdcc9352967d699876dafc83c8c53dc270597efb8dc7d6fccef70357cb07414d670398b604fca859f9d9b9f2585aa799e68b29d27ee2ff206d4a1759278
907a0883dbb1390ea6d37ef4a6d72dcdc0ba0fe8250faed63c6bc0a709a4f3fdbb69ff9414422209c6b906218ba0f4d5938ddc8f4efcecddfc2c297eb2c4a8c9
4c0a27ee2ff306d491f51a271e641e42c313cc671cfca7fdf82da41958a5b5c2975d70f2401e699edf5758947eb016a6fd3352a0f8b413c5d99cdc24056641ca
7efe10297aab6b8ab6a501a8e3bc0175644d190b36fc113c44f3652a7e9934efe777b73ecd007deebbfa70468bb3fd1c39548ef5e907a569ff8494386bc1f017
097fd4f73ea77efe4eef135a05f804febace1b28b5296893e411a41ea27399cd1c56f4d11cc9f09b0ad3f5ee4cd1d04b1e9c4b642765799e3fa9649e192f4cfb
27a49879ca82b59172eae7ef9062b9720329d77903eac0dac48907848df7b09bb9a720b04a988a6c8914bfafd5388d9c9e3047a4842819296a17330ebd6ebd0f
ccfec5c1da4839f5f37748e1a97f63702d26ce19b8c81b5007d63cd1ce0e120f716d7b73fa62f34cfbf9dd579f66b02c7c6d945e107952184e1bba2b481388e7
fb0bd3fe19298b2f3205b3b193f2da4a65524efcfc2152e067afe03c7df213ecea2a6f401d59af71e241ec21f9797bf3191d5b45fbf1eed4267022819aadca57
63dcda9428e1c1d09fda9f272c747fc6bef01929eb9652c06b46464e6cf1f6943229277e766e7e98149a7cf793edf87a91371093925927a6c1c3aeff480f58b6
345432819f5f8084dec7cff6efacc31f79e155f69e07abcf192854ca819f830bf5d1fad868fec55cffdeb0d9ba607e47c9794a8b7177f4411e06eb63a45cccf5
ef0d9bad8594472473c9256b21a5e0574829580b2905bf424ac15a4829f8fd41524c61be24be1a788a94cae496eee8833c0cd6cb49c13b21d21a2a8f43c45747
4f91124a5473077b7bf4411e06ebe5a4d00065d286c48392d1f6a748a181f46c60742b8790d2e6bbcb70ab17185287ac12ca43b133ad63b1ac34736f7cca4a58
6663142994b96257ceabb1a1449836c3eb53681b4dfd0b296dbebb0c23522c54c5447928582b3a6c1bce158996d918440adcf54e2b9cb85810259408a68a305f
c4a78b08297dbebb0cb95eb4c6c54ffcba1a6bb28e056faf9833b22db33188145a8922dc466c63527498705ca5f7e9f6dd65b89142a9435b3248bc8e056e934d
74a3f32852e01933febc640e25c29d0c9781d25b84944edf5d8651bd20293e9345eb74fb29522cad4441a4501a542891b27ef61ad35b84944edf5d861929d667
b2608fc3dbae027d92c870523083c893424f3bf325b2938f4be92221d7444869f3dd659891b22583f8558cf04287d7b4304ff43e70bfceec73dd30b9858ac2b7
016119385d641be31152da7c7719eead4d611b6f6ca833bf119c8c53bffb81e1789d0c1385ee8d3ec8c360fd12299f310fa4b4861ee14048a93714523a3d0c96
9052b216520a7e859482b59052f02ba414ac859482dfbf424ae17e9ff6e045e39ac76a08296dbebb0cd9baf6c12bf1f218ddc1e11fada060b79b1cab6e0f1052
da7c771992f5d5fa29c16634294446e5d35a92d0bdd1077918ac9793b25f7d059ebcb26e4b98584a4ae1055276e6adc1c903de39484f4aa1c9ea856f27099929
c592f7461fe461b05e4e4ab67ecaf6ec174bd9239c94c20ba4eccd5b83a3f1ec9fe4e41355fc9a3751664ab1e4bdd1077918ac9793525a7dc5d0f36ed225f01f
6853c02ddedaec135598942433a554f2dee8833c0cd6cb4949d74fa187b7701d2d98f0061ff3ca2805f3d6e0640cabdbc3bb4f54615292cc9452c97ba30ff230
582f27255b7d657bc00eac60b03d80c52f71b2376f0dce2c4e0b3dff6249da942433a554f2dee8833c0cd6cb49d9afbeb2ea6dd52d35854ec93c408af5cf755b
295185572d4932534a25ef8d3ec8c360bd9d94fdea2b0b679dc1c92c27a5f0022925f3b6e06c3c31ad3e51859fb41267a6944ade1b7d9087c17a3d29d9fa2981
87d2722605f3a6e099b1cd370e9fe022a4b4f9ee324cac65fd94fb1e06eb474891f553ee7b18ac1f21e583e642ca815f21a5602da414fc0a29056b21a5e0f749
529ad567dd69de5df2110e0678185d9b0f9222fa4b125244751252447512524475125244751252deaee7ae66ee494879bb9ebcf2bd2321e5ed7a7898a4be1c42
cacbf5fc985a65391e27a57db051b4d7a355755e8fd2a6bc5c6f41454879bb5e028a90f27abd0293554879bf5e81c92aa4bc5fefe0444879bf5e81c92aa4886a
25a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488ea24a488eaa4ec23e99ea2bfa7aac7178844abfd07
97e4943a9c15cac90000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.24 Une impl\u233\'e9mentation avec pipeline de l'ex\u233\'e9cution d'une instruction}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2085\shpbxcolumn\shpbxignore\shpleft0\shpright8610{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw574\pich139\picwgoal8610\pichgoal2085\pngblip
89504e470d0a1a0a0000000d494844520000023e0000008b08030000005674637100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000b6049444154789ced5ded81ac200ca418
9bb1189aa1189aa1181f09a028ba1702eab22ff3c3d35b66f91a1135b328251030e19c528b40c083c847d000918fa001221f4103443e8206887c040d10f9081a
20f2113440e4236880c847d000918fa001221f4103443e8206887c040d10f9081a20f21134e0abe4e3ac7b88f4061e2d282b2f5bcde82a9f35080dbe5813bf78
23cd18bf569951caafaa701e46911beb981bb9c17659c2dfb99a19a1eb7233d496cc4ba889f9e4e82a1f67ad55c66f62c1ea48062a4c236d19cd3ebd23d53a2f
1c70e8f2c998f8877c62efdbc3f94ca9d49519402aeb969bff436cc9ac841a0b58a99fee17afada6155fbc910cfdd4de9a947c566785ab187d32661d2963d095
7364c21eb953034743235a6a4ba6aae9c4acc0b7c96762c8c7913b754de805f7ac7c6afb25cf8b7e4a458e05adce1cf9d0c6b90d5f269f997e92a6d35a4f15b3
9898123a93271f3f3da86be095b8186d38ccaa816b15ab26ce22370e0ee1156d19caf655f2a1d73993cf5c31970d9c30cbe2c8c71adf2f552a489d33a9997a33
b167d22fcd4b269f992e84543535dbb9b2725f251f57d350bbb94fdd38edd4a4b56fe19a96ca72abbb0eada38f818c19599a9a595336f721f352d5ece48b37f0
e853a59ebca295b3445771377c9a5b4d13c7c46126c2c992714e856ca899e5d5b19533fc2f924fc50c719f51f54d46b15f995b4d13af63081ed4cb87931b5f3e
03df792985cf38ea329aa68575e3ce930fb62e7306a32baf4391597752a562bab8a928a19e97f0c06883567173a9aaaf920fa26ec6e7ea1e03b78e3e8afc60fc
980d169431e966cdb4a69accd62753c5f55ca5b3e5b285bfea9d170b154f813bc0d187c723f8cc7ab08ac968c9f1e5237811221f4103443e8206887c040d10f9
081a20f21134a0453ea7bf7677179ecd8d097e217bf6e98368928fd00a9ac8878c313af4591a8f27f2111ad21ae453f53ed5c19b2820902d09b740e4d397d659
3e97efd78ccede14b2f2ec02914f5f5a6ff95cbdba9aec5ac6d1e5632fc37fcdd9c9b3d22e5feb7da2d95d9ad394a7b979b87cfbc72bc5bc51aeeb57d28e8d69
34cd6eb504f9288817d5e1f5f78cce2b7fa4ece155b84e136e7b9ae783e8209f79b6f345c0cde9c99374a0b4be38b93ed0d678cfd8747f766c563b0c5537a123
ec1f138d8ce6eb673e0514e5123e36a632565134beca4769f4bbf97d5f53071e2c87ff3c7c0504c8a5c8fbb1e5e3b0ead67f53888eb369b35874d01463cc2a9f
c0b555b439c4bfc4342ee50ba9d1045c3881f3d1074bea309a01e46361244af91e881b0d431953812033c82f5416e9d0cd6b710f8d89dc902064e2ce6a96cb67
c69dd57a14a637a57861d69ce64563cb07e7ff5afb1305ed2fc61ffbcd04bb10edaff4a4cf68a169fdb88c9f93690a5b2da681ad85907748edbf4939dc9ce516
f67d674f600bf3a9e19a001a823227f6294d877260e1a0b46ad653a86ca09b54004c751c7d30c61082f2816ff3a4bb64ab7c4cd8814b985b927ccac02fb54d7d
7e413e46db192a65c2014cedc2bd8199ec311279271f859f9369c6407e310d6e2119a6369383bde38522ff167f0dd2305c81c15dfb9e8cfdbfb24f69413ea170
3e33c84f85ca26f5d9652deeb131dd8c7397c44f652d5a729bfbc41db81fb7e9f8385cfdd2dcc7c4d1c7fff11b3851601376a197b4fe34fa28fc9c4c0b4f6863
1a93fa30a43610466a8eb1a46a7f0087f33cfb01482d513e19fb8c16ca110ae709413e3a1e45f9acc53d694c85ce0ce4abb5acc734857ce23fcfe5e335e86b61
72f24be835f771d8ac0ee698b8f1bbeb1061cf68d80f701180cfa9348b4e48bb1b7d7450304c5db471db8c729f5bc0ac426a187d0c5e7de2d0678fc48d86f533
a170ab7cd4ee68598b7b684c3f58fa6ec6d1678eaa3ba959291fb31e83924af9e0d5d0e5e497d0e1cecbf86983bf104c13d617bc667157fb93dcef4ff329cddf
8daa69899f1369331a7ae69806b7780b05a961f6b2e0e62cb794a7c35bbe197a52cf704fa332f6392dd40f0bb70a261615497e6eb316f7d0980eb2c204c85fcb
5ab4e471f499e3d340f8a59513f9e08f61ecc82fa1cb6343bc7ba1ff0a44636ecfd38aeebbac6cd198b4e8f3b20fd61bc107e3eb19e8f6d4f997e553802e1f62
6e2f0e204d9097167d69221f32c6e8d06769221f32c6e8d06769221f32c6e8d06769221f32c6e8d06769221f329851bd3cda18c1f2bc32f6ecd067f18251678c
61844763f2f8727d19229fae3491cfed1842074fcbe7491aa2cf1209229faeb417e4c33368d01780f8fc7d229f9eb42f91cf9f068d8a05203e42e4d395f62df2
211834aa7f8bf40c6fcae7d2c170834163efd0b8cda091f3bedca051b300c4255e94cfb543a3bf41e3e0d0b8cda091f19a0d1a7f8bbcc9a051b300c425de93cf
dea191fb2d48068dcc9b41f175e40e8d1b0d1ad9d08a656c3068e42980d7dfa0d1e1d6eb3df9ec1c1ae8b4086e069a412324a0fb3a3287c69d068d8dd76cd088
29027f369d0d1a750b405ce265f9448786dadc0c8a64d00809e8be8ecca1a1ee34681ce5d362d04841d4c18bd2d9a0d1473d2fca277768841305dd08348386c3
04745f4778448b89d49d068da37c5a0c1a9822f13b1b343adc7421de9efb0487064ca15d7023289241231816c8be8edca1a1ee34686cbc768306a648fcce068d
ca05202ef1e29d57eed040a7457033d00c1a2101d5d7b17368dc69d0c878cd068d9822f03b1b34f677f07cbcfad8b0caa131de63c3ffc0a0f1fa53e71f964f81
df3368bc2e9fdfa28df3c6bd0f443e5d69229fdb31840e443e24887cbad2443eb7e3f53a7f1fded701136fc88717d5cba33d6cd0603a2d9ecc0c99bd30ce9228
bf7df112f9dc8c5f960f37b3e7a74c870015914f57dab3d93d1661bf86d81fc72e914f57dae0f2f92bc41edec4b99c29f2e94a1b5d3e9410fb3c546840f9d4ad
8190683d22ecab42ec878bb02786d8bb5c63e3c9a7720d8435cea343847d5588fd7011f60b21c4dee969d706c3c9e78f35106e8cb0c7edb6ac00dc83944edf6c
f4c1825e44d85fae81701a611f2acb8bb03f09b1bf8cb0ff3bc4dee979eca9f3e735106e8cb08f19a4007708142b23ecf3abd08708fbe5720d84b3087bfcf96b
c58bb03f5b03e132c29eb406c22ed731e573b50682ba2fc23e265569590108922f23ec73f97c88b02f9807f9ec23ec179b7e535c2d9511f6a721f69711f6a435
10163bb27c3eae81a0ee8bb04f49d765052048be88b0df1b7cae23ec2fd740388bb05f6265937c2a22ec4f43ec2f23ec496b208c2d9f8f6b20a8fb22ece33645
d8c34c042e7e8708fb9d7cae23ec97cb3510ce22ec579b467d84fd6988fd6584fd9f21f61344998f7de3fe710d841b23ec97182a1fbf23cd7d2e4a19f2bc8ab0
2f62f3b7839308fb6427e044d89f85d85f46d8ff1962ef7ee1a9f31747d8f7c8ae7c387055d9fe11f67f86d8dbdf78e7f5c3f22941960f31b37e3d3eaa7cbe94
36ce4b8b3e10f974a5897cbe15229f9225f22143e453b2443e64887c4a169bd62bc855e4d39526f2f956306b3c82d3e259834603b3e89471e4c3c4b3f383a769
bd6440ccadf89fc867681a87c7d58fc8e7e768229f9b31880e9834910f17e12afe77f0f1183a60d2443e5ca839fdb8e3c7dfb71e44074c9ac8878bcd4cf27108
1a44074c9ac8878b249fe84ec298a732c87b141d3069221f2ef0e285cb51a03b09bc10f6e43236880e9834910f173873c6e1062e5ec1ab7466131c43074c9ac8
878bfddca75cf0217d38860e9834910f17221f914f03f6f27157b75f83e8804913f970119efbe0ea55e84e4237895b8ac529c6d0019326f2e1223c750eae6e5f
07178f8ed51944074c9ac8a707c20fcf9c5ebe06d1019326f2b91983e8804913f9dc8c4174c0a4897c6e464d109ee00f14ad2bf211d051b4aec8e7aaa57a36fb
afa068dd9f978fa0403ff5887c042d10f9081a20f2113440e4236880c847d000918fa001221f4103443e8206887c040d10f9081a20f2113440e4236880c847d0
00e73abecf17fc6f704e061f011bcefd03d8ca4bbc4226ff920000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.25 Ex\u233\'e9cution des instructions dans un pipeline}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_12_01}{\*\bkmkend p3_03_12_01}\rtlch \ltrch\fs23\b\loch
3.3.12.1\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
ipeline du 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez les \u233\'e9tapes n\u233\'e9cessaires pour effectuer une op\u233\'e9ration g\u233\'e9n\u233\'e9rique : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger l'opcode. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 D\u233\'e9coder l'opcode et (en parall\u232\'e8le) pr\u233\'e9charger une op\u233\'e9rande \u233\'e9ventuelle de 16 bits.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer le mode d'adressage complexe (par exemple [xxxx+bx]), si applicable. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Charger la valeur source de la m\u233\'e9moire (s'il y a une op\u233\'e9rande de m\u233\'e9moire) et la valeur du registre de destination (si appropri\u233\'e9).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li850\ri0\lin850\rin0\fi-130{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Calculer le r\u233\'e9sultat.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li851\ri0\lin851\rin0\fi-142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 Stocker le r\u233\'e9sultat dans le registre de destination.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En supposant que vous voulez bien payer pour du silicium additionnel, vous pourriez construire un petit miniprocesseur pour traiter chacune des \u233\'e9tapes ci-dessus. Ce}{\rtlch \ltrch\lang3084\loch
ci}{\loch
 ressemblerait \u224\'e0 quelque chose comme dans la figure 3.24. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous concevez un composant mat\u233\'e9riel s\u233\'e9par\u233\'e9 pour chaque \u233\'e9tape du pipeline ci-dessus, presque toutes ces \u233\'e9tapes peuvent travailler en parall\u232\'e8le. Sans doute vous ne }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 pas charger et d\u233\'e9coder l'opcode pour une instruction en m\u234\'eame temps, mais vous pouvez charger un opcode pendant que vous \u234\'eates en train de d\u233\'e9coder l'instruction pr\u233\'e9c\u233\'e9dente. Si vous avez un pipeline \u224\'e0 }{\rtlch \ltrch\i\loch
n}{\loch
 \u233\'e9tapes, vous aurez normalement }{\rtlch \ltrch\i\loch
n}{\loch
 instructions en train de s'ex\u233\'e9cuter simultan\u233\'e9ment. Le processeur 8486 a un pipeline de six \u233\'e9tapes, il peut donc d\u233\'e9doubler l'ex\u233\'e9cution de six instructions s\u233\'e9par\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La figure 3.25 montre ce processus. T1, T2, T3, etc. repr\u233\'e9sentent les "tic-tac" cons\u233\'e9cutifs de l'horloge syst\u232\'e8me. A T = T1 le CPU charge l'octet du opcode pour la premi\u232\'e8re instruction. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
A T = T2, le CPU commence \u224\'e0 d\u233\'e9coder l'opcode pour la premi\u232\'e8re instruction. En parall\u232\'e8le, il charge 16 bits de la queue de pr\u233\'e9chargement, dans l'\u233\'e9ventualit\u233\'e9 que l'instruction }{\rtlch \ltrch\lang3084\loch
a}{\loch
 une op\u233\'e9rande. Puisque la premi\u232\'e8re instruction n'a plus besoin du circuit qui charge les opcodes, le CPU }{\rtlch \ltrch\lang3084\loch
cherchera }{\loch
aussit\u244\'f4t l'opcode de l'instruction suivante en m\u234\'eame temps qu'il d\u233\'e9code la premi\u232\'e8re instruction. }{\rtlch \ltrch\lang3084\loch
Veuillez noter qu\u8217\'92il }{\loch
y a un conflit mineur ici. Le CPU est en train de charger le prochain octet de la queue de pr\u233\'e9chargement pour l'utiliser en tant qu'op\u233\'e9rande, en m\u234\'eame temps qu'il charge 16 bits de la queue de pr\u233\'e9chargement pour l'utiliser en tant qu'opcode. Comment peut-il faire les deux choses en m\u234\'eame temps ? Vous verrez bient\u244\'f4t la solution. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
A T = T3, le CPU calcule une adresse d'op\u233\'e9rande pour la premi\u232\'e8re instruction, s'il y a lieu. Le CPU ne fait plus rien sur la premi\u232\'e8re instruction \u224\'e0 moins d'utiliser le mode d'adressage [xxxx+bx]. Pendant T3, le CPU d\u233\'e9code \u233\'e9galement l'opcode de la seconde instruction et charge toute op\u233\'e9rande n\u233\'e9cessaire. Finalement, le CPU charge \u233\'e9galement l\u8217\'92opcode de la troisi\u232\'e8me instruction. A chaque tic de l'horloge, une autre \u233\'e9tape dans l'ex\u233\'e9cution de chaque instruction dans le pipeline est compl\u233\'e9t\u233\'e9e et le CPU tire encore une autre instruction de la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
A T = T6, le CPU compl\u232\'e8te l'ex\u233\'e9cution de la premi\u232\'e8re instruction, calcule le r\u233\'e9sultat de la seconde, etc., et, finalement, il charge l\u8217\'92opcode de la sixi\u232\'e8me instruction dans le pipeline. La chose importante \u224\'e0 voir est que, apr\u232\'e8s T = T5, le CPU termine une instruction \u224\'e0 chaque cycle d'horloge. }{\rtlch \ltrch\i\loch
Une fois que le CPU remplit le pipeline, il compl\u232\'e8te une instruction pour chaque cycle. }{\loch
Notez que ceci reste vrai m\u234\'eame si vous avez des modes d'adressage complexes \u224\'e0 calculer, des op\u233\'e9rations }{\rtlch \ltrch\lang3084\loch
\u224\'e0 charger de la m\u233\'e9moire }{\loch
ou d'autres op\u233\'e9rations qui utilisent plusieurs cycles sur des processeurs sans pieline. Tout ce dont vous avez besoin est d'ajouter plus d'\u233\'e9tapes pour le pipeline, et vous pourrez encore effectivement traiter chaque instruction en un cycle d'horloge. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_12_02}{\*\bkmkend p3_03_12_02}\rtlch \ltrch\fs23\b\loch
3.3.12.2\tab }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
locages du }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
ipeline}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malheureusement, le sc\u233\'e9nario pr\u233\'e9sent\u233\'e9 dans la section pr\u233\'e9c\u233\'e9dente est un peu trop simpliste. Il y a deux inconv\u233\'e9nients \u224\'e0 ce pipeline : les conflits de bus et l'ex\u233\'e9cution non s\u233\'e9quentielle du programme. Les deux probl\u232\'e8mes peuvent augmenter le temps d'ex\u233\'e9cution moyen des instructions dans le pipeline. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les conflits de bus ont lieu quand une instruction a besoin d'acc\u233\'e9der \u224\'e0 un objet en m\u233\'e9moire. Par exemple, si une instruction }{\rtlch \ltrch\i\loch
mov mem, reg }{\loch
a besoin de stocker des donn\u233\'e9es en m\u233\'e9moire et une autre instruction }{\rtlch \ltrch\i\loch
mov reg, mem}{\loch
 est en train d'y lire quelque chose, il peut se produire un conflit pour le bus d'adresse et le bus des donn\u233\'e9es, puisque le CPU tentera simultan\u233\'e9ment de charger et d'\u233\'e9crire des donn\u233\'e9es en m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une mani\u232\'e8re simple de traiter les conflits de bus consiste \u224\'e0 }{\rtlch \ltrch\i\loch
bloquer le pipeline}{\loch
 (pipeline stall). Le CPU, devant faire face \u224\'e0 un conflit pour le bus, donne la priorit\u233\'e9 \u224\'e0 l'instruction la plus avanc\u233\'e9e dans le pipeline. Le CPU suspend le chargement des opcodes jusqu'\u224\'e0 ce que l'instruction courante ne charge (ou \u233\'e9crive) son op\u233\'e9rande. Ceci a pour effet que la nouvelle instruction dans le pipeline s'ex\u233\'e9cutera en deux cycles au lieu qu'en un (voir figure 3.26). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 3.26 Un blocage du pipeline}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2805\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich187\picwgoal8295\pichgoal2805\pngblip
89504e470d0a1a0a0000000d4948445200000229000000bb0803000000977cfe4d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000133b49444154789ced5ddba183200c6518
977118966118966118af213cc2430b4ad57a733e5aab44b49c420c27549885c1f80c238c60305a60c4dd6c65fc0298298c363053186d60a630dac04c61b48199
c268033385d106660aa30dcc14461b98298c363053186d60a630dac04c61b48199c268033385d106660aa30dcc14461b9ec514a3afd46a1eaa4c5f59d993308a
29414217b60f58c2eb7cd06e85ec325256f0d757d1221baa21e58d74df836af9466a8664eb668c628ad15a0bb5bec039e1bdf927142da1e14c53e365356a0bd1
f0738f46eb1bdc7d5f45d25ee107aa90f29e1f062a9b3e555631a45b3763e4e8e39baaa5c92a96ed24296ab4db0d5d0a319270dbbaf5de5d45b60ed960142e0c
9bd992c4b47c2f9961ba752b1ec4949616d8a87181febdcf48032fe7234c69e9bcb206872ea58dcbff8c29eb58de47166bb97e234aaa4335767548ce480ad9e6
a7101beb454ddd4c71bdc9c7e1a730ccb66ec53798a2d5da065d4d8e4c99c4dce9bec5366bf7842353e696364f6cb498f5dc726f69836b32e07519665bb7e21b
4c01f40d25ae4f51cef7ebaf5175f838a4d99acdc28f605aafef689fd232d6fd3fa6343d89a496f845363ba6498d1d5d8a33c27a5a6b4b6fed33bdea7e4ac345
fe47a6f43cc8584b759c295db59d65ca91679f293f49a361ba752bbec01489d1b77e4b68b69e61247eafed0f3ec1084223f8d251919c170cc4b45e98fb1eda1f
b4f69922857b39f09c78165f7af6697faa20963697bedf135e3abf386734f5d4e66c4c6328b868f0f680f02e5384ff11ded0cf7c65dec7e883b32347ed0ee1d0
5576049fcf57f6283c6b8690f15c3053186d60a630dac04c61b48199c268c38b99d2b98a59c4dd17fe4c1c63cad126b8d28c993216079972b4b62bcd0e363933
a50e66ca20b3d7839932c8ecf560a66c9875cd69c37728e58384f45f003365c3acc694cd393e25716eefcdfe303365c3acca94ad59be49fb8b64a6645664dbd0
d70f13a65955959fa8aafd6c8399ee5172e78da664d33470648a00cd2c1006c406b3cd0ab37b33e181f44fd7ba52e97b709e29564eaff0bbd31f06f7b4aa5ab6
4df567ebcbcdb3567b0ac3946659a30905f5559998968b4c11525b65d5ba6d843290b665ecdeec2470629755c04cc9acc8b6b587dc3a48cc93b6a3d05b4a932a
536c51d46fe87af69420e5fdb9cdda7f4117666c3f662b85d62435a78d869591226058bb4ac29479712ca1894c15352c38b3ce8761a66456c987b58d26f83a27
b93205c822d6ef77aa752f35a608259df5ba59cfab7066124f690df45a8398e5b4fecea570952a312b5273dea7c06e2c82279855f52a095394338341c82c9e29
a54e4e04378599925bd10feb80b0ba0fc6accde099a2265d4de4ac3005c6ad495b6bff04b165864c4183d516cc5757025e9029604c6ace1acdcc02cf1f4e50bf
4aeaa72c8e60f0f4ab3d53f22b643f65cf2afb049fe7790e4c91b3948d7d0a8cef2bd1c01a363f33050da026cb0de93e39a6909acb465b8f43117f82fa55d698
e276d799b2326ebd7bb555e95b308229f6c7bafe527d9fa26defb0e79a22b04f814ec158eb4f7d8abd528506812922f9b4909ad34653ca362714f127a85f65c9
14abfcb71d12b0a6bc4260890fb5305332abe493cd51581d07dba7c0b38158a669aa3da4e4762bd4340989d68b3dc58ed9ea58ac5e021a786ed84f58297821a4
e6b4d18cadc115c113d4afb2d2a7cc2ea2a6ec1475718576a98cd4fa85f8b1c85bd14a3bcfe579a335aaea6b6d1dd68afa7581fd09fc18530a7430a5b5b2d7f6
0ae7f0eb4cd9b362a68c04336590d9ebc14c1964f67a3053186d78b136ff2058a85dc77bb5f92ce91f8b178f3eecde0c0533a5b0ba9e29d72e027f10cc94c2ea
8cd9219db69d2c783c57982985d568a67cd269a3aceef1831733a5b01ace94cf3aedce95ea6ec149a684f5604d7c6db17bab50fba04ebb6dfdeb7b718e29619d
61b7f8e3a7062155bd53a87d50a7bdba2a2ff753665cb41185d2f635e898ad3f9f3bf5b44fb1f2a0df146ad72e3332e5904efbf14439c914616f1585d2f635e8
98b590c2d8979a9dddfe59a176f5322353ba75daa66785eedb708a294a4133a00b8faf41c7ac26b3e04bc50e8d7f55a85d576a133f6559fa74da3f4194734cc1
20360aa5f135ea9815f4a84a6cf7293f2bd4ae2bb52b4c717b3fe9b49fffd863718629dafedb8d4efa14af6386a5c695892e1bb573f855a1765da95d30a559a7
bd762b5a3f7f61e3334c99edff22cc4e286d5f838e195c147c29ed1c7e56a85dbdccb24f69d569274fcbcfc5ff88bcdd23d47e974efb7f30a5000bb5bbf14f99
b267c54ca9829952583153aa60a61456cc942a9829851533a50a664a61c54ca982b5f937e36704deaccd1f6878695de3b9f0a9cd79f4b9d7ec57063b66cadd66
9733e560260033e56eb3e34c399408b01c1dba9829779b8d65cac705db61bed374712cd4c84cb9d76c30535a12010e69a74e31a541f3aeaa4aa63192fe4f9afe
314d5ebbb8da1507b3ae4c809c298d99009e29c71201eab2e38f359ed0a7cc7afe44cef49a5c558324fd9f34fd439852976bd6d6c676ef7d990019535a330102
53fa13018cacab8e3fd7789829a8aed74ee66ef5eaa87c0fd2f74234efaa1a24e907a6b44bfafb6e2ec033e5632a8020e5f34c00920a906502a44c69ce04084c
e94f043072bedaa3b59eb4942873b77a7510aea3d81e956285685ef8b721927ee8e7db25fd7d3717e098f23915c099d5320116920a906502e47d4a63264060ca
8105db8b4adb7096294aa2ccddead5e15b45b13ddcc7520a5cb1aa51927ecf9436497fdfcd05e0991b520112a6a499000b4d05483301723166632640f45396a5
77c1f6656348fd80134c51ae4fb13277ab57b77e8313db2f5eb45fd80d93f47ba6b449fafb6e2e00bfd486548084296926c0425301d24c80f2e7dd94095032c5
effbbc60fb7239539ccb803277ab57d7446cbfdda70c93f423535a25fd7d3717e0fa94cfa900c15b5f8a4c8085a602a4990029539a330172a6b42fd83e4d4bd5
91f98833cf3ea879773277d0abc38d45b1fd528ae6addd30493ffc54db25fd9d3717ab5be195fd7ba900deac9209b0d05480341320654a732640d1a7342fd86e
ee89d1da27818e78df6fc4c2ce9a95346a1778b7cec9148ddd9e08a0ef9af761a67c367b432a0047f3ef3663a60cb47bb5193365a0ddabcd982903ed5e6dc64c
1968f76ab397eb680fdedc2f98b1e27aabcd398b83d102660aa30dff9229afcff7fb06fe1d53ee19e45f807fc594dbbcc137e0ff30e5c6c78657e0bf30e5d607
cc57e03f32e5ee6bf94dfc43a6dc7d293f8affc214f666cfe2bf3085bb94b3f8274c61a29cc6ff600a13e53cfe05531c47bec6947d05b3c134d38664e3ce5acb
4cc16fe21f3025f6255f224a966765524a402e13fc878face48036203b1bf95ca677e56587e2fd4cf9fea093355996f12735889cf4b1c4bde26ce47379be6a26
e528bc9e2917782790902da1920972c820071852cfb15219dda390afb5ee83e4f409726add9b4de8f207667f2a67eff2bd96f8d915b4195fe9b149db7cc264ff
18bc9c299778b1c014bdcc524fd67790d2253aba4bc06c1f11323c0da6b30b9b2d8c6fd00693f207c0ab99bc1b02673322feb398fdeccf000b3f58d3704ccd2b
c9cc5a29b519827733e59ac71d5ce4414a236c222d32251c5c7b1964cd1cf749648acb5886a532a48484e170c09dca9dcdae154098e20b42b7e34ddd3103d9b0
4acf89cd109c660afe2f5aea4ac1cfa1c5b932ea80ffde6172d173b1678a1d2532a690d127b49b5839953165d690031a0fb8532d78369933c5158415b19c6938
261c63e5d3988209de46663b17b3ed5c51effd8097d76c7259fcc43345e36a36699f0283c3fae6c6102c5e1d7db48e07161d16c6a98d3ea1e0daa9a0693c2661
5500b13c6ff4818b2eda6ebf31a9f7fe45a65c17688ba38f1d0fd637152ed24c76a98b75e8090b241831cd5022f7688d3fb0e08a04ca955e37ece1257c8e0561
fd8cf498bd143805d93f04239862c0a3c33b468fdbae45e49e0712171c3cfac47b27cdae8897efcf621707a38f02b646498acc62c3c9bf25226b92b7f4904e8b
41bf1bdf9c8d49cb2c9b47921aaa561b97711c039862605d37d799a227ee9802cf03d435771e3df5de2353b0b7c4be3476c6c094e451c0fe82c379b55b1764ca
7d97e747eedd9d1f0bb2dc81017ecada4caec985f3c41d53a0a1a96bee3c7aeabdc72f0a7d751556495b429f120c7d8df1bc969fb48670574f27ca6efff3488c
187d16c214eb8953a610d77c418f9e7aef91296eaf0cdb9429f1512030c557b46435e04d3d9f283f87914c71a38fd68429d435771e3df5de3f8d3e42668f029e
29b1485203de1213e50b18c794e8d1d23e2571c1d1a3a7de7be6d11a1b7ff0af109cf6a30ff568e37975c5c9bf8b27699c6737ea737216f8e24964875131dae0
c39703af29b60bef3d3f581ede2c9e1fbcad43497dd35d4fb572b0671a9874c4177a390399f20cdc36f29c634acf3470e6dc5d8461f33e4ff1e1efe0890fff64
c1203f26da1db38dc9c58358766bcad86de30e1b07b7b33c38c607f3d2ea8b78f70ce135f0de3575ca755c15964687c2b68b076d4e196341dca13140efd65657
53300f56453ce90b60a69c870fffd090908e2eb8f2ffb9e096fd5eb0fb8128d0f694b1924bd861fb2715e71383b99b952ce349dfc059a674fbe1bba3947191ee
add2aa1c97dd05dc39f8f9f00f0d09e1442f390ceba8cf3152e4a340bb53c6923045a74c4173cb94329ef4158c794a3e5c3e75de5172aac35f46e433d22a1ec8
d4a43b53d7dfc7d6e8a3e861fb552fc9e8a3f5f694713afa50a684d147eb6055ff7fa3b1b89929a9f38e9253b3f9e76753d8bfa726bd1ed2c5764848c8b76e38
ec48100ebad9e3ad29632c883b2853a8476b4aab2fe23c5364d481068f7cf2f13174ee8977bea3398da29fc0142de834b20c8f03c4e9c7d369bf0187e6ebc963
92f77a4869cec6c96c8e389f322e77d0a85552d52543ef79a600e79dff8d1d619089ae4cb1ce3df5ce7735a74e729a30854e2347d968ec76dde9049d637e4037
53408de0ef9d1de890d1c7eb409dc3e9d5a056d639ebc43bdfd39c06c929650a9d46163a71fad37944dc4805670fc287ff616d3dcb88931cc320a644579cc844
f1efe784a0def98ee67463f421d3c8f61f92424df2a798f2f31837fa681c1a34fec7194e04a3cf4fbdf33dcda940c96936fa90696437fa244e7fc694c78e3e3f
8f218a6be3fd6febb0db69629c087693c0c43bdfd19c7ac9693efac41816ec274e7f788e204c81e39299f2050c88d1a67f8bbe6483e9c6d34087e6ab3eadbce1
f41bd4525e8aa32a001247dc3a459e94ac5a3c1528353ebcffb668be114a6d8563be85837e91bf4e4beefa29f280e23ace6f86189360e4175cb5b73165fd35c9
ab1f100e36cb44a67c1a4fb1572c094632531e89dee86348570f01c7a54879f1d158af25f461c610b92465631033d4cb4c79243aa38f7e7a47247d4a96f2e267
789c3e39a4c7f8c825111b902066486d67a63c129dd1472f2e10d9e893a4bcf859637cf7da022d883ed9972541cc50efaf30a5cdf33ee69f6f3b21f7089197ee
e8a3dc664a2c5430c565ad44a69070660862867a7f8529dbd7191c74630edccd6ab4e1fbef3c3f7c1f9dd1c7fae893a5bcd4461f3bc925424fe5cb6641cc9730
2538e8521eb89b6d81f1ad41fcdee8a3db8cea4997774e535eaa1e2ded53625912c40ca9ed4f648af5b61794ef199138dffe7e6239493e5552dcbd133f119171
b63a953db53f464f1e9e1fae522027e88c3ee601b572d3eb0b88ce603b3d66abdea138ad8e9cdd8f03a831abc4f996c44377e5d23e25f7f7ed4382cf6d7722e3
6c752a4d04c8e4507c7eb84c81fc5df84ee139b39de7471ff0b6ed998c9dc923ce77e2a163b97cf449fc7de7c4fbc706141967ab536922402687e2587f9902f9
cbd8ec49eec269a6586f1b36d64697a9f39d78e858aec2142a1806273e3c36a020305b9dca3345c7a70d77a4ac92311223f429c81413259fbe398987eeca954c
a1febe46e1f9429992ad4e4599420e11a65ca540fe6f38eda7a0970f00f91f5957cafafdc14377e50c51188bdcdfb74e7cb232d5229204753422fd0d35f5cf0f
572990ff1bcefb29db7e7cba235719d412d0eb5282ed87868d2c76e6c917c0d17c461b98298c363053186d60a630da30c0a355f01f477151f4c3eb046da7a7f7
5fd2c14b606ce3345320246a57fbf72afb9d75825212659422f2d770e4602cfb3921f017e17c8cd6f8ac1b27a6d8614a96af9e168ce9e9f10833e53938cb14b7
8a83b65137c294f08f446e6a5886bcf38d05abc8c798a9eea78797a0100d9fdd71b2067b7c9dc53d33caafc659a6c820e6336e4550648aff47a238353c4b8cb9
6f2d5805834fcc4fa7e9e9703439cfe20d9dce27ae628bcb974ce22533ca4fc230a6e0a2e88b678af1ff484415a5c88d8d05ab3041d0e7a7d3f4742c4eceb378
43a71d246ba8dbc5b3b478cb8cf2833068a51d7ca37e8aff4722aa28758d5c5fb0ca3225685165ce945499ea0c1d53e82e3757c833caa371dea3857fed74b9c5
f6546e411919b4484bc294cd05abfce883f9e9343d1d8e26e7593e8c3e52f08cf2709c668a9dfb35dabba5c1e3d4bec5fcd4b06d7e982bde58b0ca3e24c7fc74
929e1eaa51a48f71bad2296a579df12ca649f08cf2700c88d1263fddb2c72f14a5fb53c7a652ae3c8fdba1b335d89313324f86e2b7a3f91c38b90ebfcd14ee37
aec38f3385711998298c363053186d60a630dac04c61b48199c268033385d106600a83d1020e5e315a60fe006d87084e5a8f62710000000049454e44ae426082
}}}}}

\par \pard\plain \s33\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cet exemple n'est qu'un cas de conflit de bus. Il y en a d'autres. Par exemple, comme il a \u233\'e9t\u233\'e9 pr\u233\'e9c\u233\'e9demment not}{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
, le fait de charger les op\u233\'e9randes d'une instruction demande l'acc\u232\'e8s \u224\'e0 la queue de pr\u233\'e9chargement en m\u234\'eame temps que le CPU doit charger l'opcode de l'instruction suivante. De plus, dans des processeurs un peu plus avanc\u233\'e9s que le 8486 (par exemple, le 80486), il y a d'autres sources de conflits de bus qui se manifestent. En consid\u233\'e9rant le simple sch\u233\'e9ma ci-dessus, il est improbable }{\rtlch \ltrch\lang3084\loch
de pouvoir }{\loch
ex\u233\'e9cuter }{\rtlch \ltrch\lang3084\loch
beaucoup d\u8217\'92instructions }{\loch
\u224\'e0 un d\u233\'e9bit d\u8217\'92une par cycle d'horloge (on dit aussi, en anglais, }{\rtlch\ai \ltrch\lang3084\i\loch
c}{\rtlch\ai \ltrch\i\loch
lock per Instruction CPI}{\loch
). }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Heureusement, une utilisation intelligente du syst\u232\'e8me de cache peut \u233\'e9liminer beaucoup de blocages comme ceux dont on vient de parler. La prochaine section sur le caching d\u233\'e9crira comment on r\u233\'e9alise ceci. Cependant, il n'est pas toujours possible, m\u234\'eame avec un cache, d'\u233\'e9viter de bloquer le pipeline. Ce que vous ne pouvez pas r\u233\'e9soudre du c\u244\'f4t\u233\'e9 mat\u233\'e9riel, vous pouvez l'am\u233\'e9liorer du c\u244\'f4t\u233\'e9 logiciel. Si vous \u233\'e9vitez autant que possible d'utiliser la m\u233\'e9moire, vous pouvez r\u233\'e9duire les conflits de bus et vos programmes s'ex\u233\'e9cuteront plus rapidement. D'autre part, utiliser des instructions courtes aide }{\rtlch \ltrch\lang3084\loch
\u233\'e9galement \u224\'e0 r\u233\'e9duire ce probl\u232\'e8me et le blocage \u233\'e9ventuel du pipeline. }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Qu'est-ce qui se passe quand une instruction }{\rtlch \ltrch\lang3084\i\loch
modifie}{\rtlch \ltrch\lang3084\loch
 le registre IP ? Le temps que l'instruction }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
jxx\tab adresse}
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{\rtlch \ltrch\lang3084\loch
compl\u232\'e8te son ex\u233\'e9cution, on a d\u233\'e9j\u224\'e0 commenc\u233\'e9 cinq autres instructions et on est seulement un cycle loin de l'ach\u232\'e8vement de la premi\u232\'e8re d'elles. Evidemment, le CPU  ne doit pas ex\u233\'e9cuter ces instructions, sous peine de produire des r\u233\'e9sultats incorrects. }
\par \pard\plain \s34\dbch\af14\langfe1081\dbch\af14\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La seule solution raisonnable est de vider tout le pipeline et recommencer \u224\'e0 charger des opcodes de nouveau. Cependant, faire cela provoque une s\u233\'e9rieuse d\u233\'e9gradation du temps d'ex\u233\'e9cution. Il faudra six cycles d'horloge (la longueur du pipeline du 8486), avant que l'instruction suivante puisse compl\u233\'e9ter son ex\u233\'e9cution. Bien \u233\'e9videmment vous devriez \u233\'e9viter d'utiliser des instructions qui interrompent le flux s\u233\'e9quentiel de l'ex\u233\'e9cution du programme. Ceci montre \u233\'e9galement un autre probl\u232\'e8me - la longueur du pipeline. Plus un pipeline est long plus vous pourrez r\u233\'e9aliser d'op\u233\'e9rations par cycle dans le syst\u232\'e8me. Cependant, allonger un pipeline peut ralentir le syst\u232\'e8me si vous faites beaucoup de sauts/branchements. Malheureusement, vous ne pouvez pas contr\u244\'f4ler le nombre d'\u233\'e9tapes d'un pipeline. Vous pouvez, cependant, contr\u244\'f4ler le nombre d'instructions de branchement qui apparaissent dans votre programme. Logiquement, dans un syst\u232\'e8me \u224\'e0 pipeline, vous devriez les r\u233\'e9duire au minimum. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\lang3084\loch\f0\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_12_03}{\*\bkmkend p3_03_12_03}\rtlch \ltrch\fs23\b\loch
3.3.12.3\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ache, la }{\rtlch \ltrch\fs23\lang3084\b\loch
q}{\rtlch \ltrch\fs23\b\loch
ueue de }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
r\u233\'e9chargement et le 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les concepteurs de syst\u232\'e8mes peuvent r\u233\'e9soudre divers probl\u232\'e8mes concernant les conflits de bus via une utilisation intelligente de la queue de pr\u233\'e9chargement et de la m\u233\'e9moire cache. Ils peuvent concevoir la queue de }{\rtlch \ltrch\lang3084\loch
pr\u233\'e9chargement}{\loch
 \u224\'e0 servir de tampon pour les donn\u233\'e9es depuis le flux d'instructions et ils peuvent concevoir le cache avec des zones de donn\u233\'e9es et de code s\u233\'e9par\u233\'e9es. Les deux techniques peuvent am\u233\'e9liorer les performances du syst\u232\'e8me et \u233\'e9liminer certains conflits dans le bus. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La queue de pr\u233\'e9chargement se comporte simplement comme un tampon entre le flux des instructions en m\u233\'e9moire et les circuits de chargement des opcodes. Maheureusement, sur le 8486 elle ne jouit pas de l'avantage qu'elle avait sur le 8286. Elle fonctionne bien sur des 8286 parce que le CPU n'est pas constamment en train d'acc\u233\'e9der \u224\'e0 la m\u233\'e9moire. Quand le CPU ne fait pas cela, le UIB peut charger des opcodes d'instruction suppl\u233\'e9mentaires pour la queue. H\u233\'e9las, le CPU 8486 }{\rtlch \ltrch\lang3084\loch
acc\u232\'e8de \u224\'e0 la m\u233\'e9moire continuellement}{\loch
, puisqu'il charge un octet d'opcode \u224\'e0 chaque cycle d'horloge. Par cons\u233\'e9quent, la queue de pr\u233\'e9chargement ne peut pas tirer avantage des cycles morts du bus pour charger des octets d'opcode additionnels - il n'y a pas de cycle mort. Cependant, la queue de pr\u233\'e9chargement est encore utile dans le 8486, pour une tr\u232\'e8s simple raison : }{\rtlch \ltrch\lang3084\loch
le UIB}{\loch
 charge deux octets \u224\'e0 chaque acc\u232\'e8s }{\rtlch \ltrch\lang3084\loch
de }{\loch
m\u233\'e9moire et encore, certaines instructions comptent seulement un octet. Sans la queue de pr\u233\'e9chargement, le syst\u232\'e8me devrait charger chaque opcode }{\rtlch \ltrch\lang3084\loch
expr\u232\'e8s}{\loch
, m\u234\'eame si }{\rtlch \ltrch\lang3084\loch
le UIB}{\loch
 a d\u233\'e9j\u224\'e0 charg\u233\'e9 "accidentalement" l'opcode avec les instructions pr\u233\'e9c\u233\'e9dentes. Avec la queue de pr\u233\'e9chargement, le syst\u232\'e8me ne rechargera pas chaque opcode. Il les chargera une fois pour toutes et les enregistrera pour les utiliser avec l'unit\u233\'e9 de chargement des opcodes. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Par exemple, si l'on ex\u233\'e9cute deux instructions d'un octet, }{\rtlch \ltrch\lang3084\loch
le UIB}{\loch
 peut charger les deux opcodes en un cycle de m\u233\'e9moire, en laissant libre le bus pour d'autres op\u233\'e9rations. Le CPU pourra utiliser ces cycles de bus disponibles pour charger des opcodes additionnels ou pour traiter avec d'autres acc\u232\'e8s }{\rtlch \ltrch\lang3084\loch
\u224\'e0 la }{\loch
m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
Sans doute, toutes les instructions ne sont pas d'un octet. Le 8486 a deux tailles d'instruction : un octet et trois octets. Si vous ex\u233\'e9cutez divers chargements d'instructions de trois octets, ces ex\u233\'e9cutions seront plus lentes, par exemple, \line \tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, 2000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, 3000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab add\tab ax, 5000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Chacune de ces instructions lit un octet de opcode et une op\u233\'e9rande de 16 bits (la constante). Par cons\u233\'e9quent, il emploie une moyenne de 1,5 cycles d'horloge pour lire chacune de ces instructions. Comme r\u233\'e9sultat, elles n\u233\'e9cessiteront six cycles d'horloge pour ex\u233\'e9cuter, au lieu de quatre. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Encore une fois, on revient \u224\'e0 la m\u234\'eame r\u232\'e8gle : }{\rtlch \ltrch\i\loch
les programmes les plus rapides sont ceux qui font usage des instructions les plus courtes}{\loch
. Si vous pouvez utiliser de telles instructions pour accomplir certaines t\u226\'e2ches, faites-le. La s\u233\'e9quence suivante fournit un bon exemple : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab add\tab ax, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut r\u233\'e9duire la taille de ce programme et augmenter sa vitesse d'ex\u233\'e9cution en le modifiant par : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
\tab \tab \tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
mov\tab ax, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab add\tab ax, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce dernier code a seulement cinq octets de long par rapport \u224\'e0 l'autre qui en a douze. Le code pr\u233\'e9c\u233\'e9dent aurait requis un minimum de cinq cycles d'horloge pour s'ex\u233\'e9cuter et encore plus si on ajoutait \u224\'e0 cela des probl\u232\'e8mes de conflits de bus. Alors que le dernier exemple en prend seulement quatre}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
En realit\u233\'e9 les deux exemples seraient plus lents. Voir la section qui traite des effets de bord pour plus de d\u233\'e9tails. }
}}
}{\loch
. De plus, le second exemple laisse le bus libre pour trois ou quatre p\u233\'e9riodes d'horloge, donc le UIB peut charger des opcodes additionnels. Rappelez-vous : }{\rtlch \ltrch\i\loch
plus court}{\loch
, veut dire souvent }{\rtlch \ltrch\i\loch
plus }{\rtlch \ltrch\lang3084\i\loch
rapide}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Malgr\u233\'e9 que la queue de pr\u233\'e9chargement }{\rtlch \ltrch\lang3084\loch
lib\u232\'e8re}{\loch
 des cycles de bus et \u233\'e9limine les conflits, certains probl\u232\'e8mes existent encore. Supposez que la longueur moyenne d'une instruction dans une s\u233\'e9quence est de 2,5 octets (obtenue en ayant trois instructions de trois octets et une instruction d'un octet). Dans un tel cas, le bus sera occup\u233\'e9 \u224\'e0 charger des opcodes et des op\u233\'e9randes. Il n'aura donc pas de temps libre pour acc\u233\'e9der \u224\'e0 la m\u233\'e9moire. En pr\u233\'e9sumant aussi que certaines de ces instructions acc\u232\'e8dent \u224\'e0 la m\u233\'e9moire, le pipeline sera bloqu\u233\'e9, ralentissant l'ex\u233\'e9cution. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Supposez que le CPU ait deux espaces de m\u233\'e9moire s\u233\'e9par\u233\'e9s, un pour les instructions et un pour les donn\u233\'e9es, chacun avec son propre bus. Ceci s'appelle l'}{\rtlch \ltrch\i\loch
architecture Harvard}{\rtlch\ai0 \ltrch\i0\loch
,}{\loch
 puisque la premi\u232\'e8re machine de ce type a \u233\'e9t\u233\'e9 construite \u224\'e0 l'universit\u233\'e9 de Harvard. Dans une machine Harvard, il n'y a pas de risque de conflit dans le bus. }{\rtlch \ltrch\lang3084\loch
Le UIB}{\loch
 peut continuer \u224\'e0 charger des opcodes dans le bus d'instructions pendant qu'il acc\u232\'e8de \u224\'e0 la m\u233\'e9moire dans le bus donn\u233\'e9es/m\u233\'e9moire (voir figure 3.27).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4350\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich290\picwgoal8310\pichgoal4350\pngblip
89504e470d0a1a0a0000000d494844520000022a000001220803000000e055097100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000eab49444154789ced9dcd95b230144029
c6662886662826cdd0801b166ed8b0e0cb2f3c155ee20823ce77ef39a30221c9907b923c9c21553701e4e9baaaab000a70aa7cda57f80650050a4115280455a0
1054814250050a4115280455a01054814250050a4115280455a01054814250050a39a12ad78ff3e92b704e5005550a41155429045550a59093aaf2a9bf099c50
6593b3aaf299a25145015524a8a2802a125451401509aa28a08a0455145045822a0aa8224115055491a08a02aa485045015524a8a2802a125451401509aa28a0
8a0455145045822a0aa8224115055491a08a02aa485045015524a8a2802a125451401509aa28a08a0455145045822a0aa8224115055491a08a02aa4850450155
24a8a2f065aa747e459ace1c5434aa287c872a5513de7d558dfbe7e2fae124ff1fc7f5dad246d50b5ea18ac277a952374e97dabd3ca6a88db10eadb8f24a0f84
2a0a5fa58aaf6990c454ed4a8a47815e055514be4a95ca772ac191072b420ae3ba95c60e4566baf8e34d1506a0daee6bd321df293d0d613e1754d9e69b543161
a61246947a4d15e745e37f3a6fcd64fd70e92ff6a5adba78c8a7ee1ebaa5703aaa6cf34daaf8d7a44ab3ae4a137a11a74813e4b2db9ddf67e643ddd654175514
be4815132729aa2ac684c72f35b617097b6dfa70e6341f72e351b31a2da1ca365fa44ab0213757b12a39dc28d3767eb011aaa443931d8bd67a165451f81e5562
7b47471ea71a7304d4cd01735df99e671e80c4a1259f877250659bef5125dd5b0961f2ea7d958bef45ec8b17c9848ec3bd847d5d3ad456d392df5d2ea8b2cdd7
a862e65d6d7816e4430ac7a54b1febf0c1bf9a101c7bdde2a17a25079f1655b6f90e55a6f4ed4f20cc3736e9560ec7af8dd2a1b52413aaa87c8d2abf02aa28a0
8a0455145045822a0aa8224115055491a08a02aa485045015524a8a2802a920755ae2ff0990aff26a8224115055491a08a02aa485654293a0f553ec3b954295d
c6ee3315fe4d5045b2a64ae1594756eb1ca08a0455145045822a0aa8224115055491100129a08a8408480155240c400aa8224115055491a08a02aa4850450155
2444400aa822210252401509039002aa485045015524a8a2f09e2ad7bd4999a2caf938ab2a1f8208689b93aaf259e4af572ad80e6d71725065a316a9260c4009
54d9a845aa09aa245065a316a926a892d843955d2ab264f5213f04b24ea892d845953d628ffb462a29f60d075ef8f54a13be98f517b28f2a3bd4e3acaa100125
5025530e0350025532e5a04a025532e5a04a025532e5a04a025532e594267c31eb2f045532e51001255025530e0350025532e5fc5015dfdbac2ee6fb902e2ca1
b8b9eed98940954c393f55e57931dfb5957dd3623535aa94d7e3afa9f2bc98efaa0d554a882ac5f538ab2aa5091ff62c8bf9fab5884c58c5a84d5b4b3abfc86f
7bf16bb5a6b5ae5c4a97d075438d3fcdef6cda8bcff4f2e2afb113a89229e78711d0b2986f75f16b7276a66a4d97b69674ad17a1adccb2b26fd598dafa615cda
b0ecaff13bbb30a3595b1eed3740954c396f0d407e79b429aebb1857f09dc482696e67edd65b74bd465cd9d7cf744d58403c4e776d9265dd34b33ae7f9055025
53ce9baab8966eeb6a5665de4ae9ece4d7d44d1875aab06a5e1b9708b6aaa40583a7b0aaa7d3a45e5b76fe3740954c396fa9e29ab675c1d0accabc95d2b911ca
a6aac4a2bf26763c77aa04cf6ce7f2b10930aa64ca793702f28bb3b64995652ba5f3135e3f6ded965db32a61006a6655ac691ffb073f54c994539af061cfbc98
6fe7d779f6aa3493d84ae99c175d8870e2a2bf52153f3be9aa66ee4baa87f5a57f1154c994f3d308c8e117f3750bf5b6aecb70e1f2b295d299f9dddfdf9d1e54
99d20426a66b3ed6a9a04aae9cf7bf035a96fd35d3fd22c08f095757f4edeee6269f8a942754c99673aeaf0bdb4f45ca13aa64cb39932acd47efff9f4c951352
5077fe08214fbc98ffb92afc155c01f162fe6955f82bb808aae428a83baae48917f3d755196efb2bb14541dd51254fbc987baa123675156e531fcb1ea6e12d03
7a5429e684aa0cc330dd19f0a4c3345e632b4f6fa8320c6349dc5d507754c973842a63681f4595c16a32f974fd1baab8f3c75d5421022ae03055ecc032b8dd83
6bcec9799136639250f818768df1d0e4128d83dfeac36961675062b8f3cf1ff38d1c4e0d253c8f4844409193aad2bb060e4d791b6cebdfae6933742a36991766
74ed6ccde8fdf4267ae25efcd0148f8e4398d284ac9772863159e25efa69ec87bb24a5bd0aaa1470982af66de8533fe0db526ca6bec26dfbfe2379e02ae45b7b
9c6e6167f22b1cb93d1a30f68b2a5b33e482baa34a9e237b956b3fc612421ba64ddfa984a69da679e0984227136322db5dcc438ecfd069723f870d69e500e4f2
5889bc0aea8e2a790e53c536b89b87885e65de8cf35edfb443506570dc42c221cc61842a4368f0febed788068d8b2ad730c941950d4eaa8a9d7a848124a9326f
0e314a76339120c26d6edf3b55e601c81f4d3dd4bd2ab7a44a1a7d56a2e7c2ebf0fe25383be75325de5719bc04f3e464de4c739921dcb30d13d79b6c742f86bf
f1b2741ad7185ddfab32f888c7bed89c6d2fd6db71ef795a4b041439a12a8e217c18fd4cd4f7087133762af3bd16f7dea7ba4855ee76fa7cefe3e0b91c9ffd18
06b4b560b9a0eea892e70055166ef3bca177e14fd81c56c394dbda9742b741b6bb766336265ccd0555122756654ffa31f3b5d236057547953cf1629e5e95f1e7
5f00a04ae2ff50e51d0aafc3fb97e0eca04a0e22a008aae428a83baae489171355502547bc98a8822a39e2c5fced7f19fb2d5c8dcef42f639f0555148a6b74ba
9a1f01aa28f85e850828822a0a0c40125451401509aa28a08a0455145045822a0a4440125451200292a08a0203900455145045822a0aa8224115055491a08a02
1190045514888024a8a2c000244115055491a08a02aa485045015524a8a2802a125451200292a08ac2f5053e5dd7e34115055491a08a02aa485045015524a8a2
802a1254814250050a4115280455a01054814250050a4115280455a0105451e0169c0455145045822a0aa822394495ce742fd7e38c171c552407a862c25f86d9
bc1d8ddf63dc81462908554ecffeaa186f4755bb1f635ab7852a7f81fd55f11dca645afbc939e3fc4095bfc0eeaa74553be78d2a7f89dd55895af8bcfd487441
95bfc1a1aa544d5355dd77ab529af0e0aa9c806355a9ea56ecfb4a55f83fa0c4e17395f0c9ab527fa52af964a852c08a2a3102eaba3b55bc3ecbf64a3d50e5ec
1c7a5f6551c5a5e896a169a51ea872760eb85bdbce776b6755baf9c6ed663d50e5ec1cf21d9079fe0ea8334a97329d5895d2840757e504f0cdb2021190045514
188024a8a2802a125451401509aa28a08a045514888024a8a2400424411505062009aa28a08a0455145045822a0aa822411505222009aa281001495045810148
822a0aa8224115055491a08a02aa485045810848822a0a4440125451600092a08a02aa4850450155242753e58414d41d55f2c48bf99fab42045440bc987f5a15
22a008aae428a83baae489171355502547bc9807a8328d3f6ad6a1b4e9fbf23cf37547953cf162fe922a9a08e1d85060c0340dc3f8c273de0aeabea28afad887
ed9cf467008434b57f531f4172087f4b95a2a677398f7baab21601ada95229cf080fc74a5a3f3cea68aa514534e8348432fc5b3fbad7d1ef1c8319eea5f77be3
31b167397b5595d0ba319390ff962a3f8b805655d11e4554dcf0f1393515aa4855a6d10e15433f8dfd308d37fb33dcfcce6151c50e27b68b88c7c49e219dbda6
4adc1f5f62fe3fef55b654a94ceddbd53d88a80e4f286aed4eb7cfb7b37fa9ddde782cec69d2e77af5e945d5c55deef6e2d2baa466f27956ad2ba65bce0f25b5
17778eb9bcd538b1e053abe23f0ca9bd43d34ecbc7e17af31fec1425a499f7d854f1ecf5a61ffb2593411fbc0aeabea54ad598d6b69efddcd99634556b3abfb3
5b54712d6ed38463628f99cf7e2aadf522b9248dff09795aaf5ae31e129cce0f258529cdcf664e8f059f5995317cb087c7dbdcb4a354654803c7accae02b655f
d3d94f4d3ffa214d6492f2df5d95da7f9827a0a1d5eae5a38993539306a0794f5da5b39f4bb356d8542e6dc8a5f5498d13a8a996f35349fe69e42fafa4b2f66b
9e5995a4869b4c0c4bd3dea992d23fabb288f594f37558f21fe6fc7757a50d1fdc40e2da2ab5ecb4a862d2a59b55097bec6b3afba93463ac2d8d7ff7343ea909
03d2727e2cc96952d7af36c7eaaff90daa5cc3b8f3a0ca300f37f7aaa4014853e596f24fa3cf76f45c781d1e7f9f26f9e0262b4d9c524cc289ac2a1b2387eb4d
2e6ed471ca38c270e6cfbb57257466b673d96706fc05aa8c7690e99701293831f5b7d0d34c37dfdccbb8e48299610e923607a07ece64ce7f9d9f4740b2b1abea
49956e1e6ee4ee2e4e6d3555da905b97c615a9ca7c7e12a4adb4474bbfd244e75725b442ef6e86a4cec27ff461cc2dd6c31f5b82e5e9baad8a671099a4fc7fda
ab645469d38359c3037d8313171717f9b967377561ea1b0f3a0dba39485a55658a53e070727ba7ca7cfedc9754cbf3c9dfe2acaadc711bc2acb3177763e78f43
f8248edd4a6edaca4c52fec7a8e2e3611fe0bab7d080ee631bba163fdb08c7e219618fa64a7aaf7c187eaf4a3a7f4ea82d6df00a5fa1ca4729a87bee3ba0792d
47316730cbc1c7639d4896617595c887f37789942754c95350f7537f5db8766fe647a04a8ec2ebf0fe25388466bf2f005025077f051741951c057547953cf162
a20aaae488171355502547bc98fccbd8d96a7e04a8a2505ca3d3d5fc085045c1f72a4440115451600092a08a02aa485045015524a8a2802a125451200292a08a
021190045514188024a8a2802a125451401509aa28a08a045514888024a8a2400424411505062009aa28a08a0455145045822a0aa822411505222009aa281001
495045810148822a0aa8224115055491a08a02aa485045015524a8a2400424411585eb0b7cbaaec7832a0aa8224115055491a08a02aa485045015524a8a2802a
125451401509aa28a08a0455145045822a0aa8224115055491a00a14b28f2a3b802a67671755f60055cece1eaaecc88ebf19ec0caa4021a80285a00a14822a50
08aa4021efa902ff11a80285a00a14822a5008aa40215e158002ba7f297ba1ac50fc7e7a0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 3.27 Une machine Harvard}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En}{\loch
 r\u233\'e9alit\u233\'e9, il y a tr\u232\'e8s peu de machines Harvard. Les fiches suppl\u233\'e9mentaires requises dans le processeur pour supporter deux bus physiques s\u233\'e9par\u233\'e9s augmentent le co\u251\'fbt du processeur et introduisent plusieurs autres probl\u232\'e8mes d'ing\u233\'e9nierie. Cependant, les concepteurs de microprocesseurs ont d\u233\'e9couvert qu'ils peuvent tirer profit des architectures Harvard, avec peu de d\u233\'e9savantages en utilisant deux caches sur puce s\u233\'e9par\u233\'e9s pour les donn\u233\'e9es et les instructions. Les CPU avanc\u233\'e9s se servent d'une architecture Harvard interne et d'une architecture Von Neumann externe. La figure 3.28 montre la structure du 8486 avec des caches d'instructions et de donn\u233\'e9es s\u233\'e9par\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4395\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich293\picwgoal8295\pichgoal4395\pngblip
89504e470d0a1a0a0000000d4948445200000229000001250803000000166782ca00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000f0049444154789ced9d4d96a320144659
8c9b71316cc6c5b0193650931a64e224035b7e54e03d94942641fabb7d3a2a2295e83d808220f404c0315a0050829eff7ddb567003600a2803a68032600a2803
a68032600a2803a68032600a2803a68032600a2803a68032600a2803a68032600a28e3dba6fc54cc174f4b85c0943c5f3c2d150253f27cf1b454084cc9f3c5d3
52213025cf174f4b85c0943c5f3c2d155287295ffc0239eafc565fa41253beddef9c0053526a31e58b5f8103a610600a0b4c21c01416984280292c3085005358
600a01a6b0c014024c6181290498c2025308308505a610600a0b4c21dcce14458790da8274bc573391cb8029849b9932983619bd6ea838c8acf56b5ce51a705c
b090f3b6893ec992bf055308f7324589c15c78b7a185b9f441901146af1ea9598e39ac37ff951a848429a7b89729f62a2b1f59d83c650bda2471bb6d34653c92
f65098728a7b99a28c0cbd8b3ce7162e4f59826205b4c96b1c30e50aee65ca7c99a5af94980b6e2ffd1a346722835cf5f05e185c31d4c19453dcce94bef3f558
bd9ae28344277ab954622253843432c19453dccb147b95075b71ede47cf9fb610b9a851882422732c544c4bdcf39ee658a2d47cce732deb2dc827cfdc56dd37a
cae4b3a0a59a73f087604aca4d4df19b2a0c1a44bcd36e6a1d9832441176ff104c49b99729d2943272bd1b7677c96b90d385799eb298e2eea5154996025308f7
3265ea4c91b3152b2a0ad2d14ef7f0d63ea35d0b24576015005308373365d28a64094150b253a5ed3eccd13c30857037533e044c21c01416984280292c308500
5358600a01a6b0c014024c6181290498c2025308308505a610600a0b4c21c01416984280292c3085005358600a01a6b0c014024c6181290498c2025308308505
a610600a0b4c21c014169842b8bd29bb035517c5e20e822984ca4c79f1829a23f2690b76f5009892a136534a8f83299f06a6b007c114024c610f822984164c89
5febd1c3a0496230e5340d98a2a23703073304864a138329a769c29479d1ad2faeebf55542987225ad98b20cfe36f07ac094d3b462ca12203b260e4cb90098c2
260c5308ad98b2943e0aa5cf9ba8d214153daf9f7c98ddafa288d362ca3656971d797488e3c0940ba8d4141a71cf94f02e598bae5f0647df8e8629a769c01412
93c481291750a9298a0ca7546ecac4ec8229a7a9d49468c0361f66f75f658aad09f569e80453b2546a0a8d78b529767e0ee6609892e1bf35c5cdba903b08a610
6e638a6dd0d1549033a6f45d1a0c53b2546a8a21191074882a2f1798a2a460269ff3a6fcd4c9e1f97c1f559a92211c4cf6921a2d3788314cc970275342ae287d
d44e8df6bb4264293d3d6fa00553a4105b8523d838aca7a8f4567c8229591a3045f7c13d51b871688a8629e53460ca64eaa65b1566db38324577287dca69c114
217538e9a02e32c5827b9f721a30c53c7d594d0937ceb4fbfce12a8e0f26ec192fcf52fc33aea701536c3f83a5c2116e5c658adbc17810f1987ecde2398d41e0
738a9730e5cf5c60caac47b847d338a74d19c7718a0cf889b76cc873b99630e51db0a6e8c1fd0fd152f75d600133a0414a66dc837d38539eee22ed9a32ba2c65
9c9e6e05a65c0c6b8a995b327d98af8450418bdee74d19673946b36f34177ee6b96e6e91e64bf9f06bbf36ceb42e8d5de6207bf0f8e30efedd9630651fde1433
1d721251ad5369bb881f37e577bebce6fb9aff8f39eb982bb0cbe6cf9aa53c7c247b514723c9ba3421cf71f4db8fdfe9f93ba7f2b32c61ca01bc294c7f00dbbe
fc4d53cc62b47980dd3059c9b6b9c4317987abd33eeca7c962dc72f9f875dbcf87cf8c1eb4c603533832a6902e6fdf37c55ee2dfa7ffceeefaae9b3e4b71516d
90176a5a96cbced1fd99a7b9e8cf87bbf8cfa3fb2a989233a5933a7d2ab6638a661ea0c571aeaaa73ccd6dd0664ab0b96429ebafe24c195d3286877366fcd996
306517d69441d0f267c71499990279df94ccc4c97bf73e0f57215d4cd936d72cc567304fbef4d94aa5f5c2c74b98928735a58040011979306c5b9799b23c4f31
d9ca635a33916dd367290fff786ead953c6d8dd62d9712cb3cc39b1d3337d3736df66759c294032e3025ca53cc8f597a3c5d678a61f46b4fab83ada02c9b7196
62763ed60ac9ba5ceb367ed32e7eb7254cd9e76a5306c9c539674ac0632d3a7ecd8d8fdf1cf96ac6129cee7eb81622bf5897306597ab4d91ef35e5db949e9e37
d09a29ef287d2aa2f4f4bc81164cd1e1d31753bfd5691c98729e164cc93526c3942bb99129d1fb623b0a307160ca796e644a044cf934959a3230e310e8f0d2c2
944f53a729a2573ddf9a3cc5117773a1abfabc5544f1cfb89e2a4db1df88749c2f3225ec2a7795296e47e963d4b752fc33aea74a53eccbea7f33e5aab123e3cb
338ecfe246bcb752fc33aea74a53d85131be688a69bfbbaa27ec398a7fc6f554698a2d79bae23c257c2f590929441ae70a536ca39e6d255cfa94cce5d1da07d6
f78d7db1572c4c7901de1453fc909b9f9c29d17bc96a5eeb6512e7bc29a3edf2b89ae23bbfae7d607ddfd89f177bc5c29417e04d99aff8c17151e913bc97ac82
76a04b6bb4cfdfc014df1d69e995b4f48d7db5572c4c79819c294784a684ef25bfc514db6b292a7d26d7f9d52fd6beb12ff68a85292f708129e4bde40253943b
80191230574f3165ca66cad2f9d52db6beb1aff58a85292f708129d17bc96f33e5e14d19570fd6f77ad232e78d37d4a5a7e70d34604ad294ccc4b9c094d1dcd1
ccff1ffe1d42dbf975ed03ebfbc6febcd82b16a6bcc025a61cc5396b8ac5bf64fa5c3bd45a75ec62ed1bfb62af5898f202773025605c2448fac2322b6fa1f4f4
bc813b9922b94bff5953becddee97933959ac2f53a5042c8edcd30b24281295752a729a25703f956ba17db542e274df1b7d5b46b034cc951a5297c0be195a5cf
e46eab99de4c30254395a6d0fcc472a929f6ee3a1dce67822959aa34e503798ab65d60980e9230254395a6d82131e8b762e7574fa3856fb033d137b4625b2161
4a862a4db1979b0e543e055d1172a6981fd35d30ca28e6f749a9d394dc03fa2d17c899320829bb8eec8229a7a9d59423b2a6f4dbb4a830e54a5a33257a839d89
5e98304c21b4668aade2204f7903cd9912bec1ce442f4c18a6101a3485c6812917707f537660a217260c5308b737e5eae83025034c6163c2144295a6d8f12f64
a6776c18b11898729a2a4d49c6b3e680299f06a6b031610a01a6b031610a01a6b031610aa14a53cc379230a52eaa3465ea8580299551a729c79c3425ff3817a6
64f85f4c29c7270f5312fe1353c8e1f926229f3c4c49802930a50c980253ca802930a50c980253caa8d4146610821898f269ea34251a008305a67c9a3a4d8906
c06081299fa64e5350fad4074c812965b4650a11e00ff8e4614a42a5a664c6dad9c89872fe0bc1940c959a3231737144c0944f53ab29479371c0944f53ad2907
c0944ff3ff9ab23bd83e4c2134650a194950b33ad850cd4f970c5372b46d8a6475e043a384610aa1355396192b3b33a4a0348f4794e8c532ed8f1d58d2869a90
c1af483a2a024c21b4678a9db15275768e6d937b2833449333c50fed65f314657ff7b01e11270c5308759a9219ba38206f8af5438bdedc663b53a6c594c109e1
4db15beb1171c2308550a729c71c9862c77b23a6c8c81409535ea14e537237261b07a698e123535344aef4812925d469ca05a58f1d247b5e0c2ead79bb93b632
ab6de852a3d530a590a64c094375b44882f5c4ef9d604a96664df92b3025034c619380290498c22601530830854d02a610ea34e51898f2691a33450f43743fa3
99f9a44a12862984c64c11321ecbe9b818e313862984c64cd1dbec3e169872194d99b2f6e89742746eaa9fa54b4130916549c23085d09429cb5b42ba9f2328f3
bb84ef52104e645992304c213469ca5ceaccd595414e6ba34e38916549c23085d094296badc4341b2b199a124c645992304c2134658a1d175b0dae8f812f7d9c
29e144962509c31442a5a60cddfea42dd9bbe4aeb7dd0ae685eb461b746c12c853ce50a729a257076f26e79ed1fa8c83e97350e4094cc952a529b6bed1eff67b
c3d3fc4f53a529363fd91f1803a67c9a2a4db1798adc1dec00a67c9a2a4dd1a6f2f997b93830d2cefba8d2143376a4d8ef9effda77e675d84d1ea624d469caf1
9d0a4cf934b59a72044cf9343025933c4c49802999e4614a024cc9240f5312604a26799892005332c9c394049892491ea62454698a96baefae9c8b03a69ca74a
539410ea60e47c98f2692a35e58fed3ed9d830e534959a32c194da802999e4614a425ba61023fe804f1ea6243466caf92f04533254694a0130e5d3c014360998
4268d414455f031bb84e74747c159892a14d534cef4a114b306cf59e602e173a6a064cc9d0aa2944826ecb6482718a614a31ed9aa2859dafc58f9ce2a66ad966
6df1e3a92453b64c3025cb6d4dd97918624dd19db48d02cbc829a6f0f1eb76b474f7467b3265cb0453b2b46a8ae8dc9007ebc829c614bf6ea684924bc4740a31
9892a15553d6cf65e4146b8a5b9fd59030e5559a3765296796d2c7cddab2953e30a590e64d59464eb137c96eddccdae2e66f8129e5b4694a0c1d45454f982ff9
55fe07535e02a664802969c2fe13a624c0943461ff095312604a9ab0ff842909ad9a924eca510c4cc9d0a829433a294731302543a3a62ccf4a5e07a66468d314
3798adf0cfd56cbb71b8be9bb0ff8429096d9ae2c69d146e846bd782ac82f5dd84fd274c4968d494cec73176b8166415acef26ec3f614ac26d4dd90d5561e9e3
5a90c3f5e384610aa14d537c6f143b278774edc6e1fa71c23085d0a8295af466528eb9fce9a46f410ed70f13862984464d99738e2ee84cf0c29c1c302543b3a6
d84ed62fcf960c53b2346ccadf8029196a33a51836b5f2c30f12862984ca4ca905984280292c3085005358600a01a6b0c014024c6181290498c2025308308505
a610600a0b4c21c01416984280292c3085005358600a01a6b0c014024c6181290498c2025308308505a610600a0b4c21c01416984280292c3085005358600a01
a6b0c014024c6181290498c2025308308505a610600a0b4c21c01416984280292c3085005358600a01a6b0c014024c6181290498c2025308308505a610600a0b
4c21c01416984280292c3085005358600a01a6b0c014024c6181290498c2025308308505a610600a0b4c21c014169842a8c594da802929759852275f3c2d1502
53f27cf1b454084cc9f3c5d35221df3605dc059802ca8029a00c9802ca8029a00c9802ca983d01a004bd3fd134001efd0fbc4d378d30b6d6590000000049454e
44ae426082}}}}}
}{\loch
F}{\loch
igure 3.28 La structure interne d'un CPU 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Chaque chemin dans le CPU repr\u233\'e9sente un bus ind\u233\'e9pendant. Les donn\u233\'e9es peuvent circuler sur toutes les voies en m\u234\'eame temps. Ceci veut dire que la queue de pr\u233\'e9chargement peut obtenir les opcodes des instructions du cache des instructions pendant que l'unit\u233\'e9 d'ex\u233\'e9cution \u233\'e9crit des donn\u233\'e9es dans le cache des donn\u233\'e9es. Maintenant, le UIB charge seulement les opcodes de la m\u233\'e9moire chaque fois qu'il ne peut pas en localiser dans le cache d'instructions. De m\u234\'eame, le cache des donn\u233\'e9es sert de tampon \u224\'e0 la m\u233\'e9moire. Le CPU utilise le bus de donn\u233\'e9es/adresses seulement quand il est en train de lire une valeur qui n'est pas sur cache ou quand il vide les donn\u233\'e9es e}{\rtlch \ltrch\lang3084\loch
t}{\loch
 les }{\rtlch \ltrch\lang3084\loch
renvoie}{\loch
 dans la m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le 8486 traite le chargement des instructions des op\u233\'e9rande}{\rtlch \ltrch\lang3084\loch
s}{\loch
 ou des opcodes d'une mani\u232\'e8re tortueuse. Gr\u226\'e2ce \u224\'e0 l'ajout d'un circuit d\u233\'e9codeur suppl\u233\'e9mentaire, il d\u233\'e9code l'instruction au d\u233\'e9but de la queue de pr\u233\'e9chargement et il d\u233\'e9code trois octets dans la queue de pr\u233\'e9chargement en parall\u232\'e8le. Puis, si l'instruction pr\u233\'e9c\u233\'e9dente n'a pas une op\u233\'e9rande de 16 bits, le CPU utilise le r\u233\'e9sultat du premier d\u233\'e9codeur ; si la derni\u232\'e8re instruction utilise cette op\u233\'e9rande, le CPU utilise le r\u233\'e9sultat du second d\u233\'e9codeur. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Malgr\u233\'e9 que vous }{\loch
ne pouvez pas contr\u244\'f4ler la pr\u233\'e9sence, la taille ou le type de cache dans le CPU, }{\rtlch \ltrch\lang3084\loch
comme }{\loch
programmeur en assembleur vous devez conna}{\rtlch \ltrch\lang3084\loch
\u238\'ee}{\loch
tre la mani\u232\'e8re dont le cache fonctionne pour pouvoir \u233\'e9crire les meilleurs programmes. Les caches d'instructions internes sont g\u233\'e9n\u233\'e9ralement petits (8192 octets sur 80486, par exemple). Par cons\u233\'e9quent, plus vos instructions seront courtes, plus elles pourront entrer dans le cache (vous entendez }{\rtlch \ltrch\lang3084\loch
d\u233\'e9sormais }{\loch
parler d'instructions courtes jusqu'\u224\'e0 }{\rtlch \ltrch\lang3084\loch
l\u8217\'92ennui}{\loch
). Un conflit de bus se produira d'autant moins souvent que vous aurez plus d'instructions sur le cache. De m\u234\'eame, le fait d'utiliser les registres pour garder les r\u233\'e9sultats temporaires permet de garder le cache des donn\u233\'e9es moins occup\u233\'e9 et de r\u233\'e9duire donc les vidages du cache sur m\u233\'e9moire ou d'y aller recharger des donn\u233\'e9s aussi souvent. }{\rtlch \ltrch\i\loch
Utilisez les registres toutes les fois que vous pouvez !}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\i\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_03_12_04}{\*\bkmkend p3_03_12_04}\rtlch \ltrch\fs23\b\loch
3.3.12.4\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
ffets de }{\rtlch \ltrch\fs23\lang3084\b\loch
b}{\rtlch \ltrch\fs23\b\loch
ord sur 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a encore un autre probl\u232\'e8me dans l'utilisation du pipeline : les effets de bord sur les donn\u233\'e9es (}{\rtlch\ai \ltrch\i\loch
hazards}{\loch
 en anglais). Regardez le profil d'ex\u233\'e9cution de la s\u233\'e9quence d'instructions suivante : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Quand ces deux instructions s'ex\u233\'e9cutent, le pipeline aura un aspect semblable \u224\'e0 la figure 3.29. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop1688\shpbottom3698\shpbxcolumn\shpbxignore\shpleft-72\shpright8238{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich134\picwgoal8310\pichgoal2010\pngblip
89504e470d0a1a0a0000000d494844520000022a000000860803000000c4af513d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000b5049444154789ced9deba1a320108529
c6662c866628866628c66586f7c338705d1fc99c1f2e9b3880f28968e05c613616eb58c60823582c820095bb7965bd418c0a8b2846854514a3c2228a516111c5
a8b08862545844312a2ca2181516518c0a8b2846854514a3c2228a516111c5a8b08862545844312a2ca218151651f7a162f4f84ccd9998ebf4ecdafd59b3a8c4
5974366da4a0659107ad38056f2c28c48e95b429a1074304b5a43a681daa9c97a404ddaf59548cd65a28bbd9dca18f0629c08414968256bbbba19dd8bc7a4690
50298e08fea5709c0501f886047f0c7222d5ee01facb0d281d231195320878190fa25db87990a0f52a45c848ebb99d69943425d9d44b3a957b5159c65131f456
f47b5ab6ae40458e9dc55802f972b95d77a2b2922f441f64e432d088a909c751b103884124ed2950520d566eb833ba5337a2421bd5e64146aea325b931d1282a
5ad9913ab5dd3d2a8b58a9c3fbac24fafdf476dd868a193949f95865a8358c58a4946225367bce14f98e127a1505c58df1e5487e896e4365e872ca9a500fa232
f43c9aa3427e3271fbad582ff218350da45ea3bb50191bcd4da3d28493cbb105112f7817a466502197f104dd858a10f84e61286859b69987e57154a47ba33616
0494d0ef27395f5e586ada3c4ef7a1821aeae30dfd6d6d55bd892720faa03b8cb92186fc08d479c216a2d83c4eeffab990f60af504197287976926e6457a172a
ac1bc5a8b08862545844312a2ca2181516518c0a8b2846854514a3c2228a516111c5a8b08862545844312a73a27b4837babbeab322a1f287f332732a2f0dfb43
e06c792f150d95d9ccbf378c51d9d96936f3ef0d635476769acdfc7bc326db9c513937ee0d61ff1d15b93789cb48597f17277ca5995f2ea5e4c0d2a423312a0f
45657792a716884af2145021d398882935b032e9b84643a8e8dd3577aa7711bca1cd5f884a9913ae3d5a4496c85267cee81e42655df5ba3361be7b642e6e9faf
a812b4509c2ebeedc2d80b0beaeddfc984701df40aabdb5cedde313e86edef79804a9cacede1d02991a5ee420577b41530c62d62d16163ef8c50af661a32c67d
e02bed5844c6e254feede1b4fbea30ba0b863a9964d781fa54cf0ae7aacd8582f28e71f66142db848249fe10218568fa01dc43fa16cf1bbc46c59d25bb6b4c64
a9bb509158b6d442e19a713b6682cd024958762ee422dbb80e5f903421b105d09ae25677981e4313f2c04018b5d526493ba8388f15c775cf474164bb07de5d0d
7d02ba270de09aec6aa850718565fbc4aa5685055484d4ab00be164044a35d905b40e62f1058f8826632f62c146be02b54fc212d2226d247dbbda8287b8cd0f6
cafdc7d60893f68345d717b2d81abe2c4e5aacf67ad29090ab08a0b5c5890d97a63b0c610b813e07290c6e3a6141e19e0e3063716d41cdc1f9dd6dd6b0581d12
b6d61a0ecfb6a52fdc47d5bd0a9e0edcc7e550ec9d760ba8ac5041e541804ae1999089045c1a874bcac452ac59ac50d16145514ca48fb6db5051bed501758d4f
61b071497b4257293bbd4ac917e004c76a0c5c4702db40f66f404a41acc710b7d8c5430e6a3190326d6999dc29753063716d417998abbbdb5d8bcdd5cdd51a51
81d0ec6aa85131ab70d9c71cb6ceb5935051be91a5f015c5088f0bee21c331e8b2a47eafb28a98481f6d378f550c9e4503f775dcd8646c4eddc6957c014e90b4
2383d5b78103ad2dcebdd9f418e216f3402015dce39520f42a0e662cae2d280f73a8b8dd6d411e1557eb804a763574c6a7d0f9e994c3d6b976b2b18aaf6081ca
06c3177f4c781f22a01206266b4a64a9db9e8094edf3d5a617ec116dbfa8369fb437123b025f96b58d2bf9029ce0342a686edfb3f77b15b8a0d3cd4d06543007
036d6a5cc3b6b5f4f2bd4a80f9a857c17a2ab77b4245b85e458bd863644b55b34c6c17b8c12d476f3187ad73ed7451c91e552ccf118474039230a0a98e6b8ba8
e04aee0dcf7fc839a56e43c51dba269b97b9c6caf9029c34de91e51a7b7604ad0e5bd14867f5dfe2160bc61c045e8cd5696850c1e70a2cd78d8a9a828a30574f
b77b4405ff2bb0243b10c9ae860a15e3865d6e1f97c3d6b976baa8609b1b7fc38915742e84320d3ec2d1d6a8e060180a8f892c75232a58b7315446f96adafcb2
b016a3fd5a373720da6aea2e2af8a91f55c74c857fe38acd1e80c2822a54dcab599327b2d4bda80c649e926f40a5d5002ac4c2fa61a6fbcec8745f06b4ef8be2
5afcb4283fa65e88cab7855dffcbb2f2d8fadf808831b7fd06349af9f786dd808aff37bce2a5489e69b5cda8bc0595dbc5a8302a44312af3a84c6aae9af78b67
ecf38c7da2781dd09c181516518c0a8bb527468545d4b5a8289c6a0e2f93f2ed6154b9f920d37d8f89138caaa2fde6ef2fa83abffda8f316543c4997a222e157
323fbf25db7e96d95663d2e6e3befd23119da27dc97f3ff4804a761c2700f8445ddbab488d979c28b607d2ab90266d3eedaa84d47a310ae798e945fae960a22d
3a947c062adaac301d46e24c3b2c0a261f5884beac73b91c155841218aed61105cff69f349027e49855972cab617ce62779f36458792ff7ee852db92560d3929
e9ee3df603e8b7beed3ef40254344ea48f9b4fc209963657b3f8c425a884925cc1ee06245ef4470989ba1c1583e731df9ea8808a961e8d0295acd050f229a8e8
848a76338937b36e237f66f115ba1c157b22976a7b9e84bba261d5470795bc505ff279a84828cd2d37813f8167943ef72ab85f37bc5731cdf63f2b1d5f56a8a9
be621de9175ec1ed3ebcd25eebb09c7e0115d62962545844312a2ca2181516518c0a8b28468545d4cfa3f283d3d926c5a8302a44fd5754265be0cab0cba7eb4f
07deaeff8bca0bc2fed2ecd7d5f209bf40302a736dcea89c9cf90bc21815721518959f41c5b9f3d7734ec93efc97a0f264bff51f42c539b3d433aec81e2c57a0
72b1df7a69b87e64505db67967e77e06352a4497f6bacd6976eb4dd89c9cdf537bca89ce4e17a072b1df7a65b87e346db168f39ed97a3f830a15aa4b7bd5e644
bbf53a6c52cf47e52cbf75489be44abee7b75e18ae1ffbadf75039f25aafc3e82eed659b53edd6f3b09e3b7ff5473ae04ba11b73fe888aa8ccfb1f86cadffdd6
c18c7c4503746f2dbae3b7be6586eb04bff50e2a875eeb7518dda5bdee556876eb7958cf9dbf30e7b789059bbf36e70f47d798f73f079593fcd6e148d100dd79
caeef9ade786eb82e0b7dea272ecb55e87d15dda2b548876eb7958d79d3f37e7f7e6af708e4a73fe804a63deff1c544ef25bc7851360808e898e0dba3f0cf722
15bf1604bff5169563aff53a8ceed2de0e3a2876eb7958d79d3f37e707a9d559de968579541af3fee7a07292df3a108206e80e95bd5e25375c1704bff54eaf72
e8b55e87d15dda4b54a876eb7958df9d3f33e7c73b1af64c3ba834e6fd0f42e51cbf7567672e43afb2e3b75e1aae13fcd62b54609878e8b55e87d15dda4b54a8
76ebdb0e2ac99d3f33e7774f80ae9f29ccf9db1b90fffe51a8801eeab77eef2b389addfab6834a72e7cfccf91120234463ce1f87b59579fff350990afb7654c6
c376dcf9f3daacd0c389c69c3fde805cdde3f75f82caff0f7b1b2a95baeefc7d73fef48c547dcfa810a3de8d0a41d169a4efceffa8df801e1df603a88444df9d
9fecc3cfa87c3d2a67895199d785b5fc7e54e65ae0ca309e864d6f4d5edc31dfecbf2546855121eae7516151c5a8b08862545844312a3d4db9132f32c511dcfb
c9bf143e458c4a4f532ef9a2883b3ca91d73fe678b51e969ca255f14710454a239bff7e6dfd4aa1eeccdcfa8f434e5922f8ab8c3939accf98337bf4657e4c77a
f3332a3d4db9e48b228e828a37e70fdefc1bae4e78ac373fa3d2d3944bbe28e228a8e8880a4ee1b2dd89d89eebcdcfa8f434e5922f8a38322a522abf34492f8f
f6e667544e93f8f0bf6f10a3729af227ec6f74ef67545844312a2ca2181516518c0a8b2846854514a3c2228a516111c5a8b0884254582c824c676d228bd5ca98
7f1212a960fef349120000000049454e44ae426082}}}}}
}{\loch
N}{\loch
otez le probl\u232\'e8me majeur ici. Ces deux instructions chargent la valeur de 16 bits dont l'adresse est l'emplacement 1000 en m\u233\'e9moire. }{\rtlch \ltrch\i\loch
Mais cette s\u233\'e9quence d'instructions ne fonctionnera pas correctement !}{\loch
 Malheureusement, la seconde instruction utilise la valeur de bx avant que la premi\u232\'e8re instruction ne charge le contenu de la m\u233\'e9moire \u224\'e0 l'emplacement 1000 (T4 et T6 dans le diagramme ci-dessus). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Figure 3.29 Un effet de bord sur 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2010\shpbxcolumn\shpbxignore\shpleft0\shpright8310{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw554\pich134\picwgoal8310\pichgoal2010\pngblip
89504e470d0a1a0a0000000d494844520000022a000000860803000000c4af513d00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000abc49444154789ced9d8bb9a320108529
c6662c866628866628c6656678f8c038a2c926d773be5d2e5106547e9118184c9820e85821986020482142e57ff30afd82800aa414508194022a90524005520a
a8404a01154829a00229055420a5800aa414508194022a90524005520aa8404a01154829a00229751595e0bf7910dd771fdd8fa90395322a2ac7cf1a4539e34f
1999ae82e8cfd8518eb19a929ea60e5482f7deb8184cd3184d83eac2ce8ce89351a1528d3854b510b3828c09b1248555b5f12cd5c13d4e9d0fa0f9c554ddb84b
23a36b55aad1b9ca93d42a4a56361245a3d2d27554c2c95a9f18ae0fa0624f9d572dc1a19bdfd44554821df4b59853521d9e4525f61ff4b4649bc95977f6e04e
36460fd26554465d6f7366e4a82e4ea2e29d35e664b59bc18c567d74f3260f6ae98ebecab9da0866b0d69a5159f1b524fd0325b72a8e4a3b598e43a3b2a31b50
f1675139f585b496a4ff622209473eaeb3e5a051d9d3e751d9c695465e7dbf8b8deb41455fc8e3740d956198babe2c9f45c5ca0bb593474794a89f27a52335db
c6c5d6e0e1ba864a50bf449d196de20a239933db7374dabe70b2593061cc2278b8aefe06a47c877a59c1f7bc41ed3282dac22fcb90524005520aa8404a011548
29a00229055420a5800aa414508194022a90524005520aa8404afd1d542ef8eefddf87fe1b52a1d25b03176aefa3857de242ffbe74a8f466fe4933a0f2660115
a0a2d4df42e573660f1450d19ad9dd315cc1dad5ce3adeabc452c459fdd4a42f1350d19aed0ff1f486510979d2912b7996588de867267d9b80ca1da82c72e2a9
478399c7eaa61f1ed17d0e957cb55ca8a1c62ea991be95472deec4e4d36d9dbbfd47c62bb3dd8447a8e4c1da89123f8bd54d4f41a54cd553ce395f65dc9a30d4
ca23271b47ef5e4d1c5962b6ae73e3a8bc639c9399f131e268903f5958fa90da8154b79c8026157195cf2b7c858a5c244a5a6275d3535019e5343d5f2c0e43f0
322c9efd23ad9d24b55149e97dc969a7384eee73fa5850fcc77fb979f2046e980dca5fa1e2f3c320cc72680ce12fa818eb47437c0dd41c78f21624f3c7d2fd41
2e61c4974cbc0a8b39f04b54d2290da6c6eaa6e929a8988967a63bba921c7a333a63074b3d3b133868d925f974d3d981aee260534e7bc5599917c8e963d63459
7df0f193890f264ae468de33972ee9d6ad0a6d973492c322754d965119e9005d02818e6a349c47068167c6a5198bc362cee212155f9e3325e6e78f9e47a0e21c
559fa37af212c68be4060923231c34ecb2f89292e1e04388575df2d82d4e5091f4deb0b5f12317cba890ad942e562b54c26824ff92c33c752dccd4c7864f8f16
4944a765a6329395ffe63d8b5c9aadca686aac6e9a1e828abcd9a4f702c64b18ebcc8ed6f2844f1324d8da65f12525c3d85b1dc758934e818aa4f736a162d3a7
844a2a3d1fdd3a23cf69720ef3d4354de9abe4039ca13251ef259d123f8714a8e48ec9388bd54dcf4085eee8787b2e5a1569643c751eac0b52b16bbb226955e8
12866875d8aaf07139495f50318b4fa974b15aa2129bc0891e397e2a39cc53d7c21aa88432513af25c38983d802c756896e7257951c813b939bf12ab9b9e81ca
48671aafbbb123ddae14d2f51f8661e4be8a045bbb22fa0a11bb27f4a0f7649e72da298eeac5d2d7104e9fe1e04fd40735dc1191d2c56a894ae012521ac9619a
a5ae853550e13a0fd251a92e7ad80961ead6d2a3aa9cec0a15ee0c8f661eab9b9e814a47e657cd361cf97d17189b07906e36751315de6a65774998dfb872bd5b
5377ad509157b36111ab9b80ca9d762fcccea0a22cac6d165aef8c42fb5dc0a6ab5ce7e29758dd04546eb4eb33fbf82fcb2e639b7e03521ae137a01bed7e0595
1c0946effbc5feaeab6da082f12a4a0115a0a2d4df42a5537d87f93461c4be012a3a611e1050510aa80015a5fe0e2ad09b055420a5ba5071cbe09542eb3d268f
2fe2a18c817e8ae62047afbfa0dafef6e37e753ec557a96741ba690ca10607f9ef6db4fc932d0f47e02085dd5fccab322a15ba1bf8837a50f1a3b1a1062fd33a
63bd1f82336e8a7f6d1a0e26a3c1bcdcee8603894ef7a0e2c348e3612c0fb5a3a278ec414408adcb05f53c802cddfe35789d3ffd924ac32c697c2b8d5d978d93
a042ff79f93023d1e90e54ac8f458d9e72a2115434066e90619e78105d510f2a9ec7d197e075fe34302e621006f9fb195472515cb03c800c1625bca8777f03ca
a8781b830d2a81fb285c9112de848aafa8f0985a3b8551a66c40ddfa002a9607a386162a71e7e02548e18da8109c32dd8416c08b1d157f43e60fd67f79af322b
30942085a8cd6fd57f4165ffcb6bf85997127f5f785b0b29055420a5800aa414508194022a9052400552eaf1a860f09c564005a828f58523f6bb6bafc7f0a3b3
0aae94f709180e28f833f3807e64fad067afc99d022a7d750e547612f566fe036640457d0840e531a8c85a00eb21ae6aafff40e539a8881f98f5f82eb5c79733
a828fc98bba687c98bfed6275f3d1337bd29b5cd94568b3a57ba76dfa2d24ad4b45c1ea5ceb9fbc6ac4fc96ff0e65a28fd489d711b38faf1951ff3ed71a48c2f
fa5be7bb211bbdf2f0d56735af73ad6bf70d2a2dc3b6e522a1d2b9fbdaac531f438593255fe993b820176fe6c59df9c60f7acaf8a2bf753e452eddcb50592a92
e79b1dba69d75835503974edbe8bcab1e5d6ead8b9fbdcec702d00f12265fc662980828a61cf5175ffeda8f0d0356bc57539bb20275fe4ec015d5c8b6efda09b
fce792bf753945f67f1a8bb2e2749ddd231f7bf457586d513976edbe878ac272d9aae89cbbcfcd0ed702889181ab7fbd14403ebbbc5640d9ff1e549c15d7e5ec
829cef5b9a96c52e65a7adc762c9f8aabff55ce952a69522e341fbf1a599d66a838ac2b5fb0e2a1acb650f47e7dc7d6e76b81680740db94a964b0164548aabe6
bcff76545c6a55d87539bb20e71e0079401747e65b3fe8e956e3cbdaef6f3d557a28655291d3e8c6554d345139b6daa0a270edbe838ac6727d721ae7ee73b3c3
b500486ea4a35bf977cfa894b502f2fe37f55582b82e6717e4c917b94ba8ecb42a97fdadf37979c93f993abaa33617bdcf6adbaa1cbb76df6b551496732bad73
f7b9d9e15a00fc44f37e1f95b256c0db50497ecc93eb727241eeb9d9b3b955d9fa4167bbcbfed6d9e13a39a94f65969e51f3284f5b2d51312ad7ee0d54a47f79
6c39b7d23a779f765069ae05205f38a59d592c05b07d00a5fdf7a3921e8227bc0ae80ea1d36c934a65b6b5faafafe074cedda71d549a6b013040d47ae6158956
6b0194b502ca8a45ef4085cbfb0e54ecf6965598b5ac7eec6dede15a00d4c4c416cee4a500d66b01e4b502cafeb7a172466f6d556e32fb355456ea5a0b60b51f
a828ad7e1b15850ed60278cb6f40a705541a865d569750c991f65a006aafff40e5cfa37297804abf3e7894bf834ae7a5fca8198661bf5998dc71a1da9f25a002
54947a3c2a90564005520aa8404a019596ba7c210fb6da29d60a50ff52f82d022a2d7539e5370bbbc38bba5d0ae0cb05545a62a7fc677df29b859d0295b21480
4ba368dce8be782500a0d29238e53fe993df2cec0e2f6a5d0a20ad044043f579f01550f9218953fe933ef9cdc24e834a5a0a20ad04c03ff27ef14a0040a52571
ca7fd227bf59d86950f105151e30169b13f3c52b01009596d829ff599ffc6661a746c55a972642f9a1a3d4cf09a8dc26f3e2d35f1050b94df36fd87f71ad00a0
0229055420a5800aa414508194022a90524005520aa8404a01154829a00229c5a8409042a1318d1582b60ae11f52b24b5c8e230a1c0000000049454e44ae4260
82}}}}}
}{\loch
F}{\loch
igure 3.30 Un effet de bord sur 8486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les processeurs CISC comme, ceux 80x86, traitent automatiquement les effets de bord}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Les puces RISC ne font pas cela. Si vous essayez cette s\u233\'e9quence sur un processeur RISC vous n'obtiendrez pas un r\u233\'e9sultat correct. }
}}
}{\loch
. Cependant, ils bloquent le pipeline pour synchroniser les deux instructions. L'ex\u233\'e9cution sur un 8486 serait similaire \u224\'e0 la figure 3.30. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En retardant la seconde instruction de deux cycles d'horloge, le 8486 garantit que le chargement de l'instruction chargera ax }{\rtlch \ltrch\lang3084\loch
\u224\'e0 partir de}{\loch
 la bonne adresse. Malheureusement, la seconde instruction de chargement ex\u233\'e9cutera en trois cycles au lieu d\u8217\'92un. N\u233\'e9anmoins, requ\u233\'e9rir deux cycles d'horloge suppl\u233\'e9mentaires est mieux qu'obtenir des r\u233\'e9sultats incorrects. }{\rtlch \ltrch\lang3084\loch
D}{\loch
ans vos programmes, vous pouvez }{\rtlch \ltrch\lang3084\loch
heureusement }{\loch
r\u233\'e9duire l'impact des effets de bord sur la vitesse d'ex\u233\'e9cution. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les effets de bord sur les donn\u233\'e9es se produisent quand l'op\u233\'e9rande source d'une instruction \u233\'e9tait l'op\u233\'e9rande de destination dans une instruction pr\u233\'e9c\u233\'e9dente. Il n'y a }{\rtlch \ltrch\lang3084\loch
aucun}{\loch
 mal \u224\'e0 charger bx de l'adresse [1000] et puis charger ax de bx, }{\rtlch \ltrch\i\loch
\u224\'e0 moins que ces actions se produisent l'une apr\u232\'e8s l'autre}{\loch
. Supposez que la s\u233\'e9quence du code \u233\'e9tait :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, 2000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
O}{\loch
n pourrait r\u233\'e9duire les effets de bord existant dans la s\u233\'e9quence du code }{\rtlch \ltrch\i\loch
en r\u233\'e9arrangeant les instructions}{\loch
. En le faisant, nous obtenons ceci :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab cx, 2000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant, l'instruction }{\rtlch \ltrch\i\loch
mov ax }{\loch
requiert seulement un cycle additionnel au lieu de deux. En ins\u233\'e9rant une autre instruction entre }{\rtlch \ltrch\i\loch
mov bx}{\loch
 et }{\rtlch \ltrch\i\loch
mov ax}{\loch
, vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 tout \u224\'e0 fait \u233\'e9liminer les effets de bord}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Sans doute, toute instruction qu'on ins\u232\'e8re \u224\'e0 ce point }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
ne doit pas}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 modifier les valeurs dans les registres ax et bx. }
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans un processeur \u224\'e0 pipeline, l'ordre des instructions dans un programme peut dramatiquement affecter la performance de celui-ci. Faites toujours attention \u224\'e0 tous les effets de bord possibles dans vos s\u233\'e9quences d'instructions. Eliminez-les autant que possible en r\u233\'e9arrangeant les instructions. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4380\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich292\picwgoal8295\pichgoal4380\pngblip
89504e470d0a1a0a0000000d4948445200000229000001240803000000dd3b516f00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000010bc49444154789ced9dcba1b3ac1a462d
c6662cc6662cc6666820930c327192815bc00b3711f0c54df459e77c3b828226ae1f5110aa0a8000d8f4bf118023600a0803a68030600a0803a68030600a0803
a68030600a0803a68030600a0803a68030600a0803a68030600a0823b329af9b93ef972b0e98728a7cbf5c71c09453e4fbe58a03a69c22df2f571c30e514f97e
b9e28029a7c8f7cb15477e53f265fecfc0144af88ff9df7dca7301532811a6e4cbfe3f8129a4c094db0053528129a4c094dbf06ba6f46c5e60ebd2baa0c4b982
c4c01452884de9f83d8738fd7ca1d1a3b638412f6e50e6e8aa9dc23d8f6ea90e07a690426b4a5f75fcc48ffc0f1b1917648bdae2e66d5b1ed7f07f7ddf552d4c
39c74f9922ce723ffdd98458a3943881b4a7e71eb5623b98728e9f32a5e73234957abad7284301c6cb1a094c21e1a74c994e732b2a255381d1b59d16a5c68de3
522be1c8cb500d53cef16ba634353fe1555d35adbcbe2c516adca89b52b55c2698728e9f32459ce56e2a412a7e6d111798354a89e368a6544d37e2dee7243f65
8ab88ef0bf4db504d728258e63d653f8a730a5812969fca6299dc3944e3365bef7614c31a5d336387d30308512eaab0f9bff4835981ab5c50994e7298b29f25e
ba77e71d0d4c2185b8465bf3c7adbc6860cbc216a5c409baf519ed7a41920f6b898029a450b7fbb07e2912d6852d6a8b5b8246bb0feba90a9411a61083b6e4db
0053528129a4c094db0053528129a4c094dbf01fa65cf28e45b5dc24e702a69002536e034c4905a69002536e034c4905a69002536e034c4905a69002536e034c
4905a69002536e034c4905a69002536e034c4905a69002536e034c4905a69002536e034c4905a69012660ad9ee604a3e604af2be600a25ab29d75c309c9905ee
2dfc0865229842ca664af001698148bfdca684ed2dfc57802919386b4a642a98920f9812bd2f98920398721b9e618a31ea01eb3a66ed00a6f879842962b8eb6d
e0948e0f11d89b3b80297e1e62caf451afaa88b1b1614a24cf31a55f32ebdc7ac0143fcf3165cdacad9d3b80297e604af4be604a0e7453d6895454e6d3b88cc0
96ffead3bbf580297e2e36c5b1c9a129117e794c518732eee5241d234c89e0274c094e157697ccaaba59268f32f615044cc980694a6f8dfc798529766ac7de60
8a9febeb299db1498029c17e859aa2efc0b1632f30250364f59430bf484d11193466ec0853b250463d651faf2962fe42476a9892810053c4c3f5ed180a3245ce
4ab79708a690e27a9e628e5ddf6957974053dc7ed19bd2d466344cc942d8335a75e283bde729417e519bd2b79563726eb9e5ab4c3c5ff61c4598a21dd06ec0c4
e1177d8dd635c90b4cc9c0ab88769fa0bd39af3efd7e8df6bf95d821f4178be619a6b455a5d43794d0613da5b7eecf614a165e4598c21ae536490b1d9ac260ca
f2ad9f60cac8aba64aad660b1d99c26a5c7d966ffd0853aa569da952091dd66871efb37eeb2798c29fc86ca6a8219f29073b4b398dc3c78efa9a0be708fe16b1
3cc214d1cd60ad6fa821225364bcad81c1677c4f7fbfe3a0c47d477301a6f0f76ce43f0dd6b2a6decaf83cf514fd1ae2dcdb39538661183503a6483dc863bef3
b9842916ba297c1a74eb616b5f55bdd2ba629b12e0976588ed8b93b0adac54cb57b314f09b3288226518bfe213a66818a64c05bff5d0b31773aaaffe38ca9463
bfca3065e06e0c7cddc04ffcc4770daa3e7de4c2eb2d3619958571e06944dae135e7f5de3e1f648aab695634007a4d39f6ab0c53defcf4f215fcdf672a3ba60a
ec127c2d45ca67da688e9874788f728375e13b0c73f033e5f77d4fb9ac9f8f32c5ee921460cab15f6598223e06510688902816d6e0bc112f3a649df623fe4e19
ad0b52a1b70c7ee7f8d7faf92453ea96590f28024c39f4ab0c53e4297e7fe795f2fcae4159a4c84d45ccecd3b82dc89583dccb579cf5efe7b57d3ec794ae7294
0fc7a61cfb75640a733c3fb3d2057f296f3de5cbef83365394e05ca4ac3f8ccb14593b19389f599a41f97c8c294107640502fc3a32a575751e30d3d96bf75289
bfb629a27a226ba48b295b702952e6f2e5ebbefa6c57a5edcceb9f30653da0dd802f919f56f7a05b8364a6accf5378b9f219d742640b4a993ef3e3391925aa2c
a3ba30c8951fa118bf9b7e2b9f30453fa0dd802f514c99c2bfef32280699299c6159fc0a1f440565096a450a5ff7592b24cac25cb559f2179fefed13a66807b4
1bf0258a31a56bdde9ec5c834d51f9acd78e37bff1998383b39ab1c61aab3f730391f90953d403da0df812c598d2e635e59f09fcc5e279a02919ae3e0511f88b
c5538029fdbe1c54a630ed890cafe0323b9d9d2b4c51bff5ff9b621cd06ec097e8c094bdc6649812cec5a6748e177d997642424dd14aa26353dcc094702eee75
d0f48db5b70bae3e41e9ecb53045fdd697f664120f56dd035cac07e4081c9644306565f7bb9ee5e2761f4eb429b1259141e0ba33ed3e0511fc2d622960ac8323
53a24b2203739dda7f8ec814191ff814352fc1df22968beb29d3f9ae63cb94e892c8c0d9b868af3b67ca307ccb286682bf452cd79ac24fba55e5383225ba2432
b8c214de7c47d411f624c1df2296ab9fa798fd61ed03b203b125919da3f65e72cfdb96ed74a74d91df7658fecc9d5fd73eb04be7d8a85eb10f36e5f880ec406c
4964e5a8bf97dc4f8b4d6ba53b69caf0dd24e17fe6ceaf6b1fd8a5736c5caf5898e239205720ae2472ac53df4be68eb5c4a670be6fd594b93fd2d22d69ed1c1b
d72b16a6780e6837109cca5ea7bd979cc314d16949bffa8cb2f3ebfcb1758e8dea150b533c07b41b084e65adb3df4b0e30a597291cef05ecd453e445663565e9
fc2a3f94ceb131bd62618ae7807603c1a9ac75fa7bc9b94cf92ca60cab07eb8b3de63527df1d75e82f16cd234c319b929de9ce9a32cc1d19df9ff91d42d1f975
ed03bb748e8deb150b533c07b41b084e95b6ee942982f9ad8df1bbd453b83bf3c7d63936aa572c4cd1d04ec64f9aa2322c12cc9d5fd73eb0f6024cd9304d71b5
0af755d52a03266947e7c97adf2f838b4df9673c5ff61c97f74fe9acbdb1a6ea9d239aa4fa6500534828a02df9f0ea13eb9741a229f37db5dddf01a6e4e065bd
97ece0c09468bf0c924d11f7d58eee4c3025032f823225da2f836453c4edb535c60f4cc9c2cbe81dc95c27ae2bb34c61a25f8ca387244cc9c0cbee9f628f193d
aa4dc5b629d17e99b9db29037b1db0ded934095332f0329fa7b81f967a676d89f6cbdcce08f3ef5b9f1f6514f3fb906299727c40ae409c5fbe1c472e5edbd6b5
b50ea6f8f90d53e2521daceb9a6dae549812cc034d51de608729e13cd01451ef419912cb134d51ea3d302598679ae25a0753fc3cc194b05796618a9f0798429e
054cc9806e8a189fa0ddeba9381fd06e2038551a30c5cff52d848e2637ed80ac40b45f69c0143f3f604a74aa34608a1f98129f054cc9004cb90d978fded5c294
dfe4dabbe486cf76105da38df52b0d98e2e7179ea7c4fa95064cf1f30ba6c4a64ac3cc62ff712e4cc9c02f99128edc1ea650f243a658591e8c6a0b53488129b7
01a6ec660953344a30a55257c39442b9da14c70be1ac4e3265df2f1a608acec5a6e8231470bab6ae5a656c2da729717ed10053742e36451fa140c4f45537fddf
d5b335d52f1a608a4e01571fed32e23425d22f1a608acebf9bc2baaaef151142af3e1ebf6880293aff6e4a57356d55b791f514af5f34c0149dab4db10743a998
367d4298295ebfbc5802242033822994d8cf53acc912f4cb88db9438bfbc90b525c214521c4fde0e664b703f4f89f22b3cff34604a06c89ee6c7f845b4e54116
308594f2da7d604a2230651fff60fb308594e24cb18617642e1f4424db992e19a6e4a07c535a970fce4863673085942053b4211af39bb2cc5859f371065bfe78
a4af9a6a9ef5478c2b29228554ddbcd4daa322c01452ecb6647b9b9eb7f5adae5c618a98b1b2afc51cdbbcf8e82b36cf0f358fec25ca94be122f90746b0a7d67
3085949032a59b2c69d7496a5da638c72e6e92063fe9ab65ce3056355c4f69ca329358277d584c11c13585be3398428ad5eb60a702b0fd171b5aa6b06e67866c
3fbd72debbaa324d6975535a98b252c0d567e4e7ccdb96ecf6eba429bc72649852ed5e7d604a19a634957f7e1f77aa93a6f061f13b313abe2c9da660dd8aca2c
13916b8d96c1144e09a6686d3a994d51b764da871ecb8c8dec2c600a2921a66cb55965432d90c99454604a06424cd15f4e8729855282295a8f32985228053c4f
310ec811802905f013a644a622daf2200b98424a81a6b0aed3ee67986392a9909dc114520a34a56af5019e761e061eee0ca69052a0296c9bdd470053c2789a29
4b2fffb6aa6af90876e952a0cc6319b43398424a71a6cc6f0eb1863fc791ad3cb24b813a8f65d0ce600a29a59a321932d556bab921507661dae6b10cda194c21
c534a5ab0fa64ab8aa77246f36ee5bd514651ecba09dc114520c53aaa6b75f07340e6837109ccabfe5549bed45ebf17af5999b968d9aeed1ce600a29ba29e23f
e8c6db9bd9694a6449e4dfb2aa9b8a31fe57f6a25dba1428f3581e6521ffc2144a74534479e218e1423b203b105b121d6c294b0e479783304f604a161c654adb
7853d8a6449744445b1e64015348d14d61bc788f9e6121ba2422daf2200b98428a51a3eda7ba80bf70d82b53624a22a22d0fb28029a458cf530eeb02b629d125
917f4b8cb493c62f3c798b2d899270ebe04b005328217a461b57122501530ef80d53e2522501530e80294b0e30c50f4c597280297e60ca92034cf10353961c60
8a1f98b2e40053fc5cfb34bf654dfdbffd53f67380297e2e6e21acfa83061cd733da58bf928029075c6c4a4a0b61b45f49c09403aeef7590600a65bbcf6e0e30
c5cf4f9812992a099872004c597280297e1e678a6544023223984209c5f314625382b73cc802a69052de93379892084c8907a664a060537afb3db0ced1b3ce31
bc0a4cc940b9a6f02e97956e41b7568694a95c1c8366c0940c946c8a6541bd1632ca30c53065e6d1a6b08acfd7b28c9c22e66a51666d71ced8b265015348b9c8
94e887217254fcbaedc5d0e7f3c829d3c5675ee665cafc4abb3163cb7654308594924da9ea656cfc79e494c9897959bcd1decedb595388c1940c946ccaf2771d
39859b2297b91a2d4cd18029dbc829f3d5679eb565bdfac014014cd9464ee137c972992d53145a33b66c4705534829d7140d7b141566465b47055348f91153e2
8029198029b701a6c403533200536ec3834d3127e50806a664a060533a73528e60604a060a36454cca91f4d5614a06ca35458e70bb8c5b2cda8dd5e5e3438429
a4946b8a1c8c5284db563621f7caf2f121c214520a36a59e13723b641372af2c1f1f224c21e59f7a32edd8a16ed9ab571fd984ac2e1fef0ca69052ae29737ba0
9894a395edc6eaf2f1ce600a29059bc2aaa699ee7fa6b5753b3721abcb873b8329a4146cca5472d44a6f82884939604a069ca6ec55324773c3cca6884ed6d1b3
25c3942c6ca604a31d5de87e124d4903a664603545dba74f0eff96417ef94d21406604532839694a2ad97730c2146260ca6d8029c9fb802994c094db005392f7
0153288129b701a624ef03a65002536e034c49de074ca124cc94ece4f86a30851498721b604a2a30851498721b604a2a30851498721b604a2a30851498721b60
4a2a30851498721b604a2a30851498721b604a2a30851498721b604a2a30851498721b604a2a308514a729f700a69002536e034c4905a69002536e034c4905a6
9002536e034c4905a69002536e034c4905a69002536e034c4905a69002536e034c4905a69002536e034c4905a690224cb929308592d7cdc9f7cb15074c3945be
5fae3860ca29f2fd72c591d914701b600a0803a68030600a0803a68030600a0863f2048010987f16690066d81f48c56af8f75bfb8f0000000049454e44ae4260
82}}}}}
}{\loch
F}{\loch
igure 3.31 Structure interne d'un CPU 8686}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_03_13}{\*\bkmkend p3_03_13}\rtlch \ltrch\fs23\b\loch
3.3.13\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rocesseur 8686}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Avec l'architecture en pipeline du 8486, on peut porter au plus les temps d'ex\u233\'e9cution \u224\'e0 un CPI (un cycle par instruction). Peut-on ex\u233\'e9cuter des instructions encore plus rapidement ? De premier abord, on pourrait penser : \u171\'ab Certainement non, on ne peut pas effectuer plus }{\rtlch \ltrch\lang3084\loch
d\u8217\'92une }{\loch
op\u233\'e9ration par cycle d'horloge \u187\'bb. Gardez \u224\'e0 l'esprit, cependant, qu'une instruction }{\rtlch \ltrch\i\loch
n'est pas}{\loch
 une op\u233\'e9ration simple. Dans les exemples pr\u233\'e9sent\u233\'e9s ici, chaque instruction a pris de six \u224\'e0 huit cycles pour s'achever. En ajoutant sept ou huit unit\u233\'e9s s\u233\'e9par\u233\'e9es dans le CPU, on pourrait effectivement ex\u233\'e9cuter ces huit op\u233\'e9rations en un seul cycle. Si l'on ajoute encore plus de mat\u233\'e9riel de fa\u231\'e7on \u224\'e0 pouvoir ex\u233\'e9cuter, disons, seize op\u233\'e9rations d'un coup, pourrait-on }{\rtlch \ltrch\lang3084\loch
en venir avec}{\loch
 un processeur \u224\'e0 0,5 CPI ? La r\u233\'e9ponse est \u171\'aboui\u187\'bb. Un CPU qui inclut ces composantes mat\u233\'e9rielles additionnelles est un CPU }{\rtlch \ltrch\i\loch
superscalaire}{\loch
 et }{\rtlch \ltrch\lang3084\loch
il }{\loch
peut ex\u233\'e9cuter plus d'une }{\rtlch \ltrch\lang3084\loch
op\u233\'e9ration}{\loch
 pendant un cycle d'horloge. Celle-ci est la fonctionnalit\u233\'e9 que le 8686 ajoute. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un CPU superscalaire a, essentiellement, plusieurs unit\u233\'e9s d'ex\u233\'e9cution (voir figure 3.31). S'il trouve deux ou plus instructions dans le flux d'instructions (c'est-\u224\'e0-dire }{\rtlch \ltrch\lang3084\loch
dans }{\loch
la queue de pr\u233\'e9chargement), qui peuvent s'ex\u233\'e9cuter ind\u233\'e9pendamment, il les ex\u233\'e9cutera. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il y a au moins deux avantages }{\rtlch \ltrch\lang3084\loch
du }{\loch
fait d'\u234\'eatre superscalaire. Supposez avoir les instructions suivantes dans le flux des instructions : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab ax, 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab mov \tab bx, 2000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
S'il n'y a pas d'autres probl\u232\'e8mes ou effets de bord dans le code environnant et tous les six octets pour ces deux instructions se trouvent actuellement dans la queue de pr\u233\'e9chargement, le CPU }{\rtlch \ltrch\lang3084\loch
sera parfaitement capable de les }{\loch
ex\u233\'e9cute}{\rtlch \ltrch\lang3084\loch
r}{\loch
 en parall\u232\'e8le. Tout ceci ne requiert qu'une pi\u232\'e8ce }{\rtlch \ltrch\lang3084\loch
additionnelle}{\loch
 de silicium dans la puce du CPU. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En plus }{\loch
d'acc\u233\'e9l\u233\'e9rer l'ex\u233\'e9cution d'instructions ind\u233\'e9pendantes, un CPU superscalaire peut acc\u233\'e9l\u233\'e9rer les s\u233\'e9quences du programme qui ont des effets de bord. Une limitation du CPU 8486 \u233\'e9tait qu'une fois que les effets de bord se produisaient, l'instruction responsable bloquait compl\u232\'e8tement le pipeline. Toute instruction }{\rtlch \ltrch\lang3084\loch
suivante}{\loch
 devait }{\rtlch \ltrch\lang3084\loch
attendre la synchronisation des instructions de la part du }{\loch
CPU. Avec un CPU superscalaire, cependant, les instructions qui suivent l'effet de bord peuvent continuer leur ex\u233\'e9cution \u224\'e0 travers du pipeline aussi longtemps qu'elles ne comportent pas des effets de bord elles-m\u234\'eames. }{\rtlch \ltrch\lang3084\loch
Ce qui all\u232\'e8ge}{\rtlch \ltrch\lang1034\loch
 (mais n'\u233\'e9limine pas) la n\u233\'e9cessit\u233\'e9 d'affiner l'arrangement des instructions. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme}{\rtlch \ltrch\lang1034\loch
 programmeur assembleur, }{\rtlch \ltrch\lang3084\i\loch
votre}{\rtlch \ltrch\lang1034\i\loch
 fa\u231\'e7on }{\rtlch \ltrch\lang3084\i\loch
d\u8217\'92\u233\'e9crire }{\rtlch \ltrch\lang1034\i\loch
des programmes pour un processeur superscalaire peut en affecter s\u233\'e9rieusement les performances}{\rtlch \ltrch\lang1034\loch
. D'abord et en tout premier lieu, il y a la r\u232\'e8gle }{\rtlch \ltrch\lang3084\loch
que vous connaissez d\u233\'e9j\u224\'e0 trop d\u233\'e9sormais}{\rtlch \ltrch\lang1034\loch
 : }{\rtlch \ltrch\lang1034\i\loch
utilisez des instructions courtes}{\rtlch \ltrch\lang1034\loch
. }{\rtlch \ltrch\lang3084\loch
Plus vous le ferez}{\rtlch \ltrch\lang1034\loch
, plus le CPU pourra }{\rtlch \ltrch\lang3084\loch
les traiter en une seule op\u233\'e9ration }{\rtlch \ltrch\lang1034\loch
et, par cons\u233\'e9quent, plus de chances vous aurez }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92il courira plus rapidement qu\u8217\'92un }{\rtlch \ltrch\lang1034\loch
CPI. La plupart des CPU superscalaires ne dupliquent pas compl\u232\'e8tement l'unit\u233\'e9 d'ex\u233\'e9cution. Il pourrait y avoir de multiples unit\u233\'e9s logiques et arithm\u233\'e9tiques, de virgule flottante, etc. Ce qui veut dire que certaines s\u233\'e9quences d'instructions s'ex\u233\'e9cuteront tr\u232\'e8s rapidement et d'autres non. Vous devez \u233\'e9tudier la composition exacte de votre CPU pour d\u233\'e9cider quelles s\u233\'e9quences d'instructions produisent les meilleures performances. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang1034\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p3_04}{\*\bkmkend p3_04}\rtlch \ltrch\fs23\b\loch
3.4\tab Les }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
ntr\u233\'e9es/}{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
orties (E/S)}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
Il y a trois genres d'entr\u233\'e9es et de sorties de base qu'un syst\u232\'e8me peut utiliser : }{\rtlch \ltrch\lang1034\i\loch
les entr\u233\'e9es/sorties mapp\u233\'e9es sur les entr\u233\'e9es/sorties}{\rtlch \ltrch\lang1034\loch
 (I/O mapped I/O), }{\rtlch \ltrch\lang1034\i\loch
les entr\u233\'e9es/sorties mapp\u233\'e9es }{\rtlch \ltrch\lang3084\i\loch
en}{\rtlch \ltrch\lang1034\i\loch
 m\u233\'e9moire}{\rtlch \ltrch\lang1034\loch
 (memory-mapped I/O) et l'}{\rtlch \ltrch\lang1034\i\loch
acc\u232\'e8s direct \u224\'e0 la m\u233\'e9moire}{\rtlch \ltrch\lang1034\loch
 (Direct Memory Access ou DMA). Les E/S mapp\u233\'e9es sur E/S utilisent des instructions sp\u233\'e9ciales pour transf\u233\'e9rer les donn\u233\'e9es entre l'ordinateur et le monde ext\u233\'e9rieur ; les E/S mapp\u233\'e9es en m\u233\'e9moire se servent, pour communiquer avec des p\u233\'e9riph\u233\'e9riques externes, d'emplacements sp\u233\'e9ciaux de m\u233\'e9moire dans l'espace d'adressage du CPU ; et, finalement, l'acc\u232\'e8s DMA est une forme sp\u233\'e9ciale du second type d'acc\u232\'e8s o\u249\'f9 les p\u233\'e9riph\u233\'e9riques lisent et \u233\'e9crivent dans la m\u233\'e9moire sans devoir passer par le CPU. Chaque m\u233\'e9canisme }{\rtlch \ltrch\lang3084\loch
d\u8217\'92}{\rtlch \ltrch\lang1034\loch
E/S }{\rtlch \ltrch\lang3084\loch
dispose de}{\rtlch \ltrch\lang1034\loch
 son propre ensemble d'avantages et de d\u233\'e9savantages et on en parlera dans cette section. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
La premi\u232\'e8re chose \u224\'e0 savoir sur les entr\u233\'e9es/sorties d'un syst\u232\'e8me est que les E/S d'une architecture mat\u233\'e9rielle sont radicalement diff\u233\'e9rentes par rapport aux E/S trait\u233\'e9es dans un langage de haut niveau. Dans une v\u233\'e9ritable architecture vous ne trouverez que rarement des instructions machine se comportant comme des writeln, des printf ou m\u234\'eame les instructions Put et Get des x86}{{\super \rtlch \ltrch\super\lang1034\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
En effet, }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
get}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 et }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
put}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 sont similaires \u224\'e0 writeln ou printf pour simplifier l'\u233\'e9criture des programmes x86. }
}}
}{\rtlch \ltrch\lang1034\loch
. En fait, la plupart des instructions d'E/S se comportent exactement comme les instructions }{\rtlch \ltrch\lang1034\i\loch
mov}{\rtlch \ltrch\lang1034\loch
. Pour envoyer une donn\u233\'e9e dans un p\u233\'e9riph\u233\'e9rique de sortie, le CPU d\u233\'e9place simplement la donn\u233\'e9e dans un emplacement de m\u233\'e9moire sp\u233\'e9cial (dans l'espace d'adressage des E/S, si l'acc\u232\'e8s est de type E/S mapp\u233\'e9 sur E/S (voir "Les entr\u233\'e9es/sorties" au paragraphe 3.1.3) ou dans l'espace d'adressage de la m\u233\'e9moire, si l'acc\u232\'e8s utilis\u233\'e9 est de type E/S mapp\u233\'e9 en m\u233\'e9moire). Pour lire une donn\u233\'e9e d\u8217\'92un p\u233\'e9riph\u233\'e9rique d'entr\u233\'e9e, le CPU d\u233\'e9place simplement la donn\u233\'e9e de l'adresse (d'E/S ou de m\u233\'e9moire) de ce p\u233\'e9riph\u233\'e9rique au CPU.}{\rtlch \ltrch\lang3084\loch
 En plus du }{\rtlch \ltrch\lang1034\loch
fait qu'il y a plus d'\u233\'e9tats d'attente associ\u233\'e9s avec un p\u233\'e9riph\u233\'e9rique donn\u233\'e9 qu'avec la m\u233\'e9moire, les op\u233\'e9rations d'entr\u233\'e9e ou de sortie sont tr\u232\'e8s semblables aux op\u233\'e9rations de lecture de d'\u233\'e9criture en m\u233\'e9moire (voir "L'acc\u232\'e8s m\u233\'e9moire et l'horloge syst\u232\'e8me" au paragraphe 3.2.2).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
Un port E/S est un p\u233\'e9riph\u233\'e9rique qui ressemble \u224\'e0 une cellule de m\u233\'e9moire de l'ordinateur, mais contient des connexions vers le monde ext\u233\'e9rieur. Un port E/S utilise un verrou (latch) au lieu d'un flip-flop pour impl\u233\'e9menter une cellule de m\u233\'e9moire}{{\super \rtlch \ltrch\super\lang1034\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Un latch est un type de verrou qui doit \u234\'eatre tr\u232\'e8s rapidement lib\u233\'e9r\u233\'e9; d\u8217\'92ailleurs ils connaissent uniquement deux \u233\'e9tats : mis ou pas mis ! Habituellement, ils emp\u234\'eachent que plus d\u8217\'92un processus modifie la zone m\u233\'e9moire qu\u8217\'92ils prot\u233\'e9gent. Pour qu\u8217\'92un processus puisse alt\u233\'e9rer la zone m\u233\'e9moire prot\u233\'e9g\u233\'e9e par un latch, l\u8217\'92autre processus qui d\u233\'e9tient ce latch doit le rel\u226\'e2cher, n.d.t.}
}}
}{\rtlch \ltrch\lang1034\loch
. Quand le CPU \u233\'e9crit \u224\'e0 l'adresse associ\u233\'e9e au verrou, le p\u233\'e9riph\u233\'e9rique capture la donn\u233\'e9e et la rend disponible sur un ensemble de fils externes au CPU et au syst\u232\'e8me de m\u233\'e9moire (voir figure 3.32). Notez que les ports E/S peuvent \u234\'eatre de lecture seule, d'\u233\'e9criture seule ou de lecture/\u233\'e9criture. Le port de la figure 3.32, par exemple, est un port d'\u233\'e9criture seulement. Puisque les sorties dans le verrou ne reviennent pas dans le bus des donn\u233\'e9es du CPU, }{\rtlch \ltrch\lang3084\loch
celui-ci}{\rtlch \ltrch\lang1034\loch
 ne peut pas lire ce que le verrou contient. Les deux adresses qui d\u233\'e9codent et \u233\'e9crivent les lignes de contr\u244\'f4le doivent \u234\'eatre actives pour que le verrou fonctionne ; en lisant }{\rtlch \ltrch\lang3084\loch
dans }{\rtlch \ltrch\lang1034\loch
l'adresse du verrou, la ligne de d\u233\'e9codage (decode line) est active, mais non la ligne de contr\u244\'f4le d'\u233\'e9criture (write control line). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang1034\loch
Figure 3.32 Un port de sortie cr\u233\'e9\u233\'e9 avec un seul verrou}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang1034\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1875\shpbxcolumn\shpbxignore\shpleft0\shpright8280{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw552\pich125\picwgoal8280\pichgoal1875\pngblip
89504e470d0a1a0a0000000d49484452000002280000007d0803000000bf0f68da00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000008fe49444154789ced9d01b6a32a0c86b3
181653f75216037b294bf19cea5a940701145b6db1f3668287fc73c75b112ac26780d6e4c26859acef0216ab482350b3caba8018145691181456911814569118
145691181456911814569118145691181456911814569118145691181456911814569118145691181456912e03caa95a6a58b6d7b8bafa550128464a2d8d3520
85765b63ed28cc5baed165fcf82e9b3dc8b6acff43f4a068e137c677eb0863e85cb99bf3634561678f41f9ff440f0ae043bb2376ab33271928d05910cebc68f0
ffdc482247aba5c0fc1ac715293b973c7620fd41cce5933250b09c33567629c9fa49e4a098e5f480938a0c14dd5923ac715666444be3fb7d0c051c329db1dde8
f338badc35e07c641c43526651005184a524eb37d5048ad176030aa233eab5c3dd8f74b25b10f26dfe6b536e299934ffa0bfdc14558b1c9438f4d8cdbc22f668
a7b5d45b50c6b5d0b80bca7804cacbb8f3cb73e87fb3196a173d2838a718c7d4b9b8e089a0183796c49e0fbd3d4ab7ebed4ee7e62e6ee8d176ec1650109c90b4
034a2a9904e70d0a83422b29a45ff4e0c2d821d36543847bd18523febf70af3b08a641f8f9a9152e6b3cea0ee23bf8a4f85ef148f8594a463128e75401283462
50ce894161508ac4a03028456a1a14056abac1639e846250bea869506650f304cf79beb345f9a6b6415122c05264501814ea1a10c975fd13a68780593d19946f
6a1b14674eee333c0e479ee9e166310c8a173d28440aab1e05f7f9f6692a9b2f8eda6ca8a8c64199dc9ae701d33e240c4aa6c641c1f5cea7350f8312d53a28df
c4a044312805a04c0c0a835200caf4605018948f72cbe3fbfd0e6c511894336ab3a1a2181406a5480c0a835224068541291283c2a014a93e5024acdb5d1df871
65254abcd3199473aa06947179f4feabdff0c121f89a63939b4139a56a40590d028352a3aa014503ba6749e989f15b037e8cd1dea34bbb342365886c8119303d
78aa07aff4502e39a21778a79781a29458bf32aca3a188540b287a0ce109d0e13c6cbdbf96f49d2edc61ef0988a074e81088e99df7540f5ee9a1c4e2885ee09d
5e060accd39ab18a86a2522da0c8c56d78eb4dec2cc568bcb1e9822361e6ac3e664cc46d7244ffe49d1e5538f43c158382aa0414e3878e6e07143c3a023a9626
0692133a7aaa07bc6289dcdffdc83b3d65291c7a6606055509289e81112d453002a9f38574a38ef1e17574a20363ed607ad7b943c12b5dc88d23fa27eff4a8c2
a1679ad6e7df6a682832d5018a16681cc4e8febb592d6e01a3b9811b767c90370b5a86d04c3efc52480f9eeae8951eca2547f48fdee95165a0dc40c18341b1b5
8042205e1e9f1383c2a014894161508ad43428e1f93506a5444d83824bdfc7173c181454f3a04c8fd92d6ca0249e419b0d15450f0aa5efb11b7a84b328f0984a
06200685b80684a0b891e781bf0e4079302851f4a0106999a34c1f40d91a9a361b2a8a41719394435014dc9f0c0aaa6950a27bd7031e0fd85ffcb045496a1a94
ef625092181406a5480cca1750788e12c4a07c94b865d198da6ca82806a55c6d36545443a0c0e60fee5c06944afe4c505ba0e4ae3fd701a58a0e6a0c94f55aaf
044a0d3dd41a28ab3fe29540a9a08b9a03255dedb540a1efa3f64089977b2150aa187dda0225b3e35702a506521a036525a50c9449296a0730ac2e3d29ad81b2
9052e800f69c6fc40e60916b6a529a03259172992f05d350494c4a7ba044520a4179ceebd782b49fcc1293d22028c9a6140d3d377ca8b6065088492101e58f9e
89fe13e5e72f02651299230771ad6949a101e59f9f11cfba6df2f3eb63f22f052949691394df4821078592944641f989147a500849b91428bd829dd849c5677d
6bf293a454000a1d29a4a018901296407c66cde00f74a27f2d2736993632522a69f00d31da92b58378c90bef4d7e8e943f6e287c830f31b96d0cba6dd5c6f6bd
5e050929b416053f2295afa9f1b57aabd8714db5f01b0cefd6c3107be4b5f44e9343f8db4d3791d6c05bf71eb5f3815b80384198c3780871e955ac478f41a122
851e141f045676d2dd4b72d04ac8e580bbb90cfef42ac5c79746834bf6318835f47e3f62e6e070ea0379a60c946453822b5820e4d5597def93d95069f37229f6
9880d7d316b4cd07508848a10725742cd83c30280687853e266040e2941d86a11b7c0c623c1c8dc712711882692f0325928230dc0446a9f63ea479b4ea23506c
27aca73aa7dbbf8e71b46d08a88da1b7c1a7f752810d71b663846d1c57c15d86b0bd08c5f02658f2ac957c6b3e0a52ea006550b17707b5dc51bd48e418506b76
48bfb29d0c14a38c2d06c5aea0280851aa61ebb2be899c9283a223db1bba1d3fc8b04d2f969a06d63126f7e08819628d5d1623ac89e8fb9b20e4f9685176afe4
af8b1e14d7645ac5d60e2fec4a5048eea15b5277418943cff2ce3f818251aafd4e16ad7a1339e505143b045a72ba61a97b5647b091f5b708db3e7e2e0c6af7c2
d63abeb75f93a0b85946ba2d87fce68cb3d21e4240e225bbbb5b951dbabc71fd24c717e81750bc59393ff4ccb89347abdec43978197a940ebd9ad37d044a607d
4918520d3aada47f9fe10c28ed0d3d7e0121949f562877c7892ebe0807fc3ad7fa3fb2a13120b15de20c8718c46bd0617c2be9e60b3e4185596db713fffedb64
16a354c3fccca3551f8162a04f434f4ef71018b619cc06f3c834dd8a11b68738eb3230f8fb21160b88843c592ddfafe3df77d9b53e70fbc3b31e2f8fefb7678c
522d6ed3ddd37a0c0a42ec2615b673734f93d1ed490f71b471c7bf90d0f5a05d3a78bbe1a0ee9708dbf1432297a94bb923fb2e4ffec1222f8ffff9597740993f
6b1b3985aada6fb5a6a946aba0f047f827abd12828fca5e0d96ab4090a3f6670ba1a0d3ee1f61b27e44fb8b5f7e0128db256fe8913728b42c9499ba0c0254101
06e5df6869666cf0cb8142cb498ba08406bf1a28c49c34084a6cf08b8142cd497ba0a406bf1628e49c3407cad2e0d70385e4ec59359a02656df04b8142cf4963
a0c03541a980930641497bd701a5064eda0365d9bb142824677ea9465ba0ac7b570285e4c45b35064ab677215048cefba2b640d9ee9d1651b5494efbaa8640d9
eabc419967ea3a53aa595058e7c4a0b08ac4a0b08ac4a0b08ac4a0b08ac4a0b08af4cbc709ac263552b3caba84fe03fbc10024ced5d36d0000000049454e44ae
426082}}}}}

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3930\shpbxcolumn\shpbxignore\shpleft0\shpright8295{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw553\pich262\picwgoal8295\pichgoal3930\pngblip
89504e470d0a1a0a0000000d4948445200000229000001060803000000975ff55200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000112c49444154789ced9d0b96a23010456b
31598cecc52c26d98b2cc57384b56826a9f0098ed28510d1f8ee743bf287e6762ad05449ad03e06f5a024042ebffed6d2bf802600a900153800c980264c01420
03a600193005c8802940064c0132600a900153800c980264c0142003a600197b9bb268db968657d8fd6ef299526b6d75ed6ad2cafad7dab956d50f679c5dcb64
889257f05eb299625578a9c379f59b8867573fde85b9d5d0832198b207d94c217ee8b2e5f3ea1b94c414aa1ca9d0c0906f6fc80713dd3aab15cf6f39b4685df9
d16d453a4cb4e44786518929362ce71777c3922033b94ca9879512772c12536ce56ae5ea96658a936c1b17f0ce54b5abda308fd7cbef19f749da368e4ada1462
17695812e4e60da6d4d64d4c61775a3b9e71ffa53d6e6a42fa9afe37596e5872d8da0b6438fc02c91c7ddca46fd19dd2ca5a6da7a6b4e342ed4353da67a6dc85
1eba2d06a688c8660af72bdab63fbb7cd9d39952c74eee78c65bed0743cb53f9fe8b8f3ed6b5d5600a9b13473d30a55f72381e9892897c57c95ae970e9c3d7c7
de992a8912fe4d15a7846fe5df57141b07153aa94ef959bba97e22af218cead6d54d895fc392fdf1c0944cec7de76d6b604a2e600a4c910153608a8c124d3164
ae073addaecac094cd28d1941b99db952eb7db116dca76e4bb9fb217a15151d11651930253641469ca85ae2745377379e2c6f5e4e3134c594691d1c73728c71b
9d66824fdaf12de9f03352a629868eb7c35c7f16a62ca64c53aefecae744d7c796c0949728d314beea99bbf281298b29d494bfe0d9ae3065013f6ccaf5045316
f093a6f8abe4e3f148685396f093a6dcb52f7beff3770053608a0c98025364c014982203a6c014193005a6c8789b299ac6d7873c49f0b2347dfbc7cec2945ce4
36a51d1ec8ff33a7f8c924fa738ec9dc302513b94d191b1198f2dde436c512e76d691d9409af216f3de4265bd75a3faed63a16bee019787c4c63b73664f8c4e5
fa2c75fa3b755d668a316afcfb214c1191d914dbc6e2059c8d1e5f4322970e675df9c92147904da9385590c757218d3df8a32bcd5535862c7541eabacc14ba5d
c719618a88cca6e821a5789a69ecdb8ab60ecd4d15530c934cf67690a2a56e893e4b7d2e75bd3f1e59c4b91898b290bca6d4217a540f4ce1a92d71ce692f419f
a1ce69ec9c42da9b9226c33f4b5def6711469f1b4c59485e5382042db715b119e84d51da079e3ad4dfb1bd1e5c8c87c757959f54853464adf4244b7d2e75bd3f
1e59f4b95ec727e2608a88aca658c5cd836afdb7efdaf22b71c537f2912714827364752cde44a1efcbe3631abbaeac7671b93e4b7d3675bd3f1e912907327482
298bc03d5a982203a6c01419259a129f688329db52a2297c5d73fac30f98b290524db99e6ebed34a921cf6920e3f2345e625fbe8a37c9b42a7ab2406c1141165
9ae283cf89ff7b62ca09a62ca6d4e813d2be9e9a326d6a4a3afc8c946bcae9b929868e1798b290124de9f2be4e743ad1e34b20b429cb29d194bf8129cb812930
45c6af9a827eca527ed3147548aaf09474f819f94d53a60dccdefbfc1dc0149822e3fb4da1c94739c1945c14614a9a12045332518629e311c0945c1462ca98a9
085332518a29fd31c0945c14614ad2578129b928c39451159929576390efb390424c195411e6fb5c6e07e4fb2ca314537a55f017c25c14634aa78ad094cb6dfc
1be1771ffedb28c794a88a30fa1cf8415b98b2802d4dc9fe30f533d2ed3b89295795e477ecbbd35fc3a6a66cb49e855b4d6ebb494d99b0d36eefb2d51514650a
ab0253f25096292fa90253447c822967430f6ae688b73a7dea60b92a3045440e536ad29a861a6cf538439850a9f3fd726a32d3845a6ba36b5e2157d971ae5177
f3de750e97ab025344646953f81698be1fdbbd37ff6deef9f6ad0a2f5cd8eb4c4d9cf1be0ce0fd65c46255608a886ca68412a0bad2ce926eac517a9860294cf3
5f67d35748d7b5253fda37382e569bedca043a6f87e71cd5ab65a64455f863c10eaabf69324d10331f708f16a60c6ff8ccf6f5fbfa0ad7a196e4b91bc1f568fb
d9a969aac6d98aede89b8fa1e02cc562d93253ba562566134645ee6b1ec094e56435a531dde96dba9013a288ead5a9c98cb353fa5f2fc5684a6d6a273625aac2
361c14d7b30e89c8695d6b98b29c9cd1c79aee9cc7376e54288e3e877ab46e54a4b937a58b3ec39aa5a6b8c11443b19e354d2b1f4c6af0c01411397bb4fd396f
c633effaaee999623dda6176e72ae39a6a6a4ae8b8b8f3b95f335ff62c6a53428fe462e24052d77a528307a688c87595ac4ce85a181f6054d5bd8913c2e5ae0b
1fb460b91ead1bcacc86bac5da250567035a691ba61a6e5c9aea4105f4b97e4a8c3e373625ad6b3da9970153447cc29db7955b7d78ed33f668b99e35dd2e695d
6b98b29cf24c89a2c40fcf3e5cba7ad6ea703d86860da6bc4c71a6486ebc4d6bf0c01411a59982bffbe4a23053f0b7e46c94f4ccdb6ba2c01419053d47ebf0cc
5b4e4a32855e6a52608a8c824ca1d74cd96bb777daeecb94634aecb1bc60cadb7b53717777f851ada21853ba93f18a296fdacfd9c1cfa71453fadf5a98928b92
4ce121989289424c19fa013025176598327618614a2e8a3025b9b28029b928c5946108a664a21053c621989289324c4986604a268a30251d822999f87e53a6bc
766bfd2d7b363bf8f99466cae70253800c980264c0142003a600193005c8802940064c0132600a900153800c980264c0142003a600193005c8802940064c0132
600a900153800c980264ec63ca76cf81c29477b197295b6d08a6bc8bdd4cd9684b30e55dec67ca369b8229ef62475336d9164c7917bbf568375205a6bc8bfdae
7db65105a6bc8b1daf92375105a6bc8b3defa76ca10a4c299ba404ebda35c194a249cb3aaf5c134c299a49a9f8756b82294573f7f1136bd6045376425ae9652d
930daed95f985234f71f93b5624d30a568fefbe8bdd7d704538ae6ff8ff37c794d30e5bbe09365664f99e5a97577cf6dbaf4ebaac0943d081f465fa97a184ca6
3c5d6432347fca687c7df4b1e3c29dbc5f294cd983f023afa94e86fe7ffbff1282d992a90f4d795d1598b20bfc23af94b346691f2d74a32b1d4685b7ceb73771
2e7ee3a388fff213ce46134716adfd1b67b53af3aa2a47ca9d9533468775f93988977d6ccacbaa7c822956b20371267edd7b7f37a03f1872c3d7d010548db3ac
4af7a69f41f925c2ffba0eafb6e97a227e965ab9ba09a3bd59d434dd4a9e98f2aa2af94ca9b5b67eef7d485636b6b4ad7a12859fecc0a3d05c80258141fbc646
111a331cdff0cb40cea52ad5645caf947ff52d8bee16b1d4181eddd074a1af30c5aaf0c2fafb4dc4ddd6cf764232ba3c537cf431369e536bc6e3a3a63fcbcdc4
1477a62a31a5e9d75559a3c37a1a374e9d31e5e3a28fb7c3d3c67dae13537cf312a26c659db53e487751d7636d8caf95ff1d692bd23e34b71c7663dc1e7e9236
fc12f9a68a43759b63dff3137bb4e734f4f4c7d754c67f87f7dd1bf28a709b52775148730cf266585ea40e33342e74746a3d98527f4b8fb61e561a7b61499b12
1cd2c38f2746dd30b17555edaa36045e7f9c6df7ebd1b67154d2a610afc3afb74d36f35584ab64edbb12aef2bf09b5539522c3b1c5bff5df5d58e9de68ff6b61
fd8410cec3efd99994f1232aa2739ccdcf14ccd295d11ce6c3f7d9af3888f4f957c9892935ef7178dbc755c751b675ad1d5acba909e96bfadf34768fa13a399e
a57f372b9c2fb8f3467d5c48fa178929e18db52e35a50dc1ea9129ed33531e849ecffdd4967df882bbf9dcb768dbfe0cf365cf684ab88b90465dc7fdbbd6471f
ebda6a3085cd89a31e98a2bd2af6fe7860ca84fffe42f879a638ad74b8f4e9ee44b6551f29e20533f928aa432c6d49c588ea54e8a4726cee82ad8fd93c3387eb
b89e6e4afc0aa1fabe59812953ee9f3a78fd603fe1cedb96c09429774f32ad385698b297292f3dc0f60293edadd95f9852d2e1ffc7e489eb55475aa229273a1e
c9c094009ecd7f06b729fee5421798e24653d6df43ca773f652fa229373ac1143798b25e94524db91cd48c1cd71399eb2f99b2812885469f231de61b92a4e3fb
03a66c214aa1a6f84eed7cf0f929533611a554536e66be47fb4ba66c234a91a6702fe438dbaafc90291b8952a4290278b6eb5b4db97f50e44d5bdd4a945f36e5
7afa1153365ad32f9a720d77718ff4236dca566bfa455326946eca666b8229459bb21d3005a6c880293045064c812932600a4c91f1365362a2a07ebead27495e
497abb247d1da6e422b729ed90ba45c9ebe35df973b46047614a2e729b32362230656ef0f3c96d4a97cb13d3d4c3eb98c0de5a3faed63a16bf8879ec617c4c65
b756eba4a80ce7f5d0dfe9eb32538c514798b28ccca6d8361630e08cf4f83a24b073e5180a89839e8ad305797c1552d963dd98aea84c9fa9def553e6d2d765a6
d0ed3acc085364643645bb3ead789a6d1c12d84306bfabba626714bfc2f8418a96ba25fa4c751a677c98beeec4d1e76260ca42f29a5287e8513d3085a7b6c465
cc7a09c825a9ec9c46da9b9226c30fa63cae9c228d3e3798b290bca604095a6e2b6233d09bc209ec5c39c6f67a7065181e5f557e52ac1bd31795e932d553531e
a5af3b71f4b95ea97fe41aa6c8c86a8a55dc3ca836a6a9f32b0d09ec5c3986ac8ec59bb8320c8f8fa9ecbab2da75e9ed5da6fa9fe9eb4e6aca81ccf0481c4c91
817bb43045064c8129324a34253ed10653b6a54453f8ba469a6c0a5384946acaf574f39d563afee5094c9152665ef2f1a84e2189fd2a884130454699a6f8e073
e2ff9e987282298b2935fa84b4afa7a64c9a1a9822a35c534ecf4d3174bcc0948594684a97f775a2d3b3920768539653a2297f0353960353608a8c5f3505fd94
a5fca629ea3094798329427ed39414982203a6c014191b9a429ff0f94a302517db994230657ecf66073f9fcd4c2198f2c79ecd0e7e3e5b994230e5af3d9b1dfc
7c363285358129b37b363bf8f96c634a6c4f60caec9ecd0e7e3e9b98d2059eef31e56a0cf27d16b285297d0fe57b4c395c6e07e4fb2c63035386aeecf79882bf
102e67bd29e335cf179972b90d7f237cfb4747763bbacfcfe775569b92fc0cbec794c3811fb4edb4d9674777d9ea0ad69a92feb2bceb9773162731e5aa92fc0e
982262a5297c6ec6810d766825325326c01411eb4c9988025396ede897b1ca94a9283065d98e7e196b4cb91305a62cdbd12f638529f7a20ca6d4a4350d35d8ea
718630a152e7fb15d59301ad8dae79155c57c7b946d5f74bccec144cc9c4eba6fc274af2c9f0e15b27032e796ffedb5c3ac2aaf0c2a5bcced4c4490f0aff3ddf
2b989289974df95f94a929a104a8aeb4b3a41b6b941e26580ad3fcd7d9c4b2c6610e63ba4290de0ecf39ca56bf6e0a7f2cd841f5374da609628660ca625e35e5
81285353e27926377e8571a196e4b91bc1f568e3ecb1faac4b8ae7532c8fbda24d89d9845191fb9a073065392f9af24894ff4d694c77b29b2ee48498a27a756a
32fdec3c4fdf12c571b5a9dd6a536e07c5f5ac4322725ad71aa62c279b29fe9c5bd3b526f18d4b1b9bd811a9bab11c73e2c4665c855b6f8a8f335ccf9aa6950f
263578608a8815a6cc471fdfa3ed1b8f668c3eaeefa89e29d6a38d6363f5d9f09e63d0f9dcff20f9b2679d295ccf3a0c2475ad273578608a8835fd94673dda70
89ab4ce868181f6054d5bd8913c2c5af0b1fb460b91e6d20cc5199ce07adb40d97c7861b97a67a58f37c66bf1e449f1b9b92d6b59ed4cb802922b25cfbecc8ff
3d5aae674db74b5ad71aa62c27cbfd941d995c251f0f97ae9eb53a5c8fa16183292f93e31eed9e88eebc4d6bf0e47f12e2217bffa49682bffbecd4a67c1df85b
324c91b1edf3291f004cc94469cfbc399892896d9fa3dd608756b23c8710a6c8f8cd67f361ca727e33df07a62ce737730861ca727e332f19a62ce7376b1dc094
e56c660ac194b2d9aed2ceb7d66482293236acde4530a564501110a6c8409551982203958b618a0c54438729328afb8485571e5400024a3305e402a600193005
c8802940064c0132600a900153800cef0900127c9bb2b7ade02b68ff019548b24a478967220000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang1034\loch
F}{\rtlch \ltrch\lang1034\loch
igure 3.33 Un port d'E/S requiert deux verrous}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
La figure 3.33 montre comment cr\u233\'e9er un port de lecture/\u233\'e9criture (entr\u233\'e9e/sortie). Les donn\u233\'e9es \u233\'e9crites dans le port de sortie reviennent en arri\u232\'e8re par un verrou transparent. Quand le CPU lit l'adresse d\u233\'e9cod\u233\'e9e, les lignes de lecture et de d\u233\'e9codage sont actives et ceci rend actif le verrou inf\u233\'e9rieur. Ce}{\rtlch \ltrch\lang3084\loch
 qui }{\rtlch \ltrch\lang1034\loch
place les donn\u233\'e9es pr\u233\'e9c\u233\'e9demment \u233\'e9crites dans le port de sortie du bus des donn\u233\'e9es du CPU, permettant au CPU de lire les donn\u233\'e9es. Un port d'entr\u233\'e9e en lecture seule est simplement la partie basse de la figure 3.33 ; le syst\u232\'e8me ignore toute donn\u233\'e9e \u233\'e9crite sur ce port. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
Un exemple parfait de port de sortie est le port parall\u232\'e8le de l'imprimante. Le CPU \u233\'e9crit }{\rtlch \ltrch\lang3084\loch
g\u233\'e9n\u233\'e9ralement}{\rtlch \ltrch\lang1034\loch
 un caract\u232\'e8re ASCII dans un port de sortie qui a la taille d'un octet et qui se relie au connecteur DB-25F \u224\'e0 l'arri\u232\'e8re du bo\u238\'eetier de l'ordinateur. Un c\u226\'e2ble transmet cette donn\u233\'e9e \u224\'e0 l'imprimante via un port d'entr\u233\'e9e (entr\u233\'e9e \u224\'e0 l'imprimante) qui la re\u231\'e7oit. Un processeur \u224\'e0 l'int\u233\'e9rieur de l'imprimante convertit ce caract\u232\'e8re ASCII en une s\u233\'e9quence de points qui seront imprim\u233\'e9s sur le papier. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
G\u233\'e9n\u233\'e9ralement un p\u233\'e9riph\u233\'e9rique donn\u233\'e9 utilisera plus d'un port d'E/S. Une interface parall\u232\'e8le pour imprimante, par exemple, utilise trois ports : un port de lecture/\u233\'e9criture, un port d'entr\u233\'e9e et un port de sortie. Le port lecture/\u233\'e9criture est le port de donn\u233\'e9es (sa nature de lecture/\u233\'e9criture permet au CPU de lire le dernier caract\u232\'e8re ASCII \u233\'e9crit dans le port de l'imprimante).  Le port d'entr\u233\'e9e, renvoie le signal de contr\u244\'f4le provenant de l'imprimante ; ces signaux indiquent quand l'imprimante est pr\u234\'eate \u224\'e0 accepter un autre caract\u232\'e8re, si}{\rtlch \ltrch\lang3084\loch
 elle  }{\rtlch \ltrch\lang1034\loch
est en ligne ou }{\rtlch \ltrch\lang3084\loch
encore}{\rtlch \ltrch\lang1034\loch
 s'il n'y a plus de papier, etc. Le port de sortie transmet le contr\u244\'f4le de l'information \u224\'e0 l'imprimante pour lui indiquer, par exemple, quand des donn\u233\'e9es sont disponibles pour l'impression. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
Pour un programmeur, la diff\u233\'e9rence entre les op\u233\'e9rations E/S mapp\u233\'e9es sur E/S et celles mapp\u233\'e9es dans la m\u233\'e9moire se situe dans les instructions \u224\'e0 utiliser. Pour des entr\u233\'e9es/sorties de ce dernier type, toute instruction pouvant acc\u233\'e9der \u224\'e0 la m\u233\'e9moire, peut \u233\'e9galement acc\u233\'e9der \u224\'e0 un port d'E/S mapp\u233\'e9 dans celle-ci. Dans les x86, les instructions }{\rtlch \ltrch\lang1034\i\loch
mov}{\rtlch \ltrch\lang1034\loch
, }{\rtlch \ltrch\lang1034\i\loch
add}{\rtlch \ltrch\lang1034\loch
, }{\rtlch \ltrch\lang1034\i\loch
sub}{\rtlch \ltrch\lang1034\loch
, }{\rtlch \ltrch\lang1034\i\loch
cmp}{\rtlch \ltrch\lang1034\loch
, }{\rtlch \ltrch\lang1034\i\loch
and}{\rtlch \ltrch\lang1034\loch
, }{\rtlch \ltrch\lang1034\i\loch
or}{\rtlch \ltrch\lang1034\loch
 et }{\rtlch \ltrch\lang1034\i\loch
not}{\rtlch \ltrch\lang1034\loch
 peuvent lire la m\u233\'e9moire ; }{\rtlch \ltrch\lang1034\i\loch
mov}{\rtlch \ltrch\lang1034\loch
 et }{\rtlch \ltrch\lang1034\i\loch
not}{\rtlch \ltrch\lang1034\loch
 peuvent y \u233\'e9crire des donn\u233\'e9es. L'acc\u232\'e8s des E/S mapp\u233\'e9es sur E/S utilise des instructions sp\u233\'e9ciales pour acc\u233\'e9der aux ports d'E/S. Par exemple, un CPU x86 utilise les instructions }{\rtlch \ltrch\lang1034\i\loch
get}{\rtlch \ltrch\lang1034\loch
 et }{\rtlch \ltrch\lang1034\i\loch
put}{{\super \rtlch \ltrch\super\lang1034\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
get}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 et }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
put}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 sont un peu extravagantes par rapport aux v\u233\'e9ritables instructions de l'acc\u232\'e8s E/S mapp\u233\'e9es sur E/S, mais nous ignorerons la diff\u233\'e9rence ici. }
}}
}{\rtlch \ltrch\lang1034\loch
. La famille 80x86 de Intel utilise les instructions }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\lang1034\loch\f0\loch
in}{\rtlch \ltrch\lang1034\loch
 et }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\lang1034\loch\f0\loch
out}{\rtlch \ltrch\lang1034\loch
. Ces instructions fonctionnent tout comme une instruction }{\rtlch \ltrch\lang1034\i\loch
mov}{\rtlch \ltrch\lang1034\loch
, mais elles placent leurs adresses dans le bus des adresses des E/S au lieu que d}{\rtlch \ltrch\lang3084\loch
ans le}{\rtlch \ltrch\lang1034\loch
 bus des adresses de la m\u233\'e9moire (voir "Les entr\u233\'e9es/sorties" au paragraphe 3.1.3). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang1034\loch
Les styles E/S mapp\u233\'e9es en m\u233\'e9moire et E/S mapp\u233\'e9es sur E/S requi\u232\'e8rent que le CPU d\u233\'e9place les donn\u233\'e9es entre le p\u233\'e9riph\u233\'e9rique externe et la m\u233\'e9moire principale. Par exemple, pour recevoir d'un port une s\u233\'e9quence de dix octets d'entr\u233\'e9e et pouvoir stocker ces octets dans la m\u233\'e9moire, le CPU doit lire chaque valeur depuis le p\u233\'e9riph\u233\'e9rique et la y ranger dans la RAM. Pour des p\u233\'e9riph\u233\'e9riques d'E/S vraiment rapides, le CPU peut \u234\'eatre trop lent s'il d\u233\'e9bite ces donn\u233\'e9es un octet \u224\'e0 la fois. De tels p\u233\'e9riph\u233\'e9riques contiennent g\u233\'e9n\u233\'e9ralement une interface permettant au bus du CPU de lire et \u233\'e9crire directement dans la m\u233\'e9moire. Ceci est connu comme un }{\rtlch \ltrch\lang1034\i\loch
acc\u232\'e8s direct \u224\'e0 la m\u233\'e9moire}{\rtlch \ltrch\lang1034\loch
, car le p\u233\'e9riph\u233\'e9rique peut directement acc\u233\'e9der \u224\'e0 }{\rtlch \ltrch\lang3084\loch
celle-ci}{\rtlch \ltrch\lang1034\loch
 sans passer par le CPU. Ceci permet souvent aux op\u233\'e9rations d'E/S de proc\u233\'e9der en parall\u232\'e8le avec d'autres op\u233\'e9rations du CPU, de fa\u231\'e7on \u224\'e0 accro\u238\'eetre la vitesse g\u233\'e9n\u233\'e9rale du syst\u232\'e8me. Notez cependant que le CPU et le DMA ne peuvent pas en m\u234\'eame temps utiliser le bus des adresses et de donn\u233\'e9es. Par cons\u233\'e9quent, des traitements simultan\u233\'e9s ont lieu seulement si le CPU a un cache et si ce dernier ex\u233\'e9cute du code et acc\u232\'e8de aux donn\u233\'e9es (donc le bus est libre). N\u233\'e9anmoins, m\u234\'eame si le CPU doit s'interrompre et attendre les op\u233\'e9rations DMA, les E/S sont encore tr\u232\'e8s rapides, car beaucoup d'op\u233\'e9rations de bus pendant les acc\u232\'e8s E/S mapp\u233\'e9es sur E/S ou en m\u233\'e9moire consistent \u224\'e0 charger des instructions ou \u224\'e0 acc\u233\'e9der \u224\'e0 des ports qui n'interf\u232\'e8rent pas pendant les op\u233\'e9rations DMA. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang1034\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_05}{\*\bkmkend p3_05}\rtlch \ltrch\fs23\b\loch
3.5\tab Interruptions et }{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
ondages }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\lang3084\b\loch
ntr\u233\'e9es}{\rtlch \ltrch\fs23\b\loch
/}{\rtlch \ltrch\fs23\lang3084\b\loch
s}{\rtlch \ltrch\fs23\b\loch
orties}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Beaucoup de p\u233\'e9riph\u233\'e9riques E/S ne peuvent accepter des donn\u233\'e9es avec un d\u233\'e9bit arbitraire. Par exemple, un PC bas\u233\'e9 sur la technologie Pentium est capable d'envoyer plusieurs millions de caract\u232\'e8res par seconde \u224\'e0 une imprimante, mais cette derni\u232\'e8re est (probablement) incapable d'imprimer autant de caract\u232\'e8res \u224\'e0 la seconde. De m\u234\'eame, un p\u233\'e9riph\u233\'e9rique d'entr\u233\'e9e, comme un clavier, ne peut pas fournir plusieurs millions de frappes par seconde (car il fonctionne \u224\'e0 des vitesses humaines, non d'ordinateur). Le CPU n\u233\'e9cessite quelque m\u233\'e9canisme pour coordonner le transfert de donn\u233\'e9es entre l'ordinateur et ses p\u233\'e9riph\u233\'e9riques. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un moyen commun de coordonner ces transferts est de fournir certains }{\rtlch \ltrch\i\loch
bits d'\u233\'e9tat }{\loch
dans un port d'entr\u233\'e9e secondaire. Par exemple, un simple bit contenant 1 dans un port d'E/S peut indiquer au CPU qu'une imprimante est pr\u234\'eate pour accepter de nouvelles donn\u233\'e9es, alors qu'un 0 peut indiquer qu'elle est occup\u233\'e9e et que le CPU ne doit pas envoyer des donn\u233\'e9es suppl\u233\'e9mentaires. De la m\u234\'eame fa\u231\'e7on, un bit activ\u233\'e9 dans un port diff\u233\'e9rent peut indiquer au CPU qu'une frappe de clavier est disponible dans le port des donn\u233\'e9es de celui-ci, alors qu'un 0 dans le m\u234\'eame bit signalerait le cas contraire. Le CPU peut tester ces bits avant de lire une touche provenant du clavier ou d'\u233\'e9crire un caract\u232\'e8re sur l'imprimante. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez que le port de donn\u233\'e9es de l'imprimante est mapp\u233\'e9 \u224\'e0 l'adresse 0FFE0h et que le bit contenant l'\u233\'e9tat du port est le bit 0 de l'octet mapp\u233\'e9 \u224\'e0 l'adresse 0FFE2h. Le code suivant attend que l'imprimante soit pr\u234\'eate \u224\'e0 accepter un octet de donn\u233\'e9es, puis il l'\u233\'e9crit depuis ax dans l'octet le moins significatif du registre ax du port de l'imprimante : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0000: mov \tab bx, [FFE2]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0003: and\tab bx, 1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0006: cmp\tab bx, 0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0009: je\tab 0000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 000C: mov\tab [FFE0], ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi720\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La premi\u232\'e8re instruction charge la donn\u233\'e9e sur le port d'\u233\'e9tat d'entr\u233\'e9e. La seconde instruction effectue un AND logique entre la valeur et 1 pour effacer les bits de 1 \u224\'e0 15 et fixer le bit z\u233\'e9ro \u224\'e0 l'\u233\'e9tat courant du port de l'imprimante. Notez que ceci produit la valeur 0 dans bx si l'imprimante est occup\u233\'e9e et la valeur 1 dans le cas contraire. La troisi\u232\'e8me instruction v\u233\'e9rifie bx pour voir si celui-ci contient z\u233\'e9ro (imprimante occup\u233\'e9e). Si c'est le cas, le programme retourne \u224\'e0 l'emplacement z\u233\'e9ro et r\u233\'e9p\u232\'e8te le processus ind\u233\'e9finiment, jusqu'\u224\'e0 ce que le bit d'\u233\'e9tat de l'imprimante passe \u224\'e0 un}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Notez que ceci n'est qu'un cas hypoth\u233\'e9tique servant d'exemple. Le port parall\u232\'e8le de l'imprimante du PC }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
n'est pas}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 mapp\u233\'e9 aux adresses de m\u233\'e9moire 0FFE0h et 0FFE2h. }
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le code suivant fournit un exemple de lecture du clavier. Il suppose que l'\u233\'e9tat du bit du clavier soit \u224\'e0 z\u233\'e9ro \u224\'e0 l'adresse 0FFE6h (z\u233\'e9ro veut dire qu'aucune touche n'a \u233\'e9t\u233\'e9 press\u233\'e9e) et que le code ASCII d'un caract\u232\'e8re \u233\'e9ventuel appara\u238\'eetra \u224\'e0 l'adresse 0FFE4h quand le bit contenu dans 0FFE6h sera 1 : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0000: mov \tab bx, [FFE6]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0003: and\tab bx, 1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0006: cmp\tab bx, 0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 0009: je\tab 0000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab 000C: mov\tab ax, [FFE4]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi720\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab .\tab .}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le type de l'op\u233\'e9ration E/S, quand le CPU est constamment en train de tester un port pour voir si des donn\u233\'e9es sont disponibles, s'appelle }{\rtlch \ltrch\i\loch
interrogation}{\loch
 (polls), c'est-\u224\'e0-dire que le CPU interroge le port s'il contient des donn\u233\'e9es disponibles ou bien s'il est capable d'en accepter. Mais cette technique est in\u233\'e9fficace. Consid\u233\'e9rez ce qui arrive dans le code pr\u233\'e9c\u233\'e9dent si l'utilisateur attend dix secondes avant de frapper une touche, le CPU tournera dans une boucle sans rien faire (\u224\'e0 part de tester l'\u233\'e9tat du port du clavier), pendant tout ce temps.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans les anciens PC, (par exemple le Apple II), c'est exactement ainsi qu'un programme lit le clavier ; quand il veut lire une donn\u233\'e9e depuis le clavier, il interroge l'\u233\'e9tat du port du clavier tant qu}{\rtlch \ltrch\lang3084\loch
'une touche n'est disponible. De tels ordinateurs ne peuvent effectuer d'autres op\u233\'e9rations pendant qu'ils attendent des frappes. Et, surtout, s'il passe trop de temps pendant la v\u233\'e9rification de l'\u233\'e9tat du port du clavier, l'utilisateur peut presser une autre touche et le contenu de la premi\u232\'e8re frappe serait perdu}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Un port de donn\u233\'e9es d'un clavier fournit g\u233\'e9n\u233\'e9ralement seulement le dernier caract\u232\'e8re tap\u233\'e9, il n'offre pas un "tampon de clavier" au syst\u232\'e8me. }
}}
}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La solution \u224\'e0 ce probl\u232\'e8me est de fournir un m\u233\'e9canisme d'interruption. Une interruption est un \u233\'e9v\u233\'e9nement mat\u233\'e9riel externe (comme une frappe de clavier) qui cause l'interruption de la s\u233\'e9quence de l'instruction courante du CPU  et provoque l'appel d'une }{\rtlch \ltrch\lang3084\i\loch
routine de service d'interruption}{\rtlch \ltrch\lang3084\loch
 (RSI ou IRS en anglais). }{\rtlch \ltrch\lang3082\loch
Cette}{\rtlch \ltrch\lang3084\loch
 routine enregistre tous les registres et les drapeaux (donc elle ne d\u233\'e9range pas les calculs qu'elle interrompt), effectue n'importe quelle op\u233\'e9ration n\u233\'e9cessaire pour traiter la source de l'interruption, restaure les registres et les drapeaux et finalement fait reprendre l'ex\u233\'e9cution du code interrompu. Dans beaucoup de syst\u232\'e8mes (comme le PC), plusieurs p\u233\'e9riph\u233\'e9riques g\u233\'e9n\u232\'e8rent une interruption chaque fois qu'ils ont des donn\u233\'e9es disponibles ou ils peuvent en accepter du CPU. Une RSI traite rapidement ce qui a \u233\'e9t\u233\'e9 demand\u233\'e9 en }{\rtlch \ltrch\lang3084\i\loch
t\u226\'e2che de fond}{\rtlch \ltrch\lang3084\loch
 (background), en permettant certaines autres op\u233\'e9rations en }{\rtlch \ltrch\lang3084\i\loch
avant-plan}{\rtlch \ltrch\lang3084\loch
 (foreground). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les CPU qui supportent les interruptions doivent fournir certains m\u233\'e9canismes permettant au programmeur de sp\u233\'e9cifier les adresses de la RSI \u224\'e0 ex\u233\'e9cuter quand une interruption a lieu. Normalement, un vecteur d'interruption est un emplacement de m\u233\'e9moire sp\u233\'e9cial contenant l'adresse de la routine \u224\'e0 ex\u233\'e9cuter quand une interruption se produit. Les CPU x86, par exemple, contiennent deux vecteurs d'interruption : l'un pour une interruption g\u233\'e9n\u233\'e9rale et l'autre pour une interruption de }{\rtlch \ltrch\lang3084\i\loch
r\u233\'e9initialisation }{\rtlch \ltrch\lang3084\loch
(reset) (l'interruption de r\u233\'e9initialisation, dans beaucoup d'ordinateurs, correspond \u224\'e0 l'action de presser le bouton }{\rtlch \ltrch\lang3084\i\loch
reset}{\rtlch \ltrch\lang3084\loch
). La famille Intel 80x86 supporte jusqu'\u224\'e0 256 vecteurs d'interruption diff\u233\'e9rents. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Apr\u232\'e8s qu'une RSI compl\u232\'e8te une op\u233\'e9ration, elle retourne g\u233\'e9n\u233\'e9ralement le contr\u244\'f4le \u224\'e0 la t\u226\'e2che d'avant-plan avec une instruction sp\u233\'e9ciale de }{\rtlch \ltrch\lang3084\i\loch
retour d'interruption}{\rtlch \ltrch\lang3084\loch
. Dans les x86 l'instruction }{\rtlch \ltrch\lang3084\i\loch
iret}{\rtlch \ltrch\lang3084\loch
 (interrupt return) traite ce cas. Une RSI devrait toujours terminer avec cette instruction de fa\u231\'e7on \u224\'e0 pouvoir redonner le contr\u244\'f4le au programme interrompu. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un syst\u232\'e8me d'entr\u233\'e9es g\u233\'e9r\u233\'e9 par les interruptions utilise la RSI pour lire les donn\u233\'e9es d'un port d'entr\u233\'e9e et les mettre en tampon chaque fois qu'une donn\u233\'e9e devient disponible. Le programme d'avant-plan peut lire ces donn\u233\'e9es }{\rtlch \ltrch\lang3082\loch
du}{\rtlch \ltrch\lang3084\loch
 tampon \u224\'e0 son gr\u233\'e9 sans perte de donn\u233\'e9es provenant du port. De la m\u234\'eame fa\u231\'e7on, un syst\u232\'e8me de sorties g\u233\'e9r\u233\'e9 par les interruptions (g\u233\'e9n\u233\'e9rant une interruption chaque fois que le p\u233\'e9riph\u233\'e9rique de sortie est pr\u234\'eat \u224\'e0 l'accepter), peut supprimer les donn\u233\'e9es d'un tampon toutes les fois o\u249\'f9 un p\u233\'e9riph\u233\'e9rique peut accepter une nouvelle donn\u233\'e9e. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06}{\*\bkmkend p3_06}\rtlch \ltrch\fs23\b\loch
3.6\tab Exercices de }{\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
aboratoire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans ce laboratoire, vous utiliserez le programme "SIMX86.EXE" du sous-r\u233\'e9pertoire du chapitre 3. Ce programme contient un compilateur assembleur int\u233\'e9gr\u233\'e9, comprenant un d\u233\'e9bogueur et un interrupteur pour les CPU hypoth\u233\'e9tiques x86. Vous apprendrez comment \u233\'e9crire des programmes assembleur x86 de base, les assembler (les compiler), modifier le contenu de la m\u233\'e9moire et ex\u233\'e9cuter ces programmes. Vous exp\u233\'e9rimenterez aussi les modes d'adressage aux E/S mapp\u233\'e9es en m\u233\'e9moire, E/S mapp\u233\'e9es sur E/S, DMA, ainsi que les services de sondage des p\u233\'e9riph\u233\'e9riques et d'interruption. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans cet ensemble d'exercices vous utiliserez le programme SIMx86.exe pour entrer, \u233\'e9diter, initialiser et \u233\'e9muler les programmes x86. Ce logiciel n\u233\'e9cessite que vous installez deux fichiers dans votre r\u233\'e9pertoire WINDOWS\\SYSTEM. Regardez \u224\'e0 ce propos le fichier README.TXT dans le sous-r\u233\'e9pertoire CH3 pour avoir plus de d\u233\'e9tails. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06_01}{\*\bkmkend p3_06_01}\rtlch \ltrch\fs23\b\loch
3.6.1\tab Le }{\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
ogiciel SIMx86 - Quelques }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammes x86 simples}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ex\u233\'e9cuter SIMx86, double-cliquez dans son ic\u244\'f4ne ou choisissez "ex\u233\'e9cuter" (ou "run") dans le menu de d\u233\'e9marrage de Windows et entrez le nom du chemin pour SIMx86. Le programme SIMx86 consiste en trois \u233\'e9crans principaux que vous pouvez s\u233\'e9lectionner en cliquant sur les onglets appropri\u233\'e9s, }{\rtlch \ltrch\i\loch
Editor}{\loch
, }{\rtlch \ltrch\i\loch
Memory}{\loch
 ou }{\rtlch \ltrch\i\loch
Emulator}{\loch
. Par d\u233\'e9faut, SIMx86 s'ouvre dans l'onglet }{\rtlch \ltrch\lang3084\loch
Editor}{\loch
. A l'aide de cet \u233\'e9diteur, vous pouvez \u233\'e9crire et assembler les programmes x86 ; dans l'\u233\'e9cran de la m\u233\'e9moire, vous po}{\rtlch \ltrch\lang3084\loch
uvez}{\loch
 voir et modifier le contenu de celle-ci ; alors que dans l'\u233\'e9cran de l'\u233\'e9mulateur, vous }{\rtlch \ltrch\lang3084\loch
pouvez }{\loch
ex\u233\'e9cuter les programmes x86 et }{\rtlch \ltrch\lang3084\loch
vous pouvez les voir dans la }{\loch
m\u233\'e9moire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme SIMx86 contient deux menus : File et Edit. }{\rtlch \ltrch\lang3084\loch
Ils sont des menus }{\loch
Windows standard, donc il n'y a pas besoin de vraiment les d\u233\'e9crire, sauf dans deux aspects. D'abord, les \u233\'e9l\u233\'e9ments du menu File, New, Open, Save et Save As concernent les donn\u233\'e9es de la bo\u238\'eete de l'\u233\'e9diteur de texte, ils n'ont pas d'effet sur les autres sections du programme. Ensuite l'\u233\'e9l\u233\'e9ment, Print du menu File permet d'imprimer le code source apparaissant dans l'\u233\'e9diteur, si l'\u233\'e9cran de celui-ci est actif, ou bien il affiche la fen\u234\'eatre enti\u232\'e8re si les \u233\'e9crans de la m\u233\'e9moire ou de l'\u233\'e9mulateur sont actifs. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour voir comment le programme SIMx86 fonctionne, passez \u224\'e0 l'\u233\'e9cran de l'\u233\'e9diteur (si vous n'y \u234\'eates pas d\u233\'e9j\u224\'e0). Choisissez "Open" du menu File et ouvrez "EX1.X86" dans le sous-r\u233\'e9pertoire du chapitre 3. Le contenu de ce fichier devrait ressembler \u224\'e0 ceci : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab ax, [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx, [1002]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax, bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sub\tab ax, 1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab bx, ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax, bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette courte s\u233\'e9quence de code fait la somme des deux valeurs des emplacements 1000 et 1002, lui soustrait 1, et multiplie le r\u233\'e9sultat par trois (((ax + ax) + ax) = ax * 3). Le r\u233\'e9sultat final est laiss\u233\'e9 dans ax, puis le programme s'arr\u234\'eate. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans l'\u233\'e9cran de l'\u233\'e9diteur, vous verrez trois objets : la fen\u234\'eatre de l'\u233\'e9diteu}{\rtlch \ltrch\lang3084\loch
r}{\loch
, un champ de texte contenant l'adresse de d\u233\'e9but et un bouton ("Assemble"). La champ de texte "Starting Address" contient un nombre hexad\u233\'e9cimal sp}{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
cifiant o\u249\'f9 l'assembleur stockera le code machine pour le programme x86 que vous \u233\'e9crirez avec l'\u233\'e9diteur. Par d\u233\'e9faut, cette adresse est z\u233\'e9ro. La seule raison de le changer est quand vous \u233\'e9crivez des routines de services d'interruption, puisque l'adresse de d\u233\'e9faut de la r\u233\'e9initialisation est z\u233\'e9ro. Le bouton "Assemble" ordonne au programme SIMx86 de convertir votre code source en code machine de type x86 et de stocker le d\u233\'e9but du r\u233\'e9sultat \u224\'e0 l'adresse de d\u233\'e9part sp\u233\'e9cifi\u233\'e9e en m\u233\'e9moire. Commencez tout de suite en pressant le bouton "Assemble", ce qui provoque l'assemblage de ce programme dans la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Maintenant, pressez l}{\rtlch \ltrch\lang3084\loch
'onglet "Memory" pour s\u233\'e9lectionner l'\u233\'e9cran de la m\u233\'e9moire. Dans cet \u233\'e9cran, vous verrez un ensemble de 64 cases arrang\u233\'e9es par huit rang\u233\'e9es de huit emplacements. Du c\u244\'f4t\u233\'e9 gauche de ces huit rang\u233\'e9es vous pouvez voir un ensemble de huit adresses (hexad\u233\'e9cimales) (par d\u233\'e9faut, elles sont 0000, 0008, 0010, 0018, 0020, 0028, 0030 et 0038). Ceci vous indique que les premi\u232\'e8res huit cases en haut de l'\u233\'e9cran correspondent aux emplacements de m\u233\'e9moire 0, 1, 2, 3, 4, 5, 6 et 7 ; la seconde rang\u233\'e9e de huit cases correspond aux adresses 8, 9, A, B, C, D, E et F ; et ainsi de suite. A ce point vous devriez \u234\'eatre capable de voir les codes machine pour le programme que vous venez juste d'assembler dans la plage 0000 - 000D. Le reste de la m\u233\'e9moire ne contient que des z\u233\'e9ros. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'\u233\'e9cran de la m\u233\'e9moire vous permet de voir et \u233\'e9ventuellement modifier 64 octets d\u8217\'92un total de 64 ko fournie dans les processeurs x86. Si vous voulez observer certains emplacements de m\u233\'e9moire autres que la plage 0000 - 003F, vous avez juste \u224\'e0 modifier la premi\u232\'e8re adresse (celle qui contient actuellement z\u233\'e9ro). Vous allez maintenant changer l'adresse de d\u233\'e9part \u224\'e0 1000, de sorte \u224\'e0 pouvoir modifier les valeurs aux emplacements 1000 et 1002 (souvenez-vous, le programme les additionne ensemble). Tapez les nombres suivants dans les cellules correspondantes : entrez la valeur 34 \u224\'e0 l'adresse 1000, la valeur 12 \u224\'e0 l'adresse 1001, la valeur 01 \u224\'e0 l'adresse 1002 et la valeur 02 \u224\'e0 l'adresse 1003. Notez que si vous entrez une valeur hexad\u233\'e9cimale incorrecte, le syst\u232\'e8me colorera la cellule de rouge et \u233\'e9mettra un signal sonore. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En tapant une adresse dans la cellule de l'adresse de d\u233\'e9part, vous pouvez voir et modifier le contenu des emplacements pratiquement partout. Notez que si vous ins\u233\'e9rez une adresse qui n'est pas un nombre pair multiple de huit, le programme SIMx86 d\u233\'e9sactive jusqu'\u224\'e0 sept cases dans la premi\u232\'e8re rang\u233\'e9e. Par exemple, si vous entrez l'adresse de d\u233\'e9part 1002, le simulateur d\u233\'e9sactivera les premi\u232\'e8res deux cellules, car elles correspondent aux adresses 1000 et 1001. La premi\u232\'e8re adresse active sera 1002. Notez aussi que SIMx86 r\u233\'e9serve les emplacements de m\u233\'e9moire FFF0 \u224\'e0 FFFF pour les entr\u233\'e9es/sorties mapp\u233\'e9es. Par cons\u233\'e9quent, il vous emp\u234\'eachera d'\u233\'e9diter ces adresses. La plage FFF0 - FFF7 correspond aux ports d'entr\u233\'e9e en lecture seule (et vous pourrez voir les valeurs m\u234\'eame si SIMx86 d\u233\'e9sactive ces emplacements). Les adresses FFF8 \u224\'e0 FFFF correspondent aux ports de sortie en \u233\'e9criture seule ; si vous y jetez un \u339\'9cil, SIMx86 affiche des valeurs al\u233\'e9atoires \u224\'e0 l'int\u233\'e9rieur de ces derni\u232\'e8res. Dans l'\u233\'e9cran de la m\u233\'e9moire, \u224\'e0 part la grille des adresses, vous trouverez autres deux cases \u233\'e9ditables et un bouton. Ce bouton "Clear Memory", nettoie la m\u233\'e9moire en \u233\'e9crivant des z\u233\'e9ros partout. Puisque le code objet et les valeurs initiales de votre programme se trouvent actuellement en m\u233\'e9moire, vous ne devriez pas presser ce bouton. Si vous le faites, vous aurez \u224\'e0 assembler votre code de nouveau et \u224\'e0 retaper les valeurs qui se trouvent de 1000 \u224\'e0 1003. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les deux zones de texte dans l'\u233\'e9cran de la m\u233\'e9moire vous permettent de modifier l'adresse du vecteur d'interruption et celle du vecteur des adresses (Reset Vector). Par d\u233\'e9faut, ce dernier est \u224\'e0 z\u233\'e9ro. Ce qui veut dire que SIMx86 commence l'ex\u233\'e9cution du programme \u224\'e0 l'adresse z\u233\'e9ro chaque fois que vous r\u233\'e9initialisez l'\u233\'e9mulateur. Puisque voutre programme commence \u224\'e0 l\u8217\'92emplacement z\u233\'e9ro, vous ne devriez pas changer la valeur par d\u233\'e9faut du vecteur d'adresses. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La valeur du vecteur d'interruption est FFFF par d\u233\'e9faut. FFFF est une valeur sp\u233\'e9ciale qui pr\u233\'e9vient SIMx86 qu\u8217\'92\u171\'ab il n'y a pas une routine de services d'interruption pr\u233\'e9sente dans le syst\u232\'e8me, donc ignorer toutes les interruptions \u187\'bb. Toute autre valeur doit \u234\'eatre l'adresse de  la RSI que SIMx86 appellera toutes les fois qu\u8217\'92une interruption se produira. Puisque le programme que vous venez d'assembler n'a pas de routine de service d'interruption, vous devriez laisser la case d'adresse du vecteur d'interruption \u224\'e0 sa valeur par d\u233\'e9faut. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Finalement, cliquez sur l'onglet "Emulator" pour donner un coup d'oeil \u224\'e0 l'\u233\'e9cran de celui-ci. Cet \u233\'e9cran est beaucoup plus encombr\u233\'e9 que les deux autres. Dans le c\u244\'f4t\u233\'e9 sup\u233\'e9rieur gauche de l'affichage, il y a un champ de texte nomm\u233\'e9 IP. Cette case garde la valeur courante du registre du pointeur d'instructions x86. Chaque fois que SIMx86 ex\u233\'e9cute un programme, il commence l'ex\u233\'e9cution avec l'instruction se trouvant \u224\'e0 cette adresse. Quand vous pressez le bouton "Reset" (ou quand vous entrez dans SIMx86 pour la premi\u232\'e8re fois), le registre IP contient la valeur trouv\u233\'e9e dans le vecteur des adresses (Reset Vector). Si le registre ne contient pas la valeur z\u233\'e9ro \u224\'e0 ce moment, pressez le bouton Reset dans l'\u233\'e9cran Emulator et le syst\u232\'e8me sera reinitialis\u233\'e9. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Imm\u233\'e9diatement au-dessous de la valeur IP, la page de l'\u233\'e9mulateur }{\rtlch \ltrch\lang3084\i\loch
d\u233\'e9sassemble}{\rtlch \ltrch\lang3084\loch
 l'instruction trouv\u233\'e9e \u224\'e0 l'adresse du registre IP. Celle-ci est l'instruction qui vient tout de suite apr\u232\'e8s et que SIMx86 ex\u233\'e9cutera quand vous pressez les boutons "Run" ou "Step".  Notez que SIMx86 n'obtient pas cette instruction de la fen\u234\'eatre du code source de l'\u233\'e9crain Editor. Au contraire, il d\u233\'e9code le opcode dans la m\u233\'e9moire (dans l'adresse trouv\u233\'e9e dans IP) et g\u233\'e9n\u232\'e8re la cha\u238\'eene lui-m\u234\'eame. Par cons\u233\'e9quent, il peut y avoir des diff\u233\'e9rences mineures entre l\u8217\'92instruction que vous venez d\u8217\'92\u233\'e9crire et l'instruction que SIMx86 affiche \u224\'e0 cette page. Notez qu'une instruction d\u233\'e9sassembl\u233\'e9e contient plusieurs valeurs num\u233\'e9riques devant l'instruction concr\u232\'e8te. La premi\u232\'e8re valeur de quatre chiffres est l'adresse m\u233\'e9moire de l'instruction. Les deux chiffres suivants (ou les trois paires de chiffres suivantes) sont les opcodes et les op\u233\'e9randes d'instruction possibles. Par exemple, le code machine de l'instruction mov ax, [1000] est C6 00 10, car il s'agit des trois ensembles de chiffres figurant \u224\'e0 ce point. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Au bas de l'instruction courante d\u233\'e9sassembl\u233\'e9e, SIMx86 affiche les 15 instructions qu'il d\u233\'e9sassemble. L'adresse de d\u233\'e9part de ces op\u233\'e9rations n'est pas la valeur du registre IP ; c'est la valeur indiqu\u233\'e9e dans le champ de texte en bas de l'\u233\'e9cran \u224\'e0 droite qui indique l'adresse de d\u233\'e9part. Les deux fl\u232\'e8ches \u224\'e0 c\u244\'f4t\u233\'e9 de cette valeur vous permettent d'incr\u233\'e9menter ou de d\u233\'e9cr\u233\'e9menter rapidement cette adresse. }{\rtlch \ltrch\lang3084\loch
Supposez}{\loch
 qu'elle est \u224\'e0 z\u233\'e9ro (}{\rtlch \ltrch\lang3084\loch
donnez-lui cette valeur si elle ne l\u8217\'92a pas}{\loch
), pressez la fleche bas. Notez que ceci incr\u233\'e9mente l'adresse de d\u233\'e9part de 1. Maintenant regardez de nouveau dans la zone de texte. Comme vous pouvez voir, presser la fl\u232\'e8che bas a produit un r\u233\'e9sultat int\u233\'e9ressant. La premi\u232\'e8re instruction (\u224\'e0 l'adresse 0001) est "****". Les quatre ast\u233\'e9risques indiquent que cet opcode particulier est un opcode d'instruction invalide. La seconde instruction \u224\'e0 l'adresse 2002, est not ax. \u201\'c9tant donn\u233\'e9 que le programme que vous venez d'asembler ne contient pas un opcode invalide ou une instruction not ax, vous pourriez vous demander d'o\u249\'f9 ces instructions viennent. Cependant, notez l'adresse de d\u233\'e9part \u224\'e0 la premi\u232\'e8re instruction : 0001. Ceci est le second octet de la premi\u232\'e8re instruction dans votre programme. En effet, l'instruction ill\u233\'e9gale (opcode = 00) et l'instruction not ax (opcode = 10) sont en r\u233\'e9alit\u233\'e9 un d\u233\'e9sassemblage de l'instruction mov ax, [1000] avec une op\u233\'e9rande de deux octets. Ceci devrait bien illustrer un probl\u232\'e8me avec le d\u233\'e9sassemblage : on peut obtenir des instructions d\u233\'e9phas\u233\'e9es en sp\u233\'e9cifiant une adresse de d\u233\'e9part qui est au milieu d'une instruction \u224\'e0 plusieurs octets. Vous }{\rtlch \ltrch\lang3084\loch
devrez consid\u233\'e9rer ceci \u224\'e0 l\u8217\'92heure de d\u233\'e9sassembler}{\loch
 d}{\rtlch \ltrch\lang3084\loch
u}{\loch
 code. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Au milieu de l'\u233\'e9cran de l'\u233\'e9mulateur, il y a plusieurs boutons : Run, Step, Halt,  Interrupt et Reset (la bo\u238\'eete "Running" est un indicateur, non un bouton). Presser le bouton Run causera l'ex\u233\'e9cution du programme (commen\u231\'e7ant par l'adresse du registre IP) en "pleine" vitesse. Presser le bouton Step permet de n'ex\u233\'e9cuter que l'instruction sp\u233\'e9cifi\u233\'e9e dans IP et d'arr\u234\'eater ensuite. Le bouton Halt, qui est actif seulement quand un programme est en train d'ex\u233\'e9cuter, a pour effet d'arr\u234\'eater l'ex\u233\'e9cution. Presser le bouton Interrupt g\u233\'e9n\u232\'e8re une interruption et presser Reset r\u233\'e9initialise le syst\u232\'e8me (et arr\u234\'eate l'ex\u233\'e9cution si un programme est en cours d'ex\u233\'e9cution). Notez que presser le bouton Reset nettoie les registres x86 et charge IP de la valeur se trouvant dans le vecteur des adresses (Reset Vector). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si l'indicateur "Running" est gris, SIMx86 n'est pas en train d'ex\u233\'e9cuter un programme. Il devient rouge pendant une ex\u233\'e9cution. Vous pouvez vous en servir comme un moyen facile de constater si un programme est en cours d'ex\u233\'e9cution, si le programme est occup\u233\'e9 \u224\'e0 calculer quelque chose (ou s'il est en train d'ex\u233\'e9cuter une boucle infinie) et il n'y a pas d'E/S pour indiquer l'ex\u233\'e9cution. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les champs de texte avec les \u233\'e9tiquettes AX, BX, CX et DX vous permettent de modifier les valeurs de ces registres pendant qu'un programme n'est pas en train de s'ex\u233\'e9cuter (ces champs sont inactifs pendant l'ex\u233\'e9cution). Ces cellules affichent \u233\'e9galement la valeur actuelle des registres quand un programme arr\u234\'eate son ex\u233\'e9cution ou entre les instructions quand vous arr\u234\'eatez l'ex\u233\'e9cution. Notez que pendant l'ex\u233\'e9cution d'un programme, ces valeurs sont statiques et ne refl\u232\'e8tent pas les valeurs actuelles}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Mais la valeur de la derni\u232\'e8re instruction accomplie (n.d.t.).}
}}
}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les bo\u238\'eetes \u224\'e0 cocher "Less" et "Equal" refl\u232\'e8tent les valeurs des drapeaux "less than" et "equal". L'instruction x86 }{\rtlch \ltrch\i\loch
cmp}{\loch
 ajuste ces drapeaux selon le r\u233\'e9sultat d'une comparaison. Vous pouvez en voir les valeurs pendant qu'un}{\rtlch \ltrch\lang3084\loch
e ex\u233\'e9cution n\u8217\'92est pas en cours}{\loch
. Vous pouvez aussi les initialiser \u224\'e0 }{\rtlch \ltrch\i\loch
true}{\loch
 ou }{\rtlch \ltrch\i\loch
false}{\loch
 en cliquant sur la bo\u238\'eete appropri\u233\'e9e avec la souris (}{\rtlch \ltrch\lang3084\loch
toujours quand SIMx86 n\u8217\'92est pas en train d\u8217\'92ex\u233\'e9cuter un programme}{\loch
).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans la section moyenne de l'\u233\'e9cran de l'\u233\'e9mulateur, il y a quatre indicateurs circulaires (LEDs) et quatre boutons interrupteurs. Sur chacun de ces objets, il y a une adresse hexad\u233\'e9cimale indiquant l'adresse o\u249\'f9 ils sont mapp\u233\'e9s en m\u233\'e9moire. Si aux adresses correspondantes il y a des z\u233\'e9ros, alors les indicateurs sont d\u233\'e9sactiv\u233\'e9s (ils sont blancs). Si \u224\'e0 ces adresses il y a des 1, alors ils sont activ\u233\'e9s (ils sont rouges). Notez que ces indicateurs r\u233\'e9pondent seulement au bit z\u233\'e9ro de leur adresse de port. Ces p\u233\'e9riph\u233\'e9riques de sortie ignorent tout autre bit dans les valeurs \u233\'e9crites \u224\'e0 ces adresses. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les boutons interrupteurs fournissent quatre p\u233\'e9riph\u233\'e9riques d'entr\u233\'e9e mapp\u233\'e9s en m\u233\'e9moire. Pour chaque adresse se trouvant au-dessus de ces interrupteurs, SIMx86 retourne z\u233\'e9ro si l'interrupteur est \u233\'e9teint (en position }{\rtlch \ltrch\i\loch
off}{\loch
) ; et il retourne 1 si le bouton est en position }{\rtlch \ltrch\i\loch
on}{\loch
. Vous pouvez allumer ou \u233\'e9teindre un de ces interrupteurs simplement en y cliquant dessus. Notez qu'un petit rectangle sur l'interrupteur devient rouge si l'interrupteur est en position }{\rtlch \ltrch\i\loch
on}{\loch
.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux colonnes au c\u244\'f4t\u233\'e9 droit de l'\u233\'e9cran Emulator ("Input" et "Output") affichent les valeurs d'entr\u233\'e9e lues avec l'instruction get et les valeurs entr\u233\'e9es avec l'instruction put. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ce premier exercice, vous utiliserez le bouton Step pour tracer \u224\'e0 travers chacune des instructions du programme EX1.x86. D'abord, commencez par presser le bouton Reset}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
C'est une bonne habitude de cliquer sur le bouton Reset avant d'ex\u233\'e9cuter tout programme ou de le tracer. }
}}
}{\loch
. Ensuite, pressez le bouton Step une fois. Notez que les valeurs des registres IP et AX changent. La valeur du registre IP change \u224\'e0 0003, puisqu'elle correspond \u224\'e0 l'adresse de la prochaine instruction en m\u233\'e9moire, alors que la valeur du registre AX devient 1234 car c'est la valeur que vous avez plac\u233\'e9e \u224\'e0 la locaton 1000 quand vous avez modifi\u233\'e9 l'\u233\'e9cran de la m\u233\'e9moire. Continuez votre trace \u224\'e0 travers les instructions qui restent (en cliquant Step \u224\'e0 chaque fois), jusqu'\u224\'e0 ce que vous obteniez la bo\u238\'eete de dialogue "Halt Encountered".}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre }{\rtlch \ltrch\lang3084\b\loch
journal}{\rtlch \ltrch\b\loch
 de laboratoire}{\loch
 : expliquez les r\u233\'e9sultats obtenus apr\u232\'e8s l'ex\u233\'e9cution de chaque instruction. Notez que faire une trace le long d'un programme est une m\u233\'e9thode excellente pour assurer que vous avez pleinement compris comment le programme fonctionne. Comme r\u232\'e8gle g\u233\'e9n\u233\'e9rale, vous devriez toujours faire la trace de tout programme que vous \u233\'e9crivez quand vous le testez. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06_02}{\*\bkmkend p3_06_02}\rtlch \ltrch\fs23\b\loch
3.6.2\tab Op\u233\'e9rations simples de }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ype }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
app\u233\'e9es en E/S}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Allez dans l'\u233\'e9cran de l'\u233\'e9diteur et chargez le fichier EX2x86. Ce programme pr\u233\'e9sente de nouveaux concepts, donc }{\rtlch \ltrch\lang3084\loch
prenez}{\loch
 }{\rtlch \ltrch\lang3084\loch
votre temps }{\loch
pour \u233\'e9tudier ce code : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx,    1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a:\tab \tab get\tab \tab \tab ; la valeur sera }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
gard}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\u233\'e9e dans ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab [bx], \tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab bx, \tab 2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jne\tab a}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab cx, \tab bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab bx, \tab 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
b:\tab \tab add\tab ax, \tab [bx]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab bx, \tab 2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp \tab bx, \tab cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jb\tab b}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab put}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
La premi\u232\'e8re chose \u224\'e0 noter ce sont les deux cha\u238\'eenes "a:" et "b:" apparaissant dans la premi\u232\'e8re colonne du listing. L'assembleur SIMx86 vous permet de sp\u233\'e9cifier jusqu'\u224\'e0 26 }{\rtlch \ltrch\i\loch
\u233\'e9tiquettes}{\loch
 en indiquant un caract\u232\'e8re alphab\u233\'e9tique suivi par le caract\u232\'e8re deux points. Les \u233\'e9tiquettes sont g\u233\'e9n\u233\'e9ralement, et dans un certain sens, des op\u233\'e9randes pour les instructions de saut. Par cons\u233\'e9quent, le "jne a" veut dire : \u171\'ab si non \u233\'e9gal, saute \u224\'e0 la valeur prise par l'instruction \u233\'e9tiquet\u233\'e9e avec 'a:'\u187\'bb, au lieu de dire \u171\'absi non \u233\'e9gal, saute \u224\'e0 l'emplacement de m\u233\'e9moire dix (0Ah) dans la m\u233\'e9moire\u187\'bb. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Utiliser des \u233\'e9tiquettes est beaucoup plus pratique que sp\u233\'e9cifier manuellement l'adresse m\u233\'e9moire de l'instruction cible, sp\u233\'e9cialement si cette derni\u232\'e8re appara\u238\'eet plus tard dans le code. L'assembleur SIMx86 calcule l'adresse de ces \u233\'e9tiquettes et substitue l'adresse correcte pour les op\u233\'e9randes des instructions de saut. Notez que vous pouvez sp\u233\'e9cifier une adresse num\u233\'e9rique dans le champ de l'op\u233\'e9rande d'une instruction de saut. Cependant, toutes les adresses num\u233\'e9riques doivent commencer par un chiffre d\u233\'e9cimal (m\u234\'eame si elles sont des valeurs hexad\u233\'e9cimales). Si votre adresse cible doit commencer par une valeur de la plage A-F, vous aurez simplement \u224\'e0 mettre un z\u233\'e9ro comme }{\rtlch \ltrch\lang3084\loch
valeur }{\loch
initiale}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
La raison de ceci est que, si l'adresse d'une op\u233\'e9rande de l'instruction }{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
jmp}{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 commen\u231\'e7ait par une lettre, l'assembleur la prendrait pour une cha\u238\'eene de caract\u232\'e8res. On utilise donc cette notation pour permetre \u224\'e0 l'assembleur de reconna\u238\'eetre de fa\u231\'e7on nette que l'op\u233\'e9rande est un nombre (n.d.t.). }
}}
}{\loch
. Par exemple, si "jne a" }{\rtlch \ltrch\lang3084\loch
signifie}{\loch
 \u171\'ab saute si non \u233\'e9gal \u224\'e0 l'empolacement 0Ah \u187\'bb, vous }{\rtlch \ltrch\lang3084\loch
\u233\'e9crirez}{\loch
 l'instruction comme "jne 0A". }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce programme contient deux boucles. Dans la premi\u232\'e8re, il lit une s\u233\'e9quence de valeurs de l'utilisateur tant qu'il n'entre pas la valeur z\u233\'e9ro. Cette boucle }{\rtlch \ltrch\lang3084\loch
garde}{\loch
 chaque mot dans des adresses de m\u233\'e9moire successives \u224\'e0 partir de l'adresse 1000h. Souvenez-vous que chaque mot lu par l'utilisateur n\u233\'e9cessite deux octets ; c'est pourquoi la boucle ajoute 2 \u224\'e0 bx dans chaque it\u233\'e9ration. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seconde boucle }{\rtlch \ltrch\lang3084\loch
scanne}{\loch
 les valeurs entr\u233\'e9es et calcule leur somme. A la fin de la boucle, le code affiche la somme des deux sorties en utilisant l'instruction put. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa144{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire }{\loch
: faites la trace dans ce programme et d\u233\'e9crivez comment chaque instruction fonctionne. R\u233\'e9initialisez le x86 et ex\u233\'e9cutez ce programme \u224\'e0 pleine vitesse. Entrez diverses valeurs et d\u233\'e9crivez les r\u233\'e9sultats. }{\rtlch \ltrch\lang3084\loch
D\u233\'e9crivez les instructions }{\rtlch \ltrch\i\loch
get}{\loch
 et }{\rtlch \ltrch\i\loch
put }{\rtlch\ai0 \ltrch\lang3084\i0\loch
et dites }{\loch
pourquoi elles ex\u233\'e9cutent des op\u233\'e9rations de type E/S mapp\u233\'e9es sur E/S et non des op\u233\'e9rations d'E/S mapp\u233\'e9es dans la m\u233\'e9moire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb115\sa115\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart a}{\*\bkmkstart p3_06_03}{\*\bkmkend a}{\*\bkmkend p3_06_03}\rtlch \ltrch\fs23\b\loch
3.6.3\tab Op\u233\'e9rations de }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ype E/S }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
app\u233\'e9es dans la }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
\u233\'e9moire}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans l'\u233\'e9diteur, chargez le programme EX3.x86. Ce programme prend la forme suivante (on ajoute des commentaires ici pour rendre plus claires les op\u233\'e9rations) : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a:\tab \tab mov \tab ax,\tab [FFF0]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab bx, \tab [FFF2]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab cx, \tab ax\tab ;Calcule BoutonInterr0 AND BoutonInterr1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab and\tab cx, \tab bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab [FFF8], cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab cx, \tab ax\tab ;Calcule BoutonInterr0 OR BoutonInterr1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab or\tab cx, \tab bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [FFFA], cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab cx, \tab ax\tab ;Calcule BoutonInterr0 XOR BoutonInterr1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab dx, \tab bx\tab ;Souvenez-vous que xor = AB' + A'B}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab not\tab cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab not\tab dx}{{\super \rtlch\dbch\af18 \ltrch\super\fs18\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Il y avait une erreur ici dans l'original. On voyait en effet "not bx". Mais, ceci n'a pas de sens, d'autant plus que, en ouvrant EX3.x86, on voit tout de suite que "not dx" est la bonne instruction, ndt.}
}}
}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab and\tab cx, \tab bx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab and\tab dx,\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab or\tab cx, \tab dx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\caps\fs18\loch\f9\loch
fffc}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
], cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab not\tab cx\tab \tab ;Calcule BoutonInterr0 = BoutonInterr1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\caps\fs18\loch\f9\loch
fffe}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
], cx\tab ;Souvenez-vous que\tab \u233\'e9gal = NOT XOR}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab [}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\caps\fs18\loch\f9\loch
fff4}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
] ;Lit le troisi\u232\'e8me bouton interrupteur}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 0\tab ;Regarde s'il est activ\u233\'e9}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab a\tab \tab ;R\u233\'e9p\u233\'e9ter ce programme tant que off}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Les emplacements 0FFF0h, 0FFF2h et 0FFF4h correspondent aux trois premiers boutons interrupteurs de l'\u233\'e9cran Emulator. Ce sont des p\u233\'e9riph\u233\'e9riques ayant des E/S mapp\u233\'e9es en m\u233\'e9moire qui mettent 0 ou 1 dans l\u8217\'92emplacement m\u233\'e9moire correspondant selon que l'\u233\'e9tat du bouton est activ\u233\'e9 ou \u233\'e9teint. Les }{\rtlch \ltrch\lang3084\loch
adresses}{\loch
 0FFF8h, 0FFFAh, 0FFFCh et 0FFFEh correspondent aux quatre indicateurs circulaires (LEDs). }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crire un z\u233\'e9ro }{\rtlch \ltrch\lang3084\loch
dans cet }{\loch
emplacement \u233\'e9quivaut \u224\'e0 mettre les indicateurs dans l'\u233\'e9tat \u233\'e9teint, alors qu'\u233\'e9crire 1 les allume. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ce programme effectue les fonctions logiques }{\rtlch \ltrch\i\loch
and}{\loch
, }{\rtlch \ltrch\i\loch
or}{\loch
, }{\rtlch \ltrch\i\loch
xor}{\loch
 et }{\rtlch \ltrch\i\loch
xnor}{\loch
 (}{\rtlch\ai0 \ltrch\lang3084\i0\loch
non}{\rtlch\ai \ltrch\i\loch
 xor}{\loch
) pour les valeurs lues dans les premiers deux boutons interrupteurs. Il affiche le r\u233\'e9sultat dans les quatre indicateurs de sortie. Et il lit la valeur du troisi\u232\'e8me bouton d'interruption pour d\u233\'e9terminer quand arr\u234\'eater. Quand ce bouton est \u224\'e0 la position }{\rtlch \ltrch\i\loch
on}{\loch
, le programme }{\rtlch \ltrch\lang3084\loch
termine son ex\u233\'e9cution}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre }{\rtlch \ltrch\lang3084\b\loch
journal}{\rtlch \ltrch\b\loch
 }{\loch
: ex\u233\'e9cutez ce programme et exp\u233\'e9rimentez les quatre possibles combinaisons de \u233\'e9teint/allum\u233\'e9 des premiers deux boutons interrupteurs. Placez vos r\u233\'e9sultats dans votre rapport de laboratoire. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06_04}{\*\bkmkend p3_06_04}\rtlch \ltrch\fs23\b\loch
3.6.4\tab Exercices DMA}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans cet exercice vous commencerez l'ex\u233\'e9cution d'un programme (EX4.x86) qui examine }{\rtlch \ltrch\lang3084\loch
et effectue des op\u233\'e9rations sur les }{\loch
valeurs trouv\u233\'e9es dans la m\u233\'e9moire. Puis vous passerez \u224\'e0 l'\u233\'e9cran Memory et vous en modifierez les valeurs (vous acc\u233\'e9derez directement \u224\'e0 la m\u233\'e9moire pendant l'ex\u233\'e9cution du programme) ; ceci simule un p\u233\'e9riph\u233\'e9rique utilisant le DMA. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme EX4.x86 commence son ex\u233\'e9cution en initialisant \u224\'e0 z\u233\'e9ro l'emplacement de m\u233\'e9moire 1000h. Puis, il boucle jusqu'\u224\'e0 ce qu'une de deux conditions }{\rtlch \ltrch\lang3084\loch
est}{\loch
 satisfaite - soit que l'utilisateur change le bouton interrupteur FFF0 ou qu'il modifie la valeur \u224\'e0 l'emplacement 1000. Changer l'\u233\'e9tat du bouton interrupteur \u224\'e0 l'adresse FFF0 arr\u234\'eate l'ex\u233\'e9cution du programme. Changer la valeur de l'emplacement de m\u233\'e9moire 1000h transf\u232\'e8re le contr\u244\'f4le \u224\'e0 une section du programme qui fait la somme de }{\rtlch \ltrch\i\loch
n }{\loch
mots, o\u249\'f9 }{\rtlch \ltrch\i\loch
n}{\loch
 est la nouvelle valeur de l\u8217\'92emplacement 1000h. Le programme additionne les mots apparaissant dans des }{\rtlch \ltrch\lang3084\loch
adresses}{\loch
 }{\rtlch \ltrch\lang3084\loch
contigu\u235\'ebs}{\loch
 en m\u233\'e9moire \u224\'e0 partir de l'adresse 1002h. Il ressemble \u224\'e0 ce qui suit : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
d:\tab \tab mov\tab cx, \tab 0\tab ;nettoie la location 1000h avant le test}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [1000], cx}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
; La boucle suivante teste le changement de }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
l\u8217\'92adresse}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 1000h ou bien si le }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
; bouton d'interruption \u224\'e0 l'}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
emplacement}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 FFF0 se trouve \u224\'e0 la position \u8220\'93on\u8221\'94}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a: \tab \tab mov\tab cx, \tab [1000]\tab ;Contr\u244\'f4le du changement d}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
e}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 1000h.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab cx, \tab 0\tab ;Si oui, sauter dans la section qui additionne}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jne\tab c\tab \tab ;les valeurs}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab [fff0] ;Si }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
l\u8217\'92adresse}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 1000h contient encore z\u233\'e9ro, }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 0      ;lire l'interrupteur fff0 et voir s'il est}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab a\tab        ;\u224\'e0 l'\u233\'e9tat off. Si oui, boucler en arri\u232\'e8re. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt\tab \tab        ;Sinon, quitter le programme}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;Le code suivant fait la somme d'un nombre de "cx" mots contigus \u224\'e0 partir de}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
l\u8217\'92emplacement}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 1002h. Apr\u232\'e8s avoir effectu\u233\'e9 les op\u233\'e9rations, afficher le r\u233\'e9sultat.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9
 }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
c:\tab \tab mov\tab bx,\tab 1002\tab ;Initialisation de BX pour qu'il pointe sur un}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab ;tableau de donn\u233\'e9es}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 0\tab ;Initialisation de la somme}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
b:\tab \tab add\tab ax, \tab [bx]\tab ;Additionner ax avec l'\u233\'e9l\u233\'e9ment suivant }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
du }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab \tab \tab \tab ;tableau}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab bx,\tab 2\tab ;Faire pointer bx sur l'\u233\'e9l\u233\'e9ment suivan}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
t}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sub\tab cx, \tab 1\tab ;D\u233\'e9cr\u233\'e9menter le compteur d'\u233\'e9l\u233\'e9ments.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab cx,\tab 0\tab ;Tester si toutes les valeurs ont \u233\'e9t\u233\'e9 }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li2880\ri0\lin2880\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;additionn\u233\'e9es.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jne\tab b}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab put\tab \tab \tab ;Afficher la somme et recommencer.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab a}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Chargez ce programme dans SIMx86 et assemblez-le. Passez \u224\'e0 l'\u233\'e9cran Emulate, pressez le bouton Reset, assurez-vous que l'interrupteur FFF0 }{\rtlch \ltrch\lang3084\loch
soit}{\loch
 en position }{\rtlch \ltrch\i\loch
off}{\loch
 et finalement ex\u233\'e9cutez le programme. Une fois qu'il}{\rtlch \ltrch\lang3084\loch
 est en ex\u233\'e9cution}{\loch
, passez \u224\'e0 l'\u233\'e9cran de la m\u233\'e9moire en cliquant sur l'onglet Memory. Modifiez l'adresse de d\u233\'e9part pour qu'elle corresponde \u224\'e0 l'adresse 1000. Faites passser l'emplacement 1000h \u224\'e0 la valeur 5. Revenez \u224\'e0 l'\u233\'e9cran d''\u233\'e9mulation. En supposant que les emplacements de m\u233\'e9moire 1002 \u224\'e0 100B contiennent tous des z\u233\'e9ros, le programme devrait l'afficher dans la colonne des sorties. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Retournez \u224\'e0 la page de la m\u233\'e9moire. Qu'est-ce que l'emplacement 1000h contient maintenant ? Changez les octets }{\rtlch \ltrch\lang3084\loch
les moins significatifs}{\loch
 des mots aux adresses 1002, 1004 et 1006 pour y mettre les valeurs 1, 2 et 3 respectivement. Faites passer la valeur }{\rtlch \ltrch\lang3084\loch
de l'emplacement 1000h \u224\'e0 3. Passez de nouveau \u224\'e0 la page de l'\u233\'e9mulateur. D\u233\'e9crivez les sorties dans votre journal de laboratoire. Essayez d'entrer d'autres valeurs dans la m\u233\'e9moire. Pressez le bouton interrupteur de l'adresse FFF0 quand vous voulez quitter l'ex\u233\'e9cution du programme. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre rapport de laboratoire}{\rtlch \ltrch\lang3084\loch
 : expliquez comment ce programme utilise l'acc\u232\'e8s DMA pour fournir ses entr\u233\'e9es. Ex\u233\'e9cutez diff\u233\'e9rents tests avec des valeurs diff\u233\'e9rentes \u224\'e0 l'emplacement 1000h et diff\u233\'e9rentes valeurs dans le tableau de donn\u233\'e9es commen\u231\'e7ant \u224\'e0 l'adresse 1002. Inscrivez les r\u233\'e9sultats dans votre rapport. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour aller plus loin : }{\rtlch \ltrch\lang3084\loch
Placez la valeur 12 dans l\u8217\'92emplacement de m\u233\'e9moire 1000. Expliquez pourquoi le programme affiche alors deux valeurs, au lieu d'en afficher une. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06_05}{\*\bkmkend p3_06_05}\rtlch \ltrch\fs23\b\loch
3.6.5\tab Exercices sur les E/S }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
ilot\u233\'e9es par les }{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\b\loch
nterruptions}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Dans cet exercice, vous chargerez deux programmes en m\u233\'e9moire : un programme principal et une routine de service d'interruptions. Cet exercice sert \u224\'e0 montrer l'usage des interruptions et des routines associ\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le programme principal (EX5a.x86) compare constamment les emplacements de m\u233\'e9moire 1000h et 1002h. Si elles ne sont pas \u233\'e9gales, le programme affiche le contenu de l'emplacement 1000h et copie la valeur \u224\'e0 l'emplacement 1002h, puis r\u233\'e9p\u232\'e8te le processus. Le programme r\u233\'e9p\u232\'e8te cette boucle jusqu'\u224\'e0 ce que l'utilisateur mette le bouton interrupteur de l'emplacement FFF0 \u224\'e0 la position }{\rtlch \ltrch\lang3084\i\loch
on}{\rtlch \ltrch\lang3084\loch
. Le code est le suivant : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a:\tab \tab mov\tab ax, \tab [1000] ;Charge la donn\u233\'e9e de l'emplacement 1000 et }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab [1002] ;contr\u244\'f4le si le contenu est le m\u234\'eame que }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab b\tab       ;celui de l'emplacement 1002h. Si oui, v\u233\'e9rifier}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab put\tab \tab        ;ce qui contient l'adresse FFF0. Si les deux }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [1002], ax    ;valeurs sont diff\u233\'e9rentes, afficher la valeur }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab        ;contenue dans 1000h et les rendre \u233\'e9gales. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
b:\tab \tab mov\tab ax, \tab [fff0] ;Tester l'interrupteur FFF0 pour voir s'il }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 0      ;faut quitter le programme.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab a\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La routine d'interruption (EX5b.x86) se trouve \u224\'e0 l'adresse m\u233\'e9moire 100h. Quand une interruption a lieu, cette RSI incr\u233\'e9mente simplement la valeur \u224\'e0 l\u8217\'92adresse 1000h, en chargeant cette valeur dans ax, en y ajoutant 1 et en stockant de nouveau cette valeur \u224\'e0 l'emplacement 1000h. Apr\u232\'e8s ces instructions, la RSI retourne le contr\u244\'f4le au programme principal. La routine de services d'interruption contient le code suivant : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab [1000] ;Incr\u233\'e9menter de 1 }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
l\u8217\'92emplacement}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 1000h et }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax, \tab 1      ;retourner le contr\u244\'f4le au code interrompu}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab [1000], ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab iret}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous devez charger et assembler les deux fichiers avant d'essayer d'ex\u233\'e9cuter le programme principal. Commencez par charger ce dernier (EX5a.x86) dans la m\u233\'e9moire et assemblez-le \u224\'e0 l'adresse z\u233\'e9ro. Puis, chargez la routine (EX5b.x86) dans la m\u233\'e9moire, sp\u233\'e9cifiez 100 comme adresse initiale et assemblez le code. }{\rtlch \ltrch\lang3084\b\loch
Attention :}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\i\loch
si vous oubliez de charger l'adresse de d\u233\'e9part vous effacerez le programme principal pendant l'assemblage de la routine. Si ceci arrive, vous devrez r\u233\'e9p\u233\'e9ter toute la proc\u233\'e9dure d\u232\'e8s le d\u233\'e9but. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Apr\u232\'e8s avoir assembl\u233\'e9 le code, la prochaine \u233\'e9tape est d'initialiser le vecteur d'interruption pour qu'il contienne l'adresse de la routine. Pour ce faire, passez \u224\'e0 l'\u233\'e9cran de la m\u233\'e9moire. La cellule du vecteur d'interruption contient normalement la valeur 0FFFFh (qui indique que l'interrupteur est d\u233\'e9sactiv\u233\'e9). Changez le contenu avec la valeur 100 pour qu'il contienne l'adresse de la routine. Ceci active \u233\'e9galement le syst\u232\'e8me d'interruption. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Finalement, passez \u224\'e0 l'\u233\'e9cran \u233\'e9mulateur, assurez-vous que le bouton interrupteur de l'adresse FFF0 soit \u224\'e0 la position }{\rtlch \ltrch\lang3084\i\loch
off}{\rtlch \ltrch\lang3084\loch
, pressez le bouton Reset et commencez l'ex\u233\'e9cution. Normalement, rien ne devrait arriver. Maintenant, pressez le bouton d'interruption et observez les r\u233\'e9sultats. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre journal : }{\rtlch \ltrch\lang3084\loch
d\u233\'e9crivez la sortie du programme chaque fois que vous pressez le bouton d'interruption. Expliquez chaque \u233\'e9tape que vous devriez suivre si vous vouliez placer la routine \u224\'e0 l'adresse 2000h au lieu de l'adresse 100h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour aller plus loin : }{\rtlch \ltrch\lang3084\loch
\u233\'e9crivez une routine de service d'interruption faisant quelque chose de simple. Ex\u233\'e9cutez le programme principal et pressez le bouton d'interruption pour tester votre code. V\u233\'e9rifiez le bon fonctionnement de votre routine. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_06_06}{\*\bkmkend p3_06_06}\rtlch \ltrch\fs23\b\loch
3.6.6\tab Exercices de }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammation en }{\rtlch \ltrch\fs23\lang3084\b\loch
l}{\rtlch \ltrch\fs23\b\loch
angage }{\rtlch \ltrch\fs23\lang3084\b\loch
m}{\rtlch \ltrch\fs23\b\loch
achine et }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\lang3084\b\loch
ncodage}{\rtlch \ltrch\fs23\b\loch
 des }{\rtlch \ltrch\fs23\lang3084\b\loch
i}{\rtlch \ltrch\fs23\b\loch
nstructions}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Jusqu'\u224\'e0 pr\u233\'e9sent vous avez cr\u233\'e9\u233\'e9 des programmes en langage machine avec l'assembleur incorpor\u233\'e9 SIMx86. Un assembleur est un programme qui traduit un fichier source en format ASCII contenant des repr\u233\'e9sentations textuelles en un programme en langage machine. Le programme assembleur vous permet d'\u233\'e9conomiser consid\u233\'e9rablement le travail consistant \u224\'e0 traduire des instructions humainement lisibles en code machine. M\u234\'eame si cela est p\u233\'e9nible, vous pouvez effectuer vous-m\u234\'eames cette traduction. Dans cet exercice vous allez cr\u233\'e9er quelques programmes tr\u232\'e8s courts en langage machine en encodant les instructions et en entrant les opcodes hexad\u233\'e9cimaux dans la m\u233\'e9moire via l'\u233\'e9cran Memory. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En utilisant les techniques d'encodage trouv\u233\'e9es dans les figures 3.19, 3.20, 3.21 et 3.22, \u233\'e9crivez les valeurs hexad\u233\'e9cimales pour les opcodes \u224\'e0 c\u244\'f4t\u233\'e9 de chacune des instructions \u224\'e0 la page suivante. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous pouvez supposer que le programme commence \u224\'e0 l'adresse z\u233\'e9ro et, par cons\u233\'e9quent, l'\u233\'e9tiquette "a" sera \u224\'e0 l'adresse 0003, puisque l'instruction }{\rtlch \ltrch\lang3084\i\loch
mov cx, 0}{\rtlch \ltrch\lang3084\loch
 a trois octets de long. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre rapport de laboratoire}{\rtlch \ltrch\lang3084\loch
 }{\rtlch \ltrch\lang3084\b\loch
:}{\rtlch \ltrch\lang3084\loch
 entrez les opcodes hexad\u233\'e9cimaux et les op\u233\'e9randes dans la m\u233\'e9moire \u224\'e0 partir de l'adresse z\u233\'e9ro, en vous servant de l'\u233\'e9diteur de m\u233\'e9moire. Imprimez ces valeurs et incluez-les dans votre rapport. Passez \u224\'e0 l'\u233\'e9cran d'\u233\'e9mulation et d\u233\'e9sassemblez le code \u224\'e0 partir de l'adresse z\u233\'e9ro. V\u233\'e9rifiez que ce code soit le m\u234\'eame que le code assembleur ci-dessous. Imprimez une copie du code d\u233\'e9sassembl\u233\'e9 et incluez-la dans votre rapport. Ex\u233\'e9cutez ce programme et v\u233\'e9rifiez si son fonctionnement est correct. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop-238\shpbottom6932\shpbxcolumn\shpbxignore\shpleft0\shpright8385{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw559\pich478\picwgoal8385\pichgoal7170\pngblip
89504e470d0a1a0a0000000d494844520000022f000001de0803000000642c1b5700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000142149444154789ced9d5d9aa32a104059
8c9b71312cc51797d20f2c461773af60f0274443a96385e49c6f3a6d23818a39ad90c16ad303e463b40380a2c01790802f4f704076e1f00cc7c053b9c70fa2a7
fe0dcf6cdf556accf1a33cb41f3ad9acd0d543ec7fe276eb8331e14b3f1e84b63ef04467babe332eab83839837cff7baba8c105e377cd3b3be8cf93d79fc260f
278d2a9c38fe866fe66f3c450c45ad31f5f27c51fb5f6c570f27003bd4b3be68a862ea61bf6f209c7aecf87368ca9e89cd9f661a1f5bfd78f03463a7cb10da47
c731e6f8227c956aaa61f1e530fe2034f5bc3d3cd6fec431b8d0c6338fa99bfecff5feb2e5ccf289e1d1bf7d5de5051bce38c3c3f06fa8d80def92b55e99f154
d40f6d1c892d3c8406c62ec65e0255f71c421b4399629e5e44d0ed11638d2f87090398c73b60e6c7786cc61fc6b7da1ff7f95d9f7df1cf76d5b02f5c199ac7f7
bfbaaf1e35eaf00eca2f7a2136dfcfe35ce65bafcd346031d3b718c2f8bd5ec43c557c7c8db1e1cb61fc41b0ebf3cbe3a11b4ef2d55a9eae33ab27f65e89599c
d59ee15b7cb299de78796ce31b3d35d09959bbc5f925763877f4e86d7a11665df308f8d23f0e42b5d89edea5705e5ff9d2583b8f42c26faaff5d9e7ea96bb7d8
e34ba696bafe1053e77303b59dcf7071fc3287609e9ebb7811cbf34b872f87197f69e7edf95d3261c23a97fb0d33bff3e3fce8ef3178f01b616c30bc7dc9f825
0c20ba13e397b181761c69cd33e8697e1443082eb97611f3f4221e5f6dc5f8e50ce309dc1fe1bfb0d5f892bff0a9879f100d1b7eae11a724f5720c123f7f0993
93f01ef9b9877f37fdfc28fc62d761e632ee30625f169fbfd8b1c5f0c37c659b3e7f9942f0df7dcf53cc8f17f1e77faafd4c699c1f1d7aebf1458a79f5e1d807
1cc67b42f880175a16cdcb23f60187115f3e91e9b2b4245cc6e49fc95fc95d21e00b48c01790802f20015f40c22ff9f2dfc77161641736b3c74ff9629ed12d31
8bcf8ccff2df85cdecf15bbe24bf4eca2531b2749790872fd734b307be6896c4c8f0e513d1b6232d8991e1cb27a26d475a1223c3974f44db8eb42446862fff9a
b8a85982b61d69498c0c5ffe316e90a595de45a16d475a1223c39725e13e0c67c3f9c0d5c6f8f580fe16877169cf53655f21dcecd09af5c2a015d6b725bd6548
db8eb42446862feb4eeabe31ad33e379613c31746159a37d5e70e68ced7a37de1ce39760d7af2f3ae16e4457c9c2d0b6232d990e50b24bc897f9d2c7c5b0e3db
1f4e0c61d33caf827eac641ec3aa5bbb7187d7a125eeda76a425d3cb497609f9565f168baa9d7975455909d4bd589b3437802fcbb62f6c660f3d5ffc35a54a46
ac2b5f9cd91ad2723d7a6efbc266f6d0bb1e0d8f2eedfd713d0a9a74c6b98ddb7618ef3eb77d6133efdeca7fceeccb3cdef5452f06b361bcdbd9709a0975c773
485d3d576be55909b4ed484ba60394ec12f265be78592aff6f9a4f7b6c32daedc7fb698c7571ae6dc69c03c967738ecfebd66d5fd8ccee5b293ce63ab49784a9
6d475a1223c3976bd99a56cbd0b6232d8991e1cbb5b88337abaf617d5d5e337b94e10b7c0af80212f00524e00b48c01790802f20015f4002be80047c0109f802
12f00524e00b48c01790802f20015f4002be80845ff2e5eceab3ebd13e22727eca977439996ac9893f03aa4681211f467bb56e5aa27d44e41418f261b4edc097
b2d0b6035fca42db0e7c3983f4eec4f368db812f65f5ac6d07be94d5b3b61ddfe74bd754f3edf01712b259868f1b5c35de27df8e1f40dc7a51d2b6e3fb7ce97d
6284d77fa1f00c3e81871b7599f370707ef9025f96656e331b98b893900dca375bcf797ef0e50b7c097fe3f87a5fa6c731e38b79d1f30d68dbf17dbe583f7679
9125ec6c27d3f965f1ff26f852be2fe1a7eb7d99c72f8b8c52f852be2f95f5b9e32ebf1e3de647fde304f618bf347eebce0992b61ddfe78b4f1e67fb3165dc95
becc5d7973464942263be6d3857163c8ea4747db0e7cc9a46bbbf1af01e8a26d07be6412fee6487d490eba33b0beee3c05860c8ae00b48c01790802f20015f40
02be80047c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f802127ec997647d9b3ada4744ce4ff9c2fabad31418f261b457eba625da4744
4e81211f46db0e7c290b6d3bf0a52cb4edc0973390bf0e5f3ebb676d3bf0a5ac9eb5edc0973cac31fe0ec7b61f53d8850410e4afc3979d5e42daba7699698af3
0bbe6cf732a6c4c4177c11f4822ff822e9055ff025b397984635e4af73f8822ffbbd84c991ebfbbaee1eb324f2d7e1cb762fe37cfa91b4ae0bdbe4afc317dd5e
dea16d07be7c562fefd0b6035ff2b0b77f92fb1ad6d79da7c09041117c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f80212f00524e00b
48c01790802f20015f40c22ff992ac6f5347fb88c8f9295f585f779a02433e8cf66addb444fb88c82930e4c368db812f65a16d07be9485b61df872accb699c77
f3884fdb0e7c39dd29be1406bee08b845b42ee9aca98daf94d9fb76ecce7316fbdaeda86abd5eb4bd65ccb843b27f32e6cda76e04b269d1dde5a5bf75e8298f5
70de5ae3ab3663b17fc6460687b996abbabeab5c4e18da76e08bb8ab3a26b25b6c6d4755b7d6be69d0b7e1f274c1970bb827647fc77d65a6eed65b4f55ab47d5
81ced45b0d2e6a35264f177cb9805b42b67ea8e1b27c99abf6fefb860acb5a83547b27a105da76e08ba49336eb7a348e49a209ce8f4eb61a7cd4326d97992c44
db0e7cc9eda41986bc4fa3dc8df16e6563d5314b625b85cdbadaaae5bdcb1446db0e7cc9c4a7aa6b42d243af48e59eb696744355dbfb2f1be7d3fe6af3546daa
3556b2cca7efa28c90b7e65132b4edc097bbd89d5667a36d07bedc857b39ea95c2fabaf314183228822f20015f4002be80047c0109f80212f00524e00b48c017
90802f20015f4002be80047c0109f80212f00524e00b48f8255f92f56dea681f11393fe50bebeb4e5360c887d15ead9b96681f113905867c186d3bf0a52cb4ed
c097b2d0b6035fce9077cff39568db812f65f5ac6d07be94d5b3b61df8928735c6df711ff33184c40aedf801c4ad17256d3bf025bb97410c171213ce9d727ec1
97cd5e6272207cc197ec5ef0055f24bde00bbe64f612ae47f5b0e11373387cc197fd5ec2e4c8f57d5d77316b9d69bc42774e90b4edc097ec5ec6f9f498c9aeee
c276d8643e5d18778e5fb4d1b6035f3eab977768db812f79d8db3fc97d0debebce5360c8a008be80047c0109f80212f00524e00b48c01790802f20015f4002be
80047c0109f80212f00524e00b48c01790802f20e1977c49d6b7a9a37d44e4fc942facaf3b4d81211f467bb56e5aa27d44e41418f261b4edc097b2d0b6035fca
42db0e7c39d6e534cebb79c4a76d07be9cee145f0a035ff045c22d21774d654cedfca6cf5b37e6f398b75e576dc3d5eaf5256bae65c29d937917366d3bf02593
ce0e6fadad7b2f41cc7a386fadf1559bb1d83f632383c35ccb555ddf552e270c6d3bf045dc551d13d92db6b6a3aa5b6bdf34e8db7079bae0cb05dc13b2bfe3be
325377ebada7aad5a3ea4067eaad0617b51a93a70bbe5cc02d215b3fd47059becc557bff7d438565ad41aabd93d0026d3bf045d2499b753d1ac724d104e74727
5b0d3e6a99b6cb4c16a26d07bee476d20c43dea751eec678b7b2b1ea9825b1adc2665d6dd5f2de650aa36d07be64e253d53521e9a157a4724f5b4bbaa1aaedfd
978df3697fb579aa36d51a2b59e6d3775146c85bf32819da76e0cb5dec4eabb3d1b6035feec2bd1cf54a617ddd790a0c1914c11790802f20015f4002be80047c
0109f80212f00524e00b48c01790802f20015f4002be80047c0109f80212f00524fc922fc9fa3675b48f889c9ff285f575a72930e4c368afd64d4bb48f889c02
433e8cb61df85216da76e04b5968db812f67c8bbe7f94ab4edc097b27ad6b6035fcaea59db0e7cc9c31ae3efb88ff91842628576fc00e2d68b92b61df892ddcb
20860b8909e74e39bfe0cb662f313910bee04b762ff8822f925ef0055f327b09d7a37ad8f089391cbee0cb7e2f6172e4fabeaebb98b5ce345ea13b2748da76e0
4b762fe37c7acc645777613b6c329f2e8c3bc72fda68db812f9fd5cb3bb4edc0973ceced9fe4be86f575e729306450045f4002be80047c0109f80212f00524e0
0b48c01790802f20015f4002be80047c0109f80212f00524e00b48c01790f04bbe24ebdbd4d13e22727eca17d6d79da6c0900fa3bd5a372dd13e22720a0cf930
da76e04b5968db812f65a16d07be1ceb721ae7dd3ce2d3b6035f4e778a2f85812ff822e19690bba632a6767ed3e7ad1bf379cc5bafabb6e16af5fa9235d732e1
cec9bc0b9bb61df892496787b7d6d6bd9720663d9cb7d6f8aacd58ec9fb191c161aee5aaaeef2a971386b61df822eeaa8e89ec165bdb51d5adb56f1af46db83c
5df0e502ee09d9df715f99a9bbf5d653d5ea5175a033f556838b5a8dc9d3055f2ee09690ad1f6ab82c5fe6aabdffbea1c2b2d620d5de496881b61df822e9a4cd
ba1e8d63926882f3a393ad061fb54cdb65260bd1b6035f723b698621efd3287763bc5bd95875cc92d85661b3aeb66a79ef3285d1b6035f32f1a9ea9a90f4d02b
52b9a7ad25dd50d5f6fecbc6f9b4bfda3c559b6a8d952cf3e9bb2823e4ad79940c6d3bf0e52e76a7d5d968db812f77e15e8e7aa5b0beee3c05860c8ae00b48c0
1790802f20015f4002be80047c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f802127ec997647d9b3ada4744ce4ff9c2fabad31418f261
b457eba625da47444e81211f46db0e7c290b6d3bf0a52cb4edc09733e4ddf37c25da76e04b593d6bdb812f65f5ac6d07bee4618df177dcc77c0c21b1423b7e00
71eb4549db0e7cc9ee6510c385c48473a79c5ff065b397981c085ff025bb177cc117492ff8822f99bd84eb513d6cf8c41c0e5ff065bf973039727d5fd75dcc5a
671aafd09d13246d3bf025bb97713e3d66b2abbbb01d36994f17c69de3176db4edc097cfeae51dda76e04b1ef6f64f725fc3fabaf314183228822f20015f4002
be80047c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f80212f00524e00b48f8255f92f56dea5c18d985cdecf153be7cecfaba17bb84fc
7761337bfc962fc9afd387acdf4d770979f8724d337be08b66498c0c5f3e116d3bd2921819be7c22da76a42531327cd9eb721ae7997befa8d0b6232d990e49b2
4bc837fbb2ecf468f7aea9e54fd5b6232d990e43b24b08beec53d9165f566d5fd8cc1eb7f8d2359531b5f39b3e6fdd98cf63de5ae16fc337f691e16eef92852f
abb62f6c668f7b7cb1832bb6eebd0431ebe1bcb5c219dbf5ce8672ff8ced0c0ef8b26afbc266f6b8f17ae4bbaa6322bbc5d68aba598455b7d6ee362743db8eb4
647a2dc92e215fe68bbfe3be325377ebad753cdde287ced4db6de2cbaaed0b9bd9e3165fac1fbb38b92fce18b7d928beacdabeb0993d6ef1e531beedf3af4741
93ce385775cf35568d8ad0b6232d995e4bb24bc897f9d20c43dea751eede7877a8ec35f13963da2a14d755daa8380c6d3bd292e9b524bb847c972f7e8edc84a4
875e91ca3d6dade8c27cda8d639e309ff643dee76ae3ffbea712eda26d475a32bd9c649790eff2e534073e9c7b81b61d69498c0c5fae65675a2d40db8eb42446
862fd7e23647bd12585f97d7cc1e65f8029f02be80047c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f80212f00524e00b48c01790802f
20e1977c39bbfaec7a2e8cecc266f6f8295fd2e564aa25acaffb6cb457eba6253132d6ef7e22da76a42531327cf944b4ed484b6264f8f28968db9196c4c8f0e5
13d1b6232d8991e1cbbf479ec04edb8eb42446862fff9cd6e2cbb2ed0b9bd9e31e5f4252bad6f4d5f0609c35adbf9bde17a6d9c632f3d775a6c39765db1736b3
c73df9194cf3484a67eabe31ed983a6890c525c2e4e6af1bcaf165d9f685cdec718b2f73523ab3f8f632615066febac61e085ddb8eb42446862feb4ea6dbe597
bebcec3f2f7f9df3d5f065d9f685cdecf1d1be6ce6afb3e3ff7608b37c68db91964caf3ad925e4bb7c795c64ba17d7a3e713487efe3ace2fabb62f6c668f9bc6
bb7110bbf42524b07b3e7fe4e7afc39755db1736b3c78df369ebcf2f5e96caffeb37e6d379f9ebfa616acef568d9f685cdeca1f7799da467f2d7bd015f5690bf
ee0d5fef4b98e16cfe2d8967c85ff70ed6d7c127822f20015f4002be80047c0109f80212f00524e00b48c01790802f20015f4002be80047c0109f80212f00524
e00b48f8255fceae3ebb9e0b23bbb0993d7eca977439996a09ebeb3e1bedd5ba69498c8cf5bb9f88b61d69498c0c5f3e116d3bd2921819be7c22da76a4253132
7c493bf2378fd88dec3ff7a06d475a321d9c6497902ff545f77ca66d475a1223c3974fe96f89b61d69c97454925d42becb9736ccedc7fe5edf653fd1359531f5
ebac2f67d1b6232d8991e1cb564fafb3d62df0a9199a7f1395b61d69c9746c925d42bed7979759825ed7bd1a6d3bd292e9f526bb847caf2fef7ab5c3f5a8c217
213feb8bf56317872f42bed79737d7a3500b5fa47caf2f2fb3d6cd54d667afc317215fea8bcf026ff6e7d3b54f4b274e4d9785b61d69c9746c925d42becf1779
baffcbd1b6232d8991e1cb8aae1bff188032da76a42531327c59e1af41f52529e84ec1fababc66f6d0bf4a4049e00b48c01790802f20015f4002be80047c0109
f80212f00524e00b48c01790802f20015f4002be80047c0109f802127ec997b3abcfae47fb88c8f9295fd2e564aa25aac94d0e5260c887d15ead9b96681f1139
05867c186d3bf0a52cb4edc097b2d0b6035ff2685f0decaa69b8b773b7e3b568db812fe77a317786d0e3cb15e00bbe48b8c9976ecc5ab7ce4e17333678eeb828
69db812fd9bd842c1efd53763ace2f77bdf2ebb8c917b7ec0a5ff025a397707e5966a7c397bb5ef975dcebcb3a3b1dbedcf5caafe35e5fd6d9e9f0e5ae577e1d
f7fab2ce4ef7f85e5b9f01f1860992b61df892874f07dffa07bbc84e374ea3ab61b7cf107f872ef8720105867c186d3bf0a52cb4edc097b2607ddd790a0c1914
c11790802f20015f4002be80047c0109ff035e15ba98c87ccd590000000049454e44ae426082}}}}}

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrhair\brdrw1\brdrcf1\brsp29{\rtlch \ltrch\fs23\b\loch
3}{{\*\bkmkstart p3_06_07}{\*\bkmkend p3_06_07}\rtlch \ltrch\fs23\b\loch
.6.7\tab Exercices de Code Automodificateur}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans l'exercice de laboratoire pr\u233\'e9c\u233\'e9dent, vous avez d\u233\'e9couvert que le syst\u232\'e8me ne diff\u233\'e9rencie pas r\u233\'e9ellement les donn\u233\'e9es et les instructions en m\u233\'e9moire. Vous avez pu entrer des valeurs hexad\u233\'e9cimales et le processeur x86 a su les traiter comme une s\u233\'e9quence d'instructions ex\u233\'e9cutables. Il est \u233\'e9galement possible pour un programme de stocker les donn\u233\'e9es directement dans la m\u233\'e9moire, puis de les ex\u233\'e9cuter. Un programme est automodificateur s'il cr\u233\'e9e ou modifie certaines instructions qu'il ex\u233\'e9cute. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez le programme x86 suivant (EX6.x86) :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sub\tab ax, \tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov \tab [100],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a:\tab \tab mov \tab ax,\tab [100]\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab je\tab b}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
b:\tab \tab mov\tab ax, \tab 00C6}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [100],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 0710}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [102],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab A6A0}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [104],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [106],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 8007}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [108], ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 00E6}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [10A],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 0E10}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [10C],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 4}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [10E],\tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp \tab 100}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\loch
Ce programme }{\rtlch \ltrch\lang3084\loch
\u233\'e9crit le code suivant \u224\'e0 l'emplacement 100 et puis l'ex\u233\'e9cute :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 1000}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab put}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax, \tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax, \tab [1000]}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab put}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sub\tab ax, \tab ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [1000], ax}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab 0004\tab \tab \tab ;0004 est l'adresse de l'\u233\'e9tiquette a:}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\b\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Pour votre rapport de laboratoire :}{\rtlch \ltrch\lang3084\loch
 ex\u233\'e9cutez le programme EX7.x86 et v\u233\'e9rifiez s'il g\u233\'e9n\u232\'e8re le code ci-dessus \u224\'e0 partir de l\u8217\'92emplacement 100.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien que ce programme illustre le principe du code automodificateur, il ne fait pas grand chose d'utile. Comme r\u232\'e8gle g\u233\'e9n\u233\'e9rale, on n'utilise pas le code automodificateur dans la mani\u232\'e8re montr\u233\'e9e ci-dessus, o\u249\'f9 un segment \u233\'e9crit une certaine s\u233\'e9quence d'instructions et puis les ex\u233\'e9cute. Normalement, la plupart de ces programmes trouvent leur utilit\u233\'e9 dans la modification des instructions d\u233\'e9j\u224\'e0 existantes et souvent seulement les op\u233\'e9randes de ces instructions. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les codes automodificateurs sont rares dans les programmes en assembleur modernes. Ces programmes sont difficiles \u224\'e0 lire, \u224\'e0 comprendre et \u224\'e0 d\u233\'e9boguer et ils sont souvent instables. Les programmeurs s'en servent quand le pouvoir d'une certaine architecture de CPU fait d\u233\'e9faut pour r\u233\'e9soudre un certain probl\u232\'e8me. Les derniers processeurs de la famille Intel 80x86 n'ont pas de lacunes \u224\'e0 propos des instructions et de modes d'adressage, donc il est tr\u232\'e8s rare de trouver des programmes de ce genre}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s30\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs18\lang1033\kerning1{\rtlch\dbch\af15\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Certains virus ou certaines techniques de protection de code des programmes font usage de codes automodificateurs pour rendre difficile leur d\u233\'e9tection ou leur d\u233\'e9passement. }
}}
}{\loch
. Cependant, l'ensemble des instructions des processeurs x86 est tr\u232\'e8s faible, donc on y trouve certainement des exemples o\u249\'f9 les codes automodificateurs se r\u233\'e9v\u232\'e8lent utiles. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un bon exemple d'un d\u233\'e9faut architectural dans les processeurs x86 concerne les sous-routines. L'ensemble des instructions x86 ne fournit pas de moyen (direct) pour appeler une sous-routine ou revenir. Cependant, vous pouvez facilement simuler un appel et un retour en utilisant l'instruction }{\rtlch \ltrch\i\loch
jmp}{\loch
 et du code automodificateur. Consid\u233\'e9rez la sous-routine suivante qui se situe \u224\'e0 }{\rtlch \ltrch\lang3084\loch
l\u8217\'92adresse}{\loch
 100 en m\u233\'e9moire :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ; Convertisseur d'entiers en binaires.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ; Il attend une valeur enti\u232\'e8re non sign\u233\'e9e dans AX.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ; Il la convertit en une cha\u238\'eene de 0 et 1 et la stocke dans la }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ; m\u233\'e9moire \u224\'e0 partir de l'emplacement 1000h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab bx, \tab 1000\tab \tab ;Adresse de d\u233\'e9part de la cha\u238\'eene.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab cx, \tab 10\tab \tab ;16 (10h) chiffres dans un mot.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
a:\tab \tab mov\tab dx,\tab 0\tab \tab ;}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
Supposer}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 que le bit courant est 0.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab ax, \tab 8000\tab \tab ;Voir si le bit }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
le plus significatif}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 de}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;AX est 0 ou 1.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jb\tab b\tab \tab \tab ;Brancher si le bit }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
le plus significatif}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
de AX est \u224\'e0 0.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab dx, \tab 1\tab \tab ;Le contenu de AX est 1, le signaler.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
b:\tab \tab mov\tab [bx],\tab dx\tab \tab ;Stocker 0 ou 1 dans la prochaine }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\lang3084\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;adresse}{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
 pour les cha\u238\'eenes.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab bx,\tab 1\tab \tab ;Faire pointer BX \u224\'e0 l'emplacement }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;suivant de la cha\u238\'eene.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab add\tab ax,\tab ax\tab \tab ;AX = AX * 2 (op\u233\'e9ration de d\u233\'e9calage}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;\u224\'e0 gauche).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab sub\tab cx,\tab 1\tab \tab ;d\u233\'e9compte des 16 bits.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab cmp\tab cx,\tab 0\tab \tab ;R\u233\'e9p\u233\'e9ter 16 fois.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab ja\tab a\tab \tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;Retourner \u224\'e0 l'appelant via le code}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab 0\tab \tab \tab ;automodificateur.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La seule instruction qu'un programme modifie dans cette sous-routine est la toute derni\u232\'e8re instruction de saut. Celle-ci doit transf\u233\'e9rer le contr\u244\'f4le \u224\'e0 la premi\u232\'e8re instruction au-del\u224\'e0 du }{\rtlch \ltrch\i\loch
jmp}{\loch
 dans le code appelant qui transf\u232\'e8re le contr\u244\'f4le \u224\'e0 cette sous-routine ; l'appeleur doit }{\rtlch \ltrch\lang3084\loch
garder}{\loch
 l'adresse de retour dans l'op\u233\'e9rande de l'instruction }{\rtlch \ltrch\i\loch
jmp}{\loch
 du code ci-dessus. Il s'av\u232\'e8re que que l'instruction }{\rtlch \ltrch\i\loch
jmp}{\loch
 est \u224\'e0 l'adresse 120h (en }{\rtlch \ltrch\lang3084\loch
supposant}{\loch
 que le code commence \u224\'e0 l'adresse 100h). Par cons\u233\'e9quent, l'appeleur doit stocker l'adresse de retour \u224\'e0 l'emplacement 121h (l'op\u233\'e9rande de l'instruction }{\rtlch \ltrch\i\loch
jmp}{\loch
). Le "programme principal" suivant fait trois appels \u224\'e0 la sous-routine ci-dessus :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 000c\tab \tab ;Adresse de l'instruction BRK ci-}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li3600\ri0\lin3600\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;dessous.\tab \tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [121],\tab ax\tab \tab ;Stocker dans JMP comme adresse de }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab \tab ;retour.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 1234\tab \tab ;Convertir 1234h en binaire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab 100\tab \tab \tab ;"Appeler" la sous-routine.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab brk}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 0019\tab \tab ;Adresse de l'instruction BRK ci-}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li3600\ri0\lin3600\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;dessus.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [121],\tab ax\tab \tab ;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab fdeb\tab \tab ;Convertir 0FDEBh en binaire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab 100\tab \tab \tab ;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab brk}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax, \tab 26\tab \tab ;Adresse de l'instruction halt ci-}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li3600\ri0\lin3600\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
;dessous.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab [121],\tab ax\tab \tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab mov\tab ax,\tab 2345\tab \tab ;Convertir 2345h en binaire.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab jmp\tab 100}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab halt}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Chargez la sous-routine (EX7s.x86) dans SIMx86 et assemblez-la \u224\'e0 partir de }{\rtlch \ltrch\lang3084\loch
l\u8217\'92emplacement}{\loch
 100h. Ensuite, chargez le programme principal (EX7m.x86) dans la m\u233\'e9moire et assemblez-le \u224\'e0 partir de l'adresse z\u233\'e9ro. Passez \u224\'e0 l'\u233\'e9cran d'\u233\'e9mulation et v\u233\'e9rifiez que toutes les adresses de retour (0Ch, 19h et 26h) }{\rtlch \ltrch\lang3084\loch
sont}{\loch
 correctes. }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
galement, v\u233\'e9rifiez si l'adresse de retour doit \u234\'eatre \u233\'e9crite \u224\'e0 }{\rtlch \ltrch\lang3084\loch
l\u8217\'92emplacement}{\loch
 121h. Puis, ex\u233\'e9cutez le programme. Il ex\u233\'e9cutera une instruction }{\rtlch \ltrch\i\loch
brk}{\loch
 apr\u232\'e8s chacun des premiers deux appels. Cette instruction met temporairement le programme en pause. A ce point, vous pouvez passer \u224\'e0 l'\u233\'e9cran de la m\u233\'e9moire et regarder aux emplacements 1000-100F. Ils devraient contenir la conversion pseudo binaire de la valeur pass\u233\'e9e \u224\'e0 la sous-routine. Une fois v\u233\'e9rifi\u233\'e9 que cette conversion est correcte, retournez \u224\'e0 l'\u233\'e9cran d'\u233\'e9mulation et pressez le bouton Run pour continuer l'ex\u233\'e9cution du programme apr\u232\'e8s le }{\rtlch \ltrch\i\loch
brk}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\loch
d\u233\'e9crivez comment les codes automodificateurs fonctionnent et expliquez en d\u233\'e9tail comment le dernier code }{\rtlch \ltrch\lang3084\loch
l\u8217\'92utilise }{\loch
pour simuler des instructions d'appel et de retour. Expliquez les modifications n\u233\'e9cessaires pour faire passer le programme principal \u224\'e0 l'adresse 800h et la sous routine \u224\'e0 l'adresse 900h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour plus d'exp\u233\'e9riences : }{\loch
Modifiez le programme et la sous-routine de fa\u231\'e7on \u224\'e0 les faire fonctionner correctement aux adresses fournies ci-dessus (800h et 900h). }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_07}{\*\bkmkend p3_07}\rtlch \ltrch\fs23\b\loch
3.7\tab Projets de }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammation}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Note : vous devez \u233\'e9crire ces programmes \u224\'e0 l'aide du code du langage assembleur utilis\u233\'e9 dans le programme SIMx86. Incluez un document de sp\u233\'e9cification, un plan de test, un listing et un \u233\'e9chantillon de la sortie du programme.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
1)\tab Le jeu d'instructions du x86 n'inclut pas d'instruction de multiplication. Ecrivez un court programme qui lit deux valeurs de l'utilisateur et affiche leur produit (astuce : souvenez-vous qu'une multiplication }{\rtlch \ltrch\lang3084\loch
n\u8217\'92est rien de plus qu\u8217\'92une }{\loch
addition r\u233\'e9p\u233\'e9t\u233\'e9e).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
2) \tab Cr\u233\'e9ez une sous-routine appelable qui effectue la multiplication dans le probl\u232\'e8me ci-desus. Passez \u224\'e0 la sous-routine les deux valeurs \u224\'e0 multiplier via les registres AX et BX. Retournez le produit dans le registre CX. Utilisez la technique de code automodificateur d\u233\'e9crite \u224\'e0 la section 3.6.7.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
3)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme lisant deux nombres de deux bits dans les interrupteurs FFF0/FFF2 et FFF4/FFF6. En traitant ces bits comme des valeurs logiques, votre code devra calculer la somme sur trois bits de ces deux valeurs (un r\u233\'e9sultat de deux bits plus retenue). Utilisez les \u233\'e9quations logiques de l'additionneur complet (full adder) \u233\'e9tudi\u233\'e9 dans le chapitre pr\u233\'e9c\u233\'e9dent. }{\rtlch \ltrch\i\loch
N'effectuez pas une somme en utilisant simplement l'instruction add (x86)}{\loch
. Affichez le r\u233\'e9sultat dans les indicateurs situ\u233\'e9s aux adresses FFF8, FFFA et FFFC. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
4)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez une sous-routine qui attend une adresse dans BX, un compteur dans CX et une valeur dans AX. Elle devrait \u233\'e9crire CX copies de AX dans les mots successifs de la m\u233\'e9moire \u224\'e0 partir de l'adresse situ\u233\'e9e dans BX. }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme principal qui appelle cette sous-routine plusieurs fois avec des adresses diff\u233\'e9rentes. Utilisez le m\u233\'e9canisme de retour et d'appel de sous-routines utilis\u233\'e9 dans les exercices de laboratoire pour illustrer le principe du code automodificateur. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
5)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez la fonction logique g\u233\'e9n\u233\'e9rique du chapitre deux pour un processeur x86. Truc : }{\rtlch \ltrch\i\loch
add ax, ax }{\loch
fait un d\u233\'e9calage \u224\'e0 gauche de la valeur dans AX. Vous pouvez tester pour voir si le bit }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 est activ\u233\'e9 pour v\u233\'e9rifier si la valeur de AX est plus grande que 8000h. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
6)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme qui lit un num\u233\'e9ro de fonction g\u233\'e9n\u233\'e9rique \u224\'e0 partir d'une fonction \u224\'e0 quatre entr\u233\'e9es fournie par l'utilisateur et qui \u233\'e9crit le r\u233\'e9sultat dans les indicateurs (LEDs) tout en continuant \u224\'e0 lire de nouvelles valeurs depuis l'\u233\'e9tat des boutons d'interruption.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
7)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme lisant un tableau de mots \u224\'e0 partir de l'adresse 1000h et d'une longueur sp\u233\'e9cifi\u233\'e9e dans la valeur contenue dans CX. Le programme doit localiser la valeur maximale dans ce tableau. Affichez la valeur apr\u232\'e8s que celle-ci a \u233\'e9t\u233\'e9 lue dans le tableau. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
8)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme qui effectue une op\u233\'e9ration de compl\u233\'e9ment \u224\'e0 deux sur un tableau commen\u231\'e7ant \u224\'e0 l'adresse 1000h. CX devrait contenir le nombre de valeurs dans ce tableau. Basez-vous sur le fait que chaque \u233\'e9l\u233\'e9ment est un entier de deux octets. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
9)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme qui produit un "light show" en faisant clignoter alternativement les indicateurs du simulateur SIMx86. Il devrait effectuer ceci en \u233\'e9crivant un ensemble de valeurs aux adresses de ces indicateurs, en produisant un d\u233\'e9lai d'une certaine dur\u233\'e9e (par l'entremise d'une boucle vide), puis en r\u233\'e9p\u233\'e9tant l'op\u233\'e9ration ind\u233\'e9finiment. Les valeurs \u224\'e0 \u233\'e9crire aux adresses des indicateurs devront \u234\'eatre stock\u233\'e9es dans un tableau en m\u233\'e9moire ; le programme charge un nouveau jeu de donn\u233\'e9es \u224\'e0 chaque it\u233\'e9ration de la boucle. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
10)\tab }{\rtlch \ltrch\lang3084\loch
\u201\'c9}{\loch
crivez un programme simple qui trie les mots des emplacements 1000 \u224\'e0 10FF en ordre croissant. Vous pouvez utiliser un simple algorithme de tri par insertion. Le code Pascal pour un tel tri est :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab for i := 0 to n - 1 do}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab for j := i + 1 to n do}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab if(memory[i] > memory[j]) then}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab begin}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab \tab temp := memory[i];}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li2880\ri0\lin2880\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
memory[i] := memory[j];}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li2880\ri0\lin2880\rin0\fi720{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
memory[j] := temp;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab \tab \tab end;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
3.8\tab R}{{\*\bkmkstart p3_08}{\*\bkmkend p3_08}\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9sum\u233\'e9}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ecrire de bons programmes en langage assembleur demande de fortes connaissances du mat\u233\'e9riel sous-jacent. Conna\u238\'eetre simplement le jeu d'instructions est insuffisant. Pour produire les meilleurs programmes, vous devez comprendre comment le mat\u233\'e9riel les ex\u233\'e9cute et comment il acc\u232\'e8de aux donn\u233\'e9es. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des syst\u232\'e8mes modernes stockent les programmes et les donn\u233\'e9es dans le m\u234\'eame espace de m\u233\'e9moire (architecture Von Neumann). Comme la plupart des machines Von Neumann, un syst\u232\'e8me 80x86 ordinaire se sert de trois composantes majeures : l'}{\rtlch \ltrch\i\loch
unit\u233\'e9 centrale de traitement}{\loch
 (CPU), les }{\rtlch \ltrch\i\loch
entr\u233\'e9es/sorties}{\loch
 (E/S) et la }{\rtlch \ltrch\i\loch
m\u233\'e9moire}{\loch
. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
c}{\loch
omposants de }{\rtlch \ltrch\lang3084\loch
b}{\loch
ase du }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me"}{\rtlch \ltrch\i\loch
, }{\loch
paragraphe 3.1 }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les donn\u233\'e9es voyagent entre le CPU, les p\u233\'e9riph\u233\'e9riques d'E/S et la m\u233\'e9moire \u224\'e0 l'aide des }{\rtlch \ltrch\i\loch
bus syst\u232\'e8me}{\loch
. La famille 80x86 emploie trois bus majeurs : le }{\rtlch \ltrch\i\loch
bus }{\rtlch \ltrch\lang3084\i\loch
des dresses}{\loch
, le }{\rtlch \ltrch\i\loch
bus de donn\u233\'e9es }{\loch
et le }{\rtlch \ltrch\i\loch
bus de contr\u244\'f4le}{\loch
. Le bus }{\rtlch \ltrch\lang3084\loch
des adresses}{\loch
 porte un nombre binaire qui sp\u233\'e9cifie \u224\'e0 quel emplacement de m\u233\'e9moire ou \u224\'e0 quel port d'E/S le CPU souhaite acc\u233\'e9der ; le bus des donn\u233\'e9es transporte les donn\u233\'e9es entre le CPU et la m\u233\'e9moire ou entre le CPU et les E/S ; le bus de contr\u244\'f4le transmet d'importants signaux qui d\u233\'e9terminent si le CPU est en train de lire ou d'\u233\'e9crire des donn\u233\'e9es de m\u233\'e9moire ou s'il est en train d'acc\u233\'e9der \u224\'e0 un port d'E/S. Voir : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
b}{\loch
us }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me", paragraphe 3.1.1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
d}{\loch
onn\u233\'e9es", paragraphe 3.1.1.1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
a}{\loch
dresses", paragraphe 3.1.1.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ontr\u244\'f4le", paragraphe 3.1.1.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le nombre des lignes de donn\u233\'e9es dans le bus de donn\u233\'e9es d\u233\'e9termine la }{\rtlch \ltrch\i\loch
taille }{\loch
du processeur. Quand on dit qu'un processeur est un processeur }{\rtlch \ltrch\i\loch
de huit bits}{\loch
, on veut dire que son bus des donn\u233\'e9es contient huit lignes. Ceci ne veut pas dire que la taille effective du CPU est de huit bits. Voir : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
d}{\loch
onn\u233\'e9es" }{\rtlch \ltrch\lang3084\loch
et "La 'Taille' du processeur" au}{\loch
 paragraphe 3.1.1.1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le bus des adresses transmet un nombre binaire du CPU \u224\'e0 la m\u233\'e9moire ou aux entr\u233\'e9es/sorties pour s\u233\'e9lectionner un \u233\'e9l\u233\'e9ment particulier de la m\u233\'e9moire ou d'un port d'E/S. Le nombre de lignes dans ce bus \u233\'e9tablit le nombre maximal d'emplacements de m\u233\'e9moire auxquels le CPU peut acc\u233\'e9der. Des tailles typiques de bus des adresses dans les CPU 80x86 sont de 20, 24 et 32 bits. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us }{\rtlch \ltrch\lang3084\loch
des }{\rtlch \ltrch\lang3084\loch
a}{\rtlch \ltrch\lang3084\loch
dresses}{\loch
" au paragraphe 3.1.1.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les CPU 80x86 ont aussi un bus de contr\u244\'f4le contenant divers signaux n\u233\'e9cessaires \u224\'e0 des op\u233\'e9rations syst\u232\'e8me correctes. L'horloge syst\u232\'e8me, les signaux de contr\u244\'f4le lecture/\u233\'e9criture et les contr\u244\'f4les d'E/S ou de m\u233\'e9moire sont des exemples de plusieurs lignes apparaissant dans le bus de contr\u244\'f4le. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ontr\u244\'f4le" au paragraphe 3.1.1.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La m\u233\'e9moire est la partie de la machine o\u249\'f9 le CPU stocke les instructions des programmes et les donn\u233\'e9es. Dans les syst\u232\'e8mes bas\u233\'e9s sur la technologie 80x86, la m\u233\'e9moire appara\u238\'eet comme un tableau lin\u233\'e9aire d'octets, chacun avec sa propre adresse unique. L'adresse du premier octet en m\u233\'e9moire est 0 et l'adresse du dernier octet disponible est 2}{\rtlch \ltrch\super\loch
n}{\loch
-1, o\u249\'f9 }{\rtlch \ltrch\i\loch
n}{\loch
 est le nombre de lignes dans le bus des adresses. Les processeurs 80x86 stockent des mots en deux emplacements cons\u233\'e9cutifs de m\u233\'e9moire. L'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 du mot est l'adresse la plus basse des deux ; l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 suit imm\u233\'e9diatement l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 \u224\'e0 l'emplacement suivant sup\u233\'e9rieur. Quoiqu'un mot consomme deux adresses de m\u233\'e9moire, quand on se sert des mots, on utilise simplement l'adresse de l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
. Les doubles mots consomment quatre octets cons\u233\'e9cutifs en m\u233\'e9moire. L'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
 appara\u238\'eet \u224\'e0 l'adresse la plus basse des quatre, alors que l'octet }{\rtlch \ltrch\lang3084\loch
le plus significatif}{\loch
 est l'adresse la plus haute. "L'adresse" d'un double-mot est aussi l'adresse de l'octet }{\rtlch \ltrch\lang3084\loch
le moins significatif}{\loch
. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "La }{\rtlch \ltrch\lang3084\loch
m}{\loch
\u233\'e9moire" au paragraphe 3.1.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les CPU avec des bus de 16, 32 ou 64 bits organisent g\u233\'e9n\u233\'e9ralement la m\u233\'e9moire par banques. Une m}{\rtlch \ltrch\lang3084\loch
\u233\'e9moire de 16 bits en utilise deux de huit bits chacune, une m\u233\'e9moire de 32 bits en utilise quatre de huit bits chacune et les syst\u232\'e8mes de 64 bits en utilisent huit de huit bits chacune. Acc\u233\'e9der \u224\'e0 un mot ou \u224\'e0 un double-mot \u224\'e0 la m\u234\'eame adresse dans toutes les banques est plus rapide qu'acc\u233\'e9der \u224\'e0 un objet parsem\u233\'e9 entre deux adresses dans des banques diff\u233\'e9rentes. Par cons\u233\'e9quent, vous devriez aligner les mots pour qu'ils commencent \u224\'e0 une adresse paire et les double-mots pour qu'ils commencent \u224\'e0 une adresse multiple de quatre. Alors que vous pouvez placer des octets individuels \u224\'e0 n'importe quelle adresse. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "La }{\rtlch \ltrch\lang3084\loch
m}{\loch
\u233\'e9moire" au paragraphe 3.1.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les CPU 80x86 fournissent un espace de 16 bits s\u233\'e9par\u233\'e9 pour les adresses d'E/S permettant au CPU d'acc\u233\'e9der \u224\'e0 n'importe quel des 65 536 ports disponibles. Un p\u233\'e9riph\u233\'e9rique typique connect\u233\'e9 \u224\'e0 un IBM PC utilise seulement dix de ces lignes d'adresses, en limitant le syst\u232\'e8me \u224\'e0 seulement  1024 ports diff\u233\'e9rents. Le plus grand b\u233\'e9n\u233\'e9fice \u224\'e0 utiliser un espace d'adressage des E/S au lieu de mapper touts les p\u233\'e9riph\u233\'e9riques d'E/S en m\u233\'e9moire est que ces derni\u232\'e8res n'ont pas besoin d'empi\u233\'e9ter sur l'espace de m\u233\'e9moire adressable. Pour diff\u233\'e9rencier les E/S et les acc\u232\'e8s de m\u233\'e9moire, il y a des lignes de contr\u244\'f4le sp\u233\'e9ciales dans les bus de syst\u232\'e8me. Voir : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
b}{\loch
us de }{\rtlch \ltrch\lang3084\loch
c}{\loch
ontr\u244\'f4le", paragraphe 3.1.1.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
e}{\loch
ntr\u233\'e9es/}{\rtlch \ltrch\lang3084\loch
s}{\loch
orties", paragraphe 3.1.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'horloge syst\u232\'e8me contr\u244\'f4le la vitesse \u224\'e0 laquelle le processeur effectue des op\u233\'e9rations de base. La plupart des activit\u233\'e9s du CPU ont lieu dans le rebord montant ou tombant du tic de l'horloge. Les exemples incluent l'ex\u233\'e9cution des instructions syst\u232\'e8me, les acc\u232\'e8s \u224\'e0 la m\u233\'e9moire et le contr\u244\'f4le des \u233\'e9tats d'attente. Plus rapide est l'horloge syst\u232\'e8me, plus rapide sera l'ex\u233\'e9cution des programmes ; cependant, la m\u233\'e9moire devrait \u234\'eatre aussi rapide que l'horloge ou vous aurez besoin d'introduire des \u233\'e9tats d'attente, qui ralentissent dramatiquement le syst\u232\'e8me. Voir : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le \u171\'ab }{\rtlch \ltrch\lang3084\loch
t}{\loch
iming \u187\'bb du }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me", paragraphe 3.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "}{\rtlch \ltrch\lang3084\loch
L'}{\rtlch \ltrch\lang3084\loch
h}{\rtlch \ltrch\lang3084\loch
orloge}{\loch
 }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me", paragraphe 3.2.1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7 }{\loch
"}{\rtlch \ltrch\lang3084\loch
L'}{\rtlch \ltrch\lang3084\loch
a}{\rtlch \ltrch\lang3084\loch
cc\u232\'e8s}{\loch
 }{\rtlch \ltrch\lang3084\loch
m}{\loch
\u233\'e9moire et }{\rtlch \ltrch\lang3084\loch
l'}{\rtlch \ltrch\lang3084\loch
h}{\rtlch \ltrch\lang3084\loch
orloge}{\loch
 }{\rtlch \ltrch\lang3084\loch
s}{\loch
yst\u232\'e8me", paragraphe 3.2.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
tats }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
a}{\rtlch \ltrch\lang3084\loch
ttente}{\loch
", paragraphe 3.2.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plupart des programmes montrent }{\rtlch \ltrch\i\loch
une localisation des r\u233\'e9f\u233\'e9rences}{\loch
. Ou bien ils ont acc\u232\'e8s au m\u234\'eame emplacement de m\u233\'e9moire r\u233\'e9p\u233\'e9titivement et pendant une courte p\u233\'e9riode (}{\rtlch \ltrch\i\loch
localisation temporelle}{\loch
) ou bien ils acc\u232\'e8dent \u224\'e0 des emplacements de m\u233\'e9moire proches pendant une courte p\u233\'e9riode (}{\rtlch \ltrch\i\loch
localisation spatiale}{\loch
). Un syst\u232\'e8me de }{\rtlch \ltrch\i\loch
m\u233\'e9moire cache}{\loch
 exploite ce ph\u233\'e9nom\u232\'e8ne pour r\u233\'e9duire les \u233\'e9tats d'attente. Une petite m\u233\'e9moire cache peut r\u233\'e9aliser des moyennes d'acc\u232\'e8s allant jusqu'\u224\'e0 85-95% de probabilit\u233\'e9s de succ\u232\'e8s. Les }{\rtlch \ltrch\i\loch
syst\u232\'e8mes de cache \u224\'e0 deux niveaux}{\loch
 utilisent deux caches diff\u233\'e9rents (normalement un dans la puce du CPU et l'autre dans un chip s\u233\'e9par\u233\'e9}{\rtlch \ltrch\lang3084\loch
 sur la carte m\u232\'e8re),}{\loch
 pour atteindre des performances syst\u232\'e8me encore meilleures.  Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "La }{\rtlch \ltrch\lang3084\loch
m}{\loch
\u233\'e9moire }{\rtlch \ltrch\lang3084\loch
c}{\loch
ache", paragraphe 3.2.4}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les CPU comme ceux de la famille 80x86 divisent l'ex\u233\'e9cution d'une instruction machine en diverses \u233\'e9tapes s\u233\'e9par\u233\'e9es, chacune r\u233\'e9qu\u233\'e9rant un cycle d'horloge. Ces \u233\'e9tapes incluent le chargement d'un opcode d'une instruction, le d\u233\'e9codage de cet opcode, le chargement des op\u233\'e9randes de l'instruction, le calcul des adresses de m\u233\'e9moire, l'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire, l'ex\u233\'e9cution de l'op\u233\'e9ration de base et le stockage du r\u233\'e9sultat. Dans un CPU tr\u232\'e8s simpliste, une instruction simple peut prendre divers cycles d'horloge. La meilleure mani\u232\'e8re d'am\u233\'e9liorer les performances d'un CPU est d'ex\u233\'e9cuter plusieurs op\u233\'e9rations internes de fa\u231\'e7on simultan\u233\'e9e. Un simple sch\u232\'e8me est de mettre une instruction dans la queue de pr\u233\'e9chargement du CPU. Ceci vous permet}{\rtlch \ltrch\lang3084\loch
tra}{\loch
 de gagner du temps en d\u233\'e9doublant les opcodes et les op\u233\'e9rations de chargement et d\u233\'e9codage, ce qui permet souvent de diminuer de moiti\u233\'e9 le temps d'ex\u233\'e9cution. Une autre alternative est d'utiliser un pipeline d'instructions de fa\u231\'e7on \u224\'e0 pouvoir ex\u233\'e9cuter plusieurs instructions en parall\u232\'e8le. Finalement, on peut \u233\'e9galement concevoir un CPU superscalaire, qui ex\u233\'e9cute deux ou plus instructions simultan\u233\'e9ment. }{\rtlch \ltrch\lang3084\loch
Toutes c}{\loch
es techniques am\u233\'e9liorent l'ex\u233\'e9cution des programmes. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le processeur 886", paragraphe 3.3.10}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le processeur 8286", paragraphe 3.3.11}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7 }{\loch
"Le processeur 8486", paragraphe 3.3.12}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le processeur 8686", paragraphe 3.3.13}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que les processeurs superscalaires et munis de pipeline am\u233\'e9liorent grandement les performances, obtenir les meilleurs r\u233\'e9sultats requiert un traitement soigneux de la part du programmeur. Dans les programmes m\u233\'e9diocrement \u233\'e9crits, les blocages du pipeline et les effets de bord peuvent causer une perte majeure de performances. En \u233\'e9tant donc attentif \u224\'e0 l'organisation de la s\u233\'e9quence des instructions dans vos programmes vous pouvez permettre une ex\u233\'e9cution deux ou trois fois plus rapide. Voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le }{\rtlch \ltrch\lang3084\loch
p}{\loch
ipeline du 8486", paragraphe 3.3.12.1}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Blocages du }{\rtlch \ltrch\lang3084\loch
p}{\loch
ipeline", paragraphe 3.3.12.2}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Cache, }{\rtlch \ltrch\lang3084\loch
q}{\loch
ueue de }{\rtlch \ltrch\lang3084\loch
p}{\loch
r\u233\'e9chargement et le 8486", paragraphe 3.3.12.3}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-2127\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7 }{\loch
"Les }{\rtlch \ltrch\lang3084\loch
e}{\loch
ffets de }{\rtlch \ltrch\lang3084\loch
b}{\loch
ord sur 8486", paragraphe 3.3.12.4}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\tab \u183\'b7}{\loch
 "Le processeur 8686", paragraphe 3.3.13}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le syst\u232\'e8me d'entr\u233\'e9es/sorties est le troisi\u232\'e8me composant majeur des machines Von Neumann (la m\u233\'e9moire et le CPU constituent les deux autres). Il y a trois mani\u232\'e8res primaires pour transporter les donn\u233\'e9es entre le syst\u232\'e8me et le monde ext\u233\'e9rieur : les E/S mapp\u233\'e9es sur E/S, le mappage des E/S en m\u233\'e9moire et le DMA. Pour plus d'informations, voir :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Les }{\rtlch \ltrch\lang3084\loch
e}{\loch
ntr\u233\'e9es/}{\rtlch \ltrch\lang3084\loch
s}{\loch
orties (E/S)" au paragraphe 3.4}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour am\u233\'e9liorer les performances du syst\u232\'e8me, la plupart des ordinateurs modernes utilisent les interruptions pour alerter le CPU quand une op\u233\'e9ration d'E/S est }{\rtlch \ltrch\lang3084\loch
compl\u232\'e8te}{\loch
. Ceci permet au CPU de continuer avec d'autres traitements au lieu d'attendre qu'une op\u233\'e9ration d'E/S soit achev\u233\'e9e (sondages (polls) du port d'E/S). Pour plus d'informations sur les interruptions et les sondages des op\u233\'e9rations E/S voir : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Interruptions et }{\rtlch \ltrch\lang3084\loch
s}{\loch
ondages d'E/S" au paragraphe 3.5 }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p3_09}{\*\bkmkend p3_09}\rtlch \ltrch\fs23\b\loch
3.9\tab Questions}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1.\tab Quels sont les trois composants qui }{\rtlch \ltrch\lang3084\loch
constituent }{\loch
une machine Von Neumann ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2. \tab Quelle est }{\rtlch \ltrch\lang3084\loch
le propos}{\loch
 :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab a) Du bus syst\u232\'e8me}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab b) Du bus des adresses}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab c) Du bus de donn\u233\'e9es}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab \tab d) Du bus de contr\u244\'f4le}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
3. \tab Quel bus d\u233\'e9finit la "taille" du processeur ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
4. \tab Quel bus contr\u244\'f4le la quantit\u233\'e9 de m\u233\'e9moire }{\rtlch \ltrch\lang3084\loch
\u224\'e0 votre disposition}{\loch
 ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
5. \tab Est-ce que la taille du bus des donn\u233\'e9es contr\u244\'f4le la valeur maximale que le CPU peut traiter ? Expliquez. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
6. \tab Quelles sont les tailles des bus de donn\u233\'e9es des processeurs : }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab a) 8088\tab \tab b) 8086\tab \tab c) 80286\tab \tab d) 80386sx\tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab e) 80386\tab \tab f) 80486\tab \tab g) 80586/Pentium}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
7.\tab Quelles sont les tailles des bus des adresses des processeurs ci-dessus ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
8. \tab De combien de banques de m\u233\'e9moire disposent les processeurs ci-dessus ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
9.\tab Expliquez comment adresser un mot dans une m\u233\'e9moire adressable par octets (autrement dit dans quelle adresse). Expliquez comment stocker un double-mot. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
10.\tab Combien d'op\u233\'e9rations m\u233\'e9moire seront n\u233\'e9cessaires pour lire un mot dans l'adresse indiqu\u233\'e9e pour les processeurs suivants ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
Tableau 21 : Cycles de m\u233\'e9moire pour adresser des mots}
\par \trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb60\sa60\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
100}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
101}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
102}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
103}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
104}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
105}\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
8088}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
80286}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
80386}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
11. \tab R\u233\'e9p\u233\'e9tez l'exercice ci-dessus avec de doubles-mots :\tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\qc\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch \ltrch\b\loch
Tableau 22 : Cycles de m\u233\'e9moire pour adresser des doubles-mots}
\par \trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb60\sa60\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
100}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
101}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
102}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
103}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
104}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\qc\tx-142\tx709\sb60\sa60{\loch
105}\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
8088}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
80286}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\trowd\trql\trleft689\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1834\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2983\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4130\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5280\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6429\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7577\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8734\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120{\loch
80386}\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\intbl\tx-142\tx709\sb0\sa120\loch
\cell\row\pard\pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
12. \tab Expliquez quelles sont les meilleures adresses pour stocker des variables octet, mot et double-mot dans les processeurs 80286 et 80386. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
13. \tab Combien d'emplacements d'E/S diff\u233\'e9rents pouvez-vous adresser dans les puces 80x86 ? Et combien sont normalement disponibles dans un PC ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
14.\tab Quelle est la fonction de l'horloge syst\u232\'e8me ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
15.\tab Qu'est-ce qu'un cycle d'horloge ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
16. \tab Quelle est la relation entre fr\u233\'e9quence et p\u233\'e9riode d'horloge ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
17. \tab Combien de cycles d'horloge sont requis pour chacun des processeurs suivants pour lire un octet de la m\u233\'e9moire ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) 8088\tab \tab b) 8086\tab \tab c) 80486}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
18.\tab Qu'est-ce que cela signifique "temps d'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire" ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
19.\tab  Qu'est-ce que c'est un }{\rtlch \ltrch\i\loch
\u233\'e9tat d'attente}{\loch
 ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
20.\tab Si vous utilisez un 80486 aux vitesses d'horloge suivantes, combien d'\u233\'e9tats d'attente sont requis si vous disposez d'une }{\rtlch \ltrch\lang3084\loch
m\u233\'e9moire }{\loch
RAM de 80ns (sans consid\u233\'e9rer d'autres d\u233\'e9lais) ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab a) 20 Mhz\tab b) 25 Mhz\tab c) 33 Mhz\tab d) 50 Mhz\tab e) 100 Mhz}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
21.\tab Si votre CPU tourne \u224\'e0 50 Mhz, une m\u233\'e9moire vive de 20ns ne sera probablement assez rapide pour produire z\u233\'e9ro \u233\'e9tats d'attente. Expliquez pourquoi. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
22.\tab Puisqu'une m\u233\'e9moire }{\rtlch \ltrch\lang3084\loch
qui s\u8217\'92ex\u233\'e9cute }{\loch
en moins de 10ns est disponible, pourquoi tous les syst\u232\'e8mes ne fonctionnent }{\rtlch \ltrch\lang3084\loch
pas }{\loch
\u224\'e0 z\u233\'e9ro \u233\'e9tats d'attente ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
23. \tab Expliquez comment le cache op\u232\'e8re pour \u233\'e9conomiser quelques \u233\'e9tats d'attente. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
24. \tab Quelle est la diff\u233\'e9rence entre localisation de r\u233\'e9f\u233\'e9rence spatiale et }{\rtlch \ltrch\lang3084\loch
localisation de r\u233\'e9f\u233\'e9rence }{\loch
temporelle ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
25.\tab Expliquez o\u249\'f9 les localisations de r\u233\'e9f\u233\'e9rence spatiale et temporelle ont lieu dans le code Pascal suivant :}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\loch
\tab }{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
while i < 10 do begin}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab x := x * i;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab \tab i := i + 1;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1{\rtlch\dbch\af18\dbch\af18\hich\af9 \ltrch\fs18\loch\f9\loch
\tab end;}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
26. \tab Comment la m\u233\'e9moire cache am\u233\'e9liore-t-elle les performances d'une section de code qui faut usage de la localisation spatiale de r\u233\'e9f\u233\'e9rence ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
27.\tab Sous quelles circonstances le cache ne vous sera d'aucune utilit\u233\'e9 pour \u233\'e9conomiser des \u233\'e9tats d'attente ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
28.\tab Quel est le nombre effectif (en moyenne) d'\u233\'e9tats d'attente avec lesques les syst\u232\'e8mes suivants op\u232\'e8rent ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab a) 80% de fonctionnalit\u233\'e9 d'acc\u232\'e8s (hit ratio ou HT) au cache sans \u233\'e9tats d'attente, 10 \u233\'e9tats d'attente (WS) pour la m\u233\'e9moire, 0 WS pour le cache. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab b) 90% de fonctionnalit\u233\'e9 du cache ; 07 WS pour la m\u233\'e9moire ; 0 WS pour le cache.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab c) 95% de fonctionnalit\u233\'e9 du cache ; 10 WS pour la m\u233\'e9moire ; 1 WS pour le cache.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab \tab d) 50% de fonctionnalit\u233\'e9 du cache ; 02 WS pour la m\u233\'e9moire ; 0 WS pour le cache.}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
29. \tab Quelle est la finalit\u233\'e9 des syst\u232\'e8mes de cache \u224\'e0 deux niveaux ? Qu'\u233\'e9conomise}{\rtlch \ltrch\lang3084\loch
nt-ils}{\loch
 ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
30. \tab Quel est le nombre effectif d'\u233\'e9tats d'attente sur les syst\u232\'e8mes suivants ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li720\ri0\lin720\rin0\fi-567{\loch
\tab \tab a) 80% de fonctionnalit\u233\'e9 (hit ratio ou HR) d'acc\u232\'e8s au cache primaire sans \u233\'e9tats d'attente ; 95% de fonctionnalit\u233\'e9 d'acc\u232\'e8s au cache secondaire avez 2 WS ; 10 WS pour l'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire principale. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab b) 50% de HR pour le cache primaire sans \u233\'e9tats d'attente ; 98% de HR pour le cache secondaire avec 1 WS ; 5 WS pour l'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire principale. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab c) 95% de HR pour le cache primaire avec 1 WS ; 98% de HR pour le cache secondaire avec 4 WS ; 10 WS pour l'acc\u232\'e8s \u224\'e0 la m\u233\'e9moire principale. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-142\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
31. \tab Expliquez la fonction de }{\rtlch \ltrch\i\loch
l'unit\u233\'e9 d'interface des bus}{\loch
, de }{\rtlch \ltrch\i\loch
l'unit\u233\'e9 d'ex\u233\'e9cution}{\loch
 et de }{\rtlch \ltrch\i\loch
l'unit\u233\'e9 de contr\u244\'f4le}{\loch
. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
32. \tab Pourquoi }{\rtlch \ltrch\lang3084\loch
faut}{\loch
-il plus d'un cycle d'horloge pour ex\u233\'e9cuter une instruction ? Donnez certains exemples \u224\'e0 l'aide des mod\u232\'e8les x86. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
33. \tab Comment une queue de pr\u233\'e9chargement vous permet d'\u233\'e9conomiser du temps ? Donnez certains exemples. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
34. \tab Comment un pipeline vous permet (au moins par approximation) d'ex\u233\'e9cuter une instruction par cycle d'horloge ? Donnez un exemple. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
35. \tab Qu'est-ce qu'un effet de bord ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
36.\tab Qu'est-ce qui arrive sur un 8486 quand un effet de bord a lieu ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
37. \tab Comment pourriez-vous \u233\'e9liminer les effets de bord ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
38. \tab De quelle mani\u232\'e8re une instruction de saut (JMP/Jcc) affecte}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567{\loch
\tab a) la queue de pr\u233\'e9chargement ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
\tab b) le pipeline ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
39.\tab Quel est un blocage du pipeline ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
40. \tab }{\rtlch \ltrch\lang3084\loch
\u192\'c0}{\loch
 c\u244\'f4t\u233\'e9 des b\u233\'e9n\u233\'e9fices \u233\'e9vidents produits par la r\u233\'e9duction des \u233\'e9tats d'attente, comment un cache peut-il am\u233\'e9liorer les performances d'un syst\u232\'e8me \u224\'e0 pipeline ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
41. \tab Qu'est-ce que c'est une architecture Harvard ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
42.\tab De quelle mani\u232\'e8re un CPU superscalaire est-il cens\u233\'e9 acc\u233\'e9l\u233\'e9rer l'ex\u233\'e9cution ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
43.\tab Quelles sont les deux techniques principales que vous devriez utiliser sur un CPU superscalaire pour assurer une ex\u233\'e9cution de code aussi rapide que possible ? (Note : il s'agit de d\u233\'e9tails m\u233\'e9caniques ; les "meilleurs algorithmes" ne comptent pas ici).}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
44.\tab Qu'est-ce que c'est une interruption ? Comment am\u233\'e9liore-t-elle les performances du syst\u232\'e8me ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
45.\tab Qu'est-ce qu'on entend par "sondage" des E/S ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
46.\tab Quelle est la diff\u233\'e9rence entre les E/S mapp\u233\'e9es en m\u233\'e9moire et les E/S mapp\u233\'e9es sur les E/S ?}
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\loch
47. \tab Le DMA est un cas sp\u233\'e9cial d'E/S mapp\u233\'e9e en m\u233\'e9moire. Expliquez. }
\par \pard\plain \s29\dbch\af14\langfe1033\dbch\af14\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f10\fs21\lang1033\kerning1\tx-1985\tx709\li709\ri0\lin709\rin0\fi-567\loch

\par }