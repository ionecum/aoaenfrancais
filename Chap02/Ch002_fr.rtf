{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Footlight MT Light;}{\f5\froman\fprq2\fcharset0 Arial;}{\f6\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f7\froman\fprq2\fcharset0 Arial Narrow;}{\f8\froman\fprq2\fcharset0 Courier New;}{\f9\froman\fprq2\fcharset0 Lucida Console;}{\f10\froman\fprq2\fcharset0 Symbol;}{\f11\fnil\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f12\fnil\fprq2\fcharset0 Arial Narrow;}{\f13\fnil\fprq2\fcharset0 Lucida Console;}{\f14\fnil\fprq2\fcharset0 Footlight MT Light;}{\f15\fnil\fprq2\fcharset0 Times New Roman;}{\f16\fnil\fprq2\fcharset0 Courier New;}{\f17\fnil\fprq2\fcharset0 Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Normal;}
{\s1\sbasedon0\snext1\dbch\af11\langfe1033\dbch\af11\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f5\fs23\lang1033\b\kerning1 Heading 1;}
{\*\cs15\snext15 WW8Num2z0;}
{\*\cs16\snext16 WW8Num2z1;}
{\*\cs17\snext17 WW8Num2z2;}
{\*\cs18\snext18 WW8Num2z3;}
{\*\cs19\snext19 WW8Num2z4;}
{\*\cs20\snext20 WW8Num2z5;}
{\*\cs21\snext21 WW8Num2z6;}
{\*\cs22\snext22 WW8Num2z7;}
{\*\cs23\snext23 WW8Num2z8;}
{\*\cs24\snext24 WW8Num3z0;}
{\*\cs25\snext25 Default Paragraph Font;}
{\*\cs26\sbasedon25\snext26\super Footnote Characters;}
{\*\cs27\sbasedon25\snext27 Page Number;}
{\*\cs28\snext28\super Footnote Anchor;}
{\*\cs29\snext29\super Endnote Anchor;}
{\*\cs30\snext30 Endnote Characters;}
{\s31\sbasedon0\snext32\dbch\af11\langfe1081\dbch\af11\afs28\qj\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\loch\f6\fs28\lang1033\kerning1 Heading;}
{\s32\sbasedon0\snext32\dbch\af11\langfe1033\dbch\af11\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f5\fs35\lang1033\b\kerning1 Text Body;}
{\s33\sbasedon32\snext33\dbch\af11\langfe1033\dbch\af11\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f5\fs35\lang1033\b\kerning1 List;}
{\s34\sbasedon0\snext34\dbch\af11\langfe1081\dbch\af11\afs24\ai\qj\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\loch\f4\fs24\lang1033\i\kerning1 Caption;}
{\s35\sbasedon0\snext35\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Index;}
{\s36\sbasedon0\snext36\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f8\fs18\lang1033\kerning1 Code;}
{\s37\sbasedon0\snext37\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi284\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text Indent 3;}
{\s38\sbasedon0\snext38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Text Body Indent;}
{\s39\sbasedon0\snext39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1 Footnote;}
{\s40\sbasedon0\snext40\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4986\tqr\tx9972\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Header and Footer;}
{\s41\sbasedon0\snext41\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Footer;}
{\s42\sbasedon0\snext42\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text 2;}
{\s43\sbasedon0\snext43\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\li0\ri0\lin0\rin0\fi142\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1 Body Text Indent 2;}
{\s44\sbasedon0\snext44\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Table Contents;}
{\s45\sbasedon44\snext45\dbch\af11\langfe1081\dbch\af11\afs20\ab\qc\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\b\kerning1 Table Heading;}
{\s46\sbasedon0\snext46\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1 Frame Contents;}
}{\*\generator LibreOffice/6.4.4.2$Windows_X86_64 LibreOffice_project/3d775be2011f3886db32dfd395a6a6d1ca2630ff}{\info{\title Organisation Syst\u232\'e8me                           Chapitre trois}{\author Danilo Renzi}{\creatim\yr2002\mo6\dy2\hr5\min4}{\author Danilo Renzi}{\revtim\yr2021\mo5\dy26\hr19\min9}{\printim\yr2021\mo4\dy15\hr21\min39}}{\*\userprops{\propname VarBarreEtat}\proptype30{\staticval VarBarreEtat}{\propname VarEtat}\proptype30{\staticval VarEtat}}\deftab851
\hyphauto1\viewscale170
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s41\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af14\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8419\shpright8640\shpz36{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s41\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af14\langfe1081\afs20 \ltrch\cs27\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 37}}}
\par \pard}}}

\par }\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1800\margr1800\margt1440\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s41\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\li0\ri360\lin0\rin360\fi0\ltrpar\rtlch\dbch\af14\langfe1081\afs20 \ltrch\cf0\fs22\lang1033\kerning1\loch
{\shp{\*\shpinst\shpwr2\shpwrk0\shpbypara\shpbyignore\shptop1\shpbottom298\shpbxcolumn\shpbxignore\shpleft8419\shpright8640\shpz36{\sp{\sn shapeType}{\sv 202}}{\sp{\sn dxWrapDistLeft}{\sv 0}}{\sp{\sn dxWrapDistRight}{\sv 0}}{\sp{\sn dyWrapDistTop}{\sv 0}}{\sp{\sn dyWrapDistBottom}{\sv 0}}{\sp{\sn posrelv}{\sv 2}}{\sp{\sn posrelh}{\sv 2}}{\sp{\sn posh}{\sv 3}}{\sp{\sn fillColor}{\sv 4278190079}}{\sp{\sn dxTextLeft}{\sv 0}}{\sp{\sn dyTextTop}{\sv 0}}{\sp{\sn dxTextRight}{\sv 0}}{\sp{\sn dyTextBottom}{\sv 0}}{\sp{\sn lineColor}{\sv 0}}{\sp{\sn lineWidth}{\sv 9525}}{\shptxt\s41\dbch\af11\langfe1081\dbch\af11\afs20\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\qj\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0{\rtlch\dbch\af14\langfe1081\afs20 \ltrch\cs27\cf0\fs22\lang1033\kerning1
{\field{\*\fldinst  PAGE }{\fldrslt 37}}}
\par \pard}}}

\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s32\dbch\af11\langfe1033\dbch\af11\afs20\qr\widctlpar\hyphpar0\brdrt\brdrs\brdrw10\brdrcf1\brsp20\ltrpar\cf0\loch\f5\fs35\lang1033\b\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{\rtlch \ltrch\fs33\loch
Alg\u232\'e8bre bool\u233\'e9enne                                            Chapitre 2}
\par \pard\plain \s0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\sb0\sa120\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\loch\f7\loch
Les circuits logiques sont la base fonctionnelle des syst\u232\'e8mes informatiques modernes. Pour avoir une id\u233\'e9e pr\u233\'e9cise du fonctionnement d'un ordinateur, il faut comprendre la logique num\u233\'e9rique et l'alg\u232\'e8bre bool\u233\'e9enne. }
\par \pard\plain \s0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\loch\f7\loch
Ce chapitre fournit seulement une introduction de base \u224\'e0 l'alg\u232\'e8bre de Boole. Ce sujet seul est souvent l'objet d'un livre. Ici, nous }{\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\lang3084\loch\f7\loch
n\u8217\'92allons traiter que les }{\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\loch\f7\loch
concepts qui feront l'objet des chapitres \u224\'e0 suivre. }
\par \pard\plain \s0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs21\loch\f7\loch

\par \pard\plain \s1\dbch\af11\langfe1033\dbch\af11\afs20\ql\widctlpar\hyphpar0\keepn\ltrpar\cf0\loch\f5\fs23\lang1033\b\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p2_0}{\*\bkmkend p2_0}\loch
2.0\tab Vue d'Ensemble du Chapitre}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La logique bool\u233\'e9enne est \u224\'e0 la base de l'informatique et des ordinateurs binaires modernes. Vous pouvez repr\u233\'e9senter tout algorithme ou tout circuit d'ordinateur \u224\'e0 l'aide d'un syst\u232\'e8me d'\u233\'e9quations bool\u233\'e9ennes. Ce chapitre offre une br\u232\'e8ve introduction \u224\'e0 l'alg\u232\'e8bre bool\u233\'e9enne, aux tables de v\u233\'e9rit\u233\'e9, \u224\'e0 la repr\u233\'e9sentation canonique, aux fonctions bool\u233\'e9ennes et \u224\'e0 leur simplification ; il }{\rtlch \ltrch\lang3084\loch
fait l\u8217\'92object aussi de la }{\loch
conception logique, des circuits combinatoires et s\u233\'e9quentiels,}{\rtlch \ltrch\lang3084\loch
 ainsi que les }{\loch
\u233\'e9quivalences entre le mat\u233\'e9riel et le logiciel. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le mat\u233\'e9riel est particuli\u232\'e8rement important pour ceux qui veulent concevoir des circuits \u233\'e9lectroniques ou qui veulent \u233\'e9crire des programmes pour les manipuler. Mais, m\u234\'eame }{\rtlch \ltrch\lang3084\loch
si vous avez une autre orientation}{\loch
, cette introduction est encore importante, car vous pouvez }{\rtlch \ltrch\lang3084\loch
tirer parti de cette information pour }{\loch
optimiser certaines expressions conditionnelles complexes \u224\'e0 l'int\u233\'e9rieur d'instructions comme IF, WHILE, etc. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La section de ce chapitre sur la r\u233\'e9duction (optimisation) des fonctions logiques, se sert des }{\rtlch \ltrch\i\loch
diagrammes Veitch}{\loch
, }{\rtlch \ltrch\lang3084\loch
plus connus comme }{\rtlch \ltrch\i\loch
tables de Karnaugh}{\loch
. Les techniques d'optimisation utilis\u233\'e9es dans ce chapitre consistent \u224\'e0 r\u233\'e9duire le nombre de }{\rtlch \ltrch\lang3084\i\loch
termes}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1
 }{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Anglicisation d'usage commun pour se r\u233\'e9f\u233\'e9rer aux \u233\'e9l\u233\'e9ments des \u233\'e9quations bool\u233\'e9ennes et qui a strictement le m\u234\'eame sens que le mot fran\u231\'e7ais \u171\'ab terme \u187\'bb, n.d.t. }
}}
}{\loch
 dans une fonction bool\u233\'e9enne. }{\rtlch \ltrch\lang3084\loch
Il faut comprendre que certaines}{\loch
 }{\rtlch \ltrch\lang3084\loch
personnes }{\loch
consid\u232\'e8rent les techniques d'optimisation obsol\u232\'e8tes, car, selon eux, r\u233\'e9duire le nombre de termes dans une op\u233\'e9ration n'est pas aussi important qu'autrefois. Ce chapitre utilise la m\u233\'e9thode des tables de Karnaugh comme un exemple d'optimisation bool\u233\'e9enne, non comme une technique \u224\'e0 employer r\u233\'e9guli\u232\'e8rement. Si vous avez un int\u233\'e9r\u234\'eat r\u233\'e9el pour la conception et l'optimisation des circuits, vous devriez consulter un ouvrage d\u233\'e9di\u233\'e9 \u224\'e0 ce }{\rtlch \ltrch\lang3084\loch
sujet}{\loch
, afin de disposer de meilleures techniques. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien que ce }{\loch
chapitre }{\rtlch \ltrch\lang3084\loch
soit}{\loch
 principalement orient\u233\'e9 sur le mat\u233\'e9riel, gardez \u224\'e0 l'esprit que beaucoup de concepts utilis\u233\'e9s dans ce livre utilisent des \u233\'e9quations bool\u233\'e9ennes (fonctions logiques). Egalement, certains exercices de programmation qu'on verra plus loin }{\rtlch \ltrch\lang3084\loch
demandent}{\loch
 ces connaissances. Par cons\u233\'e9quent, }{\rtlch \ltrch\lang3084\loch
vous devez \u234\'eatre capable de travailler avec des fonctions bol\u233\'e9ennes avant}{\loch
 de proc\u233\'e9der \u224\'e0 la lecture des chapitres }{\rtlch \ltrch\lang3084\loch
suivants}{\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s0\dbch\af11\langfe1081\dbch\af11\afs20\alang1081\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f4\fs22\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p2_01}{\*\bkmkend p2_01}\rtlch\dbch\af12\dbch\af12\hich\af7 \ltrch\fs23\b\loch\f7\loch
2.1\tab Alg\u232\'e8bre bool\u233\'e9enne}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'alg\u232\'e8bre bool\u233\'e9enne est un syst\u232\'e8me math\u233\'e9matique d\u233\'e9ductif, bas\u233\'e9 sur les valeurs 0 (faux) et 1 (vrai). Un op\u233\'e9rateur binaire "}{\rtlch \ltrch\lang3084\loch
\u9702\'3f}{\loch
" d\u233\'e9fini sur cet ensemble de valeurs accepte deux entr\u233\'e9es bool\u233\'e9ennes et produit un seul r\u233\'e9sultat bool\u233\'e9en. Par exemple, l'op\u233\'e9rateur AND accepte deux valeurs d'entr\u233\'e9e et produit un r\u233\'e9sultat de sortie (le AND }{\rtlch \ltrch\lang3084\loch
logique }{\loch
de}{\rtlch \ltrch\lang3084\loch
s}{\loch
 deux valeurs). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour tout syst\u232\'e8me d'alg\u232\'e8bre donn\u233\'e9, il y a certains postulats initiaux (ou axiomes) que le syst\u232\'e8me doit suivre. On peut d\u233\'e9duire des r\u232\'e8gles additionnelles, des th\u233\'e9or\u232\'e8mes et d'autres propri\u233\'e9t\u233\'e9s \u224\'e0 partir de l'ensemble des postulats de base. }{\rtlch \ltrch\lang3084\loch
Les syst\u232\'e8mes d\u8217\'92alg\u232\'e8bre bool\u233\'e9enne }{\loch
emploie}{\rtlch \ltrch\lang3084\loch
nt}{\loch
 souvent les postulats suivants :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600\sb0\sa120{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Cl\u244\'f4ture. }{\rtlch \ltrch\lang3084\loch
Le syst\u232\'e8me est dit }{\rtlch \ltrch\lang3084\i\loch
ferm\u233\'e9}{\rtlch \ltrch\lang3084\loch
 par rapport \u224\'e0 un op\u233\'e9rateur binaire si, pour chaque paire de valeurs bool\u233\'e9ennes, il produit un r\u233\'e9sultat bool\u233\'e9en. Par exemple, le AND est ferm\u233\'e9 parce qu'il accepte seulement deux op\u233\'e9randes bool\u233\'e9ens et produit seulement un r\u233\'e9sultat bool\u233\'e9en. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600\sb0\sa120{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Commutativit\u233\'e9}{\rtlch \ltrch\lang3084\loch
. Un op\u233\'e9rateur binaire "\u9702\'3f}{\loch
" est dit }{\rtlch \ltrch\i\loch
commutatif}{\loch
 si A }{\rtlch \ltrch\lang3084\loch
\u9702\'3f }{\loch
B = B }{\rtlch \ltrch\lang3084\loch
\u9702\'3f A pour toutes les valeurs bool\u233\'e9ennes possibles de A et B. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Associativit\u233\'e9}{\rtlch \ltrch\lang3084\loch
. Un op\u233\'e9rateur binaire "\u9702\'3f}{\loch
" est }{\rtlch \ltrch\i\loch
associatif}{\loch
 si}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\loch
\tab \tab \tab \tab (A }{\rtlch \ltrch\lang3084\loch
\u9702\'3f }{\loch
B) }{\rtlch \ltrch\lang3084\loch
\u9702\'3f C = A \u9702\'3f (B \u9702\'3f C)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab Pour toutes les valeurs bool\u233\'e9ennes de A, B et C. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Distributivit\u233\'e9}{\rtlch \ltrch\lang3084\loch
. Deux op\u233\'e9rateurs binaires "\u9702\'3f}{\loch
" et % sont }{\rtlch \ltrch\i\loch
distributifs}{\loch
 si}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\loch
\tab \tab \tab \tab A }{\rtlch \ltrch\lang3084\loch
\u9702\'3f (B % C) = (A \u9702\'3f B) % (A \u9702\'3f C)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab pour toutes les valeurs bool\u233\'e9ennes de A, B et C.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Indentit\u233\'e9}{\rtlch \ltrch\lang3084\loch
. Une valeur bool\u233\'e9enne I est dite identit\u233\'e9 d'un op\u233\'e9rateur "\u9702\'3f}{\loch
" }{\rtlch \ltrch\lang3084\loch
si }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600{\loch
\tab \tab \tab \tab A }{\rtlch \ltrch\lang3084\loch
\u9702\'3f I = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx1080\li1080\ri0\lin1080\rin0\fi-600\sb0\sa120{\rtlch \ltrch\lang3084
\u8226\'95}{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch \ltrch\lang3084\i\loch
Inverse}{\rtlch \ltrch\lang3084\loch
. Une valeur bool\u233\'e9enne I est dite l'inverse d'un op\u233\'e9rateur "\u9702\'3f}{\loch
" }{\rtlch \ltrch\lang3084\loch
si }{\loch
A }{\rtlch \ltrch\lang3084\loch
\u9702\'3f I = B et B }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\lang3084\loch\f10\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 A (c.\u224\'e0.d. que B est la valeur oppos\u233\'e9e de A). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour nos buts}{\loch
, l'alg\u232\'e8bre bool\u233\'e9enne sera bas\u233\'e9e sur le jeu suivant d'op\u233\'e9rateurs et }{\rtlch \ltrch\lang3084\loch
de }{\loch
valeurs :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les deux valeurs possibles d'un syst\u232\'e8me bool\u233\'e9en sont 0 et 1. Souvent, on appellera ces valeurs }{\rtlch \ltrch\i\loch
faux}{\loch
 et }{\rtlch \ltrch\i\loch
vrai }{\loch
(respectivement).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le symbole "}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
" repr\u233\'e9sente l'op\u233\'e9rateur AND. Par exemple, A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 B est le r\u233\'e9sultat d'un ET logique entre les valeurs bool\u233\'e9ennes de A et B. Ce livre omettra ce symbole toutes les fois qu'il utilisera des variables d'une seule lettre ; par exemple AB repr\u233\'e9sente une op\u233\'e9ration AND entre les variables A et B (ceci pourra \u233\'e9galement s'appeler le }{\rtlch \ltrch\lang3084\i\loch
produit}{\rtlch \ltrch\lang3084\loch
 de A et de B). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le symbole "+" repr\u233\'e9sente l'op\u233\'e9rateur OR ; par exemple, A + B est le r\u233\'e9sultat d'un OU logique entre les valeurs bool\u233\'e9ennes A et B (ceci sera appel\u233\'e9 \u233\'e9galement la }{\rtlch \ltrch\lang3084\i\loch
somme}{\rtlch \ltrch\lang3084\loch
 de A et de B). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le }{\rtlch \ltrch\lang3084\i\loch
compl\u233\'e9ment}{\rtlch \ltrch\lang3084\loch
 logique qu'on appelle aussi }{\rtlch \ltrch\lang3084\i\loch
n\u233\'e9gation}{\rtlch \ltrch\lang3084\loch
 ou tout simplement NOT, est un op\u233\'e9rateur unaire. Ce livre utilisera l'apostrophe pour indiquer cette n\u233\'e9gation. Par exemple, A' repr\u233\'e9sente le NOT de A. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si dans une expression bool\u233\'e9enne apparaissent plusieurs op\u233\'e9rateurs diff\u233\'e9rents, le r\u233\'e9sultat de cette expression d\u233\'e9pend de la }{\rtlch \ltrch\lang3084\i\loch
priorit\u233\'e9 }{\rtlch \ltrch\lang3084\loch
de ces derniers. On utilisera l'ordre suivant de pr\u233\'e9c\u233\'e9dence (du plus haut au plus bas) pour les op\u233\'e9rateurs : ( ), NOT, AND, OR. Les op\u233\'e9rateurs AND et OR ont une associativit\u233\'e9 de gauche \u224\'e0 droite. Si deux op\u233\'e9randes avec les m\u234\'eames priorit\u233\'e9s sont adjacentes, il faut les \u233\'e9valuer de gauche \u224\'e0 droite. Alors que l'op\u233\'e9ration NOT a une associativit\u233\'e9 de droite, m\u234\'eame si cela n'a pratiquement aucun effet, \u233\'e9tant donn\u233\'e9 que NOT est un op\u233\'e9rateur unaire. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
On utilise \u233\'e9galement l'ensemble suivant de postulats : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
P1\tab L'alg\u232\'e8bre bool\u233\'e9enne est ferm\u233\'e9e pour les op\u233\'e9rations de type AND, OR et NOT. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx851\li851\ri0\lin851\rin0\fi-851\sb0\sa120{\rtlch \ltrch\lang3084\loch
P2\tab L'\u233\'e9l\u233\'e9ment identit\u233\'e9 par rapport \u224\'e0 }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 est 1 et }{\rtlch \ltrch\lang3084\loch
 par rapport \u224\'e0 + est 0. Il n'y a pas d'\u233\'e9l\u233\'e9ment identitaire par rapport au NOT. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
P3\tab Les op\u233\'e9rateurs }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 et + sont commutatifs.  }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi-720\sb0\sa120{\rtlch \ltrch\lang3084\loch
P4\tab }{\loch
+ et }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 sont distributifs l'un par rapport \u224\'e0 l'autre.  Donc, A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 (B + C) = (A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
B) + (A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 C) et A + (B }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 C) = (A + B) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 (A + C).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx720\li720\ri0\lin720\rin0\fi-720\sb0\sa120{\loch
P5\tab Pour toute valeur A, il existe une valeur A' telle que A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 A' = 0 et A + A' = 1. Cette valeur est le compl\u233\'e9ment logique ou NOT de A. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx720\li720\ri0\lin720\rin0\fi-720\sb0\sa120{\rtlch \ltrch\lang3084\loch
P6\tab Les op\u233\'e9rateurs }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 et + sont associatifs. C'est-\u224\'e0-dire, (A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 B) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 C = A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 (B }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
C) et (A + B) + C = A + (B + C). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous pouvez prouver tous les autres th\u233\'e9or\u232\'e8mes en utilisant ces postulats. Ce livre ne s'attardera pas sur des preuves formelles, cependant, c'est une bonne id\u233\'e9e de vous familiariser avec certains th\u233\'e9or\u232\'e8mes importants. En voici quelques uns :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
Th1 : \tab A + A = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
Th2 : \tab A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 A = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th3 : \tab A + 0 = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th4 : \tab A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
1 = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th5 : \tab A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 0 = 0}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th6 : \tab A }{\rtlch \ltrch\lang3084\loch
+}{\loch
 1 = 1}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th7 : \tab (A + B)' = A' }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 B'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th8 : \tab (A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
B)' = A' + B' }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th9 : \tab A + A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
B = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th10 : \tab A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
(A + B) = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th11 : \tab A + A'B = A + B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th12 : \tab A' }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
(A + B') = A'B'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th13 : \tab AB + AB' = A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th14 : \tab (A' + B') }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
(A' + B) = A'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
Th15 : \tab A + A' = 1}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Th16 : \tab A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
A' = 0  }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les th\u233\'e9or\u232\'e8mes sept et huit sont connus comme les }{\rtlch \ltrch\lang3084\i\loch
lois de DeMorgan}{\rtlch \ltrch\lang3084\loch
, d'apr\u232\'e8s le math\u233\'e9maticien qui les a d\u233\'e9couverts. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ces th\u233\'e9or\u232\'e8mes apparaissent \u171\'ab en paires \u187\'bb. Chaque paire (par exemple, Th1 et Th2, Th3 et Th4) constitue un exemple de l'important }{\rtlch \ltrch\lang3084\i\loch
principe de dualit\u233\'e9}{\rtlch \ltrch\lang3084\loch
 dans l'alg\u232\'e8bre bool\u233\'e9enne. Toute expression valide qu'on cr\u233\'e9e \u224\'e0 l'aide des postulats et des th\u233\'e9or\u232\'e8mes, reste valide si l'on interchange les op\u233\'e9rateurs et les constantes qui paraissent dans l'expression. Sp\u233\'e9cialement, si dans une expression, on interchange }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
et + et on permute les 0 et les 1, on obtient une expression ob\u233\'e9issant \u224\'e0 toutes les r\u232\'e8gles de l'alg\u232\'e8bre bool\u233\'e9enne. Ceci ne veut pas dire que deux expressions ob\u233\'e9issant au principe de dualit\u233\'e9 comportent les m\u234\'eames valeurs, mais simplement que les deux expressions sont valides. Par cons\u233\'e9quent, }{\rtlch \ltrch\lang3084\loch
il s\u8217\'92agit d\u8217\'92une mani\u232\'e8re facile de g\u233\'e9n\u233\'e9rer un deuxi\u232\'e8me th\u233\'e9or\u232\'e8me pour toute chose qu\u8217\'92on }{\loch
d\u233\'e9montre. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien qu\u8217\'92ici, nous n\u8217\'92allons pas }{\loch
prouver les th\u233\'e9or\u232\'e8mes bool\u233\'e9ens, on les utilisera pour montrer comment deux \u233\'e9quations peuvent \u234\'eatre identiques. Ce }{\rtlch \ltrch\lang3084\loch
proc\u233\'e9d\u233\'e9 est important \u224\'e0 l\u8217\'92heure de }{\loch
produire des }{\rtlch \ltrch\i\loch
repr\u233\'e9sentations canoniques}{\loch
 d'une expression, ou quand on doit tout simplement simplifier quelque chose. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw10\brdrcf1\brsp20{{\*\bkmkstart p2_02}{\*\bkmkend p2_02}\rtlch \ltrch\fs23\b\loch
2.2\tab Fonctions bool\u233\'e9ennes et }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ables de }{\rtlch \ltrch\fs23\lang3084\b\loch
v}{\rtlch \ltrch\fs23\b\loch
\u233\'e9rit\u233\'e9}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une expression bool\u233\'e9enne est une s\u233\'e9quence de 0, de 1 et de litt\u233\'e9raux s\u233\'e9par\u233\'e9s par des op\u233\'e9rateurs. Un litt\u233\'e9ral est un nom de variable }{\rtlch \ltrch\i\loch
prim\u233\'e9}{{\super \rtlch \ltrch\super\i\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\i\kerning1\loch
Prim\u233\'e9}{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
 veut dire simpelemnt qu'il est suivi d'un apostrophe, donc, il est soumis \u224\'e0 une n\u233\'e9gation, n.d.t.}
}}
}{\loch
 (ni\u233\'e9) ou }{\rtlch \ltrch\i\loch
non prim\u233\'e9}{\loch
. }{\rtlch \ltrch\lang3084\loch
Pour ce qui nous concerne, }{\loch
tout nom de variable est un caract\u232\'e8re alphab\u233\'e9tique isol\u233\'e9. Une fonction bool\u233\'e9enne est une expression bool\u233\'e9enne sp\u233\'e9cifique ; nous donnerons g\u233\'e9n\u233\'e9ralement aux fonctions bool\u233\'e9ennes le nom "F" avec un \u233\'e9ventuel indice. Par exemple, consid\u233\'e9rons le bool\u233\'e9en suivant :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
F}{\rtlch \ltrch\sub\loch
0}{\loch
 = AB + C}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cette fonction calcule le AND entre A et B et effectue un OR entre le r\u233\'e9sultat }{\rtlch \ltrch\lang3084\loch
de AB }{\loch
et C. Si A = 1, B = 0 et C = 1, alors F}{\rtlch \ltrch\sub\loch
0}{\loch
 retourne }{\rtlch \ltrch\lang3084\loch
la valeur un }{\loch
 (1 }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
 0 + 1 = 1).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un autre moyen de repr\u233\'e9senter une fonction bool\u233\'e9enne, c'est \u224\'e0 travers d'une }{\rtlch \ltrch\i\loch
table de v\u233\'e9rit\u233\'e9}{\loch
. Le chapitre pr\u233\'e9c\u233\'e9dent a utilis\u233\'e9 ces tables pour repr\u233\'e9senter les fonctions AND et OR. Ces tables prennent les formes :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 6 : Table de v\u233\'e9rit\u233\'e9 pour AND}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
AND}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
et}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 7 : Table de v\u233\'e9rit\u233\'e9 pour OR}
\par \trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
OR}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\trowd\trql\trleft1985\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3260\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx4891\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6521\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour des op\u233\'e9rateurs binaires et deux valeurs d'entr\u233\'e9e, cette forme de table de v\u233\'e9rit\u233\'e9 est tr\u232\'e8s naturelle et pratique. Cependant, reconsid\u233\'e9rez la fonction bool\u233\'e9enne F}{\rtlch \ltrch\sub\loch
0}{\loch
 ci-dessus. Cette fonction}{\rtlch \ltrch\lang3084\loch
 comporte }{\rtlch \ltrch\i\loch
trois}{\loch
 valeurs d'entr\u233\'e9e et non deux. Par cons\u233\'e9quent, on ne peut pas utiliser le format de la table de v\u233\'e9rit\u233\'e9 qu'on vient de voir. Heureusement, c'est }{\rtlch \ltrch\lang3084\loch
\u233\'e9galement}{\loch
 facile de construire des tables pour trois ou plus variables. L'exemple suivant montre un moyen de le faire pour des fonctions de trois ou quatre variables : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 8 : Table de v\u233\'e9rit\u233\'e9 pour une fonction de trois variables}
\par \trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmgf\clvertalc\cellx2822\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
F = AB + C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
BA}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalc\cellx2822\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
00}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
01}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
10}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
11}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmgf\clvertalt\cellx1349\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb240\sa0{\loch
C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalt\cellx1349\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 9 : Table de v\u233\'e9rit\u233\'e9 pour une fonction de quatre variables}
\par \trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmgf\clvertalc\cellx2822\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
F = AB + CD}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
BA}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalc\cellx2822\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
00}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
01}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
10}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
11}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmgf\clvertalt\cellx1349\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb240\sa0\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb180\sa0{\loch
DC}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
00}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalt\cellx1349\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
01}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalt\cellx1349\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
10}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvmrg\clvertalt\cellx1349\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2823\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4300\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5775\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7252\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8735\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb60\sa60\loch
\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
11}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb60\sa60{\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb240\sa120{\loch
Dans les tables 8 et 9, les quatre colonnes repr\u233\'e9sentent les quatre possibles combinaisons de z\u233\'e9ros et de uns pour A et B (B est le bit fort ou le bit le plus \u224\'e0 gauche, A est le bit faible ou le bit le plus \u224\'e0 droite). De m\u234\'eame, les quatre lignes dans la seconde table repr\u233\'e9sentent toutes les combinaisons pour les variables C et D. Ici aussi, D repr\u233\'e9sente le bit fort et C le bit faible. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
La table 10 illustre une autre mani\u232\'e8re de repr\u233\'e9senter des tables de v\u233\'e9rit\u233\'e9. Cette forme }{\rtlch \ltrch\lang3084\loch
pr\u233\'e9sente}{\loch
 deux avantages sur les deux formes pr\u233\'e9c\u233\'e9dentes - la table est plus facile \u224\'e0 remplir et fournit une repr\u233\'e9sentation compacte pour deux fonctions ou plus. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Notez \u233\'e9galement que les tables ci-dessus fournissent trois fonctions de trois variables. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien qu'on }{\rtlch \ltrch\lang3084\loch
peut}{\loch
 cr\u233\'e9er une vari\u233\'e9t\u233\'e9 infinie de fonctions bool\u233\'e9ennes, elles ne sont pas toutes uniques. Par exemple, F = A et F = AA sont deux fonctions diff\u233\'e9rentes. En vertu du deuxi\u232\'e8me th\u233\'e9or\u232\'e8me, cependant, }{\rtlch \ltrch\lang3084\loch
il est facile de montrer que deux fonctions sont \u233\'e9quivalentes quand elles produisent }{\loch
exactement la m\u234\'eame sortie pour toutes les combinaisons d'entr\u233\'e9e. Si vous \u233\'e9tablissez le nombre des variables d'entr\u233\'e9e, il y a un nombre fini de fonctions uniques possibles. Par exemple, avec deux entr\u233\'e9es, il y a 16 fonctions uniques et avec trois, il y en a 256. Etant donn\u233\'e9 }{\rtlch \ltrch\i\loch
n}{\loch
 variables d'entr\u233\'e9e, il y a pour ces }{\rtlch \ltrch\i\loch
n }{\loch
valeurs 2}{\rtlch \ltrch\super\lang3084\loch
(2}{\rtlch \ltrch\super\loch
^n)}{\loch
 (deux \u224\'e0 la puissance deux \u224\'e0 la puissance }{\rtlch \ltrch\i\loch
n}{\loch
) fonctions bool\u233\'e9ennes uniques. Pour deux valeurs on a 2 ^ (2}{\rtlch \ltrch\super\loch
2}{\loch
) = 2}{\rtlch \ltrch\super\loch
4 }{\loch
= 16 diff\u233\'e9rentes fonctions uniques. Avec trois variables d'entr\u233\'e9e, on a 2 ^ (2}{\rtlch \ltrch\super\loch
3}{\loch
) = 2 }{\rtlch \ltrch\super\loch
8}{\loch
 ou 256 fonctions possibles. Avec quatre variables, on a 2 ^ (2}{\rtlch \ltrch\super\loch
4}{\loch
) = 65536 fonctions uniques diff\u233\'e9rentes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Table 10 : Un autre format pour les tables de v\u233\'e9rit\u233\'e9}
\par \trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
B}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
A}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
F = ABC}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
F = AB + C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
F = A + BC}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\row\pard\trowd\trqc\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1461\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2936\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4412\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5888\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7365\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8848\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb240\sa120{\loch
Quand on a affaire seulement \u224\'e0 16 fonctions bool\u233\'e9ennes, il est assez facile de nommer chaque fonction. La table suivante liste les 16 fonctions bool\u233\'e9ennes possibles de deux variables d'entr\u233\'e9e accompagn\u233\'e9ees par certains noms communs : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 11 : les 16 possibles fonctions de deux variables}
\par \trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
No. de fonction}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Description}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Z\u233\'e9ro ou D\u233\'e9sactiv\u233\'e9. Retourne toujours 0, peu importe les entr\u233\'e9es A et B.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
NOR (NOT(A OR B) = (A + B)'}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
2}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Inhibition = BA' (B NOT A). Equivaut aussi \u224\'e0 B > A ou A < B.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
3}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
NOT A. Ignore B et retourne A'.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
4}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Inhibition. AB' (A NOT B). Equivaut aussi \u224\'e0 A > B ou B < A.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
5}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
NOT B. Retourne B' et ignore A. }\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
6}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
OR exclusif (XOR) = A }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\lang3084\loch\f10\loch
\u61637\'3f}{\rtlch \ltrch\lang3084\loch
 B. Equivalent aussi \u224\'e0 A }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\lang3084\loch\f10\loch
\u61625\'3f}{\rtlch \ltrch\lang3084\loch
 B.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
7}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
NAND (NOT(A AND B)) = (A }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
B)'}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
8}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
AND = A}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\loch
B. Retourne A AND B.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
9}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Equivalence=(A=B). Connu aussi comme NOR exclusif (NOT OR exclusif)}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
10}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Copier B. Retourne la valeur de B et ignore A. }\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
11}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Implication, A implique B = B + A' (si A, alors B). Equivalent \u224\'e0 A }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\lang3084\loch\f10\loch
\u61619\'3f}{\rtlch \ltrch\lang3084\loch
 B.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
12}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Copier A. Retourne la valeur de A et ignore B. }\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
13}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Implication, B implique A = A + B' (si B, alors A). Equivalent \u224\'e0 B }{\rtlch\dbch\af17\dbch\af17\hich\af10 \ltrch\lang3084\loch\f10\loch
\u61619\'3f}{\rtlch \ltrch\lang3084\loch
 A.}\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
14}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
OR = A + B. Retourne A OR B. }\cell\row\pard\trowd\trql\trleft580\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2138\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8027\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc{\rtlch \ltrch\lang3084\loch
15}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl{\rtlch \ltrch\lang3084\loch
Un ou Activ\u233\'e9. Retourne toujours 1, peu importe les entr\u233\'e9es A et B.}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb240\sa120{\loch
Avec plus de }{\rtlch \ltrch\lang3084\loch
deux valeurs d'entr\u233\'e9e, il y a trop de fonctions pour que chacune ait un nom ou une description. Par cons\u233\'e9quent, on fait r\u233\'e9f\u233\'e9rence \u224\'e0 ces fonctions par leur num\u233\'e9ro, au lieu que par un nom. Par exemple, F}{\rtlch \ltrch\sub\lang3084\loch
8}{\rtlch \ltrch\lang3084\loch
 constitue le AND entre A et B pour des fonctions \u224\'e0 deux entr\u233\'e9es, et F}{\rtlch \ltrch\sub\lang3084\loch
14}{\rtlch \ltrch\lang3084\loch
 correspond \u224\'e0 l'op\u233\'e9ration OR. Sans doute, le seul probl\u232\'e8me est de d\u233\'e9terminer le num\u233\'e9ro de fonction. Par exemple, \u233\'e9tant donn\u233\'e9 la fonction de trois variables F = AB + C, quel est le num\u233\'e9ro de fonction correspondant ? Ce nombre est facile \u224\'e0 calculer si l'on regarde la table de v\u233\'e9rit\u233\'e9 de cette fonction (voir la table 14). Si on consid\u232\'e8re les valeurs de A, B et C comme des bits dans un nombre binaire, avec C repr\u233\'e9sentant le bit fort et A le bit faible, ils produisent les nombres binaires de la plage z\u233\'e9ro \u224\'e0 sept. Il y a un r\u233\'e9sultat de z\u233\'e9ro ou de un associ\u233\'e9 \u224\'e0 chacune de ces cha\u238\'eenes de bits. Si on construit une valeur binaire en pla\u231\'e7ant le r\u233\'e9sultat de la fonction dans la position des bits sp\u233\'e9cifi\u233\'e9e par A, B et C, le nombre binaire obtenu est le num\u233\'e9ro de fonction. Consid\u233\'e9rez la table de v\u233\'e9rit\u233\'e9 pour F = AB + C :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
CBA : \tab \tab 7\tab 6\tab 5\tab 4\tab 3\tab 2\tab 1\tab 0}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
F = AB + C :\tab 1\tab 1\tab 1\tab 1\tab 1\tab 0\tab 0\tab 0}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si on traite la valeur de la fonction F comme un nombre binaire, il produit la valeur F8}{\rtlch \ltrch\sub\lang3084\loch
16}{\rtlch \ltrch\lang3084\loch
 ou 248}{\rtlch \ltrch\sub\lang3084\loch
10}{\rtlch \ltrch\lang3084\loch
. On note d'habitude les num\u233\'e9ros de fonction en d\u233\'e9cimal. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ceci permet \u233\'e9galement de d\u233\'e9duire pourquoi il y a 2 ^ (2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
) fonctions pour }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables : si vous avez }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables, il y a 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
 bits dans le num\u233\'e9ro de fonction. Si vous avez }{\rtlch \ltrch\lang3084\i\loch
m}{\rtlch \ltrch\lang3084\loch
 bits, il y a 2}{\rtlch \ltrch\super\lang3084\loch
m}{\rtlch \ltrch\lang3084\loch
 valeurs diff\u233\'e9rentes. Par cons\u233\'e9quent, pour }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 valeurs d'entr\u233\'e9e il y a m = 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
 bits possibles et 2}{\rtlch \ltrch\super\lang3084\loch
m}{\rtlch \ltrch\lang3084\loch
 ou 2 ^(2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
) fonctions possibles. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_03}{\*\bkmkend p2_03}\rtlch \ltrch\fs23\b\loch
2.3\tab Manipulation alg\u233\'e9brique }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\lang3084\b\loch
xpressions}{\rtlch \ltrch\fs23\b\loch
 bool\u233\'e9ennes}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
On peut transformer une expression bool\u233\'e9enne en une autre expression \u233\'e9quivalente en appliquant les postulats et les th\u233\'e9or\u232\'e8mes de l'alg\u232\'e8bre bool\u233\'e9enne. Ceci est important si vous avez besoin de mettre une expression donn\u233\'e9e en }{\rtlch \ltrch\lang3084\i\loch
forme canonique}{\rtlch \ltrch\lang3084\loch
 (une forme standardis\u233\'e9e),ou bien si vous avez besoin de minimiser le nombre de litt\u233\'e9raux (variables prim\u233\'e9es et non prim\u233\'e9es) ou de }{\loch
termes}{\rtlch \ltrch\lang3084\loch
 dans une expression. Minimiser des }{\loch
termes}{\rtlch \ltrch\lang3084\loch
 et des expressions peut \u234\'eatre important parce que les circuits \u233\'e9lectriques consistent souvent en de composantes individuelles qui r\u233\'e9alisent chaque terme ou litt\u233\'e9ral d'une expression donn\u233\'e9e. Minimiser l'expression \u233\'e9quivaut \u224\'e0 utiliser moins de composantes \u233\'e9lectriques et, par cons\u233\'e9quent, \u224\'e0 r\u233\'e9duire le co\u251\'fbt du syst\u232\'e8me. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Malheureusement, il n'y a pas de r\u232\'e8gles fixes d'optimisation. Tout comme les }{\loch
d}{\rtlch \ltrch\lang3084\loch
\u233\'e9monstrations math\u233\'e9matiques, ces transformations demandent de l'exp\u233\'e9rience pour \u234\'eatre r\u233\'e9alis\u233\'e9es avec facilit\u233\'e9. N\u233\'e9anmoins, quelques exemples peuvent montrer le principe :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
ab + ab' + a'b\tab \tab = a(b+b') + a'b\tab \tab \tab Postulat 4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab = a}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + a'b\tab \tab \tab P5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + a'b\tab \tab \tab Th\u233\'e9or\u232\'e8me 4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + a'b + 0\tab \tab \tab Th3}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + a'b + aa'\tab \tab \tab P5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + b(a+a')\tab \tab \tab P4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
b}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1\tab \tab \tab P5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + b\tab \tab \tab \tab Th4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(a'b + a'b' + b')'\tab = (a'(b+b') + b')'\tab \tab P4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = (a'+b')'\tab \tab \tab P5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = ( (ab)')'\tab \tab \tab Th8}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = ab\tab \tab \tab \tab D\u233\'e9finition du NOT}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
b(a+c) + ab' + bc' + c = ba + bc + ab' + bc' + c\tab P4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a(b+b') + b(c+c') + c\tab \tab P4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
a}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
b}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + c\tab \tab \tab P5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab = a + b + c\tab \tab \tab Th4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien que cet exemple fait usage des transformations alg\u233\'e9briques pour simplifier une expression bool\u233\'e9enne, on peut se servir des m\u234\'eames transformations pour d'autres buts. Par exemple, la prochaine section d\u233\'e9crit la forme canonique des expressions bool\u233\'e9ennes. }{\rtlch \ltrch\lang3084\loch
Les}{\loch
 formes }{\rtlch \ltrch\lang3084\loch
canoniques }{\loch
sont rarement optimales. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_04}{\*\bkmkend p2_04}\rtlch \ltrch\fs23\b\loch
2.4\tab Les Formes canoniques}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Etant donn\u233\'e9 qu'il existe un nombre fini de fonctions bool\u233\'e9ennes uniques pour }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables d'entr\u233\'e9e, on peut cependant obtenir, avec ce m\u234\'eame nombre de variables, un nombre infini d'expressions logiques possibles ; il y aura certes une infinit\u233\'e9 d'expressions \u233\'e9quivalentes (c'est-\u224\'e0-dire, qui produisent le m\u234\'eame r\u233\'e9sultat \u224\'e0 partir des m\u234\'eames entr\u233\'e9es). Afin d'\u233\'e9liminer plus facilement les confusions \u233\'e9ventuelles, les concepteurs logiques se servent de la forme canonique (ou standardis\u233\'e9e) pour sp\u233\'e9cifier une fonction bool\u233\'e9enne. Pour toute fonction possible, il existe une forme canonique unique. Ceci rend le traitement de ces fonctions beaucoup plus clair. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Actuellement, il existe plusieurs types de formes canoniques. Ici, on en d\u233\'e9crira seulement deux et on emploiera seulement le premier, qu'on nomme }{\rtlch \ltrch\lang3084\i\loch
somme des minterms}{\rtlch \ltrch\lang3084\loch
 ; le second est nomm\u233\'e9 }{\rtlch \ltrch\lang3084\i\loch
produit des maxterms}{\rtlch \ltrch\lang3084\loch
. A l'aide du principe de dualit\u233\'e9, la conversion entre ces deux formes canoniques est tr\u232\'e8s facile. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un }{\rtlch \ltrch\lang3084\i\loch
term}{\rtlch \ltrch\lang3084\loch
 est une variable, ou bien un produit (AND) de divers litt\u233\'e9raux. Par exemple, si on a deux variables, A et B, il y a huit }{\rtlch\ai \ltrch\lang3084\i\loch
terms}{\rtlch \ltrch\lang3084\loch
 possibles : A, B, A', B', A'B', A'B, AB' et AB. Pour trois variables on a 26 }{\rtlch\ai \ltrch\lang3084\i\loch
terms}{\rtlch \ltrch\lang3084\loch
 diff\u233\'e9rents : A, B, C, A', B', C', A'B', A'B, AB', AB, A'C', A'C, AC', AC, B'C', B'C, BC', BC, A'B'C', AB'C', A'BC', ABC', A'B'C, AB'C, A'BC et ABC. Comme vous voyez, si le nombre de variables augmente, le nombre de }{\rtlch\ai \ltrch\lang3084\i\loch
terms}{\rtlch \ltrch\lang3084\loch
 augmente exponentiellement. Un }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
 est un produit contenant exactement }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 litt\u233\'e9raux. Par exemple, les }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 de deux variables sont A'B', AB', A'B et AB. De m\u234\'eame, les }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 de trois variables sont A'B'C', AB'C', A'BC', ABC', A'B'C, AB'C, A'BC et ABC. En g\u233\'e9n\u233\'e9ral, il y a 2}{\rtlch \ltrch\super\lang3084\loch
n}{\rtlch \ltrch\lang3084\loch
 }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 pour }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables. L'ensemble des possibles }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 est tr\u232\'e8s facile \u224\'e0 g\u233\'e9n\u233\'e9rer, puisqu'il correspond \u224\'e0 la s\u233\'e9quence des nombres binaires : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Table 12 : Minterms pour trois variables d'entr\u233\'e9e}
\par \trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
Equivaleut binaire (CBA)}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
Minterm }\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
000}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A'B'C'}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
001}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
AB'C'}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
010}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A'BC'}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
011}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
ABC'}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
100}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A'B'C}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
101}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
AB'C}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
110}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A'BC}\cell\row\pard\trowd\trql\trleft2532\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4298\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx6083\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
111}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
ABC}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
On peut sp\u233\'e9cifier }{\rtlch \ltrch\lang3084\i\loch
toute}{\rtlch \ltrch\lang3084\loch
 fonction bool\u233\'e9enne avec une somme (OR) de minterms. Etant donn\u233\'e9 la fonction }{\loch
\line }{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\sub\lang3084\loch
248 }{\rtlch \ltrch\lang3084\loch
= AB + C, la forme canonique \u233\'e9quivalente est ABC + A'BC + AB'C + A'B'C + ABC'. Alg\u233\'e9briquement, on peut montrer que c'est \u233\'e9quivalent \u224\'e0 ce qui suit : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
ABC + A'BC + AB'C + A'B'C + ABC' \tab \tab = BC(A+A') + B'C(A+A') + ABC' }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab \tab \tab \tab = BC}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
B'C}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + ABC'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab \tab \tab = C(B+B') + ABC'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab \tab \tab = C + ABC'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab \tab \tab = C + AB}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Certainement, la forme canonique n'est pas la forme optimale. N\u233\'e9anmoins, une fonction repr\u233\'e9sent\u233\'e9e selon la somme des }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 pr\u233\'e9sente un grand avantage : sa table de v\u233\'e9rit\u233\'e9 est tr\u232\'e8s facile \u224\'e0 g\u233\'e9n\u233\'e9rer. Et c'est \u233\'e9galement tr\u232\'e8s simple d'en g\u233\'e9n\u233\'e9rer l'\u233\'e9quation logique depuis la table de v\u233\'e9rit\u233\'e9. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour construire une table de v\u233\'e9rit\u233\'e9 \u224\'e0 partir d'une forme canonique, convertir simplement chaque }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 en sa valeur binaire, en substituant 1 aux variables non prim\u233\'e9es et 0 aux variables prim\u233\'e9es. Puis, placer un "1" \u224\'e0 la position correspondante (sp\u233\'e9cifi\u233\'e9e par la valeur binaire du }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
) de la table de v\u233\'e9rit\u233\'e9 : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
1) Convertir les }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 en son \u233\'e9quivalent binaire : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab F}{\rtlch \ltrch\sub\lang3084\loch
248 }{\rtlch \ltrch\lang3084\loch
= CBA + CBA' + CB'A + CB'A' +C'BA}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab       = 111 + 110 + 101 + 100 + 011}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
2) Mettre un "1" dans la table de v\u233\'e9rit\u233\'e9 pour toutes les entr\u233\'e9es qui correspondent \u224\'e0 l'expression ci-dessus :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\b\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Table 13 : Cr\u233\'e9er une table de v\u233\'e9rit\u233\'e9 \u224\'e0 partir d'une somme de }{\rtlch\ai \ltrch\lang3084\i\b\loch
minterms}{\rtlch \ltrch\lang3084\b\loch
, \u233\'e9tape 1}
\par \trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
B}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
F = AB + C}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Finalement, placez un z\u233\'e9ro dans toutes les entr\u233\'e9es de la table qui n'ont pas \u233\'e9t\u233\'e9 remplies par des "1" :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 14 : Cr\u233\'e9er une table de v\u233\'e9rit\u233\'e9 \u224\'e0 partir d'une somme de minterms, \u233\'e9tape 2 }
\par \trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
B}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
F = AB + C}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft1398\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2850\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4301\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5754\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx7217\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Inversement, g\u233\'e9n\u233\'e9rer une fonction logique \u224\'e0 partir d'une table de v\u233\'e9rit\u233\'e9 est \u233\'e9galement simple. D'abord, localisez les entr\u233\'e9es dans la table qui ont \u233\'e9t\u233\'e9 remplies avec des "1". Dans la table ci-dessus, il s'agit des derni\u232\'e8res cinq entr\u233\'e9es. Le nombre des entr\u233\'e9es contenant "1" d\u233\'e9termine le nombre de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 pr\u233\'e9sent dans l'\u233\'e9quation canonique. Pour g\u233\'e9n\u233\'e9rer les }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 individuels, remplacez les "1" par des A, B ou C et les "0" par des A', B' ou C'. Puis, calculez la somme de ces \u233\'e9l\u233\'e9ments. Dans l'exemple en question, F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
 contient "1" pour CBA = 111, 110, 101, 100 et 011. Par cons\u233\'e9quent, F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
 = CBA + CBA' + CB'A + CB'A' +C'BA. Le premier terme, CBA, vient de la derni\u232\'e8re entr\u233\'e9e de la table. C, B et A contiennent tous "1", on g\u233\'e9n\u232\'e8re donc le }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
 CBA (ou ABC, si vous pr\u233\'e9f\u233\'e9rez). Le terme de l'avant-derni\u232\'e8re entr\u233\'e9e contient 110 pour CBA, on obtient donc le }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
 CBA'. De m\u234\'eame, 101 produit CB'A, 100 produit CB'A' et 011 produit C'BA. Sans doute, OR et AND sont tous les deux commutatifs, donc on peut arranger les terms obtenus \u224\'e0 notre loisir et de la fa\u231\'e7on la plus conv\u233\'e9niente. Le principe fonctionne \u233\'e9galement pour tout nombre de variables. Consid\u233\'e9rez la fonction F}{\rtlch \ltrch\sub\lang3084\loch
53504}{\rtlch \ltrch\lang3084\loch
 = ABCD + A'BCD + A'B'CD + A'B'C'D. En mettant 1 aux positions de la table de v\u233\'e9rit\u233\'e9 qui correspondent \u224\'e0 chaque term, on obtient :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Table 15 : Cr\u233\'e9er une table de v\u233\'e9rit\u233\'e9 avec quatre variables \u224\'e0 partir des }{\rtlch\ai \ltrch\i\loch
minterms}
\par \trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrdb\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
D}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
C}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
B}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
A}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\sb40\sa40{\rtlch \ltrch\lang3084\loch
F = ABCD + A'BCD + A'B'CD + A'B'C'D}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrdb\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40\rtlch \ltrch\lang3084\loch
\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft-128\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx1278\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx2690\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx4097\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx5508\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrdb\brdrw10\brdrcf1\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf1\clbrdrr\brdrs\brdrw10\brdrcf1\clpadfr3\clpadr108\clvertalt\cellx8737\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb40\sa40{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Tous les \u233\'e9l\u233\'e9ments restants de la table de v\u233\'e9rit\u233\'e9 contiennent z\u233\'e9ro. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Probablement, la mani\u232\'e8re la plus simple pour g\u233\'e9n\u233\'e9rer la forme canonique d'une fonction bool\u233\'e9enne est de construire d'abord la table de v\u233\'e9rit\u233\'e9 pour cette fonction et ensuite \u233\'e9tablir la forme canonique depuis la table de v\u233\'e9rit\u233\'e9. On utilisera cette technique, par exemple, en convertissant entre les deux formes canoniques que ce chapitre pr\u233\'e9sente. Cependant, g\u233\'e9n\u233\'e9rer une somme de minterms alg\u233\'e9briquement est aussi simple. L'usage de la loi de distributivit\u233\'e9 et le th\u233\'e9or\u232\'e8me 15 (A + A' = 1) rend la t\u226\'e2che facile. Consid\u233\'e9rez F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
 = AB + C. Cette fonction contient deux termes, AB et C, mais ils ne sont pas des }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
. Les }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 contiennent toutes les combinaisons des variables dans leur forme prim\u233\'e9e et non prim\u233\'e9e. On peut convertir le premier terme en une somme de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 de la fa\u231\'e7on suivante : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
AB\tab =\tab AB}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1\tab \tab \tab Par le th\u233\'e9or\u232\'e8me 4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab =\tab AB }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch \ltrch\lang3084\loch
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
C+C')\tab \tab Par le th\u233\'e9or\u232\'e8me 15}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab =\tab ABC + ABC'\tab \tab Par la loi de distributivit\u233\'e9 \tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab =\tab CBA + C'BA\tab \tab Par la loi de l'associativit\u233\'e9\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
De fa\u231\'e7on similaire, on peut convertir le second terme de F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
 en une somme de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 comme suit :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
C\tab \tab = C}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1\tab \tab \tab \tab Par le th\u233\'e9or\u232\'e8me 4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = C }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
A+A')\tab \tab \tab Par le th\u233\'e9or\u232\'e8me 15}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = CA + CA'\tab \tab \tab Par la loi de distributivit\u233\'e9 \tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
CA}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1 + }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
CA'}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
1\tab \tab \tab Par le th\u233\'e9or\u232\'e8me 4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
CA}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(B+B') + }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
CA'}{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(B+B')\tab Par le th\u233\'e9or\u232\'e8me 15}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = CAB + CAB' + CA'B + CA'B' \tab Par la loi de distributivit\u233\'e9 }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab = CBA + CBA' + CB'A + CB'A' \tab Par la loi de l'associativit\u233\'e9\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La derni\u232\'e8re \u233\'e9tape (arranger les termes) dans ces deux conversions est optionnelle. Pour obtenir la forme canonique finale pour l'\u233\'e9quation F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
 on a juste besoin de faire la somme des r\u233\'e9sultats :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab F}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\loch\f8\loch
248}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab =\tab (CBA + C'BA) + (CBA + CBA' + CB'A + CB'A') }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab =\tab CBA + CBA' + CB'A + CB'A' + C'BA}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une autre technique de canonisation est le }{\rtlch \ltrch\lang3084\i\loch
produit des maxterms}{\rtlch \ltrch\lang3084\loch
. Un }{\rtlch\ai \ltrch\lang3084\i\loch
maxterm}{\rtlch \ltrch\lang3084\loch
 est la somme (ergo OR) de toutes les variables d'entr\u233\'e9e, prim\u233\'e9es ou non prim\u233\'e9es. Par exemple, consid\u233\'e9rez la fonction logique G suivante de trois variables :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
           }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
G = (A+B+C) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(A'+B+C) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(A+B'+C)\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme pour la somme des }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
, il y a exactement un produit de }{\rtlch\ai \ltrch\lang3084\i\loch
maxterms}{\rtlch \ltrch\lang3084\loch
 pour chaque possible fonction. Sans doute, pour chaque produit de }{\rtlch\ai \ltrch\lang3084\i\loch
maxterms}{\rtlch \ltrch\lang3084\loch
, il y a une forme \u233\'e9quivalente de somme de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
. En fait, la fonction G ci-dessus est l'\u233\'e9quivalent de :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
  }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\loch\f8\loch
248}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
 = CBA + CBA' + CB'A + CB'A' + C'BA = AB + C\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
G\u233\'e9n\u233\'e9rer une table de v\u233\'e9rit\u233\'e9 pour ce produit de }{\rtlch\ai \ltrch\lang3084\i\loch
maxterms}{\rtlch \ltrch\lang3084\loch
 n'est pas plus difficile que le faire pour une somme de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
. Pour faire ceci, on utilise le principe de dualit\u233\'e9. Souvenez-vous que ce principe consiste \u224\'e0 passer de AND \u224\'e0 OR et \u224\'e0 remplacer les 0 pour les 1 (et vice-versa). Par cons\u233\'e9quent, pour construire une table de v\u233\'e9rit\u233\'e9 vous devriez d'abord permuter les litt\u233\'e9raux prim\u233\'e9s et non prim\u233\'e9s. En G ci-dessus, ceci produit : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
    }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
G = (A + B + C) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(A' + B + C) }{\rtlch\dbch\af13\dbch\af13\hich\af9 \ltrch\lang3084\loch\f9\loch
\u8729\'3f}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(A + B' + C)\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
La prochaine \u233\'e9tape consiste \u224\'e0 appliquer le principe de DeMorgan :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li720\ri0\lin720\rin0\fi0\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
    }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
G = A'B'C' + AB'C' + A'BC'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Finalement, vous aurez besoin de permuter entre les 0 et les 1. Ce qui veut dire que vous placerez des 0 aux endroits de la table de v\u233\'e9rit\u233\'e9 qui correspondent aux termes ci-dessus et des 1 \u224\'e0 tous les autres. Ceci remplira de z\u233\'e9ros les premi\u232\'e8res trois entr\u233\'e9es ; remplir les entr\u233\'e9es restantes avec des 1 produit F}{\rtlch \ltrch\sub\lang3084\loch
248}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous pouvez facilement convertir entre ces deux formes canoniques en g\u233\'e9n\u233\'e9rant la table de v\u233\'e9rit\u233\'e9 d'une forme et travailler \u224\'e0 rebours sur cette table pour produire la seconde forme. Par exemple, consid\u233\'e9rez la fonction de deux variables F}{\rtlch \ltrch\sub\lang3084\loch
7}{\rtlch \ltrch\lang3084\loch
 = A + B. La somme des }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
 est A'B + AB' + AB. La table de v\u233\'e9rit\u233\'e9 prend la forme : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Table 16 : F}{\rtlch \ltrch\sub\lang3084\b\loch
7}{\loch
, table de v\u233\'e9rit\u233\'e9 OR pour deux variables}
\par \trowd\trql\trleft2410\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3733\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5056\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6379\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\sub\lang3084\loch
7}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
A}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
B}\cell\row\pard\trowd\trql\trleft2410\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3733\clbrdrt\brdrs\brdrw10\brdrcf1\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5056\clbrdrt\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6379\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\row\pard\trowd\trql\trleft2410\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3733\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5056\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6379\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\row\pard\trowd\trql\trleft2410\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3733\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5056\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6379\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
0}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\trowd\trql\trleft2410\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx3733\clbrdrl\brdrs\brdrw10\brdrcf1\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx5056\clpadft3\clpadt108\clpadfr3\clpadr108\clvertalt\cellx6379\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\intbl\qc\sb80\sa100{\rtlch \ltrch\lang3084\loch
1}\cell\row\pard\pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le travail \u224\'e0 rebours pour obtenir le produit des maxterms consiste \u224\'e0 localiser toutes les entr\u233\'e9es qui ont un r\u233\'e9sultat de z\u233\'e9ro. C'est l'entr\u233\'e9e o\u249\'f9 le r\u233\'e9sultat entre A et B vaut z\u233\'e9ro, ce qui donne G = A'B'. Cependant, on a encore besoin de convertir toutes les variables pour obtenir G = AB. Par le principe de dualit\u233\'e9, il ne nous reste que \u224\'e0 invertir les op\u233\'e9rateurs AND et OR, ce qui nous donne finalement G = A + B. C'est la forme canonique correspondant au produit des }{\rtlch\ai \ltrch\lang3084\i\loch
maxterms}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Etant donn\u233\'e9 que travailler avec les produits de }{\rtlch\ai \ltrch\lang3084\i\loch
maxterms}{\rtlch \ltrch\lang3084\loch
 est un peu plus d\u233\'e9sordonn\u233\'e9 que travailler avec des sommes de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
, ce livre utilisera g\u233\'e9n\u233\'e9ralement les sommes des }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
. De plus, c\u8217\'92est plus commun dans le travail en alg\u232\'e8bre bool\u233\'e9enne. Cependant, si vous \u233\'e9tudiez conception logique, vous trouverez les deux formes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
2.5\tab Simplification de }{\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
onctions bool\u233\'e9ennes}{{\*\bkmkstart p2_05}{\*\bkmkend p2_05}\rtlch \ltrch\fs23\b\loch
 }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Puisqu'il y a une vari\u233\'e9t\u233\'e9 infinie de fonctions bool\u233\'e9ennes pour }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables, mais seulement un nombre fini de fonctions uniques pour ces }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 variables, vous pourriez vous demander s'il existe une m\u233\'e9thode permettant de simplifier une fonction donn\u233\'e9e pour produire une forme optimale. Pour ce faire, on peut certainement se servir de transformations alg\u233\'e9briques, mais ce proc\u233\'e9d\u233\'e9 ne garantit pas de r\u233\'e9sultat optimal. Il y a pourtant deux m\u233\'e9thodes qui }{\rtlch \ltrch\i\loch
r\u233\'e9duisent}{\rtlch \ltrch\lang3084\loch
 une fonction bool\u233\'e9enne donn\u233\'e9e en sa forme optimale : la table de Karnaugh et la m\u233\'e9thode des implicants premiers. Ce }{\loch
livre}{\rtlch \ltrch\lang3084\loch
 traitera seulement la m\u233\'e9thode de Karnaugh ; pour l'autre, voir tout ouvrage sur la conception logique. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Puisqu\u8217\'92il existe une }{\rtlch \ltrch\lang3084\loch
forme optimale pour toute fonction logique, il vous surprendra peut-\u234\'eatre le fait que nous n\u8217\'92allons pas utiliser les formes optimales. Il y a deux raisons \u224\'e0 cela. D'abord, il peut y avoir diverses formes optimales et rien ne garantit qu'une forme optimale donn\u233\'e9e soit unique. Ensuite, il est facile de convertir entre forme canonique et table de v\u233\'e9rit\u233\'e9. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
La m\u233\'e9thode de la table de Karnaugh est pratique seulement pour des fonctions avec deux, trois ou quatre variables. Avec soin, vous pouvez vous en servir avec cinq ou six variables, mais la m\u233\'e9thode devient trop encombrante \u224\'e0 ce point l\u224\'e0. Pour plus de six variables, ce syst\u232\'e8me de simplification n'a plus d'utilit\u233\'e9}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Cependant, on peut troujours \u233\'e9crire un programme qui se sert de cette m\u233\'e9thode pour simplifier des fonctions de sept ou plus variables. }
}}
}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La premi\u232\'e8re \u233\'e9tape avec la m\u233\'e9thode de Karnaugh consiste \u224\'e0 construire une table de v\u233\'e9rit\u233\'e9 bidimensionnelle pour la fonction (voir figure 2.1)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\b\loch
Attention}{\rtlch \ltrch\lang3084\loch
 : observez soigneusement ces tables de v\u233\'e9rit\u233\'e9. Elles ne se servent pas de la m\u234\'eame disposition qu'on a vu pr\u233\'e9c\u233\'e9demment. En effet, la progression des valeurs est 00, 01, 11, 10 et non 00, 01, 10, 11. Ceci est tr\u232\'e8s important ! Si vous organisez la table de v\u233\'e9rit\u233\'e9 en s\u233\'e9quence binaire, la m\u233\'e9thode ne fonctionnera pas. Nous allons appeler cette table une }{\rtlch\ai \ltrch\lang3084\i\loch
carte de v\u233\'e9rit\u233\'e9 }{\rtlch\ai0 \ltrch\lang3084\i0\loch
pour la distinguer d\u8217\'92une table de v\u233\'e9rit\u233\'e9 }{\rtlch \ltrch\lang3084\loch
standard.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En supposant votre fonction bool\u233\'e9enne en forme canonique (somme de }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
) ins\u233\'e9rez des "1" dans toutes les entr\u233\'e9es de la table qui correspondent \u224\'e0 un }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
.  Placez des "0" dans ce qui reste. Par exemple, consid\u233\'e9rez la fonction de trois variables F = C'B'A + C'BA' + C'BA + CB'A' + CB'A + CBA' + CBA. La figure 2.2 montre la table de Karnaugh pour cette fonction. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
L'\u233\'e9tape suivante consiste \u224\'e0 dessiner des rectangles autour de groupes rectangulaires de "1". Les rectangles que vous encerclez doivent avoir des c\u244\'f4t\u233\'e9s dont les longueurs sont des puissances de deux. Pour des fonctions de trois variables, les rectangles peuvent avoir des c\u244\'f4t\u233\'e9s de longueur 1, 2 et 4. L'ensemble des rectangles que vous dessinez doit couvrir la totalit\u233\'e9 des "1" dans la table. L'astuce consiste \u224\'e0 dessiner tous les rectangles possibles, sans qu'un rectangle soit totalement encercl\u233\'e9 par d'autres. Notez qu'un rectangle peut en chevaucher un autre s'il ne peut pas l'entourer compl\u232\'e8tement. Dans la table de la figure 2.2, il y a trois de ces rectangles (voir figure 2.3). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom5040\shpbxcolumn\shpbxignore\shpleft0\shpright6510{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw434\pich336\picwgoal6510\pichgoal5040\pngblip
89504e470d0a1a0a0000000d49484452000001b2000001500803000000ed210ba700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000010e149444154789ced9d8d61e3200c8559
2fc3d8c3300cc3e06138f30f96e5a48db988f47d774d130b4b320fa76e838c726032d4a713003f05924d07249b0e48361d906c3a20d97440b2e98064d301c9a6
03925d6195d5d63fd19fcea401925da2620f1949dd2429178124c9f4623e9d4905925da2ece3e1dca6259d66825291c8de3debeab4b16afb742a054876890a5f
fbc587593f9d4a01925db15f31dad5ac5e32653f9d4c469064922ea425234732493fe14523a79f445d484b468c64b22ea42523a69b645d484b468e64a22ea425
2345326117d292912219781948361d7f4fb2cd98f4c05acdc2ed1c2cd766d6f55dfc3dc91efbef13f181b55ef48a2a0f9c99757d171f94ec7a386ea3327bf8ff
e181b5be2919e3fa2e3e28d993e1382ab3f0a9a5e2fc2bc7db4a5697e6cbddefe0a3925d0e479c6557297c8627c37154668bb33a3eb0d6b724635ddfc5df3bcb
36a3d3036be5ff74162cd766d6f55d7c50b227c3f1ef5dcbbec847af18af14dbf0d72b068ce5e98064d301c9a6e3bf4aa6aeb8b6aaf7127d2bf21b3bdfd471fd
b18c70fabb60ef580746fe5cd2ffd3e9ef8241b2d78064cfac906c8c7560644836c63a3032241b631d1819928db10e8c0cc9c6580746866463ac032343b231d6
819121d918ebc0c8906c8c7560e43f295999fd1683596557eb96fd89df5ca77146eba6acd1c16cbacf387f97680e0dc97e4699fda64acc5032aefdd48ffac974
b546f3da4dcafd5da239b4df5b5bbbb8c5df30c78481e287c4e288b5194e6d606db5cd7bc5568d559b7dc3b205d7ed509c58b2342fa7886216e7e7b5f8692f75
e64b95ccacdedc4f3efdad6431b4f2ddba77e63e14f2800943a20c257fdfa3d6aacb4ca21878f5d374f25eb155b546a174de5c87e2b4929503cc8769177f40fb
b8d58766d16a4209ae8ead0ed65f862e296cfbf77d2cf8b1e287c4e688b5194e4d6015cd6920a9322f5fd526c9753b14a7958c9e65e1993944efde1889f9edb3
2c3b50f611864233243aeb713875a32deda5cabeaa35eea36d3574df9bf91f9295d96fe5f2c31fd3ea35a1e7d1166eb5b1ef647bf3ef12cda1f7bd977a0d147c
354342c5708db537ee3cd289637293f68d31b8def26823fbdeccffb9626c87e42f53f9ed15631d2cabb5b60c986e48a4cb0f7b3a9ccae587297b651fc5ba1abf
731c6d27fbde0b7e2f7b66fd9317f92f068364af01c99e5921d918ebc0c8906c8c7560644836c6daa18d590f351890ec39feafbbebb10cebff1c7db8e30024fb
956352a1fe7f8efeac600f92bde8f84392ddebfb0f4966cde3789388b78a195e8f7cb6ed9dc86fecfc5617fee0f8ee72ac8f777efb3f0356a7bff8dde4fb0f9d
6527ceffdb15a33d16ed42b2e7e43fc8ff20187e2f7b8d6ffcbdec5edf906c8c7560644836c63a3032241b631d1819928db10e8c0cc9c6580746866463ac0323
43b231d6819121d918ebc0c8906c8c7560644836c6ca913fb283643fa37cd499bee7c2915a7ad25a53b552537bd25a7f4a2b992f6ee96ba1166a6dca62fac0da
e6ac72854b630da52ff4b8a695cc29fadd3fada527a4956a6b4f3aebef42fb6fb1f4257ad75df460b5c95acb623a0fa1f42565a58e87144b5fe8717d936461d9
865a7a726ce5ab954c3f21e07dc954ebbd8bde5a9bb218e22157b5a8e31b47697338ae2f922c148e1caa911aabaf56624a997e19ba11e5a416aab3ae076b2759
cc2ab77247c98ec7f54592c5c17e88debf3172d6df85f6df62e94b96a7f51fac96b1a6efb1f4a514bef44aa6d217725c5f23592c1c39562335971f87fa91cec7
cfc837950e7bfbd297d35aa87cf9716aad971f2655c4b41fdfe69f74fe83707a5cd34a566ec68ddfcbeee0cb7f2fbbc137241b631d1819928db10e8c0cc9c658
0746866463ac032343b231d6819121d918ebc0c8906c8c7560e43f2ed93bf5279f8bfcc6ce37755c7f2c239c829140b2e98064d301c9a603924d07249b0e4836
1d7f47b2702368722b12ff19b99f7955a773c50f94c386b235ee5b9a94c93c757bdf7e2823243b1c6040fb994975024ed32fa517377f6bca3aaf71cb3d50b7f7
ed7f48989a71b6b39f1340efeea2ca43d9b7ee51263dd4ed5dfba18c087238c01428ce033c895efbc5a9ae5f92a5d9fe5ebff81d9559f7534debcdcf2e31f17e
132ace50f4334fb5de8785f153dbd4aac2fd9d9b1bed6fea6195dfa636efa66c6fdb1b7dace9bf9d31e3c27bd58ffdd036bd1f5050cadf04c43a63f7de0a47ee
9fd57e594bc744abdd7b65b79847f177dafee75929ff5fc50191a742ed69fab78068702adf7a7d3fb35539a1f26051cd4339d2dafe382f6c04e324db1f1613a6
52e783b3e10d311d6f7a96faa5e90075e89ab4fdb4fdcfb32aaeadb58b8df70789131b379325f3cf7243659b295a8c644dfbec722403255b36bdf74539b825bc
c568938fb73c0bfd523b8691ecb4fdcfb32aaef71f95fb699bc21a971cd7ef2afec83abe259f49d6b42f2e07325032dfc566172e9514f8773a7fd3fa7480f959
e897cd3d95ecb4fd8ff073f3fc1444e59f58f530fb7b707c7f8df76537ca06c3e69fb9c73ec2f6944d9033ceebdb4dfb66ffd6bc0437797bdb5e911b77ddce10
c9d2c4c5d5f7c5b6da7449e1ef68b52ebe63f68b64eb9f6de9386d3a50df0dfe4bafc6775cecdcb4fdacfddfe4effc5ef63540b2e98064d301c9a603924d0724
9b0e48361d906c3a20d97440b2e98064d301c9a603924d07249b0e48361d906c3a20d97440b2e98064d301c9a603924d07249b0e48361d906c3a20d97440b2e9
8064d301c9a603924d07249b0e48361d906c3a20d97440b2e98064d301c9a6e3ab25f3ab38aea1b85e3f6b3a115f2d9953e9ae55f69b0ef39b8e8592ee2312ef
06f72d7cb964d6f83b846cdbfa45c7f945877282bfef92f2b72c3bacc53a355f2f99ffb26195db6fe1ab254b8b663ebc646af8edc0fe175f2dd97702c9a60392
4d07249b0e48361d906c3a20d97440b2e98064d3319164616188bc3a0487319bbff1fd951be59eac4212760f8e443291640fb7e9f8c0a3e32dde2f8f4ab9175a
e87caf78794c25d9fe3f3c3c697387644fe27c928924eb9781b8687387644fe27c12a9799d80b32c3291648bb33a3ef0ec3f82ee912c3992c844926d46a7870b
b4bfd0b3579f41874549b6ab8fcfc2ee1a578ce02e20d97440b2e98064d301c9a643ba64ea0eeef122a5aba4e4c1f13cbf578ee08536f704fa1f48c983039211
a4e4c101c90852f2e0806404297970403282943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4c101c90852f2e08064042979704032
82943c0a8739c1ca597f8b1c3f0f545bbbb8657fa98d7f697d93251d41b88f8e7fa98d5dedb2e546ced8e8c51dfd4407b1616c527cec2d74f061b4ad71c47495
943c0a8739c1713ea159b40bdde774dcb25bb59f01a5f31184464e87feb7b5915b9764257ea203d538483e9cbf8752f411e65aa53862ba4a4a1e85c36cc53c97
744b996ee174d8bf6de1561e5bd3e3d1d23572db56a7c01dfc4407651f557ca4f33628b8d63862ba4a4a1e85d07565ecd79e2c992afbf0637e7ff3d2b9853b69
6456135a2de5043934890e72c32650096dcd626a1c315d25258fc2e959e6272f2eb6dde24c2b964ba7845b7cf76fb5e74d23c2c18fe964ca81fc1d5d1e5be3c3
5409471ffa8b48c9a37098131c2f3fc28bfdb2c186ab083fecfda9a1746ce1e2e54778b51a6bcb3d5a823c4ad7cb8fc64f74901be6cb8f1855a72b93dd54e388
e92a2979140e738271914f90920707242348c983039211a4e4c101c90852f2e0806404297970403282943c382019414a1e1c908c20250f0e4846909207072423
48c983039211a4e4c101c90852f2e0806404297970403282943c38ee29bfbcc58b94ae92920707ce3282943c382019414a1e1c908c20250f0e48469092070724
2348c983039211a4e4c101c90852f2e0806404297970403282943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4518885b7252d75a8
98ed4b6a4b3d6c5f78bbefb1da529c9bdaf485b7b9ec36d4d6c6267de1ad4d25b9398c9cae92924721d6dcb692f9af5a31abfceb5c525beb61555b785b1ae95a
a5767053ca6e7328557cc4c2dbb4a18491d35552f228c46ac0a364b562b62ba9adf5b02a9bd2abbdef736dadab923585b7a9ecb62cebae8a8f36500d23a7aba4
e45150a5f7f2cbfc957ab22fa9ed252ba74c34f6c5b95d935276bbd4f7ce2656f0e10b7c4b18395d25258fc2f959562b66739f5e16deaab3369d9b43d96d7963
ac85b76943cd454a5749c9a3106b6e8f971fa562f65852db5c7ed4c2dbd3e2dccecdb1ec365f7ed4c2dbe8a38691d35552f228c4c2dbb28a0e2ef20952f2e080
6404297970403282943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4c101c90852f2e08064844fe6113fc1f2eb015b360d4846f868
1e7b70ad9dff8ccb5c3479eee48e3690ece5e0ea3a0548468064b706fa1f48970c103e2dd9feb36c4df7033e6f724b91f32d5ea40cad4f5f3186cffb8de514c3
1b23454a1e1c908c20250f0e484690920707242348c983039211a4e4c101c90852f2e0806404297970403282943c382019414a1e1c908c20258f42285ee9eacb
9e00c93e8e2a0fe949fa24f4a4d8af2eda98ebf94eca06739bd64db4d8b21067687270d12fc4e9e47495943c2a4432ff6596b3623fdd3455b19e8f960db63e8b
9b68517da0e4c22417e1afd6258c9cae929247e55432a78a324db1dfd6346d3fc839acc4d9f8cc6ea245f5efc0bd8b7e214e27a7aba4e4517922d9a1d8ef5cb2
d3b2c1d64db4a4653d7393838b6e214e27a7aba4e451397f63d44cb15ff7c6b85e960db66e4a45e0f18d718d5585c985693b484a5749c9a3104acbbafab2f4b1
da79b15f7bf9114f3fae6cb075132dc95976935dacc5451b464e5749c9830317f904297970403282943c382019414a1e1c908c20250f0e484690920707242348
c983039211a4e4c101c90852f2e0806404297970403282943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4c101c90852f2e0b8a7fc
f2162f52ba4a4a1ee065a44b86374682943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4c101c90852f2e080640429797040328294
3c382019414a1e1c908c20250f0e48469092472196b79b5cc30cc90852f2a8f88ce21aaae9555b97fe64c5dbb89aed72b1e26d7273b1e26df581156f5f244ae6
9ab56a55ad4bd7fec5c58ab7a1babd363a59f136b9b958f1d6343eb0e2ed2ba46e54ddab5ce4bcb9cb156f6b236ec5dbdc825ff1b60b84156f5fe1f42c2b75e9
d72bded646dc8ab7b905bfe26df581156f5fc46714d750cdaf5453975e343c5df176a9b766a16d3a37fc8ab7bd8658f1f639b1bcdd3443bbad4b774f56bcf5d5
edee72c5dbe8e66ac5dbb5f181156f7f0e2ef20952f2e0806404297970403282943c382019414a1e1c908c20250f0e484690920707242348c983039211a4e4c1
01c90852f2e0806404297970403282943c382019414a1e1c908c20250f0e4846909207c73d15b3b77891d25552f2002f03c9a603924d07249b8ee924f3f335f2
ac9c82569bb3f550e2640dfbc80f613fbf92c152dde4d55ec21cd38db697cb7492858cc962efbb64db72d6b21c60989c55f75bb321ac49b2d1f672919fe1113f
e7ca6d565babc2b4a8873fe5f4ea67f91a3fe174dff008cf9c5a5598416aea34376f8dbb6dcaac7592e3697ba14c28d9ae969f25afc2bf3a0d314cc45669fe61
7ab6bf13aa7a42a5598baa79c89b4fdb0b45767667a8b2c0522bd9e2a7206e264b569fedff6cb3562023d9697ba14c295978583bc9b638c5bee9f8a651b3661c
23d9697ba14c27d9fe33c83f6ab3b987519b4d8512ce574328b39f21619b7fb6db8d97d2a8f8b3c986cbcab89b534b68ead2f4e4b3f652994e3200c9a603924d
07249b0e48361d906c3a20d97440b2e9f807264b2051d1f0218c0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.1 Des tables de Karnaugh de deux, trois et quatre dimensions}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2310\shpbxcolumn\shpbxignore\shpleft0\shpright8220{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw548\pich154\picwgoal8220\pichgoal2310\pngblip
89504e470d0a1a0a0000000d49484452000002240000009a0803000000ae72a36e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000065c49444154789ced9c0d96a3ac164599
9e8391c13018062383e101fe0bc9a5d7ab1b3d7e67af55d529bd010eecb68c9568222102e6ee0190e74349880825212294848850122242498808252122948488
5012224249880825212294244667bc1fa7fc68b87b28cf8492c43209c14cf9dbdd2379269c96384f82b1317a3bdd3d94474249e222894f924ceeeea13c124a12
cb24f87420898ed3d184b312f351c48de99fe0391d4d382b713e711da6e843743c29694049e23209263aef1d4f4a1a5092b8496223e7a3092725ce93106cf4f9
61b87b300f8492cc575c9d0b76cc97d3ecdda379209484885012224249880825212294848850122242498808252122948488501222f22e49ecfcdea1ef7fca9d
8b82f8a6e7522194cdbbdffeb7e35749e2a638b9e842f8b6687351f462f252219495dd4287f8bc4a92a17c0ddf3f1a312c5f7272b37dfb5e237488cfab24296f
68cedfbfa532872fb9b91e49840ef179553a4aa2c3abd251121d5e958e92e8f0aa74f9f471ec3971cd1fa0e0896b37af92e45f5e02ffa1247c090cc53f5c4c73
465ad8522194cdbb79318dfce7a12444849210114a4244280911a12444045f12d34157d19f72f7acfc29f869ba12fcb8e805d37a043f0d2551073f0d2551073f
0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d2551073f0d25510736cdf60ef56b82606d7d
ebefaaa895bbb1adaeeb2ac29dd626a869f6cfba5c130cb1f129986bd1d429495dd755043bad6d50d3ec9f9aab256984ea59ebbe6d7d4f449dd636a869cc36f4
6b024349fe1ad43494e487a0a6a1243f0435cd6749784ef2e7a0a6f976e2daf1ea8692fc0ba8693ebf04eeba4ee25b370b68cc455dd755043bad6d60d37cbc98
d684575cff1ff0d3501275f0d3501275f0d3501275f0d3501275f0d350127570d24ccedba9b19d92a8039326e47baffac60e4aa20e4c1a978f2294e41660d27c
bce73225510726cdc78152127560d25092fb80494349ee0326cde773929edbdc69df47afeef14dc0a4b17c75731b3069265e27b90d9c34defa962394441ffc34
94441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dfc3494441dd434617beb4095a075d3bc
7a53f983a154d468acab08765adba0a6f1dbc0ab04ad9be6d59b7cbda9351755635d45b0d3da0636cd67495a99ba3635e7a247927a23ecb436814d43497e076c
1a4af23b60d35092df019b8692fc0ed83494e477c0a6f92c49eba679754c67aa77ccb6e6a26aacab08775a9ba0a6718637d6fb19f86928893af86928893af869
28893af86928893af86928893af86928893af86928893af86928893af86928893af86928893af86928893af86928893af869ba6e73a77d1fbdbac737f1ae3444
054a4244280911a12444849210114a4244280911a12444849210114a42440024f1c6ada37489687dda32ba32f6c956e5d6591f4d2ab1e53635f9db29e4de4629
b8b65076a79d434845e947df7cfe5e6043ddbdd0f932fcd6e09f098024698c7e5e099fa6d6c610f2a88d8bf9a76afc7955f32e9357243f39e49f778e6db8ba85
7977da194a511cf242d6cfcf056329b87c786feefe7be7cbf01b837f2808e3dcc638a6390fcb9634cb21cf73681487581cc84b32e5ffb3c79a631b65cdce2d2c
bbcddaab9bdbfb5c7059e9b95ce87c93e43af8878221895f1f6c5be23cc1ce6dff519707c35e527e5dec375773551ba5606de1b4db94454e2beaf785bc1484f2
cbc26ff74b7387ee85ce97e11f06ff6c20245927735f6037af9d0ffb3ded2e35cbef7d172f05873672c1dec279199d5d363adf7c7e7af6b2d1fa7ab7d0f93cfc
e3e09f0dc2304d5eabc4e9667a635e1bbb05f06e51c99c4b6c1cc2a9e0d2c6dac265773a92144b6c9c9683814b05be2e18a31febdd42e7e7ae9f0fc230d3a17d
96e4783e317fb9fd0e128723c9b49584d10dee547069636fe1b47b3de5189cbb1c0cce05612fd88f1593d4f9b5eba78321c9423e4f580f17f9d77df0871bba2e
cb51ce05b692f4b2e852706ee3d0c269b799cf2ef2ee21b49ebf14e4975d4b813b742f747eec1ae1dc1540126fa6f5a1b52e942d2e5fa6282f11b6bd6bd1580e
fb7349483ba74bc1a98d430bc7ddf94247391ce5155da7a85190db5f0ba6bd7ba1f353d7000b802009b91b4a4244280911a12444849210114a4244280911a124
44849210114a4244280911f91fac54d21e7d29e8cd0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.2 Une table de Karnaugh}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2520\shpbxcolumn\shpbxignore\shpleft0\shpright8160{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw544\pich168\picwgoal8160\pichgoal2520\pngblip
89504e470d0a1a0a0000000d4948445200000220000000a80803000000ee2ba5b200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000008f149444154789ced9d0d96a32a1046d9
9e8bc1c5b01816038be151fc8989564c3fe9969aef9e3949474bb4f48ea295a80a0030a8bf5e00f06c2008608120800582001608025820086081208005820016
08025820086081208005827428c2d40ff64f97e52940900ee5bcf746a7bfad59fe78699e0104e9507e7b5dfce2ff76699e0104e9e804f12ad8f58f17e7114090
8ea4864b87986887c7ba09106447eaa4e6cea972e8a626204847eaa4bac586bcf740373540901db90fe2a31726ef4cd04d85203d9b20f92f6df8f87f0108d2d1
0e312e1f5c1cd60e04e94987151dbb20ba744fa9abfa8f0341000b04012c1004b04010c00241000b04012c1004b04010c00241008b5041dcb2b8fe9d8b0961fd
5094532fefa7317e559fda9a0d9982b8356e75b7bd733121d80f55db55eddfcf63169f4a7d929029888e5bdcebed9d8b09ebca0ae297bcf1eb3b13636d7d9183
4c41547951edc3798cb38115c4f8fcddc3facec4a4c38b97f555569182e42da97c7de762ce235e4203fb25d534ae7edd5912b2b2294090fb90954d0182dc87ac
6c2adff441c27d82a00f320b5f9dc5dc2708ce6266e1bbeb20b709420de13ac8147c7725f53641702515fc6b4010c00241000b04012c1004b04811445de052d0
adfcf55ab90109391097f2f8e520112b57420e04041984841c0808320809391010641012722020c82024e44040904148c881f86ab3feffb35708321bdf09f2ff
5a82201302410621210702820c42420e04041984841c080832080939102305312fa8d701af7cb5500f67f21cdaf74a870af21ec1b600411ec3f6cd74083288b9
73d87edb7290875dd7979fa81c0af2fa33851341d42ee270b5d58110e431a8fdcb0e17b79371efe12fc1fa75ca4341bcfe28c81602419e42f7fbdaf73ce8072a
2f3f833c106479bb61ffa120ca7d14640b81204f8115e460c7727888b924080e31530241c633770e5c1f0482dcc2dc39706731d7fa2010e40373e7c05d07b978
1603417826cf81bb927af13a080461919003812ba98390900301410621210702820c42420e04041984841c08083208093910106410d3e5e0b45a0e9e980e4106
315b0e2b5d1b35efb79a842083982c8772e75bfd76b35a083288c9723067773d852083982c87d35bde4290414c96c3877b225f6de5bbf00341be8a9f9ac90459
4ef720577e94ffc31ff39b1fc7ffeaba19c36439943e887beb8ae0103388c97270388bf96566cb61c17590df65ba1cac56cbc1237b20c82024e44040904148c8
8180208390900301410621210702820c42420e44dbf6cf41c6ca9590030141062121076213e44ad09596367e74888120cf02820c42420e04041984841c080832
88e973284fba862083983d07ab20c85026cf615d3941ce6e60a88e071f8e0c5510d5471caeb63a10823c06670323c8e90d0c77c3bdbe22481f75bce95fee7208
411ec2b920e73730dc0d57ee8a207dd4f1a67fb9cb21047908dc21e6922038c4b04c9f030419cbf4394090b14c9f030419cbf4394090b14c9f0304198b841c88
43414e83aeb4b4812ba90280208390900301410621210762a8203f79a82104791623053988b81004411ec526c86390b17225e44040904148c881b894c76f1e62
ae35f57c24e44040904148c881f84e905f3a784858b9127220be12e4978244ac5c09391097fee3ffdf3dc7d7fcf55ab901093980814010c00241000b04012c10
04b04010c00241000b04012c1004b04010c0024100cb1482d87555eb6a7fb6b0adf6ca4fad4fa7661ae6677b32972956796396a555ede55bfc35414ec6de2c88
fa38ddd3986569b32066a54781ac46d1bd85e8c93156afe5d9203a0df0260d769a6e5d965f690f92c6511379aab06bc368ed82552b7dd69e9e56b4c601f183c9
3b9f3c0f9747c6d13e7845cfbe2a4b13e768d2bc6866dbf2b4e64b733446a5b9c4e9e2803881bee5017c83994b1097b68da2f51d57b109366e1a93b7481c682d
3db22c0e8ed1be7ba57171a8aa5395f0ad0d9f4d8813d37379553460492da5c1651e2addcf2812e74237465bcad2d08f1c62c812e5b4bbe5a933cbcda5312aef
411c0d586a7b0f672e4142eb522ce9cfb43bd02d40d788fcc8a1fcaaba714b6da96b23ed347c12648b56dbbcca3c1653febf47e974dcf6755e4b6e4da7d1bbe5
59fae674e85b6d133c9f5905a1a3864aaf6b4e216f8e12e117da43e4d77e93ab16deb5b1cdc03bfb2e489987374ab912a9bd71b68b0b7574b73caace6c17b609
b2b5f76ca615240d5df601cb36cab757d58d53bbf05ddf95f620c6f97741b679b8fce71ae5a0ffff7b41021d9176cbd39977b007f1adbd6733ab20b9bf6052ef
3107783ae2b73ec8fe9fa73ec0d6cb08bb365c7a1c6f8e744d90d60729f3a8c724daae2e2c5b5cee83940fddf2b42e4d683d995e90adbd6733ab20f1e4813a0f
c6e8f2d3ea786e60bab3183a71c8aff9c8628a13f5d4a16f239d65681dec62ecd2e6d2ce62f23cca694ac8bb25635a5c9c9c66ac5f97a7365fc2ec42ed99668c
6fed3d9b5904f9c8dd89a43ecc8dcdf950775e7301414ef0710f72e3ff706a6e92f3963d62040163802080058200169182a8c38f6a5c2dd5ea74cd6bc64ee827
fe05417c1daadec7dd3a43892b53444ea9d0aa6c2aae0693ae5f8474c16c49d7aad22509b3afa5d6da2c156369e2adb81b52cc1a6a9db6556fcb786a3ed78943
bdeeb2aaf431b6bf05e789e7478220f9926529f5962ba0215f2133e9913254818d9b2fef41522d55b5da6cba06d61577438ea1abb2f91a69abded6eaaccba594
3aeb72e536cfb105d3c4468221220409bbe2494d4a7b6775484593b74a48abcda6f7edc27757c9ab75da56bdedaab34b2dd4f7d776df82efbcd0f66748102457
61df04b1cefa52a2e36aa9ded689f7a5de7675bf556fb7ea6cae13877741425fea15b17225e490abb0655b6dfb016fa89a970e00a96fd10b126a2dd5aed6fbd7
eeeb5e90be7abb35deabd48dda05630ff20c7215b6d6ce5cdd7861d171b8abb55477584ba53fca98aed4dbf7415af576579d2d2beeb50fb205e73ec88c17d7f7
4810245761ebd637f54011569b5d51e51ba15d2db5d566ddb2d689bb526faa0c973a6dabde76d5d95c270ead7a5c66a8f52ed84858bdf3673000ac940dac8b03
b05236b02e000b04012c1004b04010c00241000b04012c1004b04010c0024100cb7fbdd5b0ec9a31a8300000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.3 }{\loch
Formation}{\rtlch \ltrch\lang3084\loch
 de rectangles par groupes de 1}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Chaque rectangle repr\u233\'e9sente un term}{\loch
e}{\rtlch \ltrch\lang3084\loch
 dans la fonction bool\u233\'e9enne simplifi\u233\'e9e. Par cons\u233\'e9quent, celle-ci contiendra seulement trois terms. Vous construisez chaque term}{\loch
e}{\rtlch \ltrch\lang3084\loch
 en utilisant un proc\u233\'e9d\u233\'e9 d'\u233\'e9limination. Vous \u233\'e9liminerez toute variable apparaissant \u224\'e0 la fois dans sa forme prim\u233\'e9e et non prim\u233\'e9e \u224\'e0 l'int\u233\'e9rieur de chaque rectangle. Consid\u233\'e9rez le }{\loch
rectanble }{\rtlch \ltrch\lang3084\loch
long et maigre situ\u233\'e9 dans la ligne C = 1. Ce rectangle contient soit A soit B dans leurs formes prim\u233\'e9es et non prim\u233\'e9es. Donc, on peut \u233\'e9liminer A et B du term}{\loch
e}{\rtlch \ltrch\lang3084\loch
. Puisque ce rectangle }{\loch
est }{\rtlch \ltrch\lang3084\loch
situ\u233\'e9 dans la r\u233\'e9gion C = 1, il repr\u233\'e9sente le litt\u233\'e9ral C isol\u233\'e9. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Maintenant, consid\u233\'e9rez le carr\u233\'e9 du centre. Celui-ci comprend C, C', B, B' et A. Par cons\u233\'e9quent, il repr\u233\'e9sente un seul terme A. De m\u234\'eame, l'autre carr\u233\'e9 moins fonc\u233\'e9 contient C, C', A, A' et B. Il repr\u233\'e9sente un seul terme B. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La fonction, optimale, finale est la somme (OR) des termes repr\u233\'e9sent\u233\'e9s par les trois quadrilat\u232\'e8res, donc F=A+B+C. Les rectangles ne contenant que des z\u233\'e9ros ne seront pas pris en compte. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Quand vous encerclez des groupes de "1", vous devez consid\u233\'e9rer le fait qu'une table de Karnaugh constitue un tore (c'est-\u224\'e0-dire, c'est comme si elle \u233\'e9tait enroul\u233\'e9e autour d'un cylindre). Si un encerclement touche le bord droit, il peut continuer dans le bord gauche et s'il atteint le bord haut, il peut continuer dans le bord bas (et vice-versa). Ceci fournit des possibilit\u233\'e9s additionnelles d'encerclement. Consid\u233\'e9rez la fonction F = C'B'A' + C'BA' + CB'A' + CBA'. La figure 2.4, montre la table de cette fonction. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2310\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich154\picwgoal8175\pichgoal2310\pngblip
89504e470d0a1a0a0000000d49484452000002210000009a0803000000485b682a00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000062c49444154789ced9d8db9a2301045d3
1ec590622826c590625c1282424846deca482edef3ed1335c3cf85a36056d03c089130572f00691c1a4264680891a12144868610191a4264680891a121448686
10191a4264680891f97543bc99e8dcfca0efae5d9826a1217e2229d2597ff1e234080d89b7f1cdc30d6eb876695a8486c4db684837fa5f5f1d057e7d95cc4e0c
2edd5d8e48c8131a12e8c35d67a7bffeea056a0e1a128e5487498e8719e3c3ab97a83568481c98e5ddc4f058358386c4c1f4d6314437dcafaf901dbfbe42d25e
a68f9204c2be86aca02169d732a6fed481c7aa5b7edd10f20e1a4264680891a12144868610191a4264680891a1214486861099fb18e27be3d6c3729135cb370d
df2537d9b05a23ce109fdb1812be2666c7d7b04ce7d3f7c91ef64df2a55daa8b6df20cf1b98d21ce8557f36b582d9a2b3ad990a55daa4b6de20c6fc06d0c893b
0ff31ad68bbc7d3c062f7f25756997ea529b38c31b709b68f13fefa79b65582f4a5f5e7e937c6997ea629b38c31b40432ad090040da9404312b731e46fc72127
1ac2e31010fef659e64443f859068463fd21e6d91f729a21ec0f41c177a94fb53bd4a77a9a21f20cf1b98f2144071a4264680891a12144868610197043cc999c
3b35f035fb043cc7b1c53f1af2d4a981afd927e03968883ae03968883ae03968883ae03968883ae03968883ae03968883ae03968883ae03968883ae03968883a
e03968883ae03968883ae03968883ae03968883a7839361763a021eac0e5d89e7c4043d481cbb13d8169bff8a540d97383adfc00c4b1ba7c0e955508b7662bc0
e5d89e04992ffeb40b2a8cb37d6e726c2c9fe072ac6e5b559e6361d15081cbb13d917af77a1edf1bd2a7bfffaddb5695e758583454e072c8861cd9cb984ad5d1
3aee65da86867c19b81cf271080d391db81c9f7f9639f7388486b4c6bbfe90439f65dcc1cf32c53a1ad2389b8b31b03f441df01cec5355073c070d51073c070d
51073c070d51073c070d51072287eb4c5fbeda200d51072147173ac9ac2d35d110750072b8b957a278616c1aa20e408ea446f1cae934449df6738897c6a521ea
b49f83865c0b400e1a72290039d271882b1ea99e7af1c253a706b0660f019063e067992b01c8e14dec0f39f43ff16568c80720e4f083619fea6580e7a021ea80
e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea80e7a021ea40e630857bc7eacfa8a321cd6369c8
17c1cbe13bd990034f396b8b9787c8ebca27ffef66505e87786bb60c5e8ec17bc190e2a509b3a7c669bb0fa56f136475958b216655b58b21e2add93288392443
8a9726cc9e0a17baf2a513b4b2baca4588b2aadac51011d76c09c41c9221479e3295b252dd9119d090d6a021df0431070df92688393e35e4dce3101ad21e9f1a
f287cf32a58b21d290e6f9d410f687fc05f01cec5355073c070d51073c070d51073c070d51073c070d51073c070d51073c070d51073c070d51073c070d51073c
070d51073c070d51073c070d51073c070d51073c070d51073cc7b917403d756ae06bf6c95d72102d680891a12144868610191a4264680891a12144e60686186b
d76737786bbb70128309ff425b37a6987d3cb7a194783dce34c6fc33039572dfdbd8920ae31935f529e7e54b31ce7ac759d22adb08be9b6e5c3ffd4543d23361
33fa21343d16977c6d9cb0555fe5262b8f6dcebe0a9d34e57d79f8a58bdd42b70cce9256d946984fa673713bb9b9cdcc1b6d18e3ebddef475b8fb38cb194bbac
7cf0a93615ca53de9587e230bbe2afe534c97d0c71616763b340cb7bc87c7fb9b71e2dbb3b8f31d4cbcdae509a72a13c2b6e9e3b1812cd783ecadb7a33378ed3
a07bee2bac9d9a4a2ffa304627949bbc509cf2be3c9c34dc157f3bb851ee60c8e651b76f9b7ff47be8a66d37644dfb71c2d36193d7ca4d5e284e795f9e1737cf
7d0c497b99f9986279959ad7ad59d56677d7e32c65b5f2f44ee2f38956765abbf2bcb8799096b5c236c2b87c2e79b5c58f10637cddae7e2ecf97c749472ed5f2
31940df659284f7957be2a06d9d5dcce90694bcf1d10735be88588afe3790b8e852bc66cc7896378a1dc75ab0e8eb753cecb57c520ab1e6431c965d010224343
880c0d21323484c8d010224343880c0d21323484c8d01022434388cc3f4c73f6af0374cbb10000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.4 Table de Karnaugh pour la fonction F = C'B'A' + C'BA' + CB'A' + CBA'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
A premi\u232\'e8re vue, vous allez penser qu'il y a deux rectangles possibles, comme le montre la figure 2.5. Cependant, pusiqu'une table de Karnaugh est un object continu ayant les c\u244\'f4t\u233\'e9s connect\u233\'e9s, on peut construire un seul rectangle, comme montre la figure 2.6.  }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1800\shpbxcolumn\shpbxignore\shpleft0\shpright8145{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw543\pich120\picwgoal8145\pichgoal1800\pngblip
89504e470d0a1a0a0000000d494844520000021f00000078080300000065ed602800000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000046349444154789ced9d8175a3301044d5
9e8b31c5a8181503c570602e8923348b622f8611f35f9ce4819e196dfe61a433721885c084a3038853233f8485fc1016f24358c80f61213f8485fc1016f24358
c88f2231a4781fe6df6e47473916f95166aacb90a69fc3c50b74f1ee43e6badca747eafaa3a31c8afc2833d7254e8fd4c7a3a31c8afc2833d525cdaf2ff1e215
ba76ef31d3f5e97ce298ae41ae5da16bf71e33d5254e571e6978fcb82ef2a34c581e312de791cb223fcafcf7a31b2f5ea24b77de609eff98c6b7f3256a188e0e
7320f2a3480c2975c3d8dde719b2eee83407223f8485fc1016cdfbb10c3f360621cb5cc7e67fc52d2dec76cbde2e35f2a2d4ba1f7118e2d7f78d4669b3164b0b
bbdd636fecc746e6e55bf7e3f6f4b5d1a8a216e1e9bbd5e636b6f2c680d6fd084f5f1b8d1cfda87b3606dae805467ebc471bbdc0c88ff768a31718f9f11e6df4
0273dcf5e9bd3ae39969dd8f3f8c6f1dfdd0f89686faf9b118b6fea44b0bbbddb257f363e212c80f61213f8485fc1016f24358c80f61d19e1fe1b3541eefe8aa
bc0a6d7048558ffc1a793ed509a10d0e911f9ed00687c80f4f688343e48727b4c121f2c313dae010f9e1096d7088fcf0843638447e78421b1c223f3ca10d0ef9
e9913193b9931ff088b465a60d0e0985df56bbf7f20335a02d336d7088fcf0843638447e78421b1c223f3ca10d9ef3fd0e75f9e1096df08c9f3b5c0a7ef44ff7
2a413f86aecb161a2bd666d5ace8477e44da32d306cff8b943aee0c7f38a1dd08fdb98df4355ac4d1cb25bf18a7ee447a42d336df08cf0dd95d2eb4b9d1ff956
f46a51e1477e44da32d306cf78df8f50ed4780ade4c759911ffb401b3c437eec036df00cf3fa54d71f2f431b3cc31cdf56fae1387e911f67c39a1f8b21651bf7
9effc88f485b66dae090e2bfe17c7755b7eb6a533e7f641b69cb4c1b1c223f3ca10d0e911f9ed00687c80f4f688343e48727b4c1c73e963fbb587e78421b7c78
7cba756187fcf08436f8e36347e5c7ded00687eb21cb0f4fda0b2e3f3c692fb8fcf0a4bde0f2c313dae0f8fae3b3687dba73d269fcf2096883f79afff804b4c1
c7d4a5921ef2c315dae010f9e1096d7088fcf0843638447e78421b1c223f3ca10d0e911f9ed00687c80f4f688343e48727b4c121f2c313dae010f9e1096d7088
fcf0843638447e78421b1c223f3ca10d9e337cbd21447e78421b3ce77b45b8921f43beb1d46df3ce7cdcacec477644da32d3065f61f9d1d7f8b15a00a45c9b7c
0190b21fbdfc3819961fab8d653fb2cde5da84b1c68f517e9c8cb7fd08d57e04d44a7e9c17f9b107b4c157c88f3da00dbe42d71f7b401b7c85831f8ee317f971
326230d6b74c21fedeb8fbfc477644da32d3068714cf1ff9eeaa6ed7d5069c3f7e6fa42d336d7088fcf0843638447e78421b1c223f3ca10d0e79f203df49bf97
1fe888b465a60d0ef1fbd3ffdd8f379fea84d00687c80f4f688343e48727b4c121f2c313dae010f9e1096d7088fcf0843638447e78421b1cf2da32842fa3f50b
c585911fc2427e080bf9212ce487b0901fc2e21f4a6a28f5275f24c70000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.5 Premi\u232\'e8re tentative d'encercler des rectangles}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1815\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich121\picwgoal8175\pichgoal1815\pngblip
89504e470d0a1a0a0000000d4948445200000221000000790803000000d88b010600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004c249444154789ced9d0b72a330104475
3d1fc61c4687e13070181699c43be833686d0da8d97e956cb96219a6c7af12d01ae1164234dcd50590cea121448786101d1a42746808d1a121448786101d1a42
746808d1a121448786447837fae7bc3e98c6ab4be9031a12b376640e72f8e7d595f4010d89091d097278b6e605db10133ae2d7ef7198ae2ea50b6848ccda9171
fd2b33cda3bfba942ea02131eb916a50c3b3371bec42ccda113fd19037ec428cdbbe9fe3f8e481c84243523643a6d58e69b8ba961ea02131613ee4f93a9b6173
026c428477e338ccb30bbf431ca7556908398286109d1b1bf29ad61846fd70f335687e1c6d6b1ba18fdb9e3dda211cf735c4cfb30f331b933635fa1ab48c875d
d846e8e35ecf1eed108ffb1af2085f8fed813ea8a60b4efcab8d39da211ef735c485af9fe92f7d504b43eab686c4bdd24868481bee95464243da70af34121ad2
867ba591bc8f54b54f139a1ca9deebe38bf735e41fce761b1ac2b35d20ea67ccbc3b7a53b711fab8ed59ce9891ff0c1a42746808d1a121448786101d1a4274ee
6488aba06a5053aeeecab7c0071054653979107e83e10308688805f0010434c402f800021a62017680fd8120862168c7ae60e54a9253050843e04e70906add91
39990432044812984277e4a71bb00c419104a34ac997735736867c5552df20d4b8e7e3fe9b1af2618500ed072831a1d4e2832ca719a26e0acc0f4c4316d967f9
c383d7d40caada523ae823436a76723d2065a6a01b52b3872ec0a93405d7909acdf70254b129a1d9fef703e81086c0751cadde949f4b5e966c96495cdd543264
1e8639fa51b62bf1b8bc2153743d157c83e103fc5e36b764b3c8153f4a86f83959cf21db95c732fbd2a0bf8fe33546e01b0c1f202470ef47b967f70fd3412e5d
f1a3604834eda1ed46df1412f0019a18921c4eea3b4a07d1908ea121b6c007a021c6c007d08f54791cf235f001f4b3dd1a43da9ecbd090fed066ccbc5878fb9c
f9101f2df50ddf60f800028c395534e00308688805f0010434c402f800021a62016280c9e7ef744a432c000c3087ff3dcddd1b888658001820dcc992869c0660
80e2ad1768880580018a25d3100b0003d09053010c40434e0530c0a7b780b28c0ad8c65a00a30dc573999aab202baf966cc7d9ed690d608089f321678218601c
c6eccdb4698805f0010434c402f800021a62017c00010db1003e80808658001f4040432c800f20a02116c00710d0100be00308688805f0010434c402f800021a
62017c00010db1003e80808658001f6099df9f17a12116c007100b87e5b28885e7ca8624d776e7bb120d2b18122d7507df60f80022422e8b5878ae6c48bcee43
a12bd132120543a2a5eee01b0c1fe0c090a5ce90a5e66d754b8d21559b02023e400b435cb5213556d090dea021a6c007a021c6c007e0718831f001da18d2f05c
8686f48677dabd21c4c27327cd87444bddc137183e808073aa164007882e69833004ee323cac6a25e9458f308640490254aa247b592c92213892a0d4b9e3b38b
aa4f33e45e577d4314b9a3beffd9f7c3c890af6aea1a801223ca2db679f3bf1ba4fc95a12176dcc590aa0d5c0d4695293730a4eae5d78352670ab62155afed02
a05253500da97a612f6055ab0361081cf0010455679735839a727557be053e00318686101d1a42746808d1a121448786109d3fb3fa72d2190c0a260000000049
454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.6 Encerclement correct pour la fonction F = C'B'A' + C'BA' + CB'A' + CBA'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Et alors ? Pourquoi se pr\u233\'e9occuper d'avoir un rectangle au lieu de deux dans la table de Karnaugh ? La r\u233\'e9ponse est que, plus grand est le carr\u233\'e9 obtenu, plus grand sera le nombre de termes qui seront \u233\'e9limin\u233\'e9s. Moins de rectangles on a, moins de termes apparaissent dans la fonction finale. Par exemple, les deux rectangles de la figure 2.5 g\u233\'e9n\u232\'e8rent une fonction avec deux termes. Le premier rectangle (\u224\'e0 la gauche) \u233\'e9limine la variable C en laissant A'B' dans le terme. Le second rectangle (\u224\'e0 la droite) \u233\'e9limine \u233\'e9galement la variable C, en laissant comme terme BA'. Par cons\u233\'e9quent, la table de v\u233\'e9rit\u233\'e9 produit l'\u233\'e9quation F = A'B' + A'B et on sait que ceci n'est pas optimal (voir th\u233\'e9or\u232\'e8me 13). Maintenant, consid\u233\'e9rez la table de la figure 2.6. Ici, on a un seul rectangle, donc, la fonction r\u233\'e9sultante aura seulement un terme. Sans doute, ceci est plus optimal qu'une \u233\'e9quation }{\rtlch \ltrch\lang3082\loch
de}{\rtlch \ltrch\lang3084\loch
 deux termes. Puisque le rectangle comprend C, C'  et B, B', le seul terme qui reste est A'. La fonction bool\u233\'e9enne est donc r\u233\'e9duite \u224\'e0 F = A'.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il y a seulement deux cas o\u249\'f9 la m\u233\'e9thode de Karnaugh ne peut fonctionner correctement : une table qui ne contient que des "0" et une table qui ne contient que des "1". Ces deux cas correspondent aux fonctions bool\u233\'e9ennes F = 0 et F = 1 respectivement. Elles sont pourtant faciles \u224\'e0 g\u233\'e9n\u233\'e9rer, il suffit de regarder la table. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une chose importante \u224\'e0 consid\u233\'e9rer en vous servant de la m\u233\'e9thode de Karnaugh est que vous }{\rtlch\ai \ltrch\lang3084\i\loch
tenterez }{\rtlch \ltrch\lang3084\loch
toujours d'obtenir les plus gros rectangles dont les longueurs des c\u244\'f4t\u233\'e9s sont des puissances de deux. Vous devez faire cela m\u234\'eame dans les cas o\u249\'f9 les rectangles se chevauchent (sauf quand un rectangle en contient un autre). Consid\u233\'e9rez la fonction F = C'B'A' + C'BA' + CB'A' + C'AB + CBA' + CBA. Elle produit la table de la figure 2.7. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La tentation initiale est de cr\u233\'e9er des ensembles comme dans la figure 2.8. Cependant, la solution correcte appara\u238\'eet \u224\'e0 la figure 2.9. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1965\shpbxcolumn\shpbxignore\shpleft0\shpright8130{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw542\pich131\picwgoal8130\pichgoal1965\pngblip
89504e470d0a1a0a0000000d494844520000021e000000830803000000f57ae2cc00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004bb49444154789ceddd8195a240108461
d2231809c660088609c653c0d595a67bdc6b85d2ff7befd653114bac87803a36276055b37500ec19f580837ac0413de0a01e70500f38a8071cd4030eea0107f5
80837a189a8be3f54cbf69966d510f433394528e87f1fffdb1dd38cd96a887a129b7bf6d69cbb669b6443d0c77f528cd79fdb1719c0d510fc3588c617c71e9bb
4b43bed6173ff475e3a6e9b449da0e974d91ad036d867a18c64dd3a1ed4fd39a63de48fd46d4c3306d7b94f32ecb715a916c1d6833dffbc81db77acc7b2f5f7b
e8837a187e5e5ce6add2fe6b0f7d500fc3f8827238af32ba79b5d17ceba10fea0107f580837ac0413de0a01e70500f38a8071cd4030eea0107f580e3c3eb31b4
ed707f6a2b879fcf1b07cba32bbf4fd7a7f1ef51c567d763e8cecfd6703bb55dde9a9dafedfce5d1cf6fbef4ce9b30d375fe3dcaf8ec7a1cca65d5703bb5f5fd
7c6d69fd7a74dd548beba9338d7f8f323ebb1ecdfca7f93963195f0dc68f8515f773a5433f7f0ab55f7f0bf77a9d7f8f32f41f81637ab29b723d5d996c7a3ecb
ed16ebaef3f0dee1bf5c17dca30cea413d1cd4837a383eba1ecf6e7be4d5836d0f054feeb924d6833d17014f1ff748ab07c73d14541e356daf474dd3eac15153
7c3eea0107f580837ac0f179f568ead44e973cb7ad97ce93d4f2c66a1f51dd74b973935bdc6a7963d423915ade18f548a49637463d12a9e58d518f446a7963d4
23915ade18f548a49637463d12a9e58d518f446a7963d423915ade18f548a49637463d12a9e58d518f446a7963d423915adea5bbafd78fa84722b5bc0b771f33
9f508f446a7917eebea432311e913924fac374c7cefcd1a7e5dcec25f670e9da20ec6a8b5b2defc2dd57dc26cb4774301fe4ef0bcf2d1bacdf5d78bc69b167f6
30ddca447a8b5b2defc2dd1764e70b1ea768878a7a1ce67ffe54e7f3f6cc7e4fb7728f56b89d53cbbb10d763e541368b73d6647f7c71a11e3b413d5e492def42
c5b607f5f833b5bc0b357b2e89db1ed4434bcd718fba3d97be66cf857a88b97dbd7ef2b77a241ff7a01e7bc551d3446a7963d423915ade18f548a49637463d12
a9e58d518f446a794fc3a1f17fb39c7a2452cbdb75e73f47ef47cba94722b1bcf3f1d183b3fea01e89c4f21ee3c120a94722b1bc15a394538f446279a9c77b89
e56da9c75b89e59db73d066713847a2412cb3bc47b2e4824568f533b1ef7f07e09237b24d2dcb9bd6b392551cb7bea5b8e9abe8f5ade18f548a49637463d12a9
e58d518f446a7963d423915ade18f548a49637463d12a9e58d518f446a7963d423915ade18f548a49637463d12a9e53535ab676a6ff49f53518f1deba8c7aba8
e55d2a6d5c0feb93ed8fd3d9dfc136e65633901d43cfedc5b194a81ee648700f97ad8c3db7bc65cd40760c3db723513dec91e01e2e5b19ff6571cb9a81ec187a
6e4fc2b547cd658d3d59dd45e6dc2a26db3db5bc16eaf1326a792dd4e365d4f25a52ea51bbed413dd4a4d46365ec39ea212fa51ef5c73da887328e9a2652cb1b
a31e89d4f2c6a84722b5bc31ea91482d6f8c7a2452cb1ba31e89d4f2c6a84722b5bc31ea91482d6f8c7a2452cb1ba31e89d4f2c6a84722b5bc31ea91482d6f8c
7a2452cb1ba31e89d4f2c6a84722b5bcb1ecb10473e7b6f5d279925a5ebc15f580837ac0413de0a01e70fc035e04bb5c95c8ea790000000049454e44ae426082
}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.7 Table pour la fonction F = C'B'A' + C'BA' + CB'A' + C'AB + CBA' + CBA}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1785\shpbxcolumn\shpbxignore\shpleft0\shpright8145{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw543\pich119\picwgoal8145\pichgoal1785\pngblip
89504e470d0a1a0a0000000d494844520000021f00000077080300000094bbd2fd00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000006e649444154789ced9d097683300c447d
3d0e0387e1301c061f8606ca8e25645b2c4a66de6b4982903dee6fbcb438ae83205aeee90a40af16f88038810f8813f88038810f8813f88038810f8813f88038
810f8813f88038bd9b0fd7abfe7f5c16cfd6254fbe775234ff4f0c5979391fadf7be2e87c745e51fae4d8ebcfb38f1232086acbc9c0f3f7f6feaa67eb83639f2
4343fbe18dc39215337c14ad7f775d79adf9b064e5dd151dc868fbfea56fd1a9fbb6a87f22eaa63366e5e57c0ceadbb2a93e5fe5d3f549d7303e75830153565e
ce473f3e6dfb5f36d70e63bca72b94acfff169fd41c3969597f331b4e2a7d7fefff573668675078d230ed719b362848f7a68cee6ddb5e534f1e18d59797735e7
fe657c3beedf9a6d6aec5fcace989597f3310cea9aae1d171c6b2bc3ba83fcd4a918b3f26e3ea0a775171f8d2bfdfa18545b14e3bbeed902b4db1dc9185f39e5
c5ec29239f79f1a967a574f7af9adcc447fb99d8157e399241d500487332fdabdcf648c77c0af3ba7f0d9b32b299179f6a56fac2aadb072d37f1d1ff3235cd72
24837cdf2d5715dba8bea8dcfac8c40c659105a668cac8679e7dea5af1b70f5a6ee263f805a896235d97cfb7769eaf8455fb71b5dad37fc718cf8d3d415aa583
9a32f299279fda566e1f2ede53e060f0f36d3ad241eb3fc99de46352cde7863caa7f0d9b32b299d73e55addcbeec0a3e22053e2e10f8e0abc9a49acf7d331f71
e38f4eaf519f1e7f74ca56be74fc31ccf5fa01f8740c6a9ebfe835ea53f397954f4d2b5f3b7f895cff506bd43e91f2fac79491cdbcf2a965e5abd73fbac64dcb
45241eebf553353e9e5b3f9d7cea5929be77fd14322af00171021f1027f00171021f10a7cbf87002e90509759913452b42bfca3f2ed2fca389df18947895092b
f1021f4a5799b0122ff0a17495092bf1021f4a5799b0122ff0110c5c47dae0e3a2212bf83846ede60766f8b80211f0b10b39ce1f2df1a14e08f8589f0fae2fd8
e2431991ebf9e0d677929a42b67e142a912b2e356baa153ad566ec9353250dddc007733a8d0f495030820d4a6efd443ec8f3e4d8f80940c0c7124034f069af24
ac4097cb0791e9fff9356f1fe0631b63968fee0a38b80aa825b6c447179a07d8e243528d08818f40a4593e2475889376ca795f03c37c74c3fae9fcffc756f890
54205aca5997ffeb37cd47af79ff061b7c5c24e57296fd1b827cb8dda340e94d55edfe8b9fe2c37141c11263cc2ef73f71802f8f62ad046bcff221f2ab2de572
fa74fff71506f8f0e579a3b675d7d5dbbb80c27cac930533054a8c31bbdc3f19ba2adfcaeae1928ce143e4575fbae5acee4b0ef0e1daf346ed7f2cbbbb5ac37c
ac930533054a8c31bbdc7f1dba2adfcafa612be043e4575f77f22179533eb4d053fd0bcf47be959fec5fc0c73e027c1cd291e30f537cf0e30ff091a62277fe22
1e7f5ccd47fefc453cfef8213e4ed63fce1b553c7fb99a8f65ff86543ec4f3971fe263d9d720918fd7ac7f9cad9fe65af9513e8e89b9e615954ef171fee23e22
cdecd9556956681724133195d212f8882e3f7c1e7c2426061fc154e0832d017c90e7c147073e7e878fb67445e0c3d42cf211b6023e7254f52b40f571a347837c
1056c04786c61d5bcbc3ce8bf6f8a0ac808f0cd5d48eadf6f8a0ac808f9ceba9dd5fedf14159011f39d79f6e4eccf19156e44597a57e3682e2ace8f0e25d1890
caad00b95bb6e82640b520a192acc832df1b64667fbab1d36e0f7db7bdfe85b282fe2543edf7cc5f282be02347c5f7ac7f1056c047969ad21581cf9d30c80761
057c5c9ad8101fb2f2c3e7c1476262f0114c053ed812c007791e7c74e0037cf025800ff23cf8e8c007f8e04b001fe479f0d1810ff0c197003ec8f3e0a3031fbf
cb47f505fbd36d92820f4d35ee6bf8a8c0877a3955c5f2516c5f0d965e57db7b0c483e440db92e31caac2f783e76d508451d6ed026f970ab03694be45759cae5
b44dc7f1514a1ab5e9b3ac44f0b1ddb08df2b12931ca6ced3dc3871758396ef040f03127e3f890f9d5967e390c1f452be0a31cbfba6de8e1f976c336c2c7b6c4
48b31c1f4e60e5b8410cc1c79c8ce343e4575db7f2217a5376e435e11ce1a060b4221f122b879f36fa970e7cec22c0c73e23f8589f001ffb8c997c48c71fefe7
433cfe001f872774d37fe62f8d64fef27e3ec4f317f07178c234bdeefac7837c60fd4392385c02dbf444262ee179a6083e5cd4e767a759a15dc4613fbf70cd3d
75e0e310b7bf7fd10e1f1720023eb64181fb5b4df1a14d08f8584548152afa063e12eb97a51bf8603ca4f19128beb8d4aca956e8541b3eb2eaa4a0ebf9b01244
36b0ac891eb6023e6e08fa163e240984021fdb08ab7cd81d9f9a0bb2cc87e4d228818f505cd4fa987605d2f9905c1829f0a17495092bf1ba8e0fc9244c2d48a8
cb9c607f3ae827053e204ee003e2043e204ee003e2f4077f2b7e1826f066060000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.8 Choix tendanciel des rectangles (incorrect)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1800\shpbxcolumn\shpbxignore\shpleft0\shpright8190{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw546\pich120\picwgoal8190\pichgoal1800\pngblip
89504e470d0a1a0a0000000d4948445200000222000000780803000000f8e069a000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000053949444154789ced9d0192a3201045bd
1e87d1c378180e23876182c9980641884ae49bffaa66cccef66a37be1a902ca4b3846cd25d9d00691d2a4232501192818a900c548464a0222403152119a808c9
404548062a4232509190ce313e5ff7eada5c9a808a8474933166ece7d76a301767d3005424a433cb773deaf1e26c1a808a840845d464d83e5464c52cc7e43a1a
e787d257e773395424641eae76ce0c3d3cbefaabf3b91c2a12320f5727f7dba39bdc6f929f1fb0529190a713463dec90cfbfbf0b15095914196739f4cfb7d0cf
37c08aa5a3797531aebbf969a848c8dcbbf4da4eaf99d5f1d707ac548464b8b322baeb8d3c4699947af524b9c9f62e382663ccd0dd69e2fec68a4c83b5cabc8f
c9a0617644671e6f87ce3fa6631e1733377affefc68ab85f1d5abf8fc920e3461bc3b0a98851cfdbff7fdc8899af95bc201e3756c4956686f73119e4be4dcb13
4c9cd13cdfaef93f6ec4cc9d4cf28278dc5791f9763dbefd1fd341f29dbbccf9364eb5fcdd7c9e1bbdff779f4a42a8c849dca792102a7212f7a964c54763117b
9e221c8bc0a05e4f32aae889e63c45f84403c387f322a729e24ec479110c74a78c3c4679cfae9ea6086757c96f414548062a4232501192818a900cb752a42be0
bca042ae6e94c3e05720282aa6c5a0a6c1af40d0e2ddc76f60fc0a042dde7dfc06c6af4050e5c61e1c87e037307805fe70b08e22fbcf1455046e040b96aec7ea
890145112c4b9072f5883d5402290264094ca23ef179072c4550240149537268f4584b914329b50d428e01bb6f405545766608d0fe0029ae49b571a698af2922
7fb8d5d1200802aac8ceb148738a9464723d2069464057a4248d26c0c93402ae222539b40254b2115cfecbe610208a9424d01068f946782f828050040efc0ac4
e610c9fb245f4582f430042ba3528a24ff107d4d451ac195f05c1f1929c6f47945a6d1dad1dff42eae883c994d292282a8481b8865dd9162ba29af885b1715ac
c18d2b224f66538a88202ad206db8a947434917fcb8ee60d7e0554a432f8156c8f45a8c861f02b109b43ec54a4782c424540c9cc8b9cf844434550593687e0bc
480df02b10648a492ab279a6747c4a11ef87f80d8c5f81808ad400bf020115a9017e05022a5203fc0a0454a40698154c7da7229f5947456a0059c1e0e6b9c6f5
be9554a4068815bcb6d2ed57bbdf52911a205630a63ed0908ad400b182e41eba54a4068815ecfd00ee7db596fdabccdc3f32885524b7eb2e5a20795a50215f6d
9a1a2056f01a8b4cab21093b9a1a205630f189e69b4056a0382ff245302bd07da7229f0944456a805f81808ad400bf020115a9017e05022a5203fc0a0454a406
f81508a8480df02b1050911ae05720a02235c0af4040456a805f81808ad400bf020115a9017e058e01683b3c38f02bb06e512f15a9077e05ee3fc46f2ab2bc23
bca1c838f86b2e928aa4b4f0a294f8217e03e35760276db714f177a78b0769edce224828e2ef87977abd04519176d850444d058af4af2feb87aee2fdfdf012af
df57a422edb0d9d11428b2ba97c73a1a2ad21e54a422f81538a84845f02b701c55a4742c42456039aac8e38946973cd15011588e2a72f2bc0815698760b55ba6
980d45e2a199f8eca5a38ac0add0c3cad663bd20124611284b8052f588ae99455204c712943c3d762eb9fe9a22f75a128e91a547f10d88df914a8a1ccaa96900
520c49b7f1a777bf28a84c9164c0464743452a7217454a52b91c8c2cd77c519103c42e87e587c555c4ee78e86d23084c106845eca753676d0461f961d11509b8
faeeef0e6a1afc0a0445c383d3820ab9ba510e835f01a90c152119a808c9404548062a4232501192e10f25e39aa135ddaadb0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.9 Ensemble correct de rectangles pour F = C'B'A' + C'BA' + CB'A' + C'AB + CBA' + CBA}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Toutes les solutions produiront une fonction de deux termes. Cependant, les premi\u232\'e8res deux (figure 2.8) produisent F = B + A'B' et F = AB + A'. Et la troisi\u232\'e8me (figure 2.9) produit F = B + A'. Certainement, la derni\u232\'e8re forme est plus optimale que les autres deux (voir th\u233\'e9or\u232\'e8mes 11 et 12).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Pour des fonctions de trois variables, la taille du rectangle d\u233\'e9termine le nombre de termes qu'il repr\u233\'e9sente : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant une case repr\u233\'e9sente un }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
. Celui-ci aura trois litt\u233\'e9raux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant deux cases repr\u233\'e9sente un terme constitu\u233\'e9 de deux litt\u233\'e9raux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant quatre cases repr\u233\'e9sente un terme constitu\u233\'e9 d'un seul litt\u233\'e9ral. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant huit cases repr\u233\'e9sente la fonction F = 1.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les tables cr\u233\'e9\u233\'e9es \u224\'e0 partir de fonctions de quatre variables peuvent \u234\'eatre bien plus d\u233\'e9licates. Ceci parce qu'il y aura plus de chances de tomber sur des rectangles cach\u233\'e9s le long des bords ou dans les coins. La figure 2.10, montre certains de ces rectangles. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom8505\shpbxcolumn\shpbxignore\shpleft0\shpright6450{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw430\pich567\picwgoal6450\pichgoal8505\pngblip
89504e470d0a1a0a0000000d49484452000001ae000002370803000000f4aa4fbe00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000001b6d49444154789ced9d5d9aeb280e86bd
b973518b99cdf462ce52faa2b2984c971ddb92f891848503a94f4fcf9990820f596f1c3004581eb0896c79b703308f01d754065c5319704d65c0359501d75406
5c5319704d65c0359535e3fafe5abebed77f48fabffffb73e6f8f360e9f5f5df65f96b9226394bd2c4f79f378833655b558913db4b22b5be64d28b479ae4cc4b
b3cbb04a1fd68ceb9f7ffefb6ffd87a47f5c24de3f687a7bfde7df7fff245a396992d3284d9c29dbaa4a9c585f064a939c59e9e40d93f461cdb87e0aae352f24
fdf87b7e98d69724bdbdfeb3fe679026390bd2ff0a69e24cd95655e2c4fa9248ad2f99f4bf2e6992332bcd2ec32c7d58302e26b8c80a96fd3f8334c969973669
53e94cb9cbd2c4ed9cb478636c5ced77574c4cb37757a0b4bcbb46c1956fbb745ccd6d972addde76054acbb64bc57553db55e8196a177ea167a8495fe819c649
273d430dd74d3d43d83b0cb8a632e09aca806b2a8bc1f5d42ca416635de5ca6ef4b29335e25ab83d17af99a51bac595a66480b98a535298734abc6944b2bf65c
c4e73449dbabd5b26a552575d98bea759bbd764b01572a0d5cab01177095d2c0a5991c718ac225879b2cd761c625c79b2271c901a7b170c9f1dc285c7230d772
1d665c72343712971cce1d0bd74f2e3a5b12856b93e4932a71b8c45c49282e3159f29b702d9961eb4ada8a6b49b4e370eddabf1117eeae9c40d6d076b5e11aba
ed42cf50a4c7ee196ac5f0dc055ca53470b90db8b4bf8c844b46a8c19aeab5d5dd5cb4d9a7dbac119798abf1cf779543e396b2cf1ca90595f4acf35dfa979f9a
367b842f43772e69c0a5790d5c7b1ab834932baca270a52bb7a21f93d952ade0c764aa3d142eb9c22a0a57b272cb725d565c727d55f82014d51e0ad7b2feef5c
9a14854bea9aaecb8c4bacaf0ac525b507c475e68ec5c5bd08c3b524dac11328f4efc0554a5b7165d65785e14ab487c2255758c5b65dbd70a5ebabe27049eda1
70c91556c13dc33eb832ebabc27025da43e19286e72ecd6be0dad3c0e535e0d2bc06ae3d0d5c5e93116ab0a67a6d7537176df6e9b688b4de5ddc30df25336a11
4a23d61597f864e0cb30f1222e2226076a065c9a3470ed69451ab892adf8e270259b1e06e24a763d0cc425b73d1c0a97dc8a2f0c57b27d60ec20d4a3d77c57a2
3d162eb1155f1c2eb9e961242eb9eb61242eb9ede150b8f67ce1b85e925d70a5da916d97d006ae525a9106ae07702569e05243940d0c70a986e72e4d1ab8f6b4
220d5c890197260d5c7b5a9106aec4804b931e0a17f633d4a4879aef92c5f4cf8ebd5adc5d15032e62c0550821700157a12e7bd18fc1250f060bc3951ec11687
2bd10ec4950424f1c29d7e18cc862b39182c0a57e608b6305ca9761cae34208917eef4c360465cf260b0305ce9116c71b812ed405c4940122fdce987c1ac6d57
275cbbf092fb5321ad54f52c6b47b65dbf1757a7bb2bd5fe55b87ab45d5b48fbb45da97630ae61dbae355f979ee1cfab5e3dc3443b18d7b03d43ad189ebb80ab
9456aa022eb51870015729ad54055c9962daec8d6666e9066b96fed8f92e61f2a39558482dc6bab07a12368801d754065c5319704d655a67093696bdfbf302f3
18704d65c0359501d754065c5319704d65c0359501d754065c5319704d65c0359501d754d68a4b9ea49c1eed946c7d972e36a948d39cc9e94bc9ce77723d48d1
e459caa9f472499ae47cd57246406c32f8b047e4b4565cf29cf2e468a7640bb9cc62938a34cd294f5fca4bd3dfd4164d9e541e2d4d726eb59c5a72934147444e
6bc5b5fe3e9cfc487c7b49b6ba4bb6becb2c36a948d39cf2f4a564e7bb643d48d156a99ab4dcf8ce294d726eb59c11909b0c3a22725a2c2ef9b364aebf1c0b01
74699a330d5841daa4dd5b9a4444682d0f9e36474478d7608db8daefae989866efae40e9e4ee5271dd7377e5db2e1d5773dba54ab7b75d81d249dba5e3baa5ed
2af40cb50bbfd033d4a42ff40ce3a4d39ea186eb9e9e21ec2d065c5319704d65c0359535e1eaf9fbfd1ba5fd97191721b312b7365c977fdd18771e54ea4bb3b4
be0caa12c77a513d62b6c837e2129f95c0b5675e2975e55f455a0986435a2faa4801972ead0403b88e74d921a71470a9065ca9b63742f5f2c66a8ac686586271
f1f1ac505c7c3c2b16171fcf1a0c171bc08cc5c5478b4371f1d1e2585c7cb478345c747a2016179f8b09c5c5e7628271b1b998c170adb33e93e25a4ad24a30ea
315ea8f468b87077c90243df5d68bb6481a1db2ef40c6581a17b864e67d474d921a7149ebb5403ae54db1ba17a7963353603ae54db1ba17a7963353693116bb0
966aaf9ad7870b5ef7bafec6bbebaac5cd775dd8c44e93c27cd791363ba47e6bd8bf567eed972170b98b029731c3f997df838b2d84eaf0987c2c7c0ac525a443
71f1a56183e1620ba13a0c421ddaa1b88474282ebe346c345c7421548721de63e153282e211d8b8b2d0d1b0cd7b25fbbcd193faec24c4404ae433a14178bc868
b8d84228e09211190e175d08d5a3edea824b48c7e2624bc306c3c5164275e919f6c025a44371f1a56183e1723ae3c15577e8122ef197505ccea2c065cc70fe05
b880cb5814b88c19cebf001770198bbe11d7f5c302e2a431dfe52f75357da528ee2e7729e0022e6351e0ca19dbe82f1617dbe82f1817dd55311817db5571305c
7ca3bf505c7ca3bf585cccedf041a87244de8e8b6df4178b8b6df4178c8beeaa188cebbb129177e37ae5ecf265f858927fed5226ed1eb8aa1101ae421ab82a39
812b2f0d5c4629e0f297ba9abe52d4aefd9b9ebbaaa5800bb88c4581cb5d0ab880cb5814b8f452572d4e1afb19fa4b45de5ddac7f2a965b04b2b97f539775770
9afe09b82a065c65b7804baf15b86a065c65b766c6c54e898bc5c5a56371d103e83acc268fbac9103f252e1497900ec5c50ea0eb309b3cec165eec94b8585c5c
3a16173d80aec36cf2a81be4ad39fbe012d2a1b876edbc74e612a939a4812b0e579fbb8b490f89ab4fdb25a43be0ead27631e9217175ea1972e9785c9d7a8654
7a3c5cb55257d3f44fc1b86ad2ca65cdfcdc552d055cc0055c6a354653676fda6777bc4a98ef7aabc99bc76f6669bf2b71576156e2361c2e58cd806b2a03aea9
0cb8a632b5c7021bcadefd7981790cb8a632e09aca806b2a03aea90cb8a632e09aca806b2a03aea90cb8a632e09aca806b2a6bc5c50f3b96472fadef90ade98e
378e1f7a69d234273f7ae921b6a67b3cc4a2889af1c38e73d2cb256992f355cb1901b60fe0711d96889cd68a8b1f252e8f5e7ac8fde31e720980264d73f2a397
4ad2c499b2f1a3c4e3a549cead96538bef0378bc6389c869adb87ecaad352f247d6c45f7105bd31d6f1c3f52d6a4694e7ef492dc9aee211745d46c95aa49ff7b
4d9ae4dc6a3923c0f7013caec31291d3627131bd45ea2fc7afe175699a330d5841daa4dd5b9a4444682d0f9e36474478d7608db8daefae989866efae40e9e4ee
5271dd7377e5db2e1d5773dba54ab7b75d81d249dba5e3baa5ed2af40cb50bbfd033d4a42ff40ce3a4d39ea186eb9e9e21ec2d065c5319704d65c035950d87eb
c6250d81d2eeaa1aa3d386abe3af1bbd4a810b86f4553e66b7c75a30244b5d4dd33f898f61cfe578aa94595a5ed160cbf182d3f44fce100297bf147001972d84
c095333ec4128a8b8f6785e2e2e359b1b8f878d660b8f80066282e3e5a1c8a8b8f16c7e2e2a3c5a3e162d303a1b856d553da19c26a2036d5e29e50aa542dc67c
2e66305ccbcf7f93e25a8cd2be182f547a345cb8bb648c87bebbd076c9180fdd76a16728633c74cfb05e0acf5dc0650b2170f94b01d7c8b8e4653658585db7ba
1d5795c36d6a6db8d4d91bcdcaee7a95d202cdd29f3adfa5dfea6adaec9026e5f8a2fdb55f86c0a5b80d5c0529e0ca195b08158b8b2f0d0bc525a415a986c7e4
6329d860b8d842a8585c7c6958282e21ad48350c421dcbb546c3451742c5e2dac661f7854fa1b884b422d530c47b2c051b0cd7b25fbbcd19352d5c38b53be03a
a415a9860994a3bac170b18550c02523321c2eba10aa47dbd505979056a41adaae5171b185505d7a863d70096945aaa56738282ea7336adaec109ebb1ab2799d
51d3668780ab219bd719356d7608b81ab2799d51d3668780ab219bd719356d7608b81ab24967aeda14f35d0e696d7e4b8f986dc2f257dd5d8ab4d47648f78c88
cd838a01d79d11b1795031e0ba3322360f84d18dfe829d631bfd05e3a2bb2a06e3a2bb2a8e868b6df417eb1cdfe82f1617733b1657c78894cd8c8b6ef4178c8b
6df4178c8beeaa188cebbb5b44ca666fbb96337bb4734bf22ff99b22a53530c4ede8b6ab63444a065c656de0ca3b075cc095bafdab7011c373d79d11b1795031
e0ba3322360f2a065c7746c4e641c580ebce88d83ca81870dd19119b07d552572d4ebae37e869f32dfa57eecbc69fa27e7c732cd60f75a91fa9cbb2b384dffe4
bc4ee0f297022ee0b25d2770f94b01d768b8d82971b1b8b8b4f33a155cf400ba605c547a345cfc94b8505c42da799d755cec00ba585c4c7a385cec94b8585c5c
da799d0a2e7a005d302e2a3d1aae35671f5c42da799d5adbb51cf2e16d1791062ee3751a70f5b9bb98f490b8fab45d42da799d165c5dda2e263d24ae4e3d432e
edbc4e03ae4e3d432a3d1eae5a293c770197ed3a81cb5f0ab8c6c675d5e2a431dff556939f78bf855575abd793e282d50cb8a632e09aca806b2a537b2cb0a1ec
dd9f1798c7806b2a03aea90cb8a632e09aca806b2a03aea90cb8a632e09aca806b2a03aea9ac115732b126df4827deac5371e99c5d98749af13dd26906eb5468
33aeff2dff7bfdb3e1da5e3ebf4eefbef6f45ee4ebe7e70fcb4371eea5bae57c39b9165a84f442a47f5e9fce94b557a9aaf47249fae53b91de23b04b9f11795a
2342ac15d73f7f9f7fff59ffd9aada5e7e2fc785af2fb7f456647dfdf5787c69b836a92de7facefaf221a41f447a7d4d9c296baf5215e9c745e92de7297d46e0
a54a22f2b44684582bae9f4ad79a97adaaede5e3fc9cae2f1fe473babefea2f75b4dfa95737d677df9fde0d25b7a2bb2be26ce94b557a98af4faf282f42b0c87
f419815df58cc8d31a1162b1b8d4af9585be53937ee57cbcb46dd27a4c97fed23bae856b1d5f86272e6b4488dd8cabfdee8a8969f6ee0a944eee2e15d73d7757
beedd27135b75daa747bdb15289db45d3aae5bdaae52cf50b9f0a09e614e7ad49ea182eb9e9e21b5dc1bf2ef78eeaa66002e4dfb8dd2c0151fd38ed2c0151fd3
8ed2b7e352eca99ab9a8bfaa66afdaaed5246d30533d6f5a305476cead64ffe5a42625337ccc822175b99df8e4a4e9b2b4ccaa54956adba5e5e7bb7d1561e60a
bde9a2b6cd034f29e01a0c17bbac585c226432ab52551d575d5aa47db85849e0dab32a5501573ee331c4128e8b8c6705e3fa26e359d1b8c878d678b8c8006634
2e3a5a1c8c8b8e1647e322a3c503e23aa707a271d1b998605c742e261cd73917331eae75d667525c4b495aa47db8162a3d1a2edc5d323df4dd85b64ba6876ebb
d0334cd223f70cd965e1b94b4a03d79e55a90ab872c69c032e293d1a2e66cfebd651fb1dd2011133e9b4e152676fda6777dc4ac93bcdd2fa2455258e22a32a95
546e8a7c232ef1c908bcf5bd52f52f4397b4eeb63d8e22fdde2f43e0d2e2f8665c543a1817fb4b302e97b40f17931e0d17fbb96b302eb6342c14d7b74bda7977
b11f000f868b2d848ac5c5978685e2f249fb70f1a561a3e1a20ba162712ddb1bcf0eb87cd24e5c6c69d860b896ad867eb89efd7059a57db8584446c3c5164201
978cc870b8e842a81e6d57175c3ee986b66b545c37f40c3be0fa76497f50cf904ae3b92b91062ea3147001975b1ab88c52c0055c6ee9d17089caaf1ae6bb92ca
4d91c7048ac76d7b1cc7babbbcd769770eb86a86b6cbe376511ab88c52c095c7b51cb584e3dafedc617af24136c18cc7756cf9341e2eb22f63f8afeac8be8cd1
b8c82698d1b8be694446c345f6658cc645f7658cc64536c10c1fe27d92888c86eb862fc31eb898dbd15f86441ab88c52c0055c6e69e0324a01571ed76978ee4a
a481cb28055cc0e596062ea31470194a5db521e7bbb09fa1ffb354fd4467aaaadf022eaf9c2bffeb5eb8d3456d9b079e52c0055cf9e80397c5d86561e5bf9406
ae3dab521570e56caba0cf2643443a1e1739802e1a17911e0d173f252eb6ed22d2d1b8d80174b1b898f468b8f82971a1b8a874342e76005d7057834a8f866bad
a00f2e2a1dff65b81cf2e15f86441ab872d1cf5465c0d5e7ee62d243e2ead37651e93eb8bab45d4c7a485c33f60c977e3dc365dc9e21bb2c3c774969e0dab32a
550157ce9873c025a547c3254a5d35cc7749eb894bb3a76ae6a2feaa9abd6abb5693b4c14cf5f4c105eb64c0359501d754065c5319704d656a07133694bdfbf3
02f318704d65c0359501d754065c5319704d65c0359501d754065c5319704d654db8926935f9463aed669f884b727ea0769ac13837da888b9c47bcbec10e5e5a
1d39b623db8b9005007571a1fde0fbeb67b5e98feaaadae4b0e382f6724dfbe57d457bfb1da9d4ee8a8b9ef6fdf3063f78e9bf0c643bb2ad085b005035a92d4e
5eca68f3e51655c7c951e259edc755ed2d6b59fb15a444bb2baeed27d2db2f8e579535fd383f49643b3252e68b7cb4ca1e096d71f252469b2fb7a83abe6a55b4
c9c6726ddaaf4814b55f414ab46fc0b51c17b1d7a97ca92c16cfa4b63879a9a26d08e97283f68eaba07d8af3c501268bbcbbd4cbbe70770585347b77456acbbb
6b085cf9b64bc7d5de76a9da17daae486dd976a9b8ee68bb4a3d43e5b2a37a8639ed797a861cd71d3d436ab937e4df677c36eaa97df77397a847bef10921eda9
0d5c536903d754da77e27a5e377fa5f6cadbcbb67b755b505a70f5fcb59c57e9c2a14d694925edd1f6af20ea874b7c2cbce90b27f5244bead2ca2ada4ad10b5b
7819fc52d36571930725032e83f65b715df544be51d48ec6c5b595a2de5d6b6adac0b5a513ad9af66fc5b58e94bc864ba2719141a7685cdf5c5b29eafd323c07
b406c3b58e43ee8391c1b8e8906e342ea1ad1475e222c3c583e15a47f9f7a1fe605c9becb16f931631352c156da5a817d73919f3eb702daf91ea1eb80e6da5a8
13d752d3fe705cb8bbd076fdd6b60b3dc35c7ad89ee1554fe41b456d3c77d50db83c95dbb5816b4b275a356de0ca98bf74f1af173d4924d81f5c257d41c17c97
cd30dfa599f2fd63f902b3fb830914ab0725032e83f6406d572c2e67c4d4b0141dff455d0dba7e2b1a175b1bd6e331f9d0568ab63c26bf54c6c2c5d66f05e3e2
6bc37a0c421dda4ad19641a84741fbfd43bcc77eceb1b898769721de47e10eb88a8baedf1a10d7b323ae67475ca52fac8bb8969a367015b41cda4ad196bb6b48
5c6cfd5697b6ab0f2ea1ad146d69bb86c4c5d66f75ea19f6c0f5cdb595a21fd3337444287795c9a514b5f1dc5537e0f2546ed706ae8256d519aead1405ae2d9d
5c4a511bb8ea065c9ecaedda238dc85fb68a3f4e8b9cefd2e7a4ecdab2ec95b9345a8d2917b3be1328ce0fa5ea8c435bbf03ecdab2ec95c919772e66c065d07e
2b2edf555c6abb9c118c6cbb9cb8aadac0954d0357c6f6dabb4c4fbe646d53886e5c0e6d37ae631bccc170d19d13c371adb2d62944272e97b61317d90673305c
74e7c4705cabac750ad1dbd5f0687bbb1a3f7fb74e4fbee5cbb00bae9760175c2e6df79761451bb8b269e0ca187079b5812b9b06ae8c79ae02cf5db9b2c06571
c6a50d5c5b3ab994a23670d50db81c95cd828bbba9cd1be956f1c76998efd24cff10aa9fe28a3f6ead386defa8464d7ba4bbcb7b95c9a554fc716bc569035721
2c157fdc5a71da1f83cb79556a588adae86a009755fb8370fdd4de69932176705e382e87b61b5745fbbd6d173dc72d1a173b382f18974bdb89abaafd565cec1c
b7685cece0bce8ae8647dbdbd5a869bfffcbb017ae5d7cc95df6e52f4387b6fbcbb0a2fde1b83add5d2eed165ce3de5dbddaaeedb2fbb45d2eed265c23b65d9d
7b864bc79ea143bb05d7903d43e755a961296ae3b90bb8acdac055080b7061beebb2f687ce775db79ee2636afbc39cb5065cb0f719704d65c0359501d754065c
5399d6b9858d65effebcc03c065c5319704d65c0359501d754065c5319704d65c0359501d754065c535913ae64e24dbe914eccd9a7ea929c1fa89d6630ce5f36
e222e711af6fb08397ce5dd41672d9e4f7ff7571a1fd60dbebe7b5cf9fd529dae4ace382f6724dfbe57d457bfb19a9d4ee8a8b9ef6fdf3063f78695fa6b0ed46
b61561bfffaf9ad4e6072fe5b4e9820bc57172927856fb71557bcb5ad67e0529d1ee8a6bfbfdf5f683e355654d3fce4f12d98d8c94f9221fadb247429b1fbc94
d3a60b2e14c757ad8af6faf28af62b1245ed579012ed1b702dc745ec752a5f2a8bc533a9cd16bf54b50d215d6ed0de7115b44f71aafd86bb4bbdec0b77575048
b37757a4b6bcbb86c0956fbb745ced6d97aa7da1ed8ad4966d978aeb8eb6abd433542e3baa6798d39ea767c871ddd133a4967b43fe7dc667a39eda773f77897a
e41b9f10d29edac0359536704da57d27aee775eb296ed7f65fe89b82721a160c919281dadae2a354bb1f2ef1b1f0a687d9c24b09c615ed86206971cf786831e0
3268bf15d7554f6a97cdfe72ef6257251857b481aba055d3feadb8d691924efb6a9041a7685cdf75ed6bb8c880d660b8d671c84ebbd6d021dd685c8af6355c64
b878305ceb28ff3ed41f8c6b93edb32794a27d11d73919f3eb702daf91ea1eb88adad7702d35ed0fc785bb0b6dd76f6dbbd033cc1518b66778d593da65b3bfe0
b90bb88adac065490357360d5cbf1497b88acb56f1c769b3cc77e140a8420687b6128c2bdab22c4e182a6470682bc19816972f8468bb52bfeec545d76f75794c
ded786f5784c2e6a2bc1b03c26bf1c180b175bbfd565106a5f1b168b4bd156826119847a14b4df8a6b59ebdffd8fc5c5b4bb0cf116b5956068b8e8faad01713d
3be22a7da944e02a6a2bc150702d356de02a685dd0568261b9bb86c4c5d66f7569bbfae052b4956058daae2171b1f55b9d7a863d707dd7b595604cdb33f485d0
898b5f955baba6fd5b9fbb5c2104aed42fe02a64b08714b84c69e0ca041eb8b4907e2c2e51e6b2c569e34028779924adde11156d25ab4c6b9d6d9f5f5adaae3d
d2dda5a5d5b054b495acc0653067cd6a582ada4a849cb8eada4a88a76dbb9c35ab61a9685723045ca65c7bed5fb69ad5b070ed4dd63685e8c655d356426cd31e
70108aee9c188e6b95b54e213a71d5b595105bb4879c9ea43b2786e35a65ad5388deae46555b09b1457bc8e9c9bdf62eb85e19bae0aa6b2b21bea20d5cd9ba80
2b63c0e5d506ae6c5dc0953167cd6a582adad508e1b9cb94cb59b31a968a763542c065cae5ac590d4b45bb1a21e032e572d6ac86a5a25d8d107099728932972d
4e7b96f9aef7ed6788091483b6ae95a4cbe2e5cb6f29035cc055c80a5c0663c2e86a18b4812b5b1770656c53df4feb08c7450ece0bc755d37687d8aefddeb68b
9de3168c8b1d9c178cabaeed0eb15dfbadb8f8396ec1b8d8c179d15d8daab63bc476edf77f19f6c2b58b2fb9cb8e18912f6abb436cd7fe705c9deeaebab63bc4
76edf7e3ead5766d97dda7edaa6bbb436cd77e3fae7e3dc3a563cfb0a6ed0eb15d1bcf5dd9baf0dc9531260c5c066de0cad6055c7a99cb16a78df9aecb263f68
a9d9cbfaebbae2579cdfa1e2a7f5c005eb66c0359501d754065c53d9ff0148af7926626fe15a0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.10 Liste partielle des motifs pour des tables de quatre variables}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Cette liste des mod\u232\'e8les est loin de d\u233\'e9crire toutes les combinaisons possibles ! Par exemple, ce diagramme ne montre aucun rectangle 1x2. Vous devez \u234\'eatre tr\u232\'e8s soigneux en travaillant avec quatre variables, pour vous assurer d'encercler les plus gros rectangles possibles, sp\u233\'e9cialement lors des chevauchements. Ceci s'applique surtout quand des rectangles sont \u224\'e0 proximit\u233\'e9 d'un des quatre bords. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme pour les fonctions de trois variables, c'est la taille des rectangles qui d\u233\'e9termine, dans la table d'une fonction de quatre variables, le nombre de termrs qu'elle repr\u233\'e9sente :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant une case repr\u233\'e9sente un }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
. Celui-ci aura quatre litt\u233\'e9raux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant deux cases repr\u233\'e9sente un terme constitu\u233\'e9 de trois litt\u233\'e9raux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant quatre cases repr\u233\'e9sente un terme constitu\u233\'e9 de deux litt\u233\'e9raux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant huit cases repr\u233\'e9sente un terme constitu\u233\'e9 d'un seul litt\u233\'e9ral.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\lang3084\loch\f0\loch
\u183\'b7}{\rtlch \ltrch\lang3084\loch
 Un rectangle encerclant seize cases repr\u233\'e9sente la fonction F = 1.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le dernier exemple qui suit montre l'optimisation d'une fonction contenant quatre variables. Cette fonction est F = D'C'B'A' + D'C'B'A + D'C'BA + D'C'BA' + D'CB'A + D'CBA + DCB'A + DCBA + DC'B'A' + DC'BA'. La table de Karnaugh appara\u238\'eet \u224\'e0 la figure 2.11. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il y a, pour cette fonction, deux ensembles possibles de rectangles maximaux, chacun produisant trois terms (voir figure 2.12). Les deux fonctions r\u233\'e9sultantes sont \u233\'e9quivalentes ; les deux sont optimales, comme vous pouvez le voir}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Rappelez-vous : }{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang3084\kerning1\loch
l\u8217\'92existence d\u8217\'92une seule solution optimale n\u8217\'92est pas garantie}{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
.}
}}
}{\rtlch \ltrch\lang3084\loch
. Les deux remplissent parfaitement nos besoins. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1905\shpbxcolumn\shpbxignore\shpleft0\shpright8145{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw543\pich127\picwgoal8145\pichgoal1905\pngblip
89504e470d0a1a0a0000000d494844520000021f0000007f080300000078e8509000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000046f49444154789ced9d01b6aa20144519
8c9361304cc6c1381907d353d1d4a21bf5ae71399cbd7efa75698b63fb1510a1bb11f21a57ba00c434f48348d00f22413f8804fd2012f48348d00f22413f8804
fd2012f4834834e9870b2174c3fc3f1f4a97c5386dfa313dc66e5e84ae74598cd3ac1fcba21ffaa170598cd3ac1fcbfb878b2bf29236fd08c1bba9e6314c8f6e
2c5d1ad3b4e9c7bce8c32d7421b8be74694cd3ae1fd3d2ed1b244d935767093dfa6169dc7ad65005daf4234c1590304633065fba389669d20f920dfd2012f483
48d00f2281eac754033dac224308b1ad720e1db71efa51bbd309ed02eac730ccffb6d5ba6f52657ebd477f0cbd6ef9f3855836b7135a06d40f1f1feb2a12c6f9
0bdb29f2700c1db7bad3be75733ba16540fd70f1b1aef67da92e53777bdeb79f097a8172018d4f3f94008d4f3f94008d2fd53fb2fd60fd03d68f3e365cfa54fb
25db0fb65f60fdf8bcff23e107fb3f70fd203ad00f22413f8804fd2012f48348d00f2201e8c7e832c93ed0015ea54c00938f6e7c26b5ef83034b672a066072fa
a1086072faa1086072faa1086072faa1086072faa10842f2f825edfdcb56faa10840f238487d1fac413f1401481e0789ed83bde8872200c9e350d17db028fd50
042039fdb81080e4f4e3420092b3fe712100c97bb65fae032139fb3fae033039fd50043039fd50043039fd50043039fd50a495e4a9573d49e9821a03d18f9f8f
4f06560dd28fd4beeccf97dc673c90168d7e18a5801fc9275788521cfa413f24e807fd9040f0639b0466cb423ff400f0639d04779ff6967ee801e0c73a09dd3e
ed2dfdd003c08fa7a9280dfb51dddd32e9c72ffdf0d55deeea0afc4c3d7e3cccf25e03d515f899fb24b836fde843d867d9acee725757e067ee93e0daf4e39327
b24775054e5051ff477597bbba026760cb0f7ebefc8cf9beb5dd723ff4d107fff2c6e8b6fcf8e489ec51558197c2faa5aff436ff614a873deea31f5f515581e3
cfe37cbcf3c6248874d8e33e1b7e54477d7ecc4bb9d4f4430ffa413f2420fdf8f9f853fa618258ff085bfde3d52bc0f1a77ad4e7c7dc7e198cb55fd27c90cc2c
75f911c2daed317496fa3f80414c4e3ff4404c4e3ff48048be8eca2af6fd1c3008c9fddaaf4a3ff40148be8eca2a383e191888e4eeb4a21f8a40242feec7177d
ae950091a2bc1f5f9c53071029e8c76540a4a01f970191827e5c06468a33f4430f8c1467e8871e1829ced00f3d30529cb1ebc7fe43985aa01f3ff463d87e095a
0f807ea44cc81fcb953cfbdde9997edc7f495e0f887e640f3ad61a9f2cfa71f87da57b71a8612a2b6e0efffbd8f86afef5ccf70ffa6101faa14865c5cdc1981f
87cf17d63f2c60cc8f033ddb2f06b0eb07fb3fcab08c4f7e737fc2d4793ff7a33e10522c0393dfdddf347522fd780b408a383ef9ddfd915367d28fb740a4b8b7
1b9745093f38fed432c5fdc0052239fdb80c88e4c5eb1fb840242fde7ec10522f912a264ff072e80c9e9872280c9e9872280c9e9872280c9e9872280c9e98722
80c90b8c3fc5053079ea0de0e2f1ebb800fa4114a11f44827e1009fa4124fe0010310adea4251fe30000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.11 Table de Karnaugh pour la fonction F = D'C'B'A' + D'C'B'A + D'C'BA + D'C'BA' + D'CB'A + D'CBA + DCB'A + DCBA + DC'B'A' + DC'BA'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2235\shpbxcolumn\shpbxignore\shpleft0\shpright8160{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw544\pich149\picwgoal8160\pichgoal2235\pngblip
89504e470d0a1a0a0000000d494844520000022000000095080300000056cfb1c100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000005da49444154789ced9ce19aa23a104479
ff57f461bc7b77861542d26985ee54f0d48fd91d11aaaabf237184cfe58990a1657400a42d0041a60004990210640a4090290041a60004990210640a40902900
41a60004990210644a11904e26c5c84ef59a0956538c746340ecec00e2d262cfa9b35959bde88acd14237d2b208b6235c144338ed1a74e74c9668289ec397536
2bab175db29960a26f056491aca61768ca31bad489aed94c2f903da7ce6665f5a26b36d30bf4ad802c9ad5e4f2d8635a44c7e891b35a6aa6bee4f2d8739a1890
5e74d1667279ee0f483d7b67f330a9c5f14e512cb7430072853a044c0c482fba6a33b5382c3162d5c4e2fcaf092f793a356333c14c338ed1a7199b09669a718c
3ecdd84c30d38c63f469c6668299ee7bc7e18cd907455e0235a65145b728032071ba4599618018db3abb7e7ee4641da3bc5b4da00c80c409404ed82e0fef49d6
fdc49f692accf44c8bfa131fe3ca0cb2fd3388c751cbbf1fe5839de7fc6cf939f298461bade1966dca5aec6ad3dd4ecbba615c9941b6000220a62d800088690b
200062da02088098b6000220a62d800088690b200062da02088098b6000220a62d800088690b200062da02088098b6000220a6ed0110ff45fddd65f00900f9ac
d902200002206ddb0a20b5736ce5f7cd736601a488dd6a76ac0620000220755b000110d3b67e7f6e756cb529b68e2201c8aadf28af669e6abb7d05cae426f857
f8cf7fdc6fd6fcefeb4a8bd46adb96275ad4e7d2f4caec15efb5ec0029373e7f4fceae25e6b5cfe610bbc72a830dd3deab40f4e70ce25d629edb6aeb418b9e89
cdf200d9bf16b200c918e4e1559e02481623492ee5c9320f90e841566cb200494124f115b6ad150b486f0d0fad160a485ab357c57083f7d501e43329563b3455
69b62d197bf8e7618ceb83ed3348a9ea55bdd73e45979743fc141b16ed3388a3d95b4bcc2d00290aad0f4503727cdf135d6d9fe39903485cb5a24cb4cd404022
7b557dd200892d56b30e75da764a0324b0d036fb0040622bbdcc927c7ecc920109ac522a1b90d8365bb334a7bd6da0c634da965bff0d0224550012506efd1740
2e74be6a89111080443803088098ce000220a633800088e90c2000623a03088098ce00022085b3536fde932aa0532dea73195846c59933086710d3194000c474
061000319d0104404c67000110d3194000c474061000319d6f09c879ed8f38400072bd0024c2f98680acbf7ebec4348e982900b95e00f2a9d7b2ad1d0dc8de2d
583bb36840729ba519ed16d5a37308203993f434bb1a903446726c0eefba8ece5180440fd2d92c009024fa333c3cefccaf04a4f1b7407cb3a5d9ec22405a7fe6
c429dee07dd963fce08041833c5d8daf7f78b64e1f47e7d719e4dc17c8747dc3aa99cd3efb0299fa11ef05c8b328d4720e0524a657e152cf110c484cada6759c
4d3a20926f52af0624a6d2de2cc1e3d769dfe9510ee7ef741c9196d7dee59a5ef1bbba45355161d56ce6a9f6e857cba3e339f083b29377f1d69fda744bad76aa
457d2e0740f29aa539153afe71b2ae1c65a4f28cfdf747ed6536ac4ba15ab367ad5aade9a356edfbbeab1d402abf02c856000220a60004404c01088098bae613
f43900395d0d400004400ab52fd2fa9798dade026a5fa4f52f3145330001902780ec042000620a4000c4148000882900011053000220a60004404c0108809802
100031052000620a4000c454f83da9e374aa85e39ed4dc32a38c6ba78077ef6aafee3e5eed688e6af5665f08485b1e4026d584d5043375960a9995e47dcdd84c
30d38c63f469c6668299661ca34f333613cc34e3187d9ab19960a619c7e8d38ccdd432753ed350fbc8e30d799b8955538b63cf49ef4331b77ad1559ba9c5f14e
512cb743007289be6089019033fa02403adb5343f52597a73326d1317a042097c8074866a2ab3427fa6a79be1790c42f557b477a813a63d21ca34b0072893c80
e4a5b95253a22f17e8c680f4be9e50b29960a2ce9814a7e814805ca25b037262f3182946ea5df314ccecd48497730523cd78e7a6530082ee260041a600049902
10640a4090290041a6fe0309ef6e7ebf6c001f0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.12 Deux combinaisons dans l'encerclement des valeurs portant \u224\'e0 un r\u233\'e9sultat de trois }{\rtlch\ai \ltrch\lang3084\i\loch
minterms}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
D'abord, consid\u233\'e9rez le terme constitu\u233\'e9 par le rectangle form\u233\'e9 des quatre coins. Ce rectangle contient B, B', D et D', on peut donc \u233\'e9liminer ces litt\u233\'e9raux ; ce qui reste est C' et A', donc il repr\u233\'e9sente le terme C'A'. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le second rectangle commun aux deux solutions de la figure, est le rectangle form\u233\'e9 par les quatre cases centrales. Celui-ci comprend A, B, B', C, D et D'. Apr\u232\'e8s avoir \u233\'e9limin\u233\'e9 B, B', D et D' (car les deux formes prim\u233\'e9es et non prim\u233\'e9es de ces litt\u233\'e9raux sont pr\u233\'e9sentes), on obtient CA comme r\u233\'e9sultat. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La table de gauche de la figure 2.12 a un troisi\u232\'e8me terme repr\u233\'e9sent\u233\'e9 par le rectangle en haut. Celui-ci comprend les variables A, A', B, B', C' et D'. Puisqu'il contient A, A', B et B', on peut \u233\'e9liminer ces litt\u233\'e9raux. Ce qui laisse le terme C'D'. Par cons\u233\'e9quent, la fonction repr\u233\'e9sent\u233\'e9e par la table de gauche est F = C'A' + CA + C'D'.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
La table de droite de la figure 2.12 a un troisi\u232\'e8me terme repr\u233\'e9sent\u233\'e9 par le rectangle qui chevauche le carr\u233\'e9 central. Ce rectangle comprend les variables A, B, B', C, C' et D'. On peut \u233\'e9liminer B, B', C et C' car elles apparaissent en version prim\u233\'e9e et non prim\u233\'e9e, ce qui laisse le terme AD. Par cons\u233\'e9quent, la fonction repr\u233\'e9sent\u233\'e9e par la table}{{\super \rtlch \ltrch\super\lang3084\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
L'original ici parle de "fonction de droite", mais le terme correct est "table". Sans doite une erreur de l'auteur, n.d.t.}
}}
}{\rtlch \ltrch\lang3084\loch
 de droite est F = C'A' + CA + AD'. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Puisque les deux expressions contiennent le m\u234\'eame nombre de termes et le m\u234\'eame nombre d'op\u233\'e9rateurs, elles sont \u233\'e9quivalentes. A moins d'avoir une raison sp\u233\'e9ciale pour pr\u233\'e9f\u233\'e9rer une expression \u224\'e0 l'autre, on peut utiliser n'importe laquelle des deux. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
2.6\tab En }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
out }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
as, }{\rtlch \ltrch\fs23\lang3084\b\loch
q}{\rtlch \ltrch\fs23\lang3084\b\loch
uel est le }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\lang3084\b\loch
apport a}{\rtlch \ltrch\fs23\b\loch
vec les }{\rtlch \ltrch\fs23\lang3084\b\loch
o}{\rtlch \ltrch\fs23\b\loch
rdinateurs ?}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien qu\u8217\'92il y a une relation faible entre les fonctions et les expressions bol\u233\'e9ennes dans des langages comme C ou Pascal, ce n\u8217\'92est pas le cas de l\u8217\'92assembleur, il ne faut donc pas se surprendre si on y consacre autant d\u8217\'92attention ici. La relation entre logique bool\u233\'e9enne et syst\u232\'e8mes informatiques est, en effet, tr\u232\'e8s forte. Il existe une correspondance directe entre fonctions logiques et circuits \u233\'e9lectroniques. Les ing\u233\'e9nieurs qui con\u231\'e7oivent des CPU et d'autres composants relatifs \u224\'e0 l'ordinateur doivent avoir une connaissance intime de cette mati\u232\'e8re. M\u234\'eame si vous ne pensez pas cr\u233\'e9er vos propres circuits, comprendre ces concepts est important pour tirer le meilleur parti d'un ordinateur. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_06_1}{\*\bkmkend p2_06_1}\rtlch \ltrch\fs23\b\loch
2.6.1\tab Correspondance entre }{\rtlch \ltrch\fs23\lang3084\b\loch
c}{\rtlch \ltrch\fs23\b\loch
ircuits \u233\'e9lectroniques et }{\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
onctions bool\u233\'e9ennes}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Il y a une relation bilat\u233\'e9rale (ou r\u233\'e9ciproque) entre circuits \u233\'e9lectriques et fonctions bool\u233\'e9ennes. On peut r\u233\'e9aliser un circuit \u224\'e0 partir de toute fonction bool\u233\'e9enne et vice-versa. Puisque ces fonctions ne demandent que des op\u233\'e9rateurs comme AND, OR et NOT, on peut construire tout circuit utilisant exclusivement ces op\u233\'e9rateurs. Les fonctions AND, OR et NOT correspondent aux portes AND, OR et inverseur (NOT) (voir figure 2.13).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Un fait int\u233\'e9ressant \u224\'e0 noter est qu'on pourrait impl\u233\'e9menter n'importe quel circuit en n'utilisant que des portes NAND (voir figure 2.14). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Pour d\u233\'e9montrer qu'on peut construire toute fonction bool\u233\'e9enne en n'utilisant que des NAND, on n'a besoin que de montrer comment construire un inverseur, une porte AND et une porte OR \u224\'e0 partir de portes NAND (puisqu'on peut cr\u233\'e9er toute fonction en n'utilisant que AND, OR et NOT). Construire un inverseur est facile, il suffit de connecter ensemble deux entr\u233\'e9es (voir figure 2.15). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Une fois construit un inverseur, impl\u233\'e9menter une porte AND est encore plus facile - il suffit d'inverser la sortie d'une porte NAND. D'apr\u232\'e8s tout, NOT(NOT(A AND B)) est \u233\'e9quivalent \u224\'e0 A AND B (voir figure 2.16). Sans doute, cela prend deux portes NAND pour construire une porte AND, mais personne ne pr\u233\'e9tend que des circuits construits uniquement avec des NAND soient optimaux ; on veut juste montrer que c'est possible. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom900\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich60\picwgoal8175\pichgoal900\pngblip
89504e470d0a1a0a0000000d49484452000002210000003c0803000000871e9ad900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000040f49444154789ced9b6d9683200c45d9
9e8b91c5b01817038b714445f0230195923827ef47a7ed58f306ae92848e1a45224c8ada8088b98410112e2144844b0811e1124244b88410112e2144844b0811
e1124244b88410112e214484ab1d212a68f74eb3f0a2876a48c8e59bc208771113228cb0173921f48cf8f0822928068490cf8f47f4942431100f3b953df4e651
24eaa1d8e2b3a2848797ba169ce99e45a21e8a343e8f891943f547eea2ead98c1decb348d423b10fcf6062c6ad3f40eda2f2d91c7813c94422cf458eafa96766
f6c40091aae1ed9485746e39ef851a3a8105654aa7f0e453b31659d48c540d6e3aadd532030f0869320e60a674119e1a91253e352255632bec8cd9484d8601ce
942ec2535fbd2ab8a0f45133b49d6f1f7df90c1c0e68310c6ba674758bbb0a4f7bf5aaf09392919a8117366cff345283410899522921a488c4d89488b0e8a916
1ff15a49a654189e05219488b022e4f766b04c0920840e91631b8fc60a2742b043b2ed7ca5b58652a04d68a6046e3edf35e5ad74392b05da470e8860e3b818aa
dde36aa55784e4dbf9fed10129d0263453ba5d8439032f4c70e7f0e40964ffc0e64c087a2f5947e93f1302e68f49916a7a7f7daa4177c3f4429b2112f2eeafb9
4d88b16635e58cd6d30f6da28b522b08fbe73e6f68918086e6511a0a4397e92384c476fe30cc4f951d9df22fc68410072f452f0c16989a48f10b98b2d14ae93d
24b05f565d251d928b43b14d8fc7e24508f48ba49d6fdc7cdcb222f7f153d3e2dfbf1b9ebb84a47b0ce3666ab5a27471d465560b08f1f710d0d2de50457d8390
b4487576d80849eeb9f310954ecbade8d0d4a57b0ce38e10ff3094ddcfb659cd13a236428043b152feb9be4148428231d66d84e8f87efb3ce480e78190422f68
83e654cbe079c8fb2100cfda442f08498bd4e9984888bf506d9287649719ac10bd49486a2ae421c907b27555726c499dbdde279672266ba8a23e41485aa4dade
0cbd0b57edd0eb90a9fa7e487611c638bad90f494dadb54ccc4374af8b1202bc41a392a7810b888fdca6c7637d8290ca265469e5301ffc5353788346c5673018
bf1627421a75dde762990921a8787cbf9a15210d4cac856831211cf6764901a93b2be8864436528b51400a517680fcd7ef9881f5449e909a56d0185791f87d81
685c8b175a40ea13727f7b23fcbe19219785e84574e2a989df64a67551fb64eb3da43813fc8d133008548832fc22f37ffc6f886443e23621dcae14f299096348
eea2fac9963cf02e21d4809cb640c86786c30a33bba87f326cd700fc24234058cc8b170f23f509813624b048d435c3bebd4d6865271e56aaf743c00d09241235
20cb238f659f9d18f454a9a745d040454f88cc0d6f111322172f7b3524e4b4d20b1e5f904c9108971022c2258488700921225c428808971022c225848870fd01
1de2cc0b09253ba20000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.13 Des portes AND, OR et inverseur}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom885\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich59\picwgoal8175\pichgoal885\pngblip
89504e470d0a1a0a0000000d49484452000002210000003b08030000009a1baa6100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002d149444154789ced9c8d71ac300c84dd
1ec5e0625c0cc5d8c5f8f9e799838925ec70e42265bf9930396c085a364208121301e0309f3e00f0cb8143000f1c0278e010c00387001e3804f0c02180070e01
3c7008e08143008f72879833f9f3a70f491aca05fb1a9e8149e650ae56373c986406e55251e1c122c328578a0c0f696414e53a31e1c1226368906975e410171e
2c32840295825bc831363c586404052239bf796a8c0f0f161940814626869a444c0f7e5305e13f8d7c897caa429690bf9b778882f01f47be446eb1d650b5ea55
78482297c857c8ec0b6af0726bc0205e215fd2c74ad4aad70e112fc0d38817a87ac3affdd1ebf0c40bf034ca0582436ea35ca0b739a4e5289f5316ddc4ad7b33
d6dac5d7b9e28143ccd0db006d42760ad3c435fb32f768884b9f2cfebc436ab1dab3c8bad95ce4386b5ddc8c2deb4a5a383471ad5d43345bce1879a67b39242f
e85eaf20e0906a8e4e97cd849c08dc964ebd6b3bb2211e9ab8c92b31acd1a4a5291ffc398704fa91a21ce090e687af0e295fffcff661ddab891bdd3ec5b4f965
564a2d25e9685057430c0c130ee90e9876c538cc3a367183df7a0ec98bcde95057430c0cc30ee9142207879c72c8a189eb9c0fbb4396787248338d7434c4c030
5a87f42ad57ae2cf75880ba7266e5aeb7787b85a8eb49f9a0a9460ef47f071febc43eacd6e6f5e3bf136b73f6cbd73f5dba989eb17b72d7b6249773daf7ec89a
8a5a150d1138646e87532d0ef4437e3f6f77c84c5a509142e010e502dc47be40e5a24ffdb6e2e9ff6de40b545a5ad4151f6f10dd46be42b7de31430ab944be42
25877cfb3dd5371f8c42e44b941f82e0af219e43be44e5615a695e4e3b04061940be46dfaf43609011e48bd45ec62007c90de5c7fe13c857a9f4430235c86c27
3ff41f41b94c747830c820ca7522eb13186414e542f5c3833f26502e55efc520f8630ae56275fee3aef288df0ef4023c7008e08143000f1c0278e010c0038700
9e7ffe836d8b8e0afd750000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.14 Une porte NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom885\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich59\picwgoal8175\pichgoal885\pngblip
89504e470d0a1a0a0000000d49484452000002210000003b08030000009a1baa6100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000001fe49444154789ced9c6d7282301445b3
3d17a38b61312e262e86fa1129a9792f9071aac93de78fd31130f7f604c6501a66008ff0e901c0978321e08321e08321e08321e08321e08321e08321e08321e0
8321e08321899073fff9d363fa0a6821512802496e5041a25c048e60c813ab087947c4e3ff621721ae8876fa154e11da8a48875fe31521ad8872f60cb7086545
84a3e7f845082b22993c94a8ecf23f23fb422493b7182259d40dc9e0a55f77ad0859452473b718a2d9d42c9a1b43762099bbcd107b8be3b4e9087d32682c9f26
43ec2d2ed361db11ba64cc588f496df26643a6788ed79773f5085d32a42169529bb41a627c2b0ef3c5ffbcae19d290294ed17bbfd190fb6eaffbc6eb09eb70d9
3ebace18d290daa46e33246df2b2f374389d827f59eb99110d59267571edd4bc545409cf97fc3861f5de808c986c99d4ff6248bc9f3e8eee65ad674634a43aa9
5b0d09a59d1f6ec4e3c6c175c78086d42775fb7719c1fb3303e6ad4feae6f510c5e723e402df78f38ad9d848c6c6901d48c67ef79dbba1918ccdddff1d48e6c6
901d48e6e6af10772099bbc1105941540de16988cd4826df6f88ee2944d390123c9569201c3d8727bb0d94b367f0df210ca4c3af318b10bc5997a19d7e855584
b81f18b2502e42fd043263c8c26b111b564914a082c4dfd511ec485003f86008f86008f86008f86008f86008f8fc00ab639bb8cc1597130000000049454e44ae
426082}}}}}
}{\loch
F}{\loch
igure 2.15 Inverseur construit \u224\'e0 partir d'une porte NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom870\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich58\picwgoal8175\pichgoal870\pngblip
89504e470d0a1a0a0000000d49484452000002210000003a0803000000514779c400000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002f049444154789ced9c6b428330108473
bd1e261c2687e130c96190472d54d9cd8b58c6ccf7a3568181614748b3a89908d1309f3e0072739810a2c384101d2684e83021448709213a4c08d16142880e13
4274f01362deb9ce5133612cf06dff72b0d5f3c6c258e03b3e757045299b096381ef5770505fca66c258e0bb151dd456b2993016f866650795bfed9a708d2e18
205ead1317690eaa4aa96cdbd39d06c369700f7199eaa0a692ba70b92e18184e9d775e5aa63b6896108c1377011846cd14b68b883941df32cde099ee25c2f840
f8f4f328e4119677d9854cac647e42ba8908844df71806b38e55f30b99e6b0202118a7ae1e089be6f5222dd4364eb178b6d225c2f820b8f4ebe5c30a63d5a883
5609813877f520b8dcb2e1edf9d27821133c322122f82ee30e9a2504ffe425806ff27309f907272f017c9349852c99dda8118e7609cc300cd2c8ea5ef49190e5
093135238509318270bc4bb0bc066164752f7a48c8b3fe5a44ca1272a8f63bce8fdfd707671ff35b3bae570c37b8f1b00dc4c987384895e4429e4f8bc9d36329
d790e78a3f755e5d82691cd7b7262c5fe66fa64342827c2bba114cc80509f9a9b377092617b6e1caaa6777d9791c62e53bd19de828217f7797d9bb04f385c28f
af8498f76dfc10dfc3e7e9232166d203529c9073e143129cf3e1959061ff39c7217f47da6799c8c7ddd24fbba7c2c72ec1bc704fc8382ff0877108c46da68f84
c457b972c6ecd825f0d68d363c13328d76f81ea92ef321217e609f8709d956e19caa04be49f665da826f92bdddb640b8549b1897149209118170a93631620ef8
8c591d102ed5c983682193f6909f904e0282939050f82473bb67dd930e1d1f089f7b1323bb90fc7b995a207caa4d8cecb9d29cbd3611c602c268f138a4d55f76
7714109c84884d8ccc8e6dde5e9b08630161556d62c80e2aebd84c180b7cafe2dda7d5ff20aa16c602dface0a0be8ce7029de5e3bf26243e9b512e5cad0b06be
e15fd31797c4a3a530161d5a26593021448709213a4c08d16142880e134274be00a85b18d74d5fba5c0000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.16 Construction d'une porte AND \u224\'e0 partir de deux portes NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1650\shpbxcolumn\shpbxignore\shpleft0\shpright8160{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw544\pich110\picwgoal8160\pichgoal1650\pngblip
89504e470d0a1a0a0000000d49484452000002200000006e0803000000299a581b00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000048349444154789ced9de1b5aa301084d3
9ec5483114f38a81627c828a5c4396ec9a803b99ef87f71c819819e76208590d374204c2d91d20bf0d034244181022c2801011068488302044840121220c0811
61408808034244181022021b90f062fdc4991d720aac675bc298113db086258431224a60ed4a0a634254c0ba9516c693880658af24614c483eb05689c298906c
609d92853121b9c01ab5230c567769208c0a9bec1c7250dfbc03e193212018c20f00c2a7ad30ec09e329240f089b2c01c1505e1f089b6c0181905e1d08974c01
c1905e1d089718907af870e9da8b9b8d0109fc9cd9c78541637f11b7db02f2ba3cb6f5a9155cd8d30ffd206d3706e471986af6a43d5c18126ee37c0ad99e10db
7e5b7302f2fac380a4f160c8701f815cc65bbd80bc9f61403ef160487fe9ba300d531990e3f16048581e523b7c3706593fe3c18f437160c8305fe35e85616ab1
ab180624c281218f680cd7f41ec5e64118900808438acda43220111086540d887ea90914105a8bddcddd0cc8e66e10bee50021b4d87a90cc8024f6840442e609
0169262210228b2d39d404a4915bc1101a736757ff1c9268287e4e7c5d5d471d02a1d012905443997b2e0728bae9120881fa8024b6aa0382e19f04ac40d33fbe
2120b0063e81d5a7bdb9f7dc5068308303ac3c716c99dea29f378575f001ac3c2904651a5ada5335e70d58758a5186a921c50eae8155973dcf616ae86fa3ea36
1d012b2e1a41586fc39a6e0b2f242a7a42d7751771a5feaf001b90627c15905445cf74c82817fbfc080cc81e794bd312bc2b7ac6beebee7fbafebdc2d685f72e
3a792a59cbe3539f5f61394fdc83322dae0dc3d228cf2018e4ad7ebe6d9e48968a9e47336169ed3e06b986ae581f2bc280ec91f311139e7b7eceae2d153d5140
a6877f7249fa6fc080ec91f511f3fcf31990d5506323202eccf7d0c773d104e4837545cf6b0cb2da75142a397e0606648f9c8084f7e39a7545cff32ae63d06e9
aedd58ac93f56040f6c81da4824ea862aaba453766eda50ad997b9a6d67f1e50599bc26cefe2571365fe81d596bfa6d0d4906e0fc7c08a13168d956948b38763
60c5a585155e3084fd09d3624094ef28170c61625ab4ac6d48dd983f60d599ca1ed40d656c770eac3c53b102cb1e2220e4157b5ff50da1e7a3d980e42f6a6e3b
1f2801d978ce708c3a20f8f96837205f7f814ce275d1809078f47794092dc001a1b1eeb71c265f14c2bb3d20449e109046e2e12320f3f22ba90cede080645c23
e1e041e8d44771fda63520d1e5f06640b417d0587810bb5a1b9ed8c11410feda430e1e0c99cf20520d097f71aa1e1e0c99cad0f8936427e1c190a98fc35c3350
2920248d07778e1b8390080feecc6310a914defe8b53ccc71e1eec99e741a42a34f32f4e71d0b10b843fc526ca4804844b0c483d205c6240ea01e152b1dbfd24
02c2a5620b864804844dc5961c9208089b4c01a9d2133c207c32ac6ae7092413089ff401613e7281358af92803ac538d97b31403d6aac6cb598a01eb55e3e52c
c58035abf1729662c0bad578394b3160fd6abc9ca518b08e7d4e8a301c36e81a1161408808034244181022c2801011068488fc07db2d2926478249bf00000000
49454e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.17 Construction d'une porte OR \u224\'e0 partir de portes NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La porte qui reste \u224\'e0 synth\u233\'e9tiser est la porte OR. On peut la construire ais\u233\'e9ment \u224\'e0 partir de portes NAND si on applique le th\u233\'e9or\u232\'e8me de DeMorgan. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(A OR B)' \tab =  A' AND B'\tab \tab Th\u233\'e9or\u232\'e8me de DeMorgan}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
A OR B\tab \tab = (A' AND B')'\tab \tab Inversion des deux c\u244\'f4t\u233\'e9s de l'\u233\'e9quation}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
A OR B\tab \tab =  A' NAND B'\tab \tab D\u233\'e9finition de l'op\u233\'e9ration NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
En appliquant ces transformations, on obtient le circuit de la figure 2.17. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Toute cette discussion doit sans doute vous \u233\'e9tonner. D'apr\u232\'e8s tout, pourquoi ne pas utiliser des portes AND, OR et NOT directement ? Il y a deux raisons \u224\'e0 ceci. D'abord, les portes NAND sont moins on\u233\'e9reuses \u224\'e0 construire que les autres portes. Ensuite, il est beaucoup plus facile de construire des circuits int\u233\'e9gr\u233\'e9s complexes en utilisant les m\u234\'eames blocs de construction de base, plut\u244\'f4t que de le faire \u224\'e0 partir de portes de base diff\u233\'e9rentes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que c'est \u233\'e9galement possible de construire n'importe quel circuit logique en n'utilisant que des portes NOR}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
NOR n'est autre chose que NOT(A OR B). }
}}
}{\loch
. La correspondance entre les logiques NAND et NOR est orthogonale \u224\'e0 la correspondance entre les deux formes canoniques qu'on a vues dans ce chapitre (somme de }{\rtlch\ai \ltrch\i\loch
minterms}{\loch
 versus produit de }{\rtlch\ai \ltrch\i\loch
maxterms}{\loch
). Bien que la logique du NOR }{\rtlch \ltrch\lang3084\loch
est utile }{\loch
pour certains circuits, la plupart des concepteurs utilise}{{\*\bkmkstart Bookmark 1}{\*\bkmkend Bookmark 1}\loch
 NAND. Voir les exercices pour plus d'exemples. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_06_2}{\*\bkmkend p2_06_2}\rtlch \ltrch\fs23\b\loch
2.6.2\tab Circuits combinatoires}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un circuit combinatoire est un syst\u232\'e8me contenant des op\u233\'e9rations bool\u233\'e9ennes de base (AND, OR, NOT), certaines entr\u233\'e9es et un ensemble de sorties. Puisque chaque sortie correspond \u224\'e0 une fonction logique individuelle, un circuit combinatoire impl\u233\'e9mente souvent diverses fonctions bool\u233\'e9ennes. C'est tr\u232\'e8s important de se souvenir de ce fait - chaque sortie repr\u233\'e9sente une fonction bool\u233\'e9enne diff\u233\'e9rente. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un CPU d'ordinateur est construit sur la base de plusieurs circuits combinatoires. Par exemple, on peut impl\u233\'e9menter un circuit d'addition en utilisant des fonctions bool\u233\'e9ennes. Soient deux nombres d\u8217\'92un bit, A et B. Vous pouvez produire la somme et la retenue sur un bit de cette addition en utilisant les fonctions bool\u233\'e9ennes :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab S \tab =\tab AB' + A'B\tab \tab Somme entre A et B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab C\tab = \tab AB \tab \tab \tab Retenue de l'addition A + B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Ces deux fonctions bool\u233\'e9ennes constituent un }{\rtlch\ai \ltrch\lang3084\i\loch
demi-additionneur}{\rtlch \ltrch\lang3084\loch
 (half-adder). Les ing\u233\'e9nieurs \u233\'e9lectroniciens l'appellent ainsi parce qu'il additionne deux bits mais il ne peut pas ajouter la retenue d'une op\u233\'e9ration pr\u233\'e9c\u233\'e9dente. Un }{\rtlch\ai \ltrch\lang3084\i\loch
additionneur complet}{\rtlch \ltrch\lang3084\loch
 (full adder) fait la somme de trois entr\u233\'e9es d'un bit (deux bits plus une retenue d'une pr\u233\'e9c\u233\'e9dente addition) et produit deux sorties : la somme et la retenue. Les deux \u233\'e9quations pour un additionneur complet sont : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab S \tab =\tab A'B'C}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
in}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 + A'BC}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
in}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
' + AB'C}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
in}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab C}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
out}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab = \tab AB + AC}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
in}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 + BC}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
in}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien que ces \u233\'e9quations produisent un r\u233\'e9sultat d'un seul bit (en ignorant la retenue), il est facile de construire une somme de }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 bits en combinant des circuits d'addition (voir figure 2.18). Comme cet exemple l'illustre clairement, on peut utiliser des fonctions logiques pour impl\u233\'e9menter des op\u233\'e9rations arithm\u233\'e9tiques et bool\u233\'e9ennes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Un autre circuit commun est le d\u233\'e9codeur }{\rtlch \ltrch\lang3084\i\loch
sept segments}{\rtlch \ltrch\lang3084\loch
 (seven-segment decoder). C'est un circuit combinatoire qui accepte quatre entr\u233\'e9es et d\u233\'e9termine quel des sept segments (dans un panneau les illustrant) doit \u234\'eatre allum\u233\'e9 (un logique) ou \u233\'e9teint (z\u233\'e9ro logique). Puisqu'un affichage de ce type contient sept valeurs de sortie (une pour chaque segment), il y aura sept fonctions logiques associ\u233\'e9es \u224\'e0 cet affichage (les segments de z\u233\'e9ro \u224\'e0 six). Voir la figure 2.19 pour la num\u233\'e9rotation des segments. La figure 2.20 montre la disposition de l'\u233\'e9tat }{\rtlch \ltrch\lang3084\i\loch
allum\u233\'e9}{\rtlch \ltrch\lang3084\loch
 des segments pour les dix valeurs d\u233\'e9cimales. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi0\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom3675\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich245\picwgoal8175\pichgoal3675\pngblip
89504e470d0a1a0a0000000d4948445200000221000000f50803000000b1f9d5a500000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000a2849444154789ced9d8d95ab201046a7
3d8b8162288662a0181fe0bf1b4744cd0bc377cf59369ba871f02ea020520f0007fdef1d003f0e0c013c3004f0c010c00343000f0c013c3004f0c010c0034300
0f0c013cb51ba24ce68274875743f8712a0fde9b2e73c93b81569e49f7a83c78e3accb5b1286145279f0d4fbcc420486145277f02eb4423a1f5e58ad2dbfe8bb
8678a395f137bee277a9db10d3694d6630c5acaa9b0f6dcd770d51c10eaf6f7cc5ef52b72134267a7780be6e485ae2a414ab94aa0d71e95457b9d914865b869c
9e0c5b1a5bcce7d55d6d546d884a47c5a9ff6f48ef347daaee0450b52133ffdf903eb556ff547702906148c68179b71dd28dcb65a85a1b32a2c928dcdf35c498
612f60c8aff2bfaf87a4f36e9355ddd586ac6818689b0c2f4c379e81d07aa93f99929f496887d4cb4743a6979db1aba56e188273997ad918e29522d79321953e
f3e4e3275a199a52a5c247a43f1bc380eb21bf0569adbbbc7fd9418e70e0d5780d96963224b433c9c7fffd20ca98dad4eedc942c8d5277f071ef333b77b7b58c
b7666548d463380fa13155fdba12aa3b936e5277f0174e1d368618edfc6288a354b2ac0d49850d0c89d41dfc5c86649eed4e09452d6643523355b9f06ba85f42
1aab210b432275071fda218a74fe15b329b1a457b54c4a5d17daa83ab55443eab5ea3c0c89d41dfcd0e96efe7fefbf60ea0e7e2a03f6ed1118f21c75079ff6de
7fb7f7ffc676aaa4ee80e3f510a53d0c791119017faff71f86d4c9f77aff6148a57cadf71f8688058614d24cc030a49066027ed210af74f69c03d50343aead4b
6974491f5b3e77f7a81260c8b575a321c30dbaa1656c541c9c42b18bc7501cccecd5cdbdfc41da31e40eebcd2c79666dea5826977ee230b5dca92a6aa219431e
626d88f1d35082f4a37c9f3bdd4d4dc0906bac0de9bdb32b439c9158c9c0908bd038ca35e69c3171a4da6c484f122b1918729168888b4585d169d0fcda102532
334506f522a9d56abb743dc42963955f0c7122af91c0906b70d75485dd4a350243ae716c88d7228b10187211f4cb001e1802786008e0812180078688e2566fdd
792f5e1b880e18863c80e880db3b9c2f203a0f61c80388ce4318f200a2f310863c80e83c84210f203a0f61c80388ce4318f200a2f310863c80e83c84210f203a
0f61c80388ce4318f200a2f310863c80e83cfc6008faedae223ae44f86dcdce2bdd56b4474c830e40144870c431e4074c830e4014487fca1a10943ae223a6418
f200ad850c43aed25ac830e42aad850c43aed25ac830e42ac2423e9d08f75d43bcd16a984b530eb20cf1e62c9e770d51f21eea2ecc10e3cee6017ad790f4319e
d9fdc3d0e9f399df35c40a9c0e51942171aab98e6f06bcdc52759a48d86455a20c319dd6e3013a8a6b7e3f3d95dbcf6f8eef5bda2cf7672bc40e30498b84d66a
fc25667a665186d094f8716a53e6aa3b6dd71bffec8c5d7f7cd5906e5e4bcedcaa6202e9a7f94c559a883fd390612ed4d9104f710add3e9cb2d2948692267caa
69bdd621f1f910435de7c464ac9840fac18d71c6e48c5a664e578684234c3ece8b1a4419531b8f38d9fdea07c47a8eafe6aa434c203bb2da216e6f48d4c32c6f
861f35bf66379bbf03d52126901d4565888bdad0c690d4a0852102c937c42f86a466aa72e1d750bf84343e07c2c21081641ae23a65bad990a120e9421b55a796
6a48bd569d8721023935e4d9cd3efe45bf8398403241efff555a0b19865c4554c8a4b5567cd7190cb98aa890870beea78bdcfc86c61015f27242c22f72f31bda
4254c8a90ce13bdf61c85544851cda216aec757fed6cb7b9692244451a83717174863fec7c8721571115e9dc0ec9e8fd2ffd06185233a91db28ce279c590f1b7
a87c63111569ba1e328c2c7cf9aa3b0ca91e18f214522385214f21355218f214522385214fd14ea4030f1be2b5ee84dd41b5078614ad3edd3d154fad2ddf5758
3bcd1972937933e9d7701f791cdd6a54175e6b43f127de3673d2c75c0fad19f210b40c954f589bca134a7773c511d0bd985bbc6148117b43e2b43234dd5c91e6
11c17dbb6d331ab268e09d5d19e28c984a068694b1698774f14e3de75786f482e611812145d074bb4d3f9ccb0c77662d86c8b9f51f8694319dd458a5d3e47a4e
19abfc628893739104861471764df56c3ab58a802145f086782da708812165a05f06f0c01061dcbdd67e7cf95d3e6d440a43ca6924d2868ee8d334927330a498
46720e8614d348cec190621ac93918524c233907438a6924e76048318de41c0c29a6919c8321c534927330a49846720e8614d348cec190621ac9b93f86a0d72e
9746a2fd6bc89d8dddd993ea68245a18524c23d1c290621a89168614d348b430a49836a27df67ca48d3c9b68235a18524e1bd1c29072da8a760186e4d256b40b
302497b6a25d8021b9088d569ddd5afdaa21de8c93464840a621de9c4d23f6aa21e9e90352a6109169887167b344bd6ac8b080bdf1153f844c43687acc0cb3c4
9dad9f60054d6326d39058c0773ecda9adfde745ee1972367cc419a258c9841d30073b500d220d319dd6f10885a3333db2ead92b6619038cbcd17d1ffc3c7976
e7ef23d2101a133bbd3e328454c0cf2b8dc796fc7a3b7fb3e8bca53a2d667296fe716adfff4f0c6711c3e3dd8f66befd7bf067438c31870b7d7e634fdac0782e
53fdd4bb120d19dc70e9d028b61db2a4b418323c2ed12b65684cfb50d284f735add7e588d5dca8598776c84fa38e4e398f0d71ba37612d9d26f01fd2f0772811
c86ed6bdb903d520db90e3592b977688db1912a470b4d26693aed6cd42c09555d186d8e3e3735c86446bc86fdd880dda1243981da806d18690d25a1f7cb44dfd
6c483aa8a1a96986fa25a5b131634b0c6176a01a441bc2b036c475b1393a1a32b42cc32badf4947aa33a5f54cb08a0ad6817d0fb9f4b5bd12ec0905c44464ba1
f6eff8be3318928bc868d3152fbe73f74943643f7457ac2127913d6888f087ee8a35e47b65c8eaa1bb5a2d0fdd8dfd7fb6fa2baa520dd15a91fecef890d5a6e2
c593e5a1bbd32095da9169484cacf9caf890b521fddc433cfc54dfaf1b916b48484fc787dcd9fcccd143779517311651ae21c33f303f3ee4c6e6178e1ebaeb4e
07dc57814c4342fb430d2d107e7c48e1e6b77f1e3e74b79350c9c83464e1647c4819fb75e787ee76db87ee6a09958c7043cec6879491bbae8cbc9511c501a7e3
43cac85bd7291145886c434ec787146ef6c6baf5d156b40b302497b6a25de0ef893ae17feffc57692b5a701d1802786008e08121800786001e1802786008e081
21800786001e1802786008e08121800786001e1802786008e08121800786001e1802786008e081217b2c0998d2e14160c89ed6462a9f81dcd88332640b0c013c
3004f0c010c00343000f0c013c3004f0c010c00343000f0c013c3004f0c010c00343000f0cd9839ebb2d30640f7affb72037f6a00cd90243000f0c013c3004f0
c010c00343000f0c013c3004f0c010c00343000f0c013c3004f0c0903de897d90243f6a06f770b72630fca902d3004f0c010c00343000f0c013c3004f0c010c0
0343000f0c013c3004f0c010c00343000f0c013c3004f0fc03b2fa27f45554923c0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.18 Un additionneur de n bits se servant de demi-additionneurs et d'additionneurs complets}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1755\shpbxcolumn\shpbxignore\shpleft0\shpright8190{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw546\pich117\picwgoal8190\pichgoal1755\pngblip
89504e470d0a1a0a0000000d4948445200000222000000750803000000447e7a7e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000003d049444154789ced9c5192aa301405b3
3d161316c362580c590c4f104482997be59592f2747fcd4ca5ac9cd005318e278c007f12ae9e00d40e8a80018a80018a80018a80018a80018a80018a80018a80
018a80018a80018a80018a80018a6ca436c6365d3d8bea40918de6a6c710af9e4575a0c84698ee20dc457250642385d04d86c4c8ade40914792675a11bbb61ec
bbab67521128b2317b11e625692e9e4a4da0c8461c6ef791382f09cbb2c15a3cd136d39b5e14d9c35a1ce041b307450eb05ddd83224778d3bb0345c00045c000
45c00045c00045c00045c00045c0405e91e0e0ea395e8b787c14b1118f8f2236d2f1bd975fdb12e5ec28e242393b8ab850ce8e222e94b3a3880be5ec28e24239
3b8ab850ce8e222e94b3a3880be5ec28e242297b8a31eebed5fda622a2e5124a8adcb2a6dd1764de5444b45c424a91947543bca98868b9849222c3bd1b620bfd
ee83662997e89a46491425456649e62bbdfcfaf676752e9798beaaa7b46c4259976e88b14b2715595f60b2ec03f3ab15a1ac6dbf5edb938acce512d34f5d183e
33c52a115264e986184f2bb2bd80d4fb1a25451e1414299e7b64c346ad6553cafaa0a048f1dc633f2ca6a9cb48071479fa73e9dc23bb8be487b43f8ea4222bf9
8326ac0727c7715f9a518d28673f6e57e7738fd4e4770914912553642dd54cd9473928a24ba6c852aa399d79847cdc57e75517cad90f0f9ac7b94756878722b2
948ece86e630ee1bd3a914e5ec2545babc7515456479ad48dfbe18f78de9548a72f68222a1c98b57514416febdd98372761471a19c1d455c2867471117cad951
c485727657cf9957a3df453c3e757836e2f151c4463c3e8ad848c7f75e7e6d4b94b3a3880be5ec28e242393b8ab850ce8e222e94b3a3880be5ec28e242393b8a
b850ce8e222e94b3a3880be5ec28e242393b8ab850ca4e35ef2994140954f39e414a11aa79cfa0a4c89037ccbcfba02955d4fc364a8a2cd5bcff51873757d4d0
defcb33cec684fd6e12d2fd07737993e39d1ca105264ade6edfb9375784b35af5417de28a5c8da30d3161f34561ddefd0542df4a59a2a4c89da6b81759f71a07
b29b4d9f77a1fd36728aa4106358361c9922cb5e631ab1ef783f3e8f94964d29eb83c25d64a9c3ebfbc3f8bd493dedcd3f4fe94173df6b1cf723f930ad637849
45565e1f9dc54381371fe3c9f25a91e9bd719b8ffbd28c6a4439fb1f07f0211ff785d9d48a72f6521d5e1a07aa793794b3171449b74deb61dc77265425cad9f9
af3317cad951c48572761471a19c1d455c2867471117cad9dd8a6823bd44e576b33d57cff35ac4e3538767231e1f456cc4e3830d8a80018a80018a80018a80c1
3fba8f8a0ba19f0f360000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.19 Affichage d'un d\u233\'e9codeur sept segments}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1740\shpbxcolumn\shpbxignore\shpleft0\shpright8190{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw546\pich116\picwgoal8190\pichgoal1740\pngblip
89504e470d0a1a0a0000000d49484452000002220000007408030000008f22a9db00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000030349444154789ced9d4156e34010c57c
ff2be630cc6236e0545315e37c5b79d2ba680bb700034dd8be447e65bb5a40ee8e8948838948838948838948838948838948838948838948838948033991ad64
3ff5a8182d7568a8bcdcd3f54898c87aa94343267223ea4276bb56efd87e6b1fa3a52643dbe87a28c8eae58d2f126987be5643fba5faa13a0613b90613c94056
37910864751389405637910864751389405637910864751389405637910864751389405637910864751389405637910864751389405637910864751389405637
910864751389405637910864f5d5b9d4ef43f5cc639fc8b6e0e5a1d50cf93e5f2d709c45223f871689ec96aa77ffc8d0c705f289891cf92c52efeb2ea5f33ed5
b020ab97377ebf65a3679172a5fd9bae56ea1f587c16b90813c94056379108647513894056379108647513894056379108647513894056379108647513894056
3791086475138940563791086475138940563791086475138940563791086475138940565ff17da83c96f8ce8389a3eba120abf71b363dde3c596978067a743d
14e044661b5b6fda68a943432672274c24023911896022d26022d26022d26022d26022d2404e64f64def1d86c877d9442243e4bb4c4ea4de8cddcfa9464327be
bacc68880559bdbcf14522edd01f5ea36a34e46f7a2fc2443290d54d240259dd442290d54d240259dd442290d54d240259dd442290d54d240259dd442290d54d
240259dd442290d54d240259dd442290d54d240259dd442290d54d240259dd442290d56b260713b7e7440a9e77bfe6e5211664f5c95ecc366cf4b7daa3953e2e
1013f98f89fc0258fec47f8a7ade171aff7de29d283ed0bf9e9e0cebdd291229875e7f5c2d57f271f5224c240358dd443280d54d240358dd443280d54d240358
dd443280d54d240358dd443280d54d240358dd443280d54d240358dd443280d54d240358dd443280d54d240358dd443280d54d240358fd9e0713574bbded36bc
1db0fa22919f439340ce3cdebc48e4e4773d0a3891d99ed553fba1d1be1e5fc944e493311169301169301169301169301169f8072df4c54f30dc5b3500000000
49454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.20 Etats du d\u233\'e9codeur pour les valeurs de 0 \u224\'e0 9}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les quatre entr\u233\'e9es pour chacune de ces sept fonctions bool\u233\'e9ennes sont les quatre bits d'un nombre binaire sur la plage 0...9, o\u249\'f9 D est le bit fort et A le bit faible. Chaque fonction logique produit un r\u233\'e9sultat de 1 (le segment est allum\u233\'e9) pour une entr\u233\'e9e donn\u233\'e9e, pour tout segment qui doit \u234\'eatre allum\u233\'e9. Par exemple, S}{\rtlch \ltrch\sub\lang3084\loch
4}{\rtlch \ltrch\lang3084\loch
 (le segment quatre) serait allum\u233\'e9 pour les valeurs binaires 0000, 0010, 0110 et 1000. Pour chaque valeur qui allume un segment, on a un }{\rtlch\ai \ltrch\lang3084\i\loch
minterm}{\rtlch \ltrch\lang3084\loch
 dans l'\u233\'e9quation logique :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
S}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
4}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 = D'C'B'A' + D'C'BA' + D'CBA' + DC'B'A'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Comme second exemple, S}{\rtlch \ltrch\sub\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
 est allum\u233\'e9 pour les valeurs z\u233\'e9ro, deux, trois, cinq, six, sept, huit et neuf. Par cons\u233\'e9quent, la fonction logique pour S}{\rtlch \ltrch\sub\lang3084\loch
0}{\rtlch \ltrch\lang3084\loch
 est :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
S}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\sub\fs18\lang3084\loch\f8\loch
0}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 = D'C'B'A' + D'C'BA' + D'C'BA + D'CB'A + D'CBA' + D'CBA + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous pouvez g\u233\'e9n\u233\'e9rer les autres cinq fonctions de fa\u231\'e7on similaire (voir les exercices). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les circuits combinatoires repr\u233\'e9sentent les bases pour beaucoup de composants d'un syst\u232\'e8me informatique. Vous pouvez construire des circuits pour l'addition, la soustraction, la comparaison, la multiplication, la division et plusieurs autres op\u233\'e9rations. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_06_3}{\*\bkmkend p2_06_3}\rtlch \ltrch\fs23\b\loch
2.6.3\tab Logique s\u233\'e9quentielle et synchrone}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un des probl\u232\'e8mes principaux avec la logique combinatoire est qu'elle n'a pas de m\u233\'e9moire. En th\u233\'e9orie, toute sortie d'une fonction bool\u233\'e9enne d\u233\'e9pend seulement des entr\u233\'e9es courantes. Tout changement dans ces valeurs se refl\u232\'e8te imm\u233\'e9diatement dans les sorties}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
En pratique, dans toute impl\u233\'e9mentation \u233\'e9lectronique des fonction bool\u233\'e9ennes, il y a un court d\u233\'e9lai de propagation entre le changement des entr\u233\'e9es et les sorties correspondantes. }
}}
}{\loch
. Mais, il faut cependant que les ordinateurs aient la capacit}{\rtlch \ltrch\lang3084\loch
\u233\'e9 de se souvenir des r\u233\'e9sultats d'une op\u233\'e9ration ant\u233\'e9rieure. C'est le sujet de la logique s\u233\'e9quentielle et synchronis\u233\'e9e. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Une cellule de m\u233\'e9moire est un circuit \u233\'e9lectronique qui retient une valeur d'entr\u233\'e9e apr\u232\'e8s la suppression de cette valeur d'entr\u233\'e9e. L'unit\u233\'e9 de m\u233\'e9moire la plus basique est pourtant le }{\rtlch \ltrch\lang3084\i\loch
set/reset flip-flop}{\rtlch \ltrch\lang3084\loch
 (ou }{\rtlch \ltrch\lang3084\i\loch
bistable}{\rtlch \ltrch\lang3084\loch
). On peut construire un tel engin via deux portes NAND, comme montr\u233\'e9 \u224\'e0 la figure 2.21. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1965\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich131\picwgoal8175\pichgoal1965\pngblip
89504e470d0a1a0a0000000d49484452000002210000008308030000006c823b7900000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004e349444154789ced9d6d72a330104475
3d1f060ec3617218eb30de80bd5576ac19a44142f4a8df0f672b2a40d37acb87c0243c08d108bd3b402e0e0d213a3484e8d010a24343880e0d213a3484e8d010
a24343880e0d213abe0c099f38abae0fbe32fcaae6290a3980aff892d5d09143f80a4fa8868e1cc05774623574c48cafe0946aa88811bcdce2324f4b4cb769d5
50111b78b14dbf76c439dda65643454ce0a5b6f5f847699397c42bf602e085f6137eeedb3f420a7551bc622f006068f73984e5613204b0daee6066f67bb66a31
848a18c08becb67da6fbbd5b0d5eb9ddc18b6c598f30f725d94643ea0318d9729be7b420198600d6db195f89ed57e3abde33f095180da98fafc4320c097d0e35
7199c47b05d7663443fe5f2437efca2731c4d7071cc319f294e36c45966d1a58b802bb36e319f2fa711eef5b6d55784310fb2c5360c8798e7c6c150fc43ecb94
18f2e7d76d8378adfdd674236d18cf90f479486343d6f390c8f390fed8af651a1b126ff1314f88bb90e10c91e6435a5fdcacf321e2cd824b339c21d2ef4f0982
f321bdb9ba2188f80ac67e6f978648f80ac6fe7c080d91f015cc5e35b2073444c25730bb86c82dbe82a8086e30f214b7b288a5697070832937446ba52112b8c1
24e7bdf4250ad74656708329364495808648e006536a88fd083436b8c1941972e0247670708329326457001a22811b4c81217b3b10616d640537985c43766749
c4b59115dc60d24f79fc9916c9d343581b59c10da6e698668b3420b8c1541bd39cf9fa81c10da6ce98e6ddd01919dc642a8c2af5c800379cc3634b3db2c0cde7
d80e807ae4021d917598a94701e829950f36f528c3415025434e3d8af19155dec0530f0b6ee2da1b7eea61c45362b2049cf8b0e32bb3a409d4e310ee62fbe303
f5388ac7e4c217bd7b848cd3f0a847359ce64743aae1313f1e656ae22e3c9ea956c65772bcdaad8fa3d8141328891d2f99ed3a40498cb8082c73f4298905fcb4
8ac69d9214031e9561c4294919c83999c79a9214801bd2b151a624b9e02674787c294916b8f1d418593ab20f6e3895c69592ec809b8c3a77fa1af5dc37435011
19dc60b2de30933bf63444043798ecb754658d3e0d91c00d86ef313b07dc600adf85b87bcfe6687fbc821b4ce11b77f93e5523b8c1f09dcce7801b0cdfeb7e0e
b8c118fe3684fd203430b8c18424fa22dada2a77cf0db8c1580c919b6988046e300643f897100df80a667f624c6cf01544457c054343eae32b18fbe43a0d91f0
15cc7e3534a4145fc1d090faf80a26c39090be8bd7da90b84cd31211f3c6ebb146dec34229471a1b12437c7ee0e58dd7638dec4785be84686cc8725f3fefcb63
69ba99168c67c8ebc779bc6fb555e10d41ecb34c8121e739f2b1553c10fb2c936dc8d9972eafcdddcedd6a15c633e4fdfff469ace721713d0fc1633843fa7c3b
26dee2639e107721c319d26b666c9d0f9967ee437a639f533d87d875eb366808d1f19518bf38551fbcc4c23cff9ef3a5f7d7f6e74388045e645b8fef93dca62d
8b576e77f0220b6f9fe9b6bd65490978993df7218b706b455f14afdafee065b69d87ac130bc58650100b78a1ad3d9e84a927f317aa88085e6a6b8fb707728436
7941bc5aaf005e6a5b8f7fd2b738f8ddedfae0c5f6ecf1ed2eb7255b2888115fb9f10b53f5f1959c500d772007f0155daa9a0e4f83b8c257785fd322d4e330cc
8fe8d010a24343880e0d213a3484e8d010a2f30fe594983b4cf8047d0000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.21 Un set-reset flip-flop construit \u224\'e0 partir de deux portes NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Les entr\u233\'e9es S et R sont normalement \u224\'e0 l'\u233\'e9tat haut (valant 1). Si on met temporairement l'entr\u233\'e9e S \u224\'e0 0 et on la remet ensuite \u224\'e0 1, ceci force la sortie Q \u224\'e0 valoir 1. De m\u234\'eame, si l'on fait passer l'entr\u233\'e9e R \u224\'e0 0 et ensuite on la remet \u224\'e0 1, ceci produit la valeur 0 \u224\'e0 la sortie Q. Q' est g\u233\'e9n\u233\'e9ralement l'inverse de Q. Notez que si, S et R valent 1, la sortie Q d\u233\'e9pend de Q. Quelle qu'\u233\'e9tait sa valeur, la porte NAND continuera \u224\'e0 produire le m\u234\'eame r\u233\'e9sultat. Si Q valait 1, alors il y a deux 1 aux entr\u233\'e9es du NAND inf\u233\'e9rieur (Q NAND R).  Ceci produit 0 \u224\'e0 la sortie Q'. Par cons\u233\'e9quent, les deux entr\u233\'e9es du NAND sup\u233\'e9rieur sont 0 et 1. Ce qui produit la valeur 1 \u224\'e0 la sortie (correspondante \u224\'e0 la valeur d'origine de Q). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si cette valeur d'origine \u233\'e9tait 0, alors les entr\u233\'e9es du NAND inf\u233\'e9rieur sont Q = 0 et R = 1. Par cons\u233\'e9quent, la sortie de cette porte NAND est 1. Et ce qui rentre dans le NAND sup\u233\'e9rieur est S = 1 et Q' = 1. Ce qui produit une sortie de z\u233\'e9ro, et cela correspond \u224\'e0 la valeur d'origine de Q. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Supposez que Q = 0, S = 0 et R = 1. Ceci met les deux entr\u233\'e9es du NAND sup\u233\'e9rieur \u224\'e0 1 et 0 et produit 1 \u224\'e0 la sortie Q. Faire retourner S \u224\'e0 1 ne change pas du tout cette sortie. Vous pouvez obtenir les m\u234\'eames r\u233\'e9sultats si }{\loch
\line }{\rtlch \ltrch\lang3084\loch
Q = 1, S = 0 et R = 1. Ceci produit encore un r\u233\'e9sultat de 1 dans Q. Et cette valeur reste inalt\u233\'e9r\u233\'e9e, m\u234\'eame si S passe de 0 \u224\'e0 1. Par cons\u233\'e9quent, changer l'entr\u233\'e9e S \u224\'e0 0 et la remettre \u224\'e0 1 produit 1 comme r\u233\'e9sultat (ce qui active le flip-flop). La m\u234\'eame id\u233\'e9e s'applique \u224\'e0 l'entr\u233\'e9e R, mais ceci force la sortie \u224\'e0 0 au lieu de 1. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Il y a cependant une lacune dans le circuit : il ne fonctionnera pas correctement si on met S et R \u224\'e0 0 de fa\u231\'e7on simultan\u233\'e9e. Ceci produit 1 soit dans Q, soit dans Q' (ce qui est logiquement inconsistant). Quelle que soit l'entr\u233\'e9e qui reste \u224\'e0 z\u233\'e9ro, celle qui maintient cet \u233\'e9tat le plus longtemps d\u233\'e9termine l'\u233\'e9tat final du flip-flop. Un circuit op\u233\'e9rant de telle mani\u232\'e8re est dit }{\rtlch \ltrch\lang3084\i\loch
instable}{\rtlch \ltrch\lang3084\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le seul probl\u232\'e8me avec le flip-flop de type S/R est qu'il faut se servir de diff\u233\'e9rentes entr\u233\'e9es pour retenir une valeur de z\u233\'e9ro ou de un. Une cellule de m\u233\'e9moire serait plus efficace si l'on pouvait sp\u233\'e9cifier une valeur \u224\'e0 retenir dans une entr\u233\'e9e et fournir, pour l'autre, une }{\rtlch \ltrch\lang3084\i\loch
entr\u233\'e9e d'horloge}{\rtlch \ltrch\lang3084\loch
 pour balancer cette valeur. Un tel type de flip-flop est dit un D flip-flop (pour les donn\u233\'e9es) et utilise le circuit de la figure 2.22. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
En pr\u233\'e9sumant fixer les sorties Q et Q' \u224\'e0 0-1 ou 1-0, envoyer un impulsion d'horloge passant de 0 \u224\'e0 1 et revenant \u224\'e0 0 a pour effet de copier l'entr\u233\'e9e D dans la sortie Q. Et de copier \u233\'e9galement D' dans Q'. Les exercices \u224\'e0 la fin du chapitre s'attendent \u224\'e0 une explication d\u233\'e9taill\u233\'e9e de votre part, donc \u233\'e9tudiez ce diagramme avec soin. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Bien que retenir un simple bit est souvent important, se souvenir de groupes de bits l'est encore plus. On peut retenir une s\u233\'e9quence de bits en combinant en parall\u232\'e8le diff\u233\'e9rents flips-flops de type D. Concat\u233\'e9ner une s\u233\'e9rie de flips-flops pour stocker une valeur de }{\rtlch \ltrch\lang3084\i\loch
n}{\rtlch \ltrch\lang3084\loch
 bits constitue un }{\rtlch \ltrch\lang3084\i\loch
registre}{\rtlch \ltrch\lang3084\loch
. Le sch\u233\'e9ma \u233\'e9lectronique de la figure 2.23 montre comment construire un registre de 8 bits \u224\'e0 partir d'un ensemble de flips-flopss. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2400\shpbxcolumn\shpbxignore\shpleft0\shpright8190{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw546\pich160\picwgoal8190\pichgoal2400\pngblip
89504e470d0a1a0a0000000d4948445200000222000000a00803000000068df7e200000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000077849444154789ced9d0196b32a0c85dd
5e17a38b71315d8c2e86f76cedfcda8a44087803f79e33534f2740025f5182753a4751a7eaee7680421711a1022222544044840a8888500111112a2022420544
44a8808808151011a102b28e48f7d1f68d3b1daa4fd6bbf3c87f52a22aeb7de9f19f90e8c97a4f7afd27235ab2de917effc98892acf7e389ff3cd9e8c87a2f9e
fa6f3d380c59efc57344ac470721eb9d78ee3f195190f53e0cf84f46d205d0855d924295abfa86d05dc50510735e44d202fc292d69b33201849bd4e5c1b2ca88
bcde6c0b1280603323921421f3fb0d20921621f3fb4424ba703b8c00045a0091e82698df6f0311d1d227a27a80be2b2180303323b2d61fd70af3fb6d20f27951
4fbbb4c1084090761169831180180d2382d07dd90510a3d96b91e85a6d092044b32b1a59fbe60510a2d1bc88b47df30208d16676f56300d081990510a1694410
3a30b3002234b8d3bbb788bdd049d23cf6fd389768a97e44122a1721b200521e92b99bd75fd9553b22da779df94c4af7e3382dbfa7b14053d5239250b7acf88a
48416d1c2b317c9523927a02909c683eaf44249f0bf91049be44b8308b68372d69d53db236b26bea4e893bd3fb91f29748f64de2d5a1616644966b9199d722bf
861711491fa6f8fc7e6644e6c7ec86bec424620c9183f7342a3ea942647164957b19bce4458681b348d8d05f3674129235196d512653c2bc48d8d05b566788e2
93b7f56cde00049203119529c45fbdc0808868baa08d4870a1231711a90091ef958d221f2e25bf4f44345d484124b3e293b74444d30514442e67e6cebfaca7eb
dc7d020804059188e42d1129e4020c2207ef5d2d20fba3290104621591dcc97f14010462149166becc0910884d44daf92e274020161109275f8888a60be61091
64e78888a60bc61091a56f8988a60bc88844e7f78988a60bc088c4d74544345da80d1151eede8e0002a90b11e1ee8e210144521122f5f1e1888862f555f2e188
c8aefa84e1ad950f474476d5c70e72c57c3822f2d540c448d7cd872322bf6d5c1aefeaf97044e4b019e1a8b7c0872322be968263df081f8e889c347642403b7c
382272dede21074df1e100119987e1b17cdfbdfbf5adfca01cd0d0181f0e0f91797964c6b30741c47d51d21e1f0e0f91f793009f1f441e93cfb0a0babdee71e2
3e0104bcebf46e73d0b97ef21a9655b37c3870448611e3030ce1c46d020878d7e97f4fef7a21d20120b269bb4d4a00a23db81679ccef13cdf8f41a96d10f130d
520210eaaebba7fd8a66f790f3bbf2229de8ed6a0510e7beaf9ffdd0ffcb8b3c07af6176af4e40688a12802001b3ab0204daa10420423444c483df082500e141
217271d85ba00420361c44a206bc7a4a00024341247ea8eba604202a2844920ad7490940483888a496af931280786a41c4557ab3004034c888747b09ffe3665d
940084028dc8af5178f82b830420105388bc0d4559b5748f3004108839448490a4fa832280400c2222f0858868ba601191a0334444d3059388844e364444d305
9b8884fe08d0b33a0208c42e22677f25229a2ec02072a068878888a60b661139f3888868ba60179184158f1d01049284c8f54d944b8acf7e10114d179210f935
d2cc7d8793a8de3f00f4ac8e0002d145e46da8151611a914113d48e2b7628888a60b1910d11a22c1fd2159db471040207910d1994844881cb6941b9179ecfb71
2e3180f522a2324a02445eeba8dfa63223322fdf765e7e11919061e67d124105ddb1616644de4f509846f70c5926ab6a44d2a3932352501bc74a0c5fe588a486
2739d1ac2f4424a30bf91049ff6e8cd4a4743faeed3dcead349bba531710f17ca4ceca24fa26f1ca294c5757b55c8bcccbb5487e558f485a809245afc40d75cd
8fd90d7d8949c414228785930d124bdfd5814b5e6418388b080a67ad1d1891b7e6b049b2aa47242dc2cc049a104084b61149a9dd8600422c80487413440422c4
edf85d5e1b88971c7181665e30991040885f885ceb7569e22272303367e64c0820c61f44aef8244e7ffecd26d793dd49addb174090bf885c70ea56449a9844f0
10b978b2b982488432df6b604200517e23728911d13d3fdfadc87556a811422011b9c2c87d2b9a5608c144e40224b7e5459a2104151131233765576367258b02
88f410112923b720d21220c0880821b961a7b72d40f223d2adffbc7b557f64e24144c448eefb45bef323d117be76951d91ff7f36ff04f1f853797c2c62849b28
d955029179993bc6a19fdcb31bd6a3ad891791f7a47eba664d9e65a8904a20b2fc1a27373fb6471b931344fe26761f23dc67cbae6288bc5ffe1db9cd89fe7453
649b29e126ca0d2a85889ba767b73d723244fe9e3be4db853b6d9c8428a8c8b5c87201324ef33a8bbc8f9c0491d7a5c8a7a2cb889010151559d14cafd71591f5
c863feb3a209dc11c44d94ec2a901779fdf3eee9313efbd98dfde7c8637e9017397e38c3c7c6df3209d111583f1e6657cf4e27dc44c92eb08edc0c6c70b9f2b6
0ad643250aac2b55767a85452999c0faf2fafd22df2b1bf2a12db0eedc3ed0e56657a855600371f9c6442abbc046e2f21df05476818d4577d3135d28bfc00643
b237479515d86890103c810d0701c113d88090103c7144a8808808151011a1022222544044840ae83f2e61071244ece9940000000049454e44ae426082}}}}}
}{\rtlch \ltrch\lang3084\loch
F}{\rtlch \ltrch\lang3084\loch
igure 2.22 Impl\u233\'e9mentation d'un flip-flop de type D avec des portes NAND}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1995\shpbxcolumn\shpbxignore\shpleft0\shpright8175{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw545\pich133\picwgoal8175\pichgoal1995\pngblip
89504e470d0a1a0a0000000d4948445200000221000000850803000000badbd86400000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000006c049444154789ced9c0172dc2a1044b9
9e0e0387e1303a0c1c461fb4b625ff20981956a0f17657c5495578f4807a01b1a9980d826a32b30b801e2e2404aa0b0981ea4242a0ba9010a82e2404aa0b0981
ea4242a0ba9010a82e2404aa0b0981ea2a27245a67fdfeb748d0a7ab988068d38fd52121d045427ccc3fd7af84d830b624e8512a26c41c7f309b5dc755033d4f
cd8478977f87feacfa136290903f2d5142dc7e0e3171df65bc6ff5f1ff2e7b4eb78492efb3560adf6b5d6c10f2bb8cff7e9731f1dda65558eb739a074f48c8b6
2ea7fb90d5bedbb40a6b7d4ef3e01909e9d2a3c7fb1761246498b55218091966ad14464286592b859f9710e39c5baedf81aba60db6315e5387dbd6b50be27be1
faa0bbe0db66ecd5a2d5e08ab99eae7ac575b635def4cb8b9fd36e7dfd25d3dd706dd05df06d3376f833b533f1f21db83dde6b9630de0a4cb176d3e0daa0bbe0
db66ecf067cad4c9f6782baeedf1d64aeeb4560adf36630de71693efd29c2b2c60d4f12ec5bf278d373ae74b37bd34eb2ef862ca68b0b7ce15762a1a1c9c2dad
61a4190bf930536a776f42423a02f97f074c9c697b31d39484b8b8c5d2f98b649d9e911c4ede1d09b1e52f304870de2bd642dde435a4687ee739c4ed5ff015b6
66da7ebe04614232ecb772e524ebb507dec22a4c487497b34d82f775aff0906933564ed7ad0949e7fa8b3597fa4e204cc8d7aa553c7e51ad836c0dc9f022dd65
121c8d2f6dcb34d8c42b983663e556f7dd87d8f57257a6de2b4812e25edf28262dfca344de8b776b5bfcba9a54b78f92847cc179732bfd630a126c6cf9bd9538
63a1fc1e76ef9daa24212d6bea0d61f982806a5d9c2e0a7cb955d02f360b0d49f09eeac2e99e3863850323cd5a9c90d4b5e41c726a224d486e61cbf78414789f
69d9b13e35491f68e38aa701021c2f1f32c5599e90dc4272047ab568d676ed2a79973935e94848f9d4454cc87271f5d55937010ecbd5eb0801ce20ff5de6bbff
38252192fb9053938e84189b3ecb57fd366013ace03ee4d4449e906db5c5c5af132625e4e23af8e684484dab3069cd145b57faefac7b1e7cf38cb51af0bb7ef6
789ff990bb602484de3f12c2ed1f0961f48f84945bb41af0bb7ef6789ff990bb602484de3f12c2ed1f0961f48f84945bb41af0bb7ef6789ff990bb602484de3f
12c2ed1f0961f48f84945bb41af0bb7ef6789ff990bb602484de3f12c2ed1f0961f48f84945bb41af0bb7ef6789ff990bb602484de3f12c2ed1f0961f48f8494
5bb41af0bb7ef6789ff990bb602484de3f12c2edffed0969fedf8bffe81361ad75bf2521bce6bf814f81b5d68d848c82b5d68d848c82b5d68d848c82b5d68d84
8c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d6
8d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82
b5d68d848c82b5d68d848c82b5d68d848c82b5d68d848c82b5d6fd9e844cfbef0a34c15aeb7e4742cefe527232acb5ee69f01c5724440f3cc71509d103cf7145
42f4c0735c91103df01c5724440f3cc71509d103cf714542f4c0735c91103df01c5724440f3cc71509d103cf714542f4c0735c91103df01c5724440f3cc71509
d103cf714542f4c0735c91103df01c5724440f3cc71509d10377b0d027080981ea1226247a6b7d949a76d19f08cfb49625242ec9301aa1eb0e4ae98970cfa0b5
ce9834213ee49fc1cb3cbbe84f84675a0b13627ae03efa13e199d6fda6deb1c3792e99ed7fc082ddf5e4ec5c07ccaffb8057ebdc2aa683b34e0a07e7dc229d70
a6961f785db7201c6fea245a69c1cbbe787297cec3d9857480e3c1c7a013ceadfb809de040f05377b469cac5834eb26c77f93924eecfc76eaf5f32da04b6ff0f
bce792891fce6b0f9c3e14dcba4f636692bfe87ddd633ee453ddec746de2dd299dccbdcdc76323e8239feb9d5d64fe6738ad9b3d3077b67e069d3e8fecba8f19
13eccb3f759be8d95b54d774f7dc87a40dd1c912b2bfa0bbd73cf1fd4f30ff15ee045b09fc1a74fa244bc6bcc3796fe37f92bfeb3669bdf6ec88fc0c9afb89ca
eaba5315ae21072df7cf7030a1c359345d3b1c5ddf983be8af154c6aed0513d67beb2e3987bcc9df8b2f81b6d77c49bdd7f44e602407ceddb8c7f975cc952564
13faf62624bdcbacdc55ef3dfe6b4f30637e9192ad212f89ebcecee2dbab7d7f129c36bfbd672444721ff21e7f93f656277ec8c1b2ef437ebb8bc9b0d88e195b
6d072dfa4ce0bb5da82e2404aa0b0981ea4242a0ba9010a82e2404aa0b0981ea4242a0ba9010a82e2404aa0b0981eafa0f226bede94ae61ee10000000049454e
44ae426082}}}}}
}{\loch
F}{\loch
igure 2.23 Un registre de huit bits impl\u233\'e9ment\u233\'e9 avec huit flips-flopss de type D}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que les huit flips-flops utilisent une ligne d'horloge commune. Ce diagramme n'illustre pas les sorties Q', car elles sont rarement requises dans un registre. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Les flip-flops D sont utiles pour construire beaucoup d'autres circuits, en plus des registres, mais au-del\u224\'e0 aussi. Par exemple, on peut construire un registre de d\u233\'e9calage qui d\u233\'e9cale les bits d'une position vers la gauche \u224\'e0 chaque impulsion d'horloge. Un registre de d\u233\'e9calage de quatre bits est montr\u233\'e9 \u224\'e0 la figure 2.24. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut \u233\'e9galement construire, \u224\'e0 l'aide des flips-flops, un compteur comptant le nombre des fois qu'une horloge passe de 1 \u224\'e0 0 et revient \u224\'e0 1. Le circuit de la figure 2.25 impl\u233\'e9mente un compteur de quatre bits qui utilise des flips-flops D. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1980\shpbxcolumn\shpbxignore\shpleft0\shpright8160{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw544\pich132\picwgoal8160\pichgoal1980\pngblip
89504e470d0a1a0a0000000d49484452000002200000008408030000009e4560ff00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004ef49444154789ceddc6196a23a140460
b6c762c862580c8b81c5e4018ac1d79abe214ca5eee9fa7e38d89e2b25d428d8b65d14c9e85a07106e2a8864a92092a58248960a22592a8864a92092a5824896
0a22592a8864a92092455a9025847e8c7b3cd2847f05e7e65ffaf5621a5490f63837ff38ef974741fab975a0bf8bb320dd69a18bc31cbb3fa1e526ff8632d47b
41c2f64cf227b4dce4df50868afdb1b017a45341daa10cf53c06e997c74bcc38150dd76d69a7c3ff0c65a838bf9fc5744bc9b00a7227ca505b39c290de079942
c9ac0a7227ca507554903b5186aaa382dc8932541d15e44e94a1eaa82077a20c554705b91365a83a2ac89d2843d55141ee4419aa8e0a7227ca507554903bd184
eac2f343644fc3db8d45f7e4741fab20597b90617abffef1caaff7e4741fab20597b90657bde086158e2d485e7d2f3c66e0abdedb7ba2ac89d684275c7e538ef
3d494b8f1f77eb155b5815e44e34a15241e2f14bdcf1fce32e5ac3aa2077a209f56a425ce6a93b2fc56f1f28fb764f3f6e29f9f0d6cf9b0aa66f1e664013ea71
0cb21e788ce3bc3c9f411e4b5105698826d4e32c66de17e6ee785599bfbfc49415e4ff3ff89ee3c33efeedfe0b8633ab5641b2b6f741f6b3dcb91fa77e3d8319
8ea5a882344419ca440581a00c65a28240508632514120284399a8201094a14c541008ca50262a08046528131504823294890a024119ca440581a00c65a28240
508632514120284399a8201094a14c541008ca50262a08046528131504823294890a024119ca440581a00c95f1f1c3a959f1b54b2fcd1e3b0e3c4cb35f688218
15e73d17e4daca5a0cf3ec179a20462a08184d102315048c2688910a024613c4480501a30962a48280d104315241c0688218a9206034418c5410309a20462a08
184d102315048c2688910a024613c4480501a30962a48280d104315241c0688218a9206034418c5410309a20462a08184d102315048c2688910a024613c44805
01a30962a48280d104315241c0688218a9206034418c5410309a20462a08184d102315048c2688910a024613c4480501a30962f4ca6bfdfbf78f05310e7fdec7
c63fbdff5290a25513a0096274e97b148e825cfb0e067dfd834b259bf0c7f62edafe055f20f3fb30e9d7c47ce72c6ea28260388b9ba82018cee2262a0886b3b8
49d5315fbb611504a5dd3eae1a564150aa3674e570b35537e02c6ea28260388b9ba82018cee2262a0886b3b8890a82e12c6ea28260388b9ba82018cee2262a08
86b3b8890a82e12c6ea28260388b9ba82018cee2262a0886b3b882a68248960a22596e0bb28cc3302e0d869badb80daf0559bae579011eae5b715f31dc86d782
8cf376398ff0e1662b6ec46b41bab77f80c3cd56dc88a7ac67af4d3d85305d1e8eb1bf3ebb84507a38715a7108c1c52b8df382f4dbd3f5e389fbc2708c43f1e3
4fb3eb0e5e0a5f2cfad77d84792d58e9ba5bf05a90ad14cbfa6abefd372cded2c7f0daafe2c7ff9a8d5b390ac7d3f0543edc868b901f6ce70361e81ff94b1fc4
317c61f43cbb5e190aa7d7e171789ec5f83856f55a90fd1d85f520e052418ee12ba3a7d97d7f170f87757a5b1c7c9cedba2dc8c372ad20cfe1eba3fb6c1c8a0f
8f4fc371d63108c0a56390939ac73f54bc46d49413ca45c88c4b673127158f7faae9475fd76b1cef05b9f43ec849c5e3efd68389cbfb781e8adf4469c37d41e4
df5241244b05912c1544b25410c95241244b05912c1544b25410c9524124eb3fab068a7951ab95530000000049454e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.24 Un registre de d\u233\'e9calage de quatre bits construit \u224\'e0 partir de flip-flops D}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom2070\shpbxcolumn\shpbxignore\shpleft0\shpright8160{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw544\pich138\picwgoal8160\pichgoal2070\pngblip
89504e470d0a1a0a0000000d49484452000002200000008a0803000000a44f018f00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000070149444154789ced9ddb81a3300c4569
8f62a0188aa198504c360403063f626421899d7b3e32b3032837f8c4189235cd1b800c8d7600601b0802b24010900582802c1004648120200b0401592008c802
4140160802b2401090454f90a9efdb6149004beda2d63653fb79183b08621cb5b6195ef3e3b80ad2beb482802c6a8234de2fcdbb831f46b121483f3497d10afe
c750dbcfad97a0e9affb11042794806dbf511e83b4d3728819c68b9bdf2c086c5b517b35afe3594c335ddb3cd6a6e42c10248ddeab19bbbedbaf838cfdb5ad1f
24c8b365d34f40e37641e8b52088059e2508bd18754b36f413d0802042e827a0014184d04f40038208a19f80060411423f010d0822847e021a104408fd043420
8810fa0968401021f413d0802042e827a0014184d04f40038208a19f80060411423f010d0822847e02c7c58fbbf36d7af1a373089289a01d600582448b51b764
433f81c3ae20578341905b88ed8b0a41ca9ea0b0189f20d56f0371f413382c0b72a51804b9893f23c8b562a92562e827704090a260e2e827704090a260e2e827
704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e827
704090a260e2e827704090a260e2e827704090a260e2e827704090a260e2e82770ecfb22f19d890ca702108411fd040e4f906babaf1bc4db54dc360872131705
396c7a2a705bb1fcdfd62510e416c2366d7a77c39023d3327d66e3ad782a709f6da4ee282108b16f93c6b220f343779e8279eadedf59552f0a12b72d72cf1a7e
db5282908a89635d90af0f3ec3774ae6d1b5e9f72e114582cc0f67db62f7ac8120169e3542a24d8380ded2c6b578b12067db62f7ac29ed8e82ae2dd91dfd1024
51ec300ff56103591e2dc8d0fb2bfe16e45ccc5f6bbd674d797774bac54db23bfa2548b4983b9042900d8a20bdbf4aad20fd70add8749a5d3ed91d950812149b
12c5c4b12ec879cfbdfb6959f6dd73c3b06f4010e474cf1a7f45c6eea84490f2be4d1aeb8204f72a7bcd9defb09ec57cef2252f9a63fdeb386bf3baa16e4d0b7
49635990e8e8ed3db6de7590f9984f1f36c4ee59c3df1dd50b123fd8ca605890f24d4f05ca6d8bdcb386bf3ba28c41d60369d8b749f35704612d76ad3ba29cc5
ac07d2b06f930682108a5deb8e0aae83b461b136d1b74903416e2f862ba92c94efb969e8bac1bb0762f6137a0852c9f30499e603f2e4dd251382dcc9f30459ce
165efb27b323bd4d83ce0882d878d608c57bae09d622b7e9d49e3ba32a414eba35108413822063df175ffc8c127446438d2067ddea0449d826ce630569bf0d3b
947e429f2bd544fe4110e4acdb582348ca36719e27c8dc0ed3dc0ef3d5c6a9f4e267fc39f71f53572dc85e60eafbed52285190946de23c4f90f9bdd577edbaf7
df156ddaeeeb342f46413e767cbf1d52214838d28220db6f3fd69c8fce7d3f3008b27546de9a744176dd86755d16410edd91380f146461621064fe686de8dc81
9e650cb2e9b67cbb912ec86e5bff721fe54190f5b7c22deac7207367d47f7a237f4d7ab1836e1dc31864b16ddceae49ffd261e2c48fd598c83a907f175731fe5
d10539d8f6f2be3827cd8305a9bf0e720ce0ffa82836b76937781b90af836cb6351883d0daf4b08115413e8cebd96985200bae07c118c480208cc59acf5b7f6f
d3ca4bedfb178f0a37e0c5a220b4ffb46a489063b13a41e60b2a388b791f9b64ff5b325eb8e4579ba66b1d372d2a5608470ff2eafa016390fb04b9a73bca053b
dbf653908cba87ca456b71f3bf0b92ffdbc56234db5282d0d495068230170b332704292b965a22867e020704290a268e7e020704290a268e7e02c7f54372e618
9d584e2d164b9b791d99bf844b7f144b2d11433f81a35a8f1b05e14bd640104ea2bb935e8c9e825310e2965ae827c8604310ce6210841508a2df3cfa0932fc7f
82dc5f8c1bcbd92088012c67832006b09c0d8218c07236086200cbd92088012c67832006b09c0d8218c07236086200cbd90c0341801c1004648120e0b9d815e4
3c032150c1ac20c174a855c5201b15b38204331056104c775957ed4fd9665690e6f0a30e4ed9986d33cf030459a701e1a8c500ab6df6bb23eb8278d3a156d76a
fc7ff014ab8575a4750b660509a743a5e34d77b9cd874a6617649b0e950e6f777407660509a743a5e3cd3fb8cd874ac69b7f709d0e958ed71dd5db760b660509
a743ad2032dd2599ddb66d3a543abb20db6c97c6b02bc8c2c4224864ba4b3abe6de79bbd5f651b69edb35d1ac362a6230c6310074f0f72b0ad6318836c93ef9a
1c8ad81784e12ce600d32bfe9a11b9adefc52aeb48ebbdcd76690cfb82305c0739c0f88abbfab7fc3ad29a79610c6201be573cb21d12266fb64b6358ccf414b6
e95019d867bb34060431c236dba5312008c8024140160802b24010900582802c1004648120200b0401592008c8024140967f5fe5d8bb2818ba80000000004945
4e44ae426082}}}}}
}{\loch
F}{\loch
igure 2.25 Un compteur de quatre bits construit \u224\'e0 partir de flips-flops de type D}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cela vous para\u238\'eetra surprenant, mais on peut construire tout un CPU avec des circuits combinatoires et quelques circuits s\u233\'e9quentiels additionnels. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_07}{\*\bkmkend p2_07}\rtlch \ltrch\fs23\b\loch
2.7\tab D'accord, mais }{\rtlch \ltrch\fs23\lang3084\b\loch
q}{\rtlch \ltrch\fs23\b\loch
uel est le }{\rtlch \ltrch\fs23\lang3084\b\loch
r}{\rtlch \ltrch\fs23\b\loch
apport avec la }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammation, }{\rtlch \ltrch\fs23\lang3084\b\loch
e}{\rtlch \ltrch\fs23\b\loch
ncore ?}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une fois qu'on a des registres, des compteurs et des registres de d\u233\'e9calage, on peut construire des machines \u224\'e0 \u233\'e9tat (state machines). L'impl\u233\'e9mentation d'un algorithme mat\u233\'e9riel se servant de }{\rtlch \ltrch\lang3084\loch
ces machines }{\loch
est bien hors de la port\u233\'e9e de cet ouvrage. Cependant on peut tirer une importante conclusion \u224\'e0 partir de cette discussion : }{\rtlch \ltrch\i\loch
tout algorithme qu'on peut impl\u233\'e9menter par le logiciel, peut \u234\'eatre aussi impl\u233\'e9ment\u233\'e9 par le mat\u233\'e9riel. }{\loch
Ce qui sugg\u232\'e8re que la logique bool\u233\'e9enne est la base du fonctionnement de tous les syst\u232\'e8mes informatiques modernes. Tout programme qu'on peut \u233\'e9crire, }{\rtlch \ltrch\lang3084\loch
peut \u234\'eatre sp\u233\'e9cifi\u233\'e9 }{\loch
comme une s\u233\'e9quence d'\u233\'e9quations bool\u233\'e9ennes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Il va sans dire que r\u233\'e9soudre un probl\u232\'e8me de programmation \u224\'e0 l'aide d'un langage comme Pascal, C ou m\u234\'eame assembleur, est beaucoup plus facile que le r\u233\'e9soudre en utilisant des \u233\'e9quations bool\u233\'e9ennes. Donc, c'est fort improbable que vous }{\rtlch \ltrch\lang3084\loch
allez jamais \u233\'e9crire un programme }{\loch
en utilisant un ensemble de machines d'\u233\'e9tats et de circuits logiques. N\u233\'e9anmoins, il y a des fois o\u249\'f9 une impl\u233\'e9mentation mat\u233\'e9rielle est plus adapt\u233\'e9e. Une solution hardware peut \u234\'eatre d'un, de deux, de trois ou plus ordres de grandeur plus rapide qu'une solution logicielle \u233\'e9quivalente. Par cons\u233\'e9quent, certaines op\u233\'e9rations critiques de performance peuvent demander une programmation mat\u233\'e9rielle. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un fait encore plus int\u233\'e9ressant est }{\rtlch \ltrch\lang3084\loch
que l'inverse}{\loch
 de ce qui a \u233\'e9t\u233\'e9 dit est \u233\'e9galement vrai. Non seulement on peut impl\u233\'e9menter toute solution logicielle dans le mat\u233\'e9riel, mais on peut aussi impl\u233\'e9menter toute solution mat\u233\'e9rielle dans le logiciel. Et cette r\u233\'e9v\u233\'e9lation est importante parce que beaucoup d'op\u233\'e9rations qui normalement sont r\u233\'e9alis\u233\'e9es du c\u244\'f4t\u233\'e9 mat\u233\'e9riel, sont beaucoup moins dispendieuses si }{\rtlch \ltrch\lang3084\loch
on les d\u233\'e9veloppe }{\loch
de fa\u231\'e7on logicielle sur un microprocesseur. En v\u233\'e9rit\u233\'e9, l'application primaire de l'assembleur dans beaucoup de syst\u232\'e8mes modernes est de remplacer des circuits \u233\'e9lectroniques complexes par un support logiciel vraiment bon march\u233\'e9. C'est souvent possible de remplacer des composantes \u233\'e9lectroniques co\u251\'fbtant de dizaines de centaines de dollars par des puces de micro ordinateur \u224\'e0 25$. Tout le domaine des syst\u232\'e8mes int\u233\'e9gr\u233\'e9s se penche sur cette question probl\u233\'e9matique. Les syst\u232\'e8mes int\u233\'e9gr\u233\'e9s (embedded systems) sont des syst\u232\'e8mes informatiques incorpor\u233\'e9s dans d'autres produits. Par exemple, certains fours \u224\'e0 micro-ondes, les TV, les syst\u232\'e8mes de jeux vid\u233\'e9o, les lecteurs de CD et d'autres appareils domestiques contiennent un ou plus syst\u232\'e8mes informatiques dont le seul but est de remplacer toute une conception mat\u233\'e9rielle complexe. Les ing\u233\'e9nieurs utilisent des ordinateurs pour atteindre ce but, parce que cela comporte moins de d\u233\'e9penses ; de plus, r\u233\'e9aliser des circuits logiciels est techniquement plus simple que travailler avec les circuits \u233\'e9lectroniques traditionnels. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut parfaitement concevoir des logiciels qui lisent des interrupteurs (variables d'entr\u233\'e9es) et peuvent mettre en marche des moteurs, allumer ou \u233\'e9teindre des lumi\u232\'e8res, fermer ou ouvrir des portes, etc. (sorties des fonctions). Pour \u233\'e9crire de tels logiciels, vous avez besoin de comprendre les fonctions bool\u233\'e9ennes et de comprendre la mani\u232\'e8re de les impl\u233\'e9menter selon une perspective logicielle. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Sans doute, m\u234\'eame si vous n'\u233\'e9crirez jamais des logiciels destin\u233\'e9s aux syst\u232\'e8mes int\u233\'e9gr\u233\'e9s ou des logiciels manipulant des objets du monde r\u233\'e9el, il y a une autre raison qui justifie l'\u233\'e9tude des fonctions bool\u233\'e9ennes. Les langages de haut niveau traitent des expressions bool\u233\'e9ennes (par exemple, ces expressions qui contr\u244\'f4lent des instructions }{\rtlch \ltrch\i\loch
if}{\loch
 ou }{\rtlch \ltrch\i\loch
while}{\loch
). En appliquant des transformations telles que le th\u233\'e9or\u232\'e8me de DeMorgan ou la table de Karnaugh, c'est souvent possible d'am\u233\'e9liorer les performances des programmes. Par cons\u233\'e9quent, \u233\'e9tudier les fonctions bool\u233\'e9ennes est important, quel que soit l'usage que vous en ferez. M\u234\'eame }{\rtlch \ltrch\lang3084\loch
en travaillant uniquement avec des langages de haut niveau, les fonction boll\u233\'e9ennes permettent d\u8217\'92\u234\'eatre un meilleur programmeur}{\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Par exemple, supposez avoir l'instruction Pascal suivante :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
if((x=y) and (a<>b)) or ((x=y) and (c<=d)) then SomeStmt;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Vous pouvez utiliser la loi distributive pour simplifier ceci \u224\'e0 :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
if((x=y) and ((a<>b) or (c<=d)) then SomeStmt;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
De m\u234\'eame, on peut utiliser le th\u233\'e9or\u232\'e8me de DeMorgan pour r\u233\'e9duire}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
while(not((a=b) and (c=d)) do Something;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
\u224\'e0}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
while(a<>b) or (c<>d) do Something;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\fs23\b\loch
2.8\tab Fonctions bool\u233\'e9ennes g\u233\'e9n\u233\'e9riques}{{\*\bkmkstart p2_08}{\*\bkmkend p2_08}\rtlch \ltrch\fs23\b\loch
 }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour une application sp\u233\'e9cifique, on peut cr\u233\'e9er une fonction logique qui obtient un r\u233\'e9sultat donn\u233\'e9. Supposez cependant }{\rtlch \ltrch\lang3084\loch
qu\u8217\'92on voulait }{\loch
\u233\'e9crire un programme qui }{\rtlch \ltrch\i\loch
simule}{\loch
 toute possible fonction. Par exemple, un des programmes accompagnant ce livre permet d'entrer une fonction bool\u233\'e9enne arbitraire d\u8217\'92une}{\rtlch \ltrch\lang3084\loch
 \u224\'e0 }{\loch
quatre variables diff\u233\'e9rentes. Ce programme lit les entr\u233\'e9es et produit les r\u233\'e9sultats n\u233\'e9cessaires. Puisque le nombre de fonctions uniques de quatre variables est grand (65536 pour \u234\'eatre exacts), ce n'est pas pratique d'inclure une solution sp\u233\'e9cifique pour chaque fonction. Ce qui est n\u233\'e9cessaire est une }{\rtlch \ltrch\i\loch
fonction logique g\u233\'e9n\u233\'e9rique}{\loch
, une fonction qui peut calculer les r\u233\'e9sultats de toute fonction arbitraire. Cette section d\u233\'e9crit la mani\u232\'e8re }{\rtlch \ltrch\lang3084\loch
de l'\u233\'e9crire}{\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une fonction bool\u233\'e9enne g\u233\'e9n\u233\'e9rique de quatre variables, requiert cinq param\u232\'e8tres - les quatre param\u232\'e8tres d'entr\u233\'e9e et un cinqui\u232\'e8me argument sp\u233\'e9cifiant la fonction sp\u233\'e9cifique \u224\'e0 calculer. Alors qu'il y a beaucoup de fa\u231\'e7ons de sp\u233\'e9cifier cette fonction, on utilisera comme cinqui\u232\'e8me argument le num\u233\'e9ro de fonction. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Vous pourriez vous demander }{\loch
comment on peut effectuer}{{\*\bkmkstart a}{\*\bkmkend a}\loch
 le calcul d'une fonction \u224\'e0 partir de son num\u233\'e9ro. Cependant, gardez \u224\'e0 l'esprit que les bits qui constituent un num\u233\'e9ro de fonction proviennent directement de la table de v\u233\'e9rit\u233\'e9 de cette fonction. Par cons\u233\'e9quent, si on extrait ces bits, on peut construire la table de v\u233\'e9rit\u233\'e9 de la fonction. En effet, si on choisit le i}{\rtlch \ltrch\sub\loch
\u232\'e8me}{\loch
 bit du num\u233\'e9ro de fonction, o\u249\'f9 i = D*8 + C*4 + B*2 + A, on obtient le r\u233\'e9sultat de la fonction pour les valeurs particuli\u232\'e8res de A, B, C et D}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Le chapitre 5 expliquera pourquoi cette multiplication fonctionne. }
}}
}{\loch
. Les exemples suivants, en C et en Pascal, montrent comment \u233\'e9crire ces fonctions :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/****************************************************************************/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/*                                                                          */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/* Ce programme C d\u233\'e9montre comment \u233\'e9crire une fonction logique g\u233\'e9n\u233\'e9rique qui*/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/* calcule toute fonction logique de quatre variables. Etant donn\u233\'e9 que le   */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/* langage C dispose d'op\u233\'e9rateurs de manipulation de bits, cette t\u226\'e2che est  */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/* simple \u224\'e0 accomplir.\tab \tab                     \tab \tab \tab       */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/*\tab \tab \tab \tab \tab \tab \tab \tab \tab       */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/****************************************************************************/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
#include <stdlib.h>}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
#include <stdio.h>}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/*Fonction logique g}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9n\u233\'e9rique. Le param\u232\'e8tre "func" contient un nombre de     */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
/*fonction de 16 bits. Ce nombre est en r\u233\'e9alit\u233\'e9 une table de v\u233\'e9rit\u233\'e9 encod\u233\'e9e */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
/*pour cette fonction. Les param\u232\'e8tres a, b, c et d sont les entr\u233\'e9es de      */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
/*cette fonction. Si on consid\u232\'e8re "func" comme un tableau de bits           */ }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
/*2x2x2x2, cette fonction particuli\u232\'e8re s\u233\'e9lectionne le bit "func[d,c,b,a]"   */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
/*dans le tableau func. \tab \tab \tab \tab \tab \tab       */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
int generic (int func, int a, int b, int c, int d)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\{}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab /*retourne le bit sp}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9cifi\u233\'e9 par a, b, c et d */}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab return(func }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
>> (a + b * 2 + c * 4 + d * 8)) & 1;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\}}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
/*Programme principal pour piloter }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
la fonction logique g\u233\'e9n\u233\'e9rique \u233\'e9crite en C*/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
main()}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\{}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab int func, a, b, c, d;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab /*R}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9p\u233\'e9ter ce qui suit tant que l'utilisateur n'entre pas z\u233\'e9ro*/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab do}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\{}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab /*Obtenir le num\u233\'e9ro de fonction (table de v\u233\'e9rit\u233\'e9*/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab printf("Entrez le num\u233\'e9ro de fonction (en hex) : ");}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab scanf("%x", &func);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab /*Si l'utilisateur }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
a entr\u233\'e9 le nombre z\u233\'e9ro, alors arr\u234\'eater le }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab   programme*/}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab if(func != 0)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\{}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab printf("Entrer les valeurs pour d, c, b et a: ");}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab scanf("%d%d%d%d", &d, &c, &b, &a);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab printf("Le r\u233\'e9sultat est : %d\\n", generic(func,a,b,c,d)); }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab printf("Func=%x, A=%d, B=%d, C=%d, D=%d\\n", }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li2553\ri0\lin2553\rin0\fi851{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
func,a,b,c,d);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \}}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \}while(func != 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\}}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le programme Pascal qui suit est }{\rtlch \ltrch\lang3084\loch
\u233\'e9crit pour le Pascal standard, qui ne fournit pas d'op\u233\'e9rateurs de manipulation de bits ; donc, ce programme est plus long parce qu'il doit simuler les bits \u224\'e0 l'aide d'un tableau d'entiers. Beaucoup de versions modernes de Pascal (sp\u233\'e9cialement Turbo Pascal) fournissent des librairies de routines int\u233\'e9gr\u233\'e9es pour travailler avec les bits. Ce programme aurait \u233\'e9t\u233\'e9 beaucoup plus facile \u224\'e0 \u233\'e9crire en utilisant ces caract\u233\'e9ristiques non standard. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
program GenericFunc(input, output);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*Puisque le Pascal standard n'offre pas de moyen facile de manipuler        *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*directement les bits dans un entier, on simulera le num\u233\'e9ro de fonction en  *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*utilisant un tableau de 16 entiers. "GFTYPE" est le type de ce tableau.    *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
type}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab gftype = array}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
[0..15] of integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
var}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab a, b, c, d:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab fresult:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab func:gftype;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*Le Pascal standard ne fournit pas de moyen pour }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
d\u233\'e9caler une valeur enti\u232\'e8re *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*\u224\'e0 gauche ou \u224\'e0 droite. Par cons\u233\'e9quent, on simulera une valeur de 16         *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*bits en utilisant un tableau de 16 entiers. On peut simuler des d\u233\'e9calages  *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*en d\u233\'e9pla\u231\'e7ant les donn\u233\'e9es \u224\'e0 l'int\u233\'e9rieur du tableau.                         *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*                                                                           *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*Noter que Turbo Pascal *est* en mesure de fournir les op\u233\'e9rations shl et    *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*shr. Cependant, ce code est \u233\'e9crit pour le Pascal Standard et ne se limite  *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*pas seulement \u224\'e0 Turbo Pascal.                                             *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*                                                                           *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*ShiftLeft d\u233\'e9cale les valeurs dans func d'une position vers la gauche et    *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*ins\u232\'e8re les valeurs qui sortent \u224\'e0 droite \u224\'e0 la position z\u233\'e9ro.                *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
procedure ShiftLeft(shiftin:integer);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
var i:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab for i := 15 downto 1 do func[i] := func[i-1];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab func[0] := shiftin;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*ShiftNibble d\u233\'e9cale les donn\u233\'e9es de func vers la gauche de quatre positions *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*et ins\u232\'e8re les quatre bits a (bit faible), b, c et d (bit fort) dans les   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*positions vacantes.                                                       *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
procedure ShiftNibble(d, c, b, a:integer);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab ShiftLeft(d);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab ShiftLeft(c);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab ShiftLeft(b);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
ShiftLeft(a);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*ShiftRight d\u233\'e9cale les donn\u233\'e9es dans func d'une position vers la droite.    *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*Il remplit tous les bits forts par des z\u233\'e9ros.                             *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
procedure ShiftRight;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
var i:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab for i := 0 to 14 do func[i] := func[i+1];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab func[15] := 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*ToUpper convertit un caract\u232\'e8re minuscule en majuscule. \tab \tab      *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
procedure toupper(var ch:char)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab if(ch in ['a'..'z']) then ch := chr(ord(ch) - 32);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*ReadFunc lit un}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
 num\u233\'e9ro de fonction hexad\u233\'e9cimal entr\u233\'e9 par l'utilisateur    *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
et place cette valeur dans le tableau de la fonction bit par bit.           *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
function ReadFunc:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
var ch:char;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab i, val:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab write(}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
'Entrez le num\u233\'e9ro de fonction (en hexad\u233\'e9cimal):');}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab for i := 0 to 15 do func[i] := 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab repeat}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab read(ch);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab if not eoln then begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab toupper(ch);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab case ch of}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '0' : ShiftNibble(0, 0, 0, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '1' : ShiftNibble(0, 0, 0, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '2' : ShiftNibble(0, 0, 1, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '3' : ShiftNibble(0, 0, 1, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '4' : ShiftNibble(0, 1, 0, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi851{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab '5' : ShiftNibble(0, 1, 0, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '6' : ShiftNibble(0, 1, 1, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '7' : ShiftNibble(0, 1, 1, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '8' : ShiftNibble(1, 0, 0, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab '9' : ShiftNibble(1, 0, 0, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'A' : ShiftNibble(1, 0, 1, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'B' : ShiftNibble(1, 0, 1, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'C' : ShiftNibble(1, 1, 0, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'D' : ShiftNibble(1, 1, 0, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'E' : ShiftNibble(1, 1, 1, 0);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab 'F' : ShiftNibble(1, 1, 1, 1);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab \tab else write(chr(7), chr(8));}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab until eoln;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab val := 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab for i:= 0 to 15 do val := val + func[i];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab ReadFunc := val;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*Generic - Calcule la fonction logique g}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9n\u233\'e9rique sp\u233\'e9cifi\u233\'e9e par le num\u233\'e9ro *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*de fonction "func" sur les quatre valeurs d'entr\u233\'e9e a, b, c et d. Elle   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*fait ceci en retournant le bit d*8 + c*4 + b*3 + a*2 \u224\'e0 partir de        *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*func.                                                                   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
function Generic(var func:gftype; a, b, c, d:integer):integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab Generic := func}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
[a + b*2 + c*4 + d*8];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
begin\tab (*main*)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab repeat}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab fresult := ReadFunc;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab if(fresult <> 0) then begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab write('Entrez les valeurs pour D, C, B et A (0/1) : ');}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab readln(d, c, b, a);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab writeln('Le r\u233\'e9sultat est : ',Generic(func, a, b, c, d));}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab until fresult = 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Le code suivant d\u233\'e9montre le pouvoir des op\u233\'e9rateurs de manipulation de bits. Cette version du programme utilise les caract\u233\'e9ristiques additionnelles de Turbo Pascal, permettant aux programmeurs d'effectuer facilement des op\u233\'e9rations de d\u233\'e9calage et de comparaisons logiques :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
program GenericFunc(input, output);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
const}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab hex = ['a'..'f', 'A'..'F'];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab decimal = ['0'..'9'];}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
var}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
a, b, c, d:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
fresult:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
func:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
(*Voici une seconde version de la fonction g}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9n\u233\'e9rique \u233\'e9crite en Pascal,       *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*version utilisant les nouvelles possibilit\u233\'e9s de manipulation de bits       *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*de Turbo Pascal pour simplifier le programme.                              *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
function ReadFunc:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
var\tab ch:char;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab i, val:integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab write('Entrez le num\u233\'e9ro de fonction (en hexad\u233\'e9cimal) : ');}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab repeat}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab read(ch);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab func := 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab if not eoln then begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab if(ch in Hex) then}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab \tab func := (func shl 4) + (ord(ch) and 15) + 9}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab else if (ch in Decimal) then}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab \tab func := (func shl 4) + (ord(ch) and 15)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab else write(ch(7));}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab until eoln;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab ReadFunc := func;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*Generic - }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Calcule la fonction logique g}{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\u233\'e9n\u233\'e9rique sp\u233\'e9cifi\u233\'e9e par le num\u233\'e9ro   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*de fonction "func" sur les quatre valeurs d'entr\u233\'e9e a, b, c et d. Elle fait*)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*ceci en retournant le bit d*8 + c*4 + b*3 + a*2 \u224\'e0 partir de func. Cette   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*version se base sur la possibilit\u233\'e9 d'utiliser l'op\u233\'e9rateur de d\u233\'e9calage \u224\'e0   *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
(*droite et les op\u233\'e9rateurs logiques sur les bits offerte par Turbo Pascal.  *)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
function Generic(func, a, b, c, d:integer):integer;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab Generic := (func shr(a + b*2 + c*4 + d*8)) and 1;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
begin \tab (*main*)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab repeat}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab fresult := ReadFunc;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab if(fresult <> 0) then begin}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\lang3084\loch\f8\loch
\tab \tab \tab write('Entrez des valeurs pour D, C, B et A (0/1) :');}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab readln(d, c, b, a);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab \tab writeln('Le r\u233\'e9sultat est : ',Generic(func, a, b, c, d));}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab end;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab until fresult = 0;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
end.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_09}{\*\bkmkend p2_09}\rtlch \ltrch\fs23\b\loch
2.9\tab Exercices de Laboratoire}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
  }{\loch
Ce laboratoire utilise divers programmes Windows pour manipuler des tables de v\u233\'e9rit\u233\'e9, travailler avec des expressions logiques et optimiser et simuler des }{\rtlch \ltrch\lang3084\loch
\u233\'e9quations. Ces programmes vous aideront \u224\'e0 comprendre les relations entre les \u233\'e9quations logiques et les tables de v\u233\'e9rit\u233\'e9 ; et aussi \u224\'e0 comprendre pleinement les syst\u232\'e8mes logiques. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Le programme WLOGIC.EXE simule le fonctionnement des circuits logiques. Il maintient des \u233\'e9quations d\u233\'e9crivant un circuit \u233\'e9lectronique et il simule des interrupteurs et des indicateurs lumineux (LEDs) pour les sorties. Pour ceux qui aiment des laboratoires r\u233\'e9alistes, il y a un programme optionnel que vous pouvez faire tourner sous DOS, LOGICEV.EXE qui contr\u244\'f4le un ensemble r\u233\'e9el d'indicateurs et d'interrupteurs qu'on construit et on attache sur un port parall\u232\'e8le du PC. Les directives de construction mat\u233\'e9rielle se trouvent dans les appendices. L'utilisation des deux programmes permet d'observer facilement le comportement d'un ensemble de fonctions logiques. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
Si vous ne l'avez d\u233\'e9j\u224\'e0 fait, veuillez installer les logiciels supportant ce livre. Voir les exercices de laboratoire du chapitre 1 pour plus de d\u233\'e9tails. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\rtlch \ltrch\lang3084\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_09_1}{\*\bkmkend p2_09_1}\rtlch \ltrch\fs23\b\loch
2.9.1\tab Exercices sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
t}{\rtlch \ltrch\fs23\b\loch
ables de }{\rtlch \ltrch\fs23\lang3084\b\loch
v}{\rtlch \ltrch\fs23\b\loch
\u233\'e9rit\u233\'e9 et les }{\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9}{\rtlch \ltrch\fs23\b\loch
quations logiques}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans cet exercice, vous allez cr\u233\'e9er diverses tables de v\u233\'e9rit\u233\'e9 de deux, trois et quatre variables. Le programme TRUTHTBL.EXE (qui se trouve dans le sous-r\u233\'e9pertoire CH2), convertit automatiquement en forme canonique (somme de }{\rtlch\ai \ltrch\i\loch
minterms}{\loch
) les tables de v\u233\'e9rit\u233\'e9 que vous entrez. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Le fichier TRUTHTBL.EXE est un programme Windows et requiert certaines versions de Windows pour fonctionner correctement. En particulier, il ne fonctionnera pas sous DOS. Il devrait tout de m\u234\'eame fonctionner convenablement sur des versions de Windows \u224\'e0 partir de 3.1. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Le programme TRUTHTBL.EXE fournit trois boutons vous permettant de choisir des tables de trois ou quatre variables. Cliquer sur un de ces boutons vous permet d'arranger la table de fa\u231\'e7on appropri\u233\'e9e. Par d\u233\'e9faut, TRUTHTBL suppose que vous voulez travailler avec quatre variables. Essayez de presser les boutons permettant de choisir le nombre de variables et observez les r\u233\'e9sultats. D\u233\'e9crivez ce qui arrive dans votre rapport. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour changer les entr\u233\'e9es de la table, vous aurez juste besoin de cliquer sur la case associ\u233\'e9e \u224\'e0 la valeur de la table de v\u233\'e9rit\u233\'e9 que vous voulez changer. Cliquer sur une de ces cases inverse la valeur qui y est inscrite. Par exemple, essayez de cliquer sur la case DCBA plusieurs fois et observez les r\u233\'e9sultats. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que, d\u232\'e8s que vous cliquez sur diff\u233\'e9rentes entr\u233\'e9es, le programme recalcule automatiquement la somme des }{\rtlch\ai \ltrch\i\loch
minterms}{\loch
 et l'affiche au bas de la fen\u234\'eatre. Quelle \u233\'e9quation sera affich\u233\'e9e si vous mettez toutes les entr\u233\'e9es \u224\'e0 z\u233\'e9ro}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
Note : \u224\'e0 l'entr\u233\'e9e du programme, aucune \u233\'e9quation ne sera affich\u233\'e9e. Par cons\u233\'e9quent, vous devrez changer au moins une case et ensuite la remettre \u224\'e0 z\u233\'e9ro pour voir cette \u233\'e9quation. }
}}
}{\loch
 ? }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
R\u233\'e9glez le programme pour travailler avec quatre variables. Mettez \u224\'e0 un la position DCBA. Maintenant, pressez le bouton pour mettre en mode deux variables. Mettez de nouveau le programme en mode quatre variables et remplissez toute la table avec des 1. Maintenant, revenez encore en mode deux variables. Finalement, pressez le bouton "quatre variables" et examinez les r\u233\'e9sultats. Qu'est-ce que le programme fait quand vous changez la taille des tables de v\u233\'e9rit\u233\'e9 ? Exp\u233\'e9rimentez plusieurs modes, puis notez vos r\u233\'e9sultats.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Passez en mode deux variables. Donnez les entr\u233\'e9es pour les fonctions AND, OR, XOR et NAND. V\u233\'e9rifiez la justesse des \u233\'e9quations logiques produites et annotez vos r\u233\'e9sultats dans votre rapport de laboratoire. Note : si vous avez une imprimante compatible avec Windows, vous pouvez imprimer toutes les tables que vous cr\u233\'e9ez en pressant le bouton Print dans la fen\u234\'eatre. Ceci rend tr\u232\'e8s facile d'inclure dans votre rapport les tables et les \u233\'e9quations correspondantes. }{\rtlch \ltrch\b\loch
Pour aller plus loin : }{\loch
faites les tables de v\u233\'e9rit\u233\'e9s pour toutes les 16 fonctions de deux variables. Dans votre rapport, notez tous les r\u233\'e9sultats.   }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Concevez \u224\'e0 la main plusieurs tables de v\u233\'e9rit\u233\'e9s de deux, trois et quatre variables. D\u233\'e9terminez toujours \u224\'e0 la main les \u233\'e9quations logiques sous forme de somme de minterms. Puis passez ces tables au programme et v\u233\'e9rifiez l'exactitude de votre travail. Incluez dans votre rapport vos tables et vos \u233\'e9quations avec les r\u233\'e9sultats du programme. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Consid\u233\'e9rez la disposition suivante de l'affichage d'un circuit sept segments : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1590\shpbxcolumn\shpbxignore\shpleft0\shpright6945{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw463\pich106\picwgoal6945\pichgoal1590\pngblip
89504e470d0a1a0a0000000d49484452000001cf0000006a0803000000ed002af000000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000026c49444154789ceddd4d76a2401440e1
da9c0317238b61312cc5016c26da1dabb17949248a9c77eb7e933870508f7b48e44752269194bd17a097b2278b3d59ecc9d24ecfbe740d0cdbc0883765eac7bd
d7b0b9a67a36a08921ff2a53b7f712b6d752cfce9e2465b4274999ce7b2f617b4df51cfbbdd7b0b9767a5e8e3f0fc3de8bd85c3b3ddb604f1674cff280bdd7f8
62b479eed893c59e4a0edbf3d17d0fb68ba28699b3278b3d59ecc9624f167bb2d893c59ef9f5a5abf794acef399cbafc77a4a07a5ea7f975cff3f567fa0bdeb8
9ef5e5da9eddb565fa0bdeb49e75075bdd93b1251853dcccbed2604f80329deacbdff4ecbbec7f40693deb2d99ab7b9e8609b039d20f70e799cf43c361026c8e
f403cc5d8e3febebf5c79ffdb14bffeb96d573cef3432cf664b1278b3d59ecc9b2e8d9976128cbcfaff6cc61b97f96705a7be6604f167bb2043dbbe88152f6cc
c1fd93c59e2cf664f1f893c5f3432cf664b127cb77cf4c98db7b9d2f469be78e3d59ecc9624f8e475bc192a28699b3278b3d59ecc9624f167bb2d893c59ef9f5
e5dff30f56f78c2e8ee683eaf9d4f73f199b023144654fc410953d114354f6440c51d9133144654fc410953d1143dc3c75fcc9d814882122ab7b8ec72d97f32e
f6fc7cdb7038fdf0ce14ece9f9db14ecc9624f167bb22c7afef9bee0f279e2f6cc61b97f96a90f1e0f6fcf1c829e63744462cf1c829ec773fcbeb7ace74d50c3
cc053d4bf4df72ec9943f4fb361ad69e39449f878ec11d5ff6cc21ea790ea6b5670ed1f1e774585e43b1670e9e1f62b1278b3d59be7c60c27ff65ee78bd1e6b9
634f167b2a397bb2d893c59e2cf664b1278b3d59ecc9624f167bb27c0019fcd7a263c201220000000049454e44ae426082}}}}}
}{\loch
E}{\loch
t voici les segments \u224\'e0 allumer pour les valeurs binaires DCBA = 0000 - 1001 :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1680\shpbxcolumn\shpbxignore\shpleft0\shpright6975{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw465\pich112\picwgoal6975\pichgoal1680\pngblip
89504e470d0a1a0a0000000d49484452000001d1000000700803000000762aba5600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002d649444154789cedd8416e1b311404d1
b9ff157d99008dac9411f5c396ed12516f4dcdb459d6c2bebe7496ebb707e8cd2c7a1a8b9ec6a2a7b1e869a045af3bdff7a4db43d0ab79053adba2dba0b32dba
0d39fbfe824777fccfa9d1a32687ee5fce0b4fdb13f7f1f68a6e1f7a7c5f31ea47d1f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f
58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43df1e4964697f778c5d713ff7d
e8d919da0dd2f6c43b6f69146192ea337a7e56d19defe82cc3e8ebe77774dffd3d8d2eeff1a3c58d4fdfb7fbfc6f42db13162dd0f684450bb43d61d1026d4f58
b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0
f684450bb43d713d33fbeceb474d5f387adff4a7fa21b43db17fbfc347ed9dfa0cd0d9efbb618beac359f434163d8d454f63d1d358f434d0a2fb7f73bcefd0e3
a90ff91387b7282cba8db7282cba8db7e8abfad7ddf059937ffeee1c02a0ed89d93ded5fe64dacd7cfbf1f65d1118b16687bc2a205da9eb06881b6272c5aa0ed
098b16687bc2a205da9eb06881b6272c5aa0ed098b16687bc2a205da9eb06881b6272c5aa0ed098b16687bc2a205da9eb06881b6272c5aa0ed098b16687be2ba
373a357dc1e07d1b8700687be2db8beebcef337a428bceaeaff8d25c3b5fbffdd7fd28da9e859b1bbe3df4fa477a3c74ff999ddf0d00da9e058b8ed0f62c5874
84b667c1a223b43d0b161da1ed59b0e8086dcf824547687b162c3a42dbb360d111da9e058b8ed0f62c587484b667c1a223b43d0b161da1ed59b0e8086dcf8245
47687b162c3a42dbb360d111da9e058b8ed0f6fc75dd9b9cd9e8503ce9cba23393fbdd8e307b1b2ed51074b645b741678f6ef87d192c2a2e8b9ec6a2a7b1e869
2c7a1a8b9ee60fc189c51d15d34a0b0000000049454e44ae426082}}}}}

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
E = D'C'B'A' + D'C'BA' + D'C'BA + D'CB'A + D'CBA' + D'CBA + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
F = D'C'B'A' + D'CB'A' + D'CB'A + D'CBA' + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
G = D'C'B'A' + D'C'B'A + D'C'BA' +D'C'BA + D'CB'A' + D'CBA + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
H = D'C'B'A' + D'C'BA + D'CB'A' + D'CB'A + D'CBA' + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
I = D'C'B'A' + D'C'BA' + D'CBA' + DC'B'A'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
J = D'C'B'A' + D'C'B'A + D'C'BA + D'CB'A' + D'CB'A + D'CBA' + D'CBA + DC'B'A' + DC'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
K = D'C'B'A' + D'C'BA' + D'C'BA + D'CB'A + D'CBA' + DC'B'A'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Convertissez chacune de ces \u233\'e9quations en table de v\u233\'e9rit\u233\'e9 en mettant toutes les entr\u233\'e9es de la table \u224\'e0 z\u233\'e9ro et en cliquant ensuite sur chaque case qui correspond \u224\'e0 chaque minterm de l'\u233\'e9quation. En observant l'\u233\'e9quation que TRUTHTBL produit, v\u233\'e9rifiez chacune de vos conversions. Placez les tables et la description de vos r\u233\'e9sultats dans votre rapport de laboratoire. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Pour aller plus loin : }{\loch
modifiez les \u233\'e9quations ci-dessus pour produire les caract\u232\'e8res hexad\u233\'e9cimaux suivants. D\u233\'e9terminez les nouvelles tables et utilisez le programme pour v\u233\'e9rifier que vos tables et vos \u233\'e9quations sont correctes. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom915\shpbxcolumn\shpbxignore\shpleft0\shpright5610{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw374\pich61\picwgoal5610\pichgoal915\pngblip
89504e470d0a1a0a0000000d49484452000001760000003d08030000008e68b24c00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000017249444154789ced99416ec33010c4fc
ff2fe6310990a365c333d2486bd8e4315086125bf4d2ed03ebf96ed5377825642f81ec2590bd04b29740f612e665df0e096e25ef35d57800d9c9ee6d25ef35d5
78c0acecc7d1f777175f32d2a031dea1faccecc2c7e263469ebcdea840f6b85181ec71a302d9e34605b2c78d0a648f1b15c81e372a903d6e54207bdca840f6b8
5181ec71a302d9e34605b2c78d0a648f1b15c81e372a903d6e54207bdca840f6b851a1fa9f7a9747fec7c69c3d46e9543fabb34ba79ab111679ff161d9a5dfbd
a6d574a336e66738e38e7fdbdbecca8b478cea580cb23b6331c8ee8cc520bb331683ecce580cb23b6331c8ee8cc520bb331683ecce580cb23b6331c8ee8cc520
bb331683ecce580cb23b6331c8ee8cc520bb331683ecce580cb23b6331e665573edfced87fe9faccf996626caed9f16487d5d9f7a7b40823d9fb8cc6537b20fb
a3b2ab4811464e693fc3398f3ba73afb4b217b09642f81ec2590bd04b29740f612be3ff6868a19789a57810000000049454e44ae426082}}}}}

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_09_2}{\*\bkmkend p2_09_2}\rtlch \ltrch\fs23\b\loch
2.9.2\tab Exercices sur les }{\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
onctions logiques en }{\rtlch \ltrch\fs23\lang3084\b\loch
f}{\rtlch \ltrch\fs23\b\loch
orme canonique}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans ce laboratoire, vous allez entrer diverses \u233\'e9quations logiques, calculer leur forme canonique et g\u233\'e9n\u233\'e9rer leur table de v\u233\'e9rit\u233\'e9. Dans un certain sens, cet exercice est l'oppos\u233\'e9 du pr\u233\'e9c\u233\'e9dent o\u249\'f9 vous g\u233\'e9n\u233\'e9riez une forme canonique \u224\'e0 partir d'une table de v\u233\'e9rit\u233\'e9. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Cet exercice utilise le programme CANON.EXE qui se trouve dans le sous-r\u233\'e9pertoire CH2. Ex\u233\'e9cutez ce programme \u224\'e0 partir de Windows en double-cliquant sur son ic\u244\'f4ne. Il affiche une bo\u238\'eete de texte, une table de v\u233\'e9rit\u233\'e9 et divers boutons. Contrairement \u224\'e0 TRUTHTBL.EXE de l'exercice pr\u233\'e9c\u233\'e9dent vous ne pourrez pas modifier la table de v\u233\'e9rit\u233\'e9, car c'est une table d'affichage uniquement. Pour calculer les r}{\rtlch \ltrch\lang3084\loch
\u233\'e9sultats qui seront affich\u233\'e9s dans cette table, }{\loch
il faudra entrer des \u233\'e9quations logiques dans le champ de texte et presser le bouton "Compute". Ce programme produit aussi la somme des minterms pour l'\u233\'e9quation logique entr\u233\'e9e (d'o\u249\'f9 le nom du programme). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Des \u233\'e9quations logiques valides prennent les formes suivantes : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
\tab Un }{\rtlch \ltrch\i\loch
terme}{\loch
 est soit une variable (A, B, C ou D), soit une expression logique entour\u233\'e9e par des parenth\u232\'e8ses. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
\tab Un }{\rtlch \ltrch\i\loch
facteur}{\loch
 est soit un terme soit un facteur suivi par le symbole }{\rtlch \ltrch\i\loch
'}{\loch
 Ce caract\u232\'e8re effectue la n\u233\'e9gation logique du facteur qui le pr\u233\'e9c\u232\'e8de imm\u233\'e9diatement. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
\tab Un  }{\rtlch \ltrch\i\loch
produit}{\loch
 est soit un facteur, soit un facteur concat\u233\'e9n\u233\'e9 avec un produit. La concat\u233\'e9nation illustre l'op\u233\'e9ration AND. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li709\ri0\lin709\rin0\fi-567\sb0\sa120{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
\tab Une expression est un produit, ou un produit suivi d'une somme (laquelle illustre l'op\u233\'e9ration OR) avec une autre expression. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que OR a la pr\u233\'e9c\u233\'e9dence la plus basse, AND a une pr\u233\'e9c\u233\'e9dence interm\u233\'e9diaire et NOT la plus \u233\'e9lev\u233\'e9e. Vous pouvez utiliser des parenth\u232\'e8ses pour imposer des priorit\u233\'e9s de votre choix. L'op\u233\'e9rateur NOT, puisque sa priorit\u233\'e9 est aussi \u233\'e9lev\u233\'e9e, s'applique seulement \u224\'e0 une variable isol\u233\'e9e ou bien \u224\'e0 une expression entre parenth\u232\'e8ses. Les exemples qui suivent illustrent des expressions valides :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
AB'C + D(B'+C')}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab AB(C+D)' + ABCD + A(B+C)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab A'B'C'D' + ABCD + A(B+C)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab (A+B)' + A'B'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour cet ensemble d'exercices, vous devrez cr\u233\'e9er diverses expressions logiques et les ins\u233\'e9rer dans CANON.EXE. Incluez les tables de v\u233\'e9rit\u233\'e9 et les formes canoniques dans votre rapport de laboratoire. V\u233\'e9rifiez aussi la validit\u233\'e9 des th\u233\'e9or\u232\'e8mes illustr\u233\'e9s dans ce chapitre (regardez le paragraphe 2.1). Entrez les deux versions des dualit\u233\'e9s et constatez qu'elles produisent la m\u234\'eame table de v\u233\'e9rit\u233\'e9 (par exemple (AB)' = A' + B'). Pour des exp\u233\'e9riences additionnelles, cr\u233\'e9ez diff\u233\'e9rentes \u233\'e9quations logiques complexes et g\u233\'e9n\u233\'e9rez leurs tables de v\u233\'e9rit\u233\'e9 et leurs formes canoniques \u224\'e0 la main. Puis entrez les \u233\'e9quations dans CANON.EXE et v\u233\'e9rifiez la justesse de vos calculs.  }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_09_3}{\*\bkmkend p2_09_3}\rtlch \ltrch\fs23\b\loch
2.9.3\tab Exercices }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
o}{\rtlch \ltrch\fs23\lang3084\b\loch
ptimisation}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Dans cet ensemble d'exercices de laboratoire, le programme OPTIMIZP.EXE (se trouvant toujours dans le sous-r\u233\'e9pertoire CH2), vous guidera \u224\'e0 travers les \u233\'e9tapes de l'optimisation des fonctions logiques. OPTIMIZP.EXE utilise les tables de Karnaugh pour produire une \u233\'e9quation avec le nombre minimal de terms. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Ex\u233\'e9cutez le programme en cliquant sur son ic\u244\'f4ne ou \u224\'e0 partir de la commande }{\rtlch \ltrch\i\loch
Run}{\loch
 (}{\rtlch \ltrch\i\loch
Ex\u233\'e9cuter}{\loch
, si Windows est en fran\u231\'e7ais) du menu de d\u233\'e9marrage. Ce programme permet d'entrer une fonction logique arbitraire, tout comme on pouvait faire avec CANON.EXE de l'exercice pr\u233\'e9c\u233\'e9dent. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Apr\u232\'e8s avoir entr\u233\'e9 l'\u233\'e9quation et press\u233\'e9 le bouton Optimize, le programme construit la table de v\u233\'e9rit\u233\'e9, l'\u233\'e9quation canonique et la forme optimale. Une fois l'\u233\'e9quation optimis\u233\'e9e, OPTIMIZP.EXE active le bouton "Step", qui vous permet de parcouris tout le processus de l'optimisation \u233\'e9tape par \u233\'e9tape. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\loch
Pour cet exercice, entrez les sept \u233\'e9quation pour l'affichage \u224\'e0 sept segments. G\u233\'e9n\u233\'e9rez et annotez la forme optimis\u233\'e9e de ces \u233\'e9quations dans votre rapport de laboratoire. Afin de vous assurer de comprendre de quelle fa\u231\'e7on le programme effectue ses op\u233\'e9rations, utilisez le bouton Step pour analyser l'optimisation une \u233\'e9tape \u224\'e0 la fois.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{\rtlch \ltrch\b\loch
Pour aller plus loin}{\loch
 : OPTIMIZP.EXE g\u233\'e9n\u232\'e8re une seule version d'expression optimale pour toute fonction donn\u233\'e9e. Mais d'autres versions optimales peuvent exister. A l'aide de la technique de la table de Karnaugh essayez de d\u233\'e9terminer s'il existe d'autres expressions \u233\'e9quivalentes. Ins\u233\'e9rez les expressions optimales produites par OPTIMIZP.EXE, ainsi que celles produites par vous, dans CANON.EXE et vir\u233\'e9fiez si les formes canoniques produites sont identiques (ce qui voudrait dire que les v\u244\'f4tres aussi le sont). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_09_4}{\*\bkmkend p2_09_4}\rtlch \ltrch\fs23\b\loch
2.9.4\tab Exercices }{\rtlch \ltrch\fs23\lang3084\b\loch
d'}{\rtlch \ltrch\fs23\lang3084\b\loch
\u233\'e9}{\rtlch \ltrch\fs23\lang3084\b\loch
valuation}{\rtlch \ltrch\fs23\b\loch
 logique}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans cet ensemble d'exercices de laboratoire, vous utiliserez le programme LOGIC.EXE pour entrer, \u233\'e9diter, initialiser et \u233\'e9valuer des expressions logiques. Ce programme vous permet d'entrer jusqu'\u224\'e0 22 \u233\'e9quations diff\u233\'e9rentes impliquant 26 variables plus une valeur d'horloge. LOGIC.EXE fournit quatre variables d'entr\u233\'e9e et onze variables de sortie (quatre indicateurs simul\u233\'e9s et un affichage sept segments simul\u233\'e9). Note : ce programme demande l'installation de deux fichiers dans votre r\u233\'e9pertoire WINDOWS\\SYSTEM. Voir le fichier README.TXT du sous-r\u233\'e9pertoire CH2 pour plus de d\u233\'e9tails.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Ex\u233\'e9cutez LOGIC.EXE en double-cliquant sur son ic\u244\'f4ne ou \u224\'e0 partir de la commande Run (Ex\u233\'e9cuter, si Windows est en fran\u231\'e7ais). Ce programme est divis\u233\'e9 en trois parties principales : un \u233\'e9diteur d'\u233\'e9quations, un \u233\'e9cran d'initialisation et un module d'ex\u233\'e9cution. LOGIC.EXE se sert d'un ensemble d'onglets pour passer d'un module \u224\'e0 l'autre. Pour en s\u233\'e9lectionner un, il suffit d'y cliquer dessus. G\u233\'e9n\u233\'e9ralement, on cr}{\rtlch \ltrch\lang3084\loch
\u233\'e9e}{\loch
 un ensemble d'\u233\'e9quations logiques dans la page de cr\u233\'e9ation pour les ex\u233\'e9cuter ensuite dans le module d'ex\u233\'e9cution. De fa\u231\'e7on optionnelle, on peut initialiser toute variable n\u233\'e9cessaire (D-Z) dans la page d'initialisation. A tout moment, vous pouvez facilement passer d'un module \u224\'e0 l'autre en choisissant l'onglet appropri\u233\'e9. Par exemple, vous pourriez cr\u233\'e9er un ensemble d'\u233\'e9quations, les ex\u233\'e9cuter, plus revenir en arri\u232\'e8re - onglet Create - pour en modifier les \u233\'e9nonc\u233\'e9s (et \u233\'e9ventuellement, pour corriger certaines erreurs). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'onglet }{\rtlch \ltrch\i\loch
Create}{\loch
 vous permet d'ajouter, \u233\'e9diter et effacer des \u233\'e9quations logiques. Celles-ci peuvent \u234\'eatre repr\u233\'e9sent\u233\'e9es par les variables A-Z, plus le symbole "#", qui indique l'horloge. Les \u233\'e9quations sont soumises \u224\'e0 une syntaxe tr\u232\'e8s semblable aux expressions logiques utilis\u233\'e9es dans les exercices pr\u233\'e9c\u233\'e9dents de ce chapitre. En effet, il y a seulement deux diff\u233\'e9rences principales entre les fonctions permises dans LOGIC.EXE et celles permises par les autres programmes. D'abord, LOGIC.EXE permet l'usage des variables A-Z plus # (alors que les autres programmes allouent seulement des fonctions de quatre variables A-D). La seconde diff\u233\'e9rence est que les fonctions de LOGIC.EXE doivent prendre la forme :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\i\loch
variable}{\loch
 = }{\rtlch \ltrch\i\loch
expression}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
o\u249\'f9 }{\rtlch \ltrch\i\loch
variable}{\loch
 est un caract\u232\'e8re alphab\u233\'e9tique de la plage E-Z}{{\super \rtlch \ltrch\super\loch \chftn{\*\footnote \chftn\pard\plain \s39\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs18\lang1033\kerning1{\rtlch\dbch\af12\langfe1033\afs20 \ltrch\cf0\fs18\lang1033\kerning1\loch
A-D sont des variables de lecture seule qu'on lit depuis un ensemble d'interrupteurs. Par cons\u233\'e9quent, on n'y peut rien stocker. }
}}
}{\loch
 et }{\rtlch \ltrch\i\loch
expression}{\loch
 est une expression logique utilisant les variables de la plage A-Z et #. Une expression peut utiliser un maximum de quatre variables diff\u233\'e9rentes, plus la valeur d'horloge. Durant l'\u233\'e9valuation, le programme LOGIC.EXE calcule la fonction et stocke le r\u233\'e9sultat dans la variable de destination sp\u233\'e9cifi\u233\'e9e. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous incluez plus de quatre variables, le programme signalera l'erreur, car il peut seulement \u233\'e9valuer des expressions contenant un maximum de quatre caract\u232\'e8res alphab\u233\'e9tiques (sans compter la variable \u224\'e0 la gauche du signe d'\u233\'e9galit\u233\'e9). Notez que la variable de destination peut appara\u238\'eetre \u224\'e0 l'int\u233\'e9rieur de l'\u233\'e9quation ; ce qui suit est parfaitement admis : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = FA+FB}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Cette expression utilise la valeur courante de F parmi les valeurs courantes de A et de B et calcule la nouvelle expression pour F. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\lang3084\loch
\u192\'c0 diff\u233\'e9rence des }{\loch
langages de programmation comme C++, LOGIC.EXE n'\u233\'e9value pas cette expression seulement une fois avant de la stocker dans F. Il l}{\rtlch \ltrch\lang3084\loch
'}{\loch
\u233\'e9valuera plusieurs fois }{\rtlch \ltrch\i\loch
jusqu'\u224\'e0 ce que la variable F se stabilise}{\loch
. Autrement dit, l'expression sera \u233\'e9valu\u233\'e9e plusieurs fois jusqu'\u224\'e0 ce que le m\u234\'eame r\u233\'e9sultat soit produit au moins deux fois de suite. Certaines expressions produiront des }{\rtlch \ltrch\i\loch
boucles infinies}{\loch
 puisqu'elles ne produiront jamais deux fois le m\u234\'eame r\u233\'e9sultat. Par exemple, la fonction suivante est instable : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = F'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Notez que l'instabilit\u233\'e9 peut persister au-del\u224\'e0 des limites d'une fonction. Consid\u233\'e9rez les deux \u233\'e9quations suivantes : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = G}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
                                      }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
G = F'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
LOGIC.EXE essaiera d'ex\u233\'e9cuter cet ensemble jusqu'\u224\'e0 ce que les variables du r\u233\'e9sultat cessent de changer. Mais le r\u233\'e9sultat sera une boucle infinie. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Parfois, un syst\u232\'e8me logique produira de telles boucles seulement pour certaines valeurs donn\u233\'e9es. par exemple, l'\u233\'e9quation suivante est susceptible de produire ce r\u233\'e9sultat : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = GF' + G'F\tab (F = G xor F)}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Si la valeur de G est 1, le syst\u232\'e8me sera instable. Si elle est 0, alors l'\u233\'e9quation aura un r\u233\'e9sultat d\u233\'e9fini. Des \u233\'e9quations instables comme celle-ci sont souvent difficiles \u224\'e0 }{\rtlch \ltrch\lang3084\loch
d\u233\'e9couvrir}{\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
LOGIC.EXE d\u233\'e9tecte et alerte les instabilit\u233\'e9s quand elles se pr\u233\'e9sentent. Malheureusement, il ne pourra pas indiquer le probl\u232\'e8me. Il se limitera seulement \u224\'e0 vous signaler qu'il existe et s'attendra \u224\'e0 une intervention de votre part.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop874\shpbottom2464\shpbxcolumn\shpbxignore\shpleft1224\shpright7194{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw398\pich106\picwgoal5970\pichgoal1590\pngblip
89504e470d0a1a0a0000000d494844520000018e0000006a08030000009c78466e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000025a49444154789ceddd416ea3301c4671
5f2e8b1c061fc687e12859c06526a9d406c5ee28086abf7ff47e9bd964a48fbed21405d4b40a248d1ea02d73a09803c51c28e64031078a395022e72829e7c8fb
1b421fce7d7c59468f3855f41c1f26f411ddc7e7d11bce153b479eccc191d6c51c1cf7f1b7d11bce153dc752468f3855e41c8feb8ecb3c7ac5a922e7f840e640
899623bd61f4c603a26d37078a39d44fa41cef7ee7073e41220d37078a3950cc81620e1473a09803c51cc395f4bc77677f8ef992a7501f88d073dc0796ef4ffc
76e7b83dfe35c799360377e7c88fcfa6427d3e1520c7cfb7f7ee1cf883abe017a7fc73b38839c64bcbb11c3947fa69c5cff1bc7767778e695e031ce1167eec91
b7f2f9b20638c22dfad8929e3f6bf65f7794abd71d7fc6ab721473a09803c51c28e64079cd515259e754ffe6648e2eaab323adcd03304717e64031074a9d2337
9ff33747179e1d28e64031078ad71d285e95a39803c51c28ff7b1e706bf4ce03a26d37078a3950cc81f1ee973a709148c3cd81620e1473a09803c51c28e64031
c77087ee60dffee718e8390e3ddfc13fba57f8c1e64031078a3950cc81620e1473901c7b72967e74954883f7e658421ddd974883f7e6288d3b14e13e39474091
869b03c51c28e64079cdf178ab4e97e6eb7a4d3a5ba4e1d5d991d6e5da7e5d9f41e78b34bc91636afddd40737451e728d32fafebb2e70f441a5ee7b836e79ba3
8b3ac7726d5d779ba38bc67bc7adb5df1c5d3472acadd3c31c5db4ae3b6e8d7b77ccd18557e528e6403107caaf0f03be18bdf38068dbcd81620ef5630e1473a0
9803c51c28e6403107ca3f29f0cda450ade8520000000049454e44ae426082}}}}}
}{\loch
L}{\loch
es variables A-D, E-K et W-Z sont sp\u233\'e9ciales. A-D sont des valeurs d'entr\u233\'e9e de lecture seule. E-K correspondent \u224\'e0 l'affichage sept segments de la page d'ex\u233\'e9cution. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La plage W-Z correspond aux quatre indicateurs LED de sortie de la page d'ex\u233\'e9cution. Si les variables des plages E-K ou W-Z contiennent 1, le segment correspondant devient rouge (allum\u233\'e9). Sinon, il reste \u233\'e9teint. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'onglet de cr\u233\'e9ation, contient d'importants boutons : }{\rtlch \ltrch\i\loch
Add, Edit}{\loch
 et }{\rtlch \ltrch\i\loch
Delete}{\loch
. Quand vous pressez le bouton Add, LOGIC.EXE ouvre une bo\u238\'eete de dialogue vous permettant d'entrer une \u233\'e9quation. Tapez votre \u233\'e9quation (ou \u233\'e9ditez celle par d\u233\'e9faut), puis pressez le bouton }{\rtlch \ltrch\i\loch
Okay}{\loch
. S'il y a un probl\u232\'e8me, le programme signalera l'erreur et vous demandera de la corriger ; sinon il tentera d'ins\u233\'e9rer quand m\u234\'eame cette \u233\'e9quation dans le syst\u232\'e8me que vous serez en train d'\u233\'e9tablir. Si une fonction existe d\u233\'e9j\u224\'e0 et a la m\u234\'eame variable de destination de l'\u233\'e9quation pr\u233\'e9c\u233\'e9dente, le programme vous demandera si vous avez r\u233\'e9ellement l'intention de remplacer la fonction, avant de proc\u233\'e9der. Chaque fois que LOGIC.EXE ajoute une \u233\'e9quation dans sa liste, il en affiche aussi la table de v\u233\'e9rit\u233\'e9. Vous pouvez ajouter jusqu'\u224\'e0 22 \u233\'e9quations (puisqu'il y a 22 variables de destination possibles : de E \u224\'e0 Z). LOGIC.EXE affiche ces fonctions dans la zone de liste \u224\'e0 la droite de la fen\u234\'eatre. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Une fois que vous avez entr\u233\'e9 deux fonctions ou plus, vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 voir la table de v\u233\'e9rit\u233\'e9 de chacune en cliquant simplement sur l'\u233\'e9quation d\u233\'e9sir\u233\'e9e dans la liste. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Si vous commettez une erreur en entrant une fonction vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 l'effacer en la s\u233\'e9lectionnant avec la souris, puis en cliquant sur le bouton Delete, ou bien vous }{\rtlch \ltrch\lang3084\loch
pouvez}{\loch
 tout simplement corriger l'erreur en la s\u233\'e9lectionnant, puis en cliquant le bouton Edit. Vous pouvez \u233\'e9galement \u233\'e9diter une \u233\'e9quation d\u233\'e9j\u224\'e0 existante en double-cliquant sur elle dans la zone de liste. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'onglet d'initialisation affiche des cases pour chacune des 26 variables possibles en vous permettant aussi de voir la valeur courante pour chacune de ces variables ou de la modifier, si elle appartient \u224\'e0 la plage E-Z (n'oubliez pas que les variables A-D sont de lecture seule). Comme r\u232\'e8gle g\u233\'e9n\u233\'e9rale, vous n'aurez pas besoin d'initialiser toutes ces variables, donc vous pouvez sauter cet \u233\'e9cran si vous n'en aurez pas un besoin effectif. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La page d'ex\u233\'e9cution contient cinq boutons importants : }{\rtlch \ltrch\i\loch
A-D}{\loch
 et }{\rtlch \ltrch\i\loch
Pulse}{\loch
. Les interrupteurs A-D vous permettent de fixer les valeurs d'entr\u233\'e9e pour les variables A-D. L'interrupteur }{\rtlch \ltrch\i\loch
Pulse}{\loch
 fait passer la valeur de l'horloge de z\u233\'e9ro \u224\'e0 un et vice-versa, permettant d'\u233\'e9valuer le comportement des fonctions logiques pour chaque \u233\'e9tat. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
En plus des boutons d'entr\u233\'e9e, l'\u233\'e9cran d'ex\u233\'e9cution pr\u233\'e9sente diverses sorties. D'abord, les quatre indicateurs (W, X, Y et Z) et l'affichage du circuit sept segments (variables de sortie E-K, comme indiqu\u233\'e9 ci-dessus). Et, \u224\'e0 part les indicateurs, vous trouverez aussi un voyant d'instabilit\u233\'e9 qui devient rouge si LOGIC.EXE en d\u233\'e9tecte une dans le syst\u232\'e8me. Il y a aussi un petit panneau affichant la valeur courante de toutes les variables en usage. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour ex\u233\'e9cuter le syst\u232\'e8me d'\u233\'e9quations changez simplement une des valeurs d'entr\u233\'e9e (A-D) ou pressez le bouton Pulse. LOGIC.EXE refera automatiquement l'\u233\'e9valuation chaque fois que ces valeurs changeront. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Pour vous familiariser avec LOGIC.EXE, entrez dans l'\u233\'e9diteur les \u233\'e9quations suivantes :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab \tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
W = AB\tab \tab \tab \tab \tab A and B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab X = A + B\tab \tab \tab \tab A or B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab Y = A'B + AB'\tab \tab \tab \tab not A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab \tab Z = A'\tab \tab \tab \tab \tab idem}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Apr\u232\'e8s avoir entr\u233\'e9 les \u233\'e9quations, allez dans l'onglet d'ex\u233\'e9cution et entrez les quatre valeurs 00, 01, 10 et 11 pour BA. Notez les valeurs de W, X, Y et Z dans votre rapport de laboratoire. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop882\shpbottom2472\shpbxcolumn\shpbxignore\shpleft1224\shpright7194{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw398\pich106\picwgoal5970\pichgoal1590\pngblip
89504e470d0a1a0a0000000d494844520000018e0000006a08030000009c78466e00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a3300000025a49444154789ceddd416ea3301c4671
5f2e8b1c061fc687e12859c06526a9d406c5ee28086abf7ff47e9bd964a48fbed21405d4b40a248d1ea02d73a09803c51c28e64031078a395022e72829e7c8fb
1b421fce7d7c59468f3855f41c1f26f411ddc7e7d11bce153b479eccc191d6c51c1cf7f1b7d11bce153dc752468f3855e41c8feb8ecb3c7ac5a922e7f840e640
899623bd61f4c603a26d37078a39d44fa41cef7ee7073e41220d37078a3950cc81620e1473a09803c51cc395f4bc77677f8ef992a7501f88d073dc0796ef4ffc
76e7b83dfe35c799360377e7c88fcfa6427d3e1520c7cfb7f7ee1cf883abe017a7fc73b38839c64bcbb11c3947fa69c5cff1bc7767778e695e031ce1167eec91
b7f2f9b20638c22dfad8929e3f6bf65f7794abd71d7fc6ab721473a09803c51c28e64079cd515259e754ffe6648e2eaab323adcd03304717e64031074a9d2337
9ff33747179e1d28e64031078ad71d285e95a39803c51c28ff7b1e706bf4ce03a26d37078a3950cc81f1ee973a709148c3cd81620e1473a09803c51c28e64031
c77087ee60dffee718e8390e3ddfc13fba57f8c1e64031078a3950cc81620e1473901c7b72967e74954883f7e658421ddd974883f7e6288d3b14e13e39474091
869b03c51c28e64079cdf178ab4e97e6eb7a4d3a5ba4e1d5d991d6e5da7e5d9f41e78b34bc91636afddd40737451e728d32fafebb2e70f441a5ee7b836e79ba3
8b3ac7726d5d779ba38bc67bc7adb5df1c5d3472acadd3c31c5db4ae3b6e8d7b77ccd18557e528e6403107caaf0f03be18bdf38068dbcd81620ef5630e1473a0
9803c51c28e6403107ca3f29f0cda450ade8520000000049454e44ae426082}}}}}
}{\loch
L}{\loch
e programme LOGIC.EXE simule un circuit sept segment. Les variables E-K allument les segments individuels comme suit :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Voici les segments \u224\'e0 allumer pour les valeurs binaires DCBA = 0000 - 1001 : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom1680\shpbxcolumn\shpbxignore\shpleft504\shpright7479{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw465\pich112\picwgoal6975\pichgoal1680\pngblip
89504e470d0a1a0a0000000d49484452000001d1000000700803000000762aba5600000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002d649444154789cedd8416e1b311404d1
b9ff157d99008dac9411f5c396ed12516f4dcdb459d6c2bebe7496ebb707e8cd2c7a1a8b9ec6a2a7b1e869a045af3bdff7a4db43d0ab79053adba2dba0b32dba
0d39fbfe824777fccfa9d1a32687ee5fce0b4fdb13f7f1f68a6e1f7a7c5f31ea47d1f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f
58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43df1e4964697f778c5d713ff7d
e8d919da0dd2f6c43b6f69146192ea337a7e56d19defe82cc3e8ebe77774dffd3d8d2eeff1a3c58d4fdfb7fbfc6f42db13162dd0f684450bb43d61d1026d4f58
b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0f684450bb43d61d1026d4f58b440db13162dd0
f684450bb43d713d33fbeceb474d5f387adff4a7fa21b43db17fbfc347ed9dfa0cd0d9efbb618beac359f434163d8d454f63d1d358f434d0a2fb7f73bcefd0e3
a90ff91387b7282cba8db7282cba8db7e8abfad7ddf059937ffeee1c02a0ed89d93ded5fe64dacd7cfbf1f65d1118b16687bc2a205da9eb06881b6272c5aa0ed
098b16687bc2a205da9eb06881b6272c5aa0ed098b16687bc2a205da9eb06881b6272c5aa0ed098b16687bc2a205da9eb06881b6272c5aa0ed098b16687be2ba
373a357dc1e07d1b8700687be2db8beebcef337a428bceaeaff8d25c3b5fbffdd7fd28da9e859b1bbe3df4fa477a3c74ff999ddf0d00da9e058b8ed0f62c5874
84b667c1a223b43d0b161da1ed59b0e8086dcf824547687b162c3a42dbb360d111da9e058b8ed0f62c587484b667c1a223b43d0b161da1ed59b0e8086dcf8245
47687b162c3a42dbb360d111da9e058b8ed0f6fc75dd9b9cd9e8503ce9cba23393fbdd8e307b1b2ed51074b645b741678f6ef87d192c2a2e8b9ec6a2a7b1e869
2c7a1a8b9ee60fc189c51d15d34a0b0000000049454e44ae426082}}}}}

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
 }{\loch
Entrez les sept \u233\'e9quations pour ces segments dans LOGIC.EXE et essayez chacun des modes (0000 \u224\'e0 1111). }{\rtlch \ltrch\b\loch
Truc}{\loch
 : utilisez les \u233\'e9quations optimis\u233\'e9es que vous avez d\u233\'e9velopp\u233\'e9es plus t\u244\'f4t. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch \ltrch\b\loch
Exp\u233\'e9riences additionnelles optionnelles }{\loch
: entrez les \u233\'e9quations pour les 16 valeurs hexad\u233\'e9cimales et parcourez ces valeurs. Incluez le r\u233\'e9sultat dans le rapport. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop1075\shpbottom3085\shpbxcolumn\shpbxignore\shpleft1656\shpright6891{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw349\pich134\picwgoal5235\pichgoal2010\pngblip
89504e470d0a1a0a0000000d494844520000015d00000086080300000049d8a9dd00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004ae49444154789ceddd5bb6ab28100660
26e78383d1c1301887e2830c264783e6242872b38aa276fdddbdba7be7ec827c8b65148c2823818baadd01d6115dc8882e64441732a20b19d1858ce842467421
23ba90115dc8882e64d075d529afd70bbb1358c1d77db9b1c2d8fd400901dd0318bb2708a1a16b81f9f992d1dd7cd9f112d265c84b49971f2f906eef6ff04697
1d2f90ae9abdafdce972e385d19d7abd97bfc81fe285d11de76e2f9faafb12dd60c6a36e862e275e18ddc17493afc17b5c5e83174477eac74efb1a0cea32e205
d1d593993a5f83215d4e8317427756abaef21c1a2274f9cc3993ba563b78b1fb041692ba6c662429ea6e1f6c1b306ec7baf5fa727cb84d8abafb2931f2e85dd4
6286e5d99a2475bf0f1038d97a368e93ef3432fbcd3e5c2fdc2059dd458d8fbfd9a70b061bcc3f32401f89fba7872e495dcb7b3e6b00d69dfbc7eb53d4dd0f09
a70f3560dd7ef14e8ee486a6ee3be75f05edecfa91363ddd00415d2f22a8aebd7c7ff8c84b51d7779edbde0484e842869eaedf5074c30d660f5dd18d68303874
4537b6fa557287aee8bad59375ef0445d7a97e2e5f70b388e83ad51375ef572444d7a99ea61b58ee115da77a926e682d4d749dea09ba57b362c16ac44345376c
2bbaa7ea71baf63c2da71af1e0eb9e4e7be368afab110fbaeed56121b296e83ad59f2affb574db525ad0fd59176f2ae475dba53528b338a5bfdf2aadc19a232b
fae556690dfcec792e11035a83b236910ec583d660adfca470b1a13588eb6a71689c680deeaa65888e19ad415f13f603f2a3351556dc2f1959d29a1abac6c5e4
4a6b2ae99a8bb5f84afd804dc577c59dd6d4d4653f704dfd2343d95404f554fd54bbfe5f46a9774616fe61fba9743591f652b3a971251c7a9d0f30fa2c4edc9f
62028c3b0399f2673900cbec396464e50732b26a09195971878cdc2d0219f2baa665e07a77987e12731364a3bc04ee8eb6c211b544d7a91e7967ff1b38a71af1
d0d08dfbe284e83ad553be5125dff949ad2edf5783ac2edfb584ac2edf1386ac9ea82bdf714faa7e956c5ed175aa27ebcab34512aa67e8ca73714a1abcc79567
3a953518d495a7bd153418d29567e9953418d6f5dff98fdad3074250d7bbdf84e8861b8cd0f5cc98896eb8c1b0eedb16fdd9d1dd5abdb7bb13e9f9f8c9a46635
4deb7fe6d5a4a96b89719f7bbeacd5ed7e13b3fefc64d26658ffdafece0945ddcf33fb2f2f4640b2f5ac9b77567d3cfe7cd0eb989d8dd6c6bb4d67e0cd3e2196
d460e4d0c5d7d5ba774c66bb03c59c397289ea56d98966edda3e66ff63eecf41cf46a2a8eb3bee8277edf36f3daed9f638543f2f6457444bd4d87d077d0bb0c3
a23f74c77d38f3d2b5ff60f7ec4bd766db40527dff20bb225ae8eebc38abc19e1aecfb807d76a0c8dfba8aa26eed5d015dcd21f37c4c742ff37b2458f23750a1
a74b603661f919ac055b2b81bc15ad46d90b7b0bcc405166f67dce16ec37d15ea0748df3648baffc9da10b3776ede564b22e81a3ee8301d21d7bdfdeb105f7e2
b417a8b1ab7df34a05f791b517e0e3eec54b7f08174ed7b7565270ff6e7b813adf1d92cf776bcc8a4187cab51a475b22baf63c0dbb2708c1d73d9df672a53515
74af0e0bd87d400bab4b2372115dc8882e64441732a20b19d1858ce842e61faef14d4575646cf20000000049454e44ae426082}}}}}
}{\loch
V}{\loch
oici un simple circuit s\u233\'e9quentiel. Pour cet exercice,}{\rtlch \ltrch\lang3084\loch
 il vous suffira d\u8217\'92entrer }{\loch
les \u233\'e9quations logiques pour un simple set/reset flip-flop. Le diagramme du circuit est : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un set/reset flip-flop}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisqu'il y a deux sorties, ce circuit a deux \u233\'e9quations logiques correspondantes. Elles sont :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
X = (AY)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab Y = (BX)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Ces deux \u233\'e9quations constituent un circuit s\u233\'e9quentiel, \u233\'e9tant donn\u233\'e9 que les deux utilisent des variables qui }{\rtlch \ltrch\lang3084\loch
ap}{\loch
paraissent dans la sortie. En particulier, en calculant de nouvelles valeurs pour X et Y, Y utilisera la valeur pr\u233\'e9c\u233\'e9dente de X et X la valeur pr\u233\'e9c\u233\'e9dente de Y.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Entrez ces deux \u233\'e9quations dans LOGIC.EXE. Mettez les entr\u233\'e9es A et B \u224\'e0 1 (ce qui correspond \u224\'e0 l'\u233\'e9tat normal), puis ex\u233\'e9cutez la simulation logique. Essayez de faire passer A \u224\'e0 0 et remarquez ce qu'il arrive. Pressez le bouton Pulse plusieurs fois avec A encore \u224\'e0 z\u233\'e9ro et observez. Puis remettez A \u224\'e0 1 et r\u233\'e9p\u233\'e9tez le proc\u233\'e9d\u233\'e9. Maintenant essayez encore l'exp\u233\'e9rience, cette fois en mettant B \u224\'e0 0. Puis, remettez A \u224\'e0 1. Essayez de mettre les deux \u224\'e0 z\u233\'e9ro puis remettez B \u224\'e0 1. }{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire}{\loch
 }{\rtlch \ltrch\b\loch
:}{\loch
 fournissez des diagrammes pour les interrupteurs d'entr\u233\'e9e et pour les indicateurs de sortie chaque fois que vous ferez passez un bouton \u224\'e0 1. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un vrai flip-flop de type D fait passer les donn\u233\'e9es uniquement par l'entr\u233\'e9e D durant  une transition d'horloge de bas \u224\'e0 haut (0 \u224\'e0 1). Dans cet exercice vous simulerez un D flip-flop. Le diagramme pour ce circuit est : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop0\shpbottom4680\shpbxcolumn\shpbxignore\shpleft0\shpright8340{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw556\pich312\picwgoal8340\pichgoal4680\pngblip
89504e470d0a1a0a0000000d494844520000022c0000013808030000004f0658cb00000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a33000000eb049444154789ced9d5dbaa23a104533
b9f3e06064300c86a1f00083b14550517e52492ac92e7baffbdd73ba6d498a62199280c18d840871b5032076a02c440c652162280b1143598818ca42c4501622
86b21031948588a12c440c652162280b1143598818ca42c45492c515a2cedefd2a948588a926cbefd4f2ff40598818ca42c4501622064696db0efab590146064
590d619eae3cfea85b0b49014796bda6c5a5f9425974c19665695ef46a2129c0cb92a20b65d1c5802c932e71b650165d4cc8126b0b65d1c5862c91b650165d8c
c812670b65d1c58a2cb798034f597401ba45c167cbab69195ad7348d2072caa28b21595627a229ea4e524bbe3df81f8149a7cf9575d332452d7085b22803934e
812c6f5b9ce82c4459948149a75f9655d3728fba959409b377bf014c3a25b2bc82bdff61909409b377bf014c3a05b2bc9b1661d49445179874ca6479701f3ab7
928685b22803934e992cf3185b5c26ccdefd0630e994c8727b4cc6c86da12cbac0a45326cba28cb44c98bdfb0d60d21920cb4dfacd43caa20b4c3a835a16ca52
05987486c8f2dd67a12c658049a76834f4b8dcb8ede0529632c0a45338cfb23b74a62c658049a77406776fd84c59ca0093cea06b43dfdb529622c0a433e8aaf3
f7b694a50830e9a42cf8c0a45372f3d3e1b694a50830e90cbaadf27b5bca520498747a653939f294a50c66eeee3fbbd64c59ca60479693fb12284b19ac7c23f1
f4b85396321891e5fcb05396329890c5b754366529830559bcf751529632e0cb22b8439bb294015d16d1cdfc94a50cc8b288bff74159ca8023cbfecc8bac30ca
52041859e24be20ddba5b02d0befee2f8a61593ca628d542de54bc36945cc0b9292365d1a6ee85c4b4adbddb53165d6aa5537abc93b6a42cba544c678c2f61db
50165deaa633f4d807da455974a99e4eb10151ed5042606403423a05bec4f570288b2e20e93cf525a12f9c1c18598193ced7e5a0dbcecb71879db2e802954ef7
be6bfbf542da7c8c5a6864049365fc78bc73a2292365d1062d9d7aa68c94451bc074ae168d13ded0720465d1052f9d6b536e9bfe6e60517a61113859de43e855
df25a134c5d008942c9bc99677f725b640add0c8044c3a0fa7e512baba9445178c749e4ff8075f407c6f981c195901904e890b71be50165d6aa7536e41842f94
4597aae90c3dfee1ef8f8d8cec512f9db1679680ad288b2e756fd88e1ce3c8cf5c11c59343aaca92b8b9b704caa24b3d59d24b108ca1122b211f18fe46a2df17
caa20b8c2c7b8bb348ca39d385b2e802238b7bb35ec847b2920f6529048e2c07eb3ec97c097b9dc4812d8b709d30ca5206785924ba5096321890c5bfb6296529
8309597cb6509632d890c5630b6529831159ce6da12c65b022cbe9a31e284b196a5f75de998b3bb2e5ddb474d7b6692febd28e6ac9bc1bff19866479d9d2bae1
fef3d2af4a3baa25fb8e7cb21b78e1183202f3d90b78a0a6eba69f835796f2076ac77ce124b4092cc9b2d8d24d310f5dd7bdb78591e520f01fd1c5902cb7b52c
63ff38172ddb62cb227cb6093ea66499831de6d3d02a7278597e44174bb23c9b96b9836b4b16c1f3d8f03126cb83b1bb344ddbaeb6b520cb0fd8624c9679a4b1
d9d6842cf66d3125cbed3124dde6dc882ce66d3126cb92f3ef6d8dc8e2793c353c30d107c872dbcefec2e0dd81da794ec1a22cb58538c3b703a66d31298bd53e
cb5eec963025cbfcd1b5dbc1bd19efb5c0c42e9c6779f8b2d9d68e2ca69b1663b21c6c4b598a604996c326dc942c30190f0726f4940fa525595ed72c0c425934
49b96691973fd78f4df232272aa12890329080b9ad32e59a455e06378cd7c1ffbe532cc972985e63b22c3fcbcd144ea1354dd7fac2f7ee5e7a8674f0e6f9e4c8
9b92c5959f869e421b5c93be7bc9257c94968237c727d586bd9e0d6059c64b72c36248160bdf48cc70cd428bfe925ebeb62cf19bfa3e8f11d542caf2f85cb86d
689983bd0c7f9dff5de71891e5bc605bb21cdcbd9d37d87befb64baec0842c3b9f4351b598b21c6d9b33d8de757759527b2d1664b1b3f253866b1648e0cbb2db
66cbaa859425701a1a09745904aa9892c5f40acfc8b2cc03ea846a1165099e8606024796fd9997a46af16439919fb294a1922ce1338b67538b94a50c66648959
eb0c08ca92526da02c51ab2802415934abcdb13e2b109445b3da1c2b3f03415934abcdb1a63c109445b3da1c4fab0082b268567b72cdc23b654459ca002e8b6c
229ab294014796ed107afe4b5469705016cd6af7cf41b2b2284b196064892ec85196529896e575e6d2282c2f9445bfdaa022cc98325296b46a132b3065ca4859
d2aa4d39d4d64c19294b6ac59107dca029236551a83bf8b0db3465a42c2ab5871c7cb3a68c94452b009902964d19298b620c3e118c9b325216dd308e75b035a1
72c02fc8727808ca87f3bc84e8be5fb56fcab82bcb706daf9f5fa16efbb1e924ab4c5548c7d951a87274beaf1ffe8a29e3ae2cd333c2dade8dfdf3dffafb0bd7
7668fbed7bbf4b2b9c11cf71a82bcbe4cb0f9932eeca32bdd44d3f9fffd676d3fa75a3a069299a14ff71a8738c3e6e65f91d53c65d59fe9effe0fabf61fe637f
fd738da07f532e2fa2e350ed30ad4db1b93ef22e072dcb2c4b3b2f9c7abdb7345df3f8ed2badccd1917e62abc9b232656e622ac5a1cca92ceef942f77775ede7
c3710f2810b1bca66a83b3b529cf56a64628ca9cf6592ef39275977b97e5fedff4fbf59e4ab284d5536d70f60ef0a3f3523c1a657676601a3737739f65d66392
65eadd5eb6effd2e2d6b3e828dac3538db565bb0e5cdc8de3ccba56987def5bd1bdca369b90ed334cb3854edb3c4a4bbcae0ec781c6fde1749e8cb98b9f5afa3
9a2b1391892e3f38f38dce6cfb228afbb2fa795e5a8e34c4a7b8f0e04cd6e736ac8b28ea619abbed050f20d14f42d287b1e4e04c5e955d5fa02f24a636db6083
b3ed765982ca07ae2c0a27f832376cc75562d117505974ba82256449ddde922f88b2a80d1aec7cc94c219a02c0c9a239bcc4976534e50b962cca1311c565895b
44c18c2e40b2289b921a4e4cf1af5d085d9f85b2846d99e1e3555e96a3959f44ed4b9620358190258b29f1e1c4177fb4a69c13ac134659641be53a65c3c8c2d5
2af74a0b2e2e6be70e4816ae83bb2d2dacb8dcc3002859b8c2f6776901c515183062c9c2b5fbbf4a931657666a014c163e15e4b3b4205954abdeafa570f1de67
539d04445992df9844a1abce6b7cb6f04966efd2284bf48988b2c8dfb89bdb52e168c1a7af8694162fcbcea753765945231c2df85ce790d2126439c8adecc9ce
89e168c127c68794a62dcb4df4a89ee470b4a02c21a565904574152e311c2d24b21cc54459e46f4cb9ac921c8e160259ee4dcbbefe9445fec694cb2ac9e16821
92e560f23a6fb07ff7d22ff3ca3bcb0a5ef7573ad7bbceff3dd317366489b4055296dbb244e1f70ee50d76708fefac8ff3a26fcb2b5d3b5e05abeebc3022cbda
96a175edd83e571a5209470b59cbb2c8b237a7978729b4bfbefffacafab5bdb734fd630941e9eee9262b9b2c1f6d8b1b658143cb529029b4b65dbeabfeca49ef
9ac72f79d352f9aaf31a6f923f82362f4be19665744b8bf276c3cd6d8a3c497664599de55dd334666539eab3648fedf5bbbda7efdea87417f7f10ff22294028a
2f2e64a65cd8b2dc8a2f1499321aca1edbf2fbf294a5591a9b9f94e5fd61b42dcbfc7fe1c8d6b2ccdc3bba9d5bbf202f422920cae2df8bc2312df4ee3acfafcc
03e8fbdf2759da51b216f61353b2cca58b87ce90b2549fa8fd96e3ea5f65ff892559423b8598b2545f70fbf3b433c81b166bb23c901689284bf5866559f4ed45
c06cbf3559e631b6b0484859aa372c099892659ed012db02284bcaad5cf5d196251e912c4bc671f1ee806abe0b635116645b3cf1d7efb1a4605116ad039b038f
2ba61b16655912c8702bc80daccf62dd155bb2cc1fdd6dce6dc862de1563b21c7c37c4842cf65db126cbc1b6f8b2ec396e0e4bb2847e8b024896df78aea62959
02bf9f8522cbeea9d3229445939d21f4fc97c27164c2902cc1df292f2fcb7ee08583c88725598257ab303e610a47a574064f7e9e4e955396329891e5ac8f4859
ca604596a8851e298b2ed564d9bc12ef0a6529840d592217a7a62cba98902576d97bcaa28b0559a21fa8415974c1974530574e59ca002e8becb20a6529038e2c
db31b4f8b20a6529038c2cfbe720616194a50830b2c497e4284b216ccbf23c71e5ad852c1896c5638a522de44dcd6b43c905f8caa02cba54be9098776bcaa24b
b57446eb12b02165d1a5663a237c7141db50165d2aa733f0d807da455974a99f4ea101c1a68c94451b88747a3d883165a42cdaa0a4f3c486485346caa20d4e3a
dfd71037afc60eb2298b2e50e97c5f707efe3d693a86b2280396ceaf5b5912277a298b2e60e9543465a42cdae0a573658af88e9603288b2e70e9fc3025d116ca
a20b563a57679f75df25be38cde008503a37fd9475f725b244b5e0c88823cb718f36a1af4b59748148a7cf87585f288b2e00e9149910e50b65d1a5763a031c08
f785b2e852359d11473f680bcaa24bbd7446f74342daa298c0c811166fd816fb42597431fa5510992f944517bb5f3213e8425974b12bcbe8f785b2e802234be4
220aa7ba50165d6064716f02d767a12ca5c091852b3fc1032ecb4df4a81eca52067c59042b10529632189085ebe0a2604216aeb08d810d59b8763f044664e153
4110b0220b9f370440e5abce6e672eeed09693d2c25e2771d89165fd8cc4d6b5c3476947b5e4dd8bff0d9874863d7df5336cca52069874863dd799b2d400269d
94051f98744a6479074b596a00934e812caba685b2d400269d32591eff8f94a50e30e994c9b2dc17c7a1731560d22991e5364fc66ce672294b1960d229936551
464cedbdfa2d60d219204b802db5f7eab78049275b167c60d299d26721653025cb341a923c149ce4c1982c54a526c664a91de5ff8d2559d85fad8c42fe5bd75c
afe981b0618147e3c37a2fa36d930ba12cf028c9925e4ed89d72a4065ab25c920b61c3028f6ecb1230b7ba850d0b3aba2d4b465938bf521f255986dc2d0b5d01
40499626f36888ae20a033cfd234e981d01578607a8d29ebb39032589085ae80802f8ba32b2880cbe2a80a1038b26cc7d0f39f6b07465ec0c8b27f0eaa1d1559
03230bc187b21031948588a12c440c652162280b1143598818ca42c4501622e61f2abd0e4e9a8fea4c0000000049454e44ae426082}}}}}
}{\loch
U}{\loch
n vrai D flip-flop}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = (IG)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
\tab G = (#F)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
H = (G#I)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
I = (DH)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
X = (GY)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi720\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8
 }{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Y = (HX)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Incluez dans le programme l'ensemble de ces \u233\'e9quations et testez votre flip-flop en entrant diff\u233\'e9rentes valeurs dans l'interrupteur d'entr\u233\'e9e D et en pressant le bouton d'horloge. Expliquez vos r\u233\'e9sultats dans votre rapport de laboratoire. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop1628\shpbottom3788\shpbxcolumn\shpbxignore\shpleft1224\shpright7509{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw419\pich144\picwgoal6285\pichgoal2160\pngblip
89504e470d0a1a0a0000000d49484452000001a300000090080300000092d2f47100000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000004ff49444154789ced9d4172ea3a10457b
730cbc186b31bd182dc5036b317cc9c449a00548f2a37d53ff9e01505097eee8205bc6a62289a023673740de4247f8d0113e74840f1de14347f8d0113e74840f
1de14347f8d0113e74840f1de14347f8d0113e74840f1de14347f8d0113e74840f1de14347f8d0113e74840f1de14347f8d0113e74840f1de14347f8d0113e2e
8e8206bd7b22c61462c6a3f8dfc7c3918694e6b4c8f25d6c2ede967247dee3e1685ef2cc29a5f6629a675508b77bf2160f47b2dfc936a58ab4258884b47022b5
e0eb689df727620c4ed5ff3ebe8e2efaf5285e66c98fe5cfe0304c4ff1283e7def8f54f6a2216df3e8cfe0304c4ff15ad785dbfe68da26d2947749516f0fda39
3652e7850fe3527c0e21e6b5779465953ca792c6ec28cfacd8b5aea3234ff6f55c5994b74347aee85a6ed7bec3233af2257edfb44347f8d0113e74840f1de143
47f8d0113e74840f1de143471f422584c97c9fa0327029031d7db2c0e5cbc872f76cf73bd1d1070b6ce75cd37682e240593afa680149b3962b83a286db752692
d6493baf66f8d78e3acee4fd3f1c697950eef62796ed32a19e739ef6959ef3a574f4a640be59e46bbbb73f01e0e8ddfbbf087be2b33f9a93eaa6254ef78e6a81
2e478d593a7a5720afb4e567ea7c3d4b47ad781d1fe5f9b3e435f89ce7d3b21d1f954b8baba7cae9c8543fb378153a32d5cf2c5e858e4cf5338b57a12353fdcc
e255e8c8543fb378153a32d5cf2c5e858e4cf5338b57a12353fdcce255e8c8543fb378153a32d5cf2c5e858e4cf5338b57a12353fdcce255e8c8543fb378153a
32d5cf2c5e858e4cf5338bff70fd41e45a47ee5f49fba8b6641f5f4a691ff8a7efff3aec098aa3ea49f357fc72d49d955f8e06c39ec0387a3a019e7cb27f3bea
cc5eef1c8d853da1a3b1b027743416f6848ec6c29e60398aa23a4f3ae8a8a4dbc30f8e3ac39e6039daee92843147db83e6f0e33cea0b7b02e8e8ba366c7f9e3a
6a0ed71cb5873d4174749575dc5173b8e6a83dec091dd15123778e22b77577003a4a120f389286b5d9f3354373d8132c47dbda7b6e50c4b5b73f3c867d011d8d
853da1a3b1b027743416f6848ec6c29ed0d158d81334473168185d7bf7851f1df5853d0173a453be69394ca939ea0b3f38ea0c7b02e648ca753a2ddb9f9aa3be
f083a3ceb027588ed623dfa97686ef1df5863da1233a6a84dbba1780390a65a7ad83e7cafbc20f8e3ac39e8039baaaae3a7acd495ff871eddd17f604cd51dedc
341d55d68f617bc2e618b62bec099ca37c3039a5e723f4da514fb8f23d4347d81340474df0bb20777e9def6e1bb4baa39eb07124dcd6bd84bf6d79018aa3dea9
d0fd1b3113eef98d980d7b02e2e8879e9f354ac76f2ddf5732ef86025c5b7464806b8b8e0c706dd19101ae2d3a32c0b5d5b910feb761bf3fb307b8b6e8c800d7
d6a1813a18861b8c1b706dd19101ae2d3a32c0b5454706b8b6e8c800d7161d19e0daa223035c5b7464806b8b8e0c706dd19101ae2d3a32c0b5454706d0b6c82f
e8081f3ac2878ef0017314cb3f8e8d294e23612dc9fa3f9d6dc8ea70f6d380394a7998644dab0e85274d1a070be76c1cabfa71d01ccd31954ff4d8073aca1a46
0b2f9286b31f06cd916ad4298d7ea0655a872b4fa8d308ce519c358d7fa2753e5059c6fd7e163447654b27cbe8277a3a32ce7043b103d7d8455308833bfebc9d
3cb04f811b8a1db8c6661ddeeaac735a0f4c24b8a1d8816bac2c9e079b9290576797d1c241b86620a3d0113e7484cf7f9703bde3ccc055f10000000049454e44
ae426082}}}}}
}{\loch
D}{\loch
ans cet exercice vous allez construire un registre de d\u233\'e9calage de trois bits en utilisant les \u233\'e9quations logiques pour un vrai D flip-flop. Pour construire un tel registre, vous devrez connecter les sorties de chaque flip-flop aux entr\u233\'e9es du flip-flop suivant. La ligne d'entr\u233\'e9e D fait passer l'information pour le premier flip-flop, la derni\u232\'e8re sortie correspond \u224\'e0 la retenue sortie du circuit. Utilisez un simple rectangle pour repr\u233\'e9senter un flip-flop et ignorez les sorties Q (puisqu'on ne les utilise pas) ; le sch\u233\'e9ma de notre registre ressemble \u224\'e0 ceci : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\qc\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Un registre de d\u233\'e9calage de trois bits construit \u224\'e0 partir de flip-flops}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Dans l'exercice pr\u233\'e9c\u233\'e9dent, vous avez utilis\u233\'e9 six expressions bool\u233\'e9ennes pour d\u233\'e9finir un flip-flop de type D. Par cons\u233\'e9quent, on aura besoin d'un total de 18 expressions bool\u233\'e9ennes pour impl\u233\'e9menter ce circuit. Ces expressions sont :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Flip-Flop #1 : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
W = (GR)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
F = (IG)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
G = (F#)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
H = (G#I)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
I = (DH)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
R = (HW)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Flip-Flop #2 :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
X = (KS)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
J = (MK)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
K = (J#)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
L = (K#M)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
S = (LX)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Flip-Flop #3 :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Y = (OT)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
N = (QO)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
O = (N#)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
P = (O#Q)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
Q = (XP)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi709\sb0\sa120{\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch
T = (PY)'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\rtlch\dbch\af16\dbch\af16\hich\af8 \ltrch\fs18\loch\f8\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\loch
Entrez ces \u233\'e9quations dans LOGIC.EXE. Initialisez W, X et Y \u224\'e0 z\u233\'e9ro. Mettez D \u224\'e0 1 et presse le bouton Pulse une fois pour ins\u233\'e9rer un 1 dans W. Maintenant mettez D \u224\'e0 z\u233\'e9ro et pressez Pulse plusieurs fois pour d\u233\'e9caler ce bit \u224\'e0 travers chacun des bits de sortie. }{\rtlch \ltrch\b\loch
Pour votre rapport de laboratoire : }{\loch
dans ce registre de d\u233\'e9calage,}{\rtlch \ltrch\b\loch
 }{\loch
essayez de d\u233\'e9caler les bits de diverses fa\u231\'e7ons.  D\u233\'e9crivez l'op\u233\'e9ration \u233\'e9tape par \u233\'e9tape dans votre rapport. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\b\loch
Pour aller plu loin : }{\loch
d\u233\'e9crivez comment cr\u233\'e9er un }{\rtlch \ltrch\i\loch
registre de d\u233\'e9calage de rotation (ou de recirculation de bits)}{\loch
. Le bit sortant du bit quatre revient dans le bit z\u233\'e9ro. Quelles seraient les \u233\'e9quations logiques pour un tel registre de d\u233\'e9calage ? Comment pourriez-vous l'initialiser \u224\'e0 l'aide de LOGIC.EXE (puisque vous ne pouvez pas utiliser l'entr\u233\'e9e D) ?}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120{\rtlch \ltrch\b\loch
Exp\u233\'e9riences additionnelles post-lab : }{\loch
concevez un additionneur complets de deux bits calculant la somme de BA et DC et stockant le r\u233\'e9sultat binaire dans les indicateurs WXY. Incluez les \u233\'e9quations et certains \u233\'e9chantillons du r\u233\'e9sultat dans votre rapport. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_10}{\*\bkmkend p2_10}\rtlch \ltrch\fs23\b\loch
2.10\tab Projets de }{\rtlch \ltrch\fs23\lang3084\b\loch
p}{\rtlch \ltrch\fs23\b\loch
rogrammation}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Vous pouvez r\u233\'e9diger ces programmes dans tout langage de haut niveau que votre instructeur vous permet d'utiliser (normalement, C, C++  ou certaines versions de Borland Pascal ou Delphi). Si vous le d\u233\'e9sirez, vous pouvez vous servir des fonctions g\u233\'e9n\u233\'e9riques vues dans ce chapitre. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
1)\tab Ecrivez un programme qui lit quatre valeurs de l'utilisateur, I, J, K et L et place ces valeurs dans une table de v\u233\'e9rit\u233\'e9, avec B'A' = I, B'A = J, BA' = K et BA = L. Assurez-vous que ces valeurs d'entr\u233\'e9e soient uniquement 0 ou 1. Puis, invitez }{\rtlch \ltrch\lang3084\loch
l'utilisateur \u224\'e0 entrer d'autres valeurs }{\loch
et placez-les dans la table. Affichez le r\u233\'e9sultat de chaque calcul. Note : pour ce programme, n'utilisez pas la fonction logique g\u233\'e9n\u233\'e9rique.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
2) \tab Ecrivez un programme qui, \u224\'e0 partir d'un num\u233\'e9ro de fonction logique de quatre bits, affiche la table de v\u233\'e9rit\u233\'e9 pour cette fonction de deux variables. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
3)\tab Ecrivez un programme qui, \u224\'e0 partir d'un num\u233\'e9ro de fonction logique de huit bits, affiche la table de v\u233\'e9rit\u233\'e9 pour cette fonction de trois variables. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
4) \tab Ecrivez un programme qui, \u224\'e0 partir d'un num\u233\'e9ro de fonction logique de seize bits, affiche la table de v\u233\'e9rit\u233\'e9 pour cette fonction de quatre variables. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120{\loch
5) \tab Ecrivez un programme qui, \u224\'e0 partir d'un num\u233\'e9ro de fonction logique de seize bits, affiche l'\u233\'e9quation canonique de cette fonction (truc : construisez la table de v\u233\'e9rit\u233\'e9). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx567\li567\ri0\lin567\rin0\fi-425\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_11}{\*\bkmkend p2_11}\rtlch \ltrch\fs23\b\loch
2.11\tab R\u233\'e9sum\u233\'e9}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'alg\u232\'e8bre bool\u233\'e9enne constitue la fondation des deux aspects de l'informatique : le mat\u233\'e9riel et le logiciel. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'alg\u232\'e8bre bool\u233\'e9enne est un syst\u232\'e8me math\u233\'e9matique avec son propre ensemble de r\u232\'e8gles (postulats), th\u233\'e9or\u232\'e8mes et valeurs. Sous beaucoup d'aspects, elle est semblable \u224\'e0 l'alg\u232\'e8bre traditionnelle, sous d'autres, elle est m\u234\'eame plus simple. Ce chapitre a commenc\u233\'e9 par traiter diverses caract\u233\'e9ristiques des syst\u232\'e8mes bool\u233\'e9ens, op\u233\'e9rateurs cl\u244\'f4ture, commutativit\u233\'e9, associativit\u233\'e9, distributivit\u233\'e9, identit\u233\'e9 et inverse. Puis, il a trait\u233\'e9 certains postulats et th\u233\'e9or\u232\'e8mes importants, dont le }{\rtlch \ltrch\i\loch
principe de dualit\u233\'e9}{\loch
, permettant de d\u233\'e9montrer ais\u233\'e9ment beaucoup de th\u233\'e9or\u232\'e8mes. Pour les d\u233\'e9tails, voir : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Alg\u232\'e8bre bool\u233\'e9enne", au paragraphe 2.1}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
La }{\rtlch \ltrch\i\loch
table de v\u233\'e9rit\u233\'e9}{\loch
 est un moyen commode de repr\u233\'e9senter visuellement une fonction ou une expression bool\u233\'e9enne. Chaque fonction (ou chaque expression) a une table de v\u233\'e9rit\u233\'e9 correspondante fournissant tous les r\u233\'e9sultats possibles pour toute combinaison des valeurs d'entr\u233\'e9e. Ce chapitre a pr\u233\'e9sent\u233\'e9 plusieurs moyens de construire des ces tables. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Bien qu'avec un nombre }{\rtlch \ltrch\i\loch
n}{\loch
 de valeurs d'entr\u233\'e9e il y ait un nombre infini de fonctions bool\u233\'e9ennes, il est tout de m\u234\'eame \u233\'e9vident que, pour un nombre d'entr\u233\'e9es donn\u233\'e9, il y aura un nombre limit\u233\'e9 de fonctions uniques. Autrement dit, il y a 2^2}{\rtlch \ltrch\super\loch
n}{\loch
 fonctions uniques pour }{\rtlch \ltrch\i\loch
n}{\loch
 entr\u233\'e9es. Par exemple, avec deux variables, il y a 16 fonctions uniques possibles (2^2}{\rtlch \ltrch\super\loch
2 }{\loch
= 16). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque pour deux entr\u233\'e9es le nombre de fonctions est aussi r\u233\'e9duit, on peut donner un nom sp\u233\'e9cifique \u224\'e0 chacune d'elles (par exemple, AND, OR, NAND, etc.). Pour les fonctions de trois ou plus variables, le nombre de fonctions uniques est trop grand pour que chacune ait un nom. Par cons\u233\'e9quent, pour distinguer une fonction de l'autre, on assignera un num\u233\'e9ro \u224\'e0 chacune et ce num\u233\'e9ro sera bas\u233\'e9 sur les bits qui apparaissent dans la table de v\u233\'e9rit\u233\'e9 de cette fonction. Pour en savoir plus, voir : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Fonctions bool\u233\'e9ennes et }{\rtlch \ltrch\lang3084\loch
t}{\loch
ables de }{\rtlch \ltrch\lang3084\loch
v}{\loch
\u233\'e9rit\u233\'e9", au paragraphe 2.2}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
On peut manipuler alg\u233\'e9briquement les fonctions et les expressions bool\u233\'e9ennes. Ceci permet de pouvoir d\u233\'e9montrer de nouveaux th\u233\'e9or\u232\'e8mes, de simplifier des expressions, de convertir des fonctions en forme canonique ou de montrer l'\u233\'e9quivalence de deux fonctions. Pour voir certains exemples de manipulation alg\u233\'e9brique, voir : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Manipulation alg\u233\'e9brique }{\rtlch \ltrch\lang3084\loch
d'}{\rtlch \ltrch\lang3084\loch
e}{\rtlch \ltrch\lang3084\loch
xpressions}{\loch
 bool\u233\'e9ennes", paragraphe 2.3}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Puisque pour un nombre fixe d'entr\u233\'e9es, il existe une vari\u233\'e9t\u233\'e9 infinie de fonctions bool\u233\'e9ennes possibles et un nombre fini de fonctions uniques, il est \u233\'e9vident que parmi ce nombre infini de fonctions, la plupart engendre le m\u234\'eame r\u233\'e9sultat. Pour \u233\'e9viter les confusions, les ing\u233\'e9nieurs font souvent r\u233\'e9f\u233\'e9rence \u224\'e0 une fonction en utilisant la }{\rtlch \ltrch\i\loch
forme canonique}{\loch
. Si deux \u233\'e9quations canoniques sont diff\u233\'e9rentes, elles doivent repr\u233\'e9senter des fonctions bool\u233\'e9ennes diff\u233\'e9rentes. Ce livre d\u233\'e9crit deux formes canoniques : la }{\rtlch \ltrch\i\loch
somme des minterms}{\loch
 et le }{\rtlch \ltrch\i\loch
produit des maxterms}{\loch
. Pour des d\u233\'e9tails sur les formes canoniques, les conversions en formes canoniques ou les conversions entre formes canoniques, voir : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Formes canoniques", au paragraphe 2.4}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
Quoiqu'une forme canonique est en mesure de fournir une unique repr\u233\'e9sentation d'une fonction bool\u233\'e9enne donn\u233\'e9e, les expressions qui r\u233\'e9sultent d'une forme canonique sont rarement }{\rtlch \ltrch\i\loch
optimales}{\loch
. Ce qui veut dire que les formes canoniques utilisent souvent plus de litt\u233\'e9raux et d'op\u233\'e9rateurs que d'autres expressions \u233\'e9quivalentes. En concevant un circuit \u233\'e9lectronique ou une section de programme concernant des expressions bool\u233\'e9ennes, les ing\u233\'e9nieurs pr\u233\'e9f\u232\'e8rent utiliser des circuits ou des programmes optimis\u233\'e9s, puisque les versions optimis\u233\'e9es sont moins on\u233\'e9reuses et, probablement, plus rapides. Par cons\u233\'e9quent, conna\u238\'eetre le moyen de cr\u233\'e9er une forme optimis\u233\'e9e \u224\'e0 partir d'une expression bool\u233\'e9enne est tr\u232\'e8s important. Ce chapitre traite le sujet dans : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Simplification de }{\rtlch \ltrch\lang3084\loch
f}{\loch
onctions bool\u233\'e9ennes", au paragraphe 2.5}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
L'alg\u232\'e8bre bool\u233\'e9enne n'est pas un syst\u232\'e8me math\u233\'e9matique con\u231\'e7u par quelque math\u233\'e9maticien fou et sans importance dans le monde r\u233\'e9el. Elle est est la base de la logique num\u233\'e9rique, autrement dit, la base de la conception \u233\'e9lectronique. De plus, il y a une correspondance de un-\u224\'e0-un entre mat\u233\'e9riel num\u233\'e9rique et logiciel. Tout ce que l'on peut concevoir du c\u244\'f4t\u233\'e9 mat\u233\'e9riel, on peut le concevoir aussi du c\u244\'f4t\u233\'e9 logiciel et vice-versa. Ce texte explique comment impl\u233\'e9menter l'addition, les d\u233\'e9codeurs, la m\u233\'e9moire, les registres de d\u233\'e9calage et les compteurs en utilisant des fonctions bool\u233\'e9ennes. D'autre part, il d\u233\'e9crit aussi comment am\u233\'e9liorer les performances logicielles (par exemple un programme Pascal) en appliquant les r\u232\'e8gles et les th\u233\'e9or\u232\'e8mes de l'alg\u232\'e8bre bool\u233\'e9enne. Pour plus de d\u233\'e9tails, voir : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "En }{\rtlch \ltrch\lang3084\loch
t}{\loch
out }{\rtlch \ltrch\lang3084\loch
c}{\loch
as, qu'est-ce que }{\rtlch \ltrch\lang3084\loch
c}{\loch
eci a \u224\'e0 }{\rtlch \ltrch\lang3084\loch
v}{\loch
oir avec les }{\rtlch \ltrch\lang3084\loch
o}{\loch
rdinateurs ?", paragraphe 2.6}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Correspondance entre }{\rtlch \ltrch\lang3084\loch
c}{\loch
ircuits }{\rtlch \ltrch\lang3084\loch
\u233\'e9}{\loch
lectroniques et }{\rtlch \ltrch\lang3084\loch
f}{\loch
onctions bool\u233\'e9ennes", paragraphe 2.6.1}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Circuits combinatoires", paragraphe 2.6.2}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "Logique s\u233\'e9quentielle et synchrone", paragraphe 2.6.3}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab }{\rtlch\dbch\af15\dbch\af15\hich\af0 \ltrch\loch\f0\loch
\u183\'b7}{\loch
 "D'Accord, mais quel est le }{\rtlch \ltrch\lang3084\loch
r}{\loch
apport avec la }{\rtlch \ltrch\lang3084\loch
p}{\loch
rogrammation, }{\rtlch \ltrch\lang3084\loch
e}{\loch
ncore ?", paragraphe 2.7}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\sb0\sa120\brdrt\brdrs\brdrw5\brdrcf1\brsp20{{\*\bkmkstart p2_12}{\*\bkmkend p2_12}\rtlch \ltrch\fs23\b\loch
2.12\tab Questions}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
1.\tab Quel est l'\u233\'e9l\u233\'e9ment identit\u233\'e9 par rapport \u224\'e0 :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) AND\tab b) OR\tab c) XOR\tab d) NOT \tab e) NAND\tab f) NOR}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
2. \tab Construisez les tables de v\u233\'e9rit\u233\'e9 pour les fonctions suivantes de deux variables :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) AND\tab b) OR\tab c) XOR\tab d) NAND\tab e) NOR}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab f) Equivalence\tab g) A < B\tab h) A > B\tab i) A implique B\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
3. \tab Construisez les tables de v\u233\'e9rit\u233\'e9 pour les fonctions suivantes de trois variables :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab a) ABC (and)\tab b) A + B + C (or) \tab c) (ABC)' (nand)\tab d) (A + B + C)' (nor)\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\li0\ri0\lin0\rin0\fi142\sb0\sa120{\loch
\tab e) Equivalence (ABC) + (A'B'C')\tab f) XOR(ABC + A'B'C')'\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
4. \tab Dessinez des sch\u233\'e9mas (des diagrammes des circuits \u233\'e9lectroniques) pour montrer comment impl\u233\'e9menter chacune des fonctions de la question 3, en utilisant seulement deux portes d'entr\u233\'e9e et des inverseurs. Par exemple : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx1701\li1701\ri0\lin1701\rin0\fi-1559\sb0\sa120{
{\shp{\*\shpinst\shpwr1\shpbypara\shpbyignore\shptop489\shpbottom1554\shpbxcolumn\shpbxignore\shpleft1656\shpright8568{\sp{\sn shapeType}{\sv 75}}{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}{\sp{\sn pib}{\sv {\pict\picscalex97\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw473\pich71\picwgoal7095\pichgoal1065\pngblip
89504e470d0a1a0a0000000d49484452000001d90000004708030000007c82cdb700000300504c54450000000000400000800000ff0020000020400020800020
ff0040000040400040800040ff0060000060400060800060ff0080000080400080800080ff00a00000a04000a08000a0ff00c00000c04000c08000c0ff00ff00
00ff4000ff8000ffff2000002000402000802000ff2020002020402020802020ff2040002040402040802040ff2060002060402060802060ff20800020804020
80802080ff20a00020a04020a08020a0ff20c00020c04020c08020c0ff20ff0020ff4020ff8020ffff4000004000404000804000ff4020004020404020804020
ff4040004040404040804040ff4060004060404060804060ff4080004080404080804080ff40a00040a04040a08040a0ff40c00040c04040c08040c0ff40ff00
40ff4040ff8040ffff6000006000406000806000ff6020006020406020806020ff6040006040406040806040ff6060006060406060806060ff60800060804060
80806080ff60a00060a04060a08060a0ff60c00060c04060c08060c0ff60ff0060ff4060ff8060ffff8000008000408000808000ff8020008020408020808020
ff8040008040408040808040ff8060008060408060808060ff8080008080408080808080ff80a00080a04080a08080a0ff80c00080c04080c08080c0ff80ff00
80ff4080ff8080ffffa00000a00040a00080a000ffa02000a02040a02080a020ffa04000a04040a04080a040ffa06000a06040a06080a060ffa08000a08040a0
8080a080ffa0a000a0a040a0a080a0a0ffa0c000a0c040a0c080a0c0ffa0ff00a0ff40a0ff80a0ffffc00000c00040c00080c000ffc02000c02040c02080c020
ffc04000c04040c04080c040ffc06000c06040c06080c060ffc08000c08040c08080c080ffc0a000c0a040c0a080c0a0ffc0c000c0c040c0c080c0c0ffc0ff00
c0ff40c0ff80c0ffffff0000ff0040ff0080ff00ffff2000ff2040ff2080ff20ffff4000ff4040ff4080ff40ffff6000ff6040ff6080ff60ffff8000ff8040ff
8080ff80ffffa000ffa040ffa080ffa0ffffc000ffc040ffc080ffc0ffffff00ffff40ffff80ffffff1c19a330000002e549444154789ced9c4b8e84201040b9
9c0b0f0387e1301cc5851ca647b417636b890202f579996432711ac197e253602bbfe1bc400bd5ba02c24b8859aa8859aa8859aa8859aa8859aa8859aad031fb
39d0ba466d216456ed59ff66ac9792d963d4ae725b57ac11b4cd6e7279ba256f96ad5b0666835b866a599865a99687598e6a719935d658e8daa559866a5199b5
c67b0d5dbc36cb4f2d2ab37aba38fc1131fb11b31df3afb2ea848859666af9985dd4b6ab790350b5f6b2b2b1de985b7fdc8bd9b37cfe219d3fe68cb362b60d47
2feab85713e6c6e67e09bcbbe35e1a7beee577af461b9311b3bc82b66fb39f07535a31bba7aa590dbf89007bb9bb559363d685fc875566707ed65683792e4c54
35abc041b2403eff8e59a8b57abda0fc347abb6815b30f99357cb7fc7cfe0db31fd86ce84d54f809ff42e225a79a66ad5333742d3f9f7f2b668f848f4e36446a
8859ddcdc4239b9a0d311e1ec1a2f9fc68e91966ad73e1b732e32c66535806b1f17bd7e759df68d066f4c6cbfc29f426ca5b89d914a6c198efeddec8e767cca0
42c5ac8cb3c9d8e5810dd0438b7a2962f6bc0cb75875c3fa2c8675c080a7f088a867760af34f70bc8c9b8da94d371b166356b9653dbb2cb8e7d158709e87895e
8695fc7cbee4a0f620321ba9aaec08ece9a5b1f91127bb787bc42c551899e5d519a3327b5dd7e8d9455e218bc92c98cfbf570233b1b8cc46887cb875132bd34b
7bdf36cbad2f466636bd047e623199cd984131148bca6ceaaa477114cbc12cd36f98216f9667c0fabafbb3eba94f80577604b61973e97620a166ccaaed5cef29
2576f17ed6408a6937fca5ae59f87692cf2f4d5db336f5ec22c31c522e55cd1ab0332e700e4ad8533966bf6a53ce2e56ac2809da8cb309f97c09d98754363b40
d7e4db9c4a53773d0bbf6629f9fcd2f4327c493ebf3408cc8ad824ba37cb383f9847e766c56b323d9be59ccfcfa71fb3c77c3eeb847e36dd983dd2ba4ac8e9c5
ac501a314b15314b15314b15314b951b47f30594fc01d99ae103d7541b3b0000000049454e44ae426082}}}}}
}{\loch
\tab }{\loch
A) ABC = }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx1701\li1701\ri0\lin1701\rin0\fi-1559\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\sb0\sa120\loch

\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
5. \tab Fournissez des impl\u233\'e9mentations pour des portes AND, OR et inverseur, en utilisant une ou plus portes NOR. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
6. \tab Qu'est-ce que c'est le principe de dualit\u233\'e9 ? En quoi il peut nous aider ?}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
7. \tab Dressez une simple table de v\u233\'e9rit\u233\'e9 qui fournit les sorties pour les trois fonctions bool\u233\'e9ennes suivantes de trois variables : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab \tab Fx = A + BC}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab \tab Fy = AB + C'B}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab \tab Fz = A'B'C' + ABC + C'B'A}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
8. \tab Trouvez les num\u233\'e9ros des trois fonctions de la question pr\u233\'e9c\u233\'e9dente. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
9. \tab Combien de fonctions (uniques) possibles peut-on avoir si la fonction a :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab a) une entr\u233\'e9e   b) deux entr\u233\'e9es    c) trois entr\u233\'e9es   d) quatre entr\u233\'e9es   e) cinq entr\u233\'e9es}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
10.\tab Simplifiez les fonctions bool\u233\'e9ennes suivantes en utilisant des transformations alg\u233\'e9briques. Montrez les \u233\'e9tapes de votre travail. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab a) F = AB + A'B'\tab b) F = ABC + BC' + AC + ABC'\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab c) F = A'B'C'D' + A'B'C'D +  A'B'CD + A'B'CD'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab d) F = A'BC + ABC' + A'BC' + AB'C' + ABC + AB'C}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
11. \tab Simplifiez les fonctions bool\u233\'e9ennes de la question 10 en utilisant la m\u233\'e9thode de Karnaugh. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
12. \tab Fournissez les \u233\'e9quations logiques en forme canonique pour les fonctions bool\u233\'e9ennes S}{\rtlch \ltrch\sub\loch
0}{\loch
...S}{\rtlch \ltrch\sub\loch
6}{\loch
 de l'affichage du circuit sept segments (voir "Circuits combinatoires" au paragraphe 2.6.2).}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
13. \tab Donnez les tables de v\u233\'e9rit\u233\'e9 pour chacune des fonctions de la question 12. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
14. \tab Minimisez chacune des fonctions de la question 12 \u224\'e0 l'aide de la m\u233\'e9thode de Karnaugh. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
15. \tab L'\u233\'e9quation logique d'un demi-additionneur (en forme canonique) est}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab Somme = AB' + A'B\tab \tab Retenue = AB}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab a) Fournissez le diagramme du circuit \u233\'e9lectronique pour ce demi-additionneur en utilisant des portes AND, OR et inverseur. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab b) Fournissez le diagramme du circuit en utilisant seulement des portes NAND. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
16. \tab Les \u233\'e9quations canoniques d'un additionneur complet sont : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab Somme = A'B'C + A'BC' + AB'C' + ABC\tab Retenue = ABC + ABC' + AB'C + A'BC}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab a) Fournissez le sch\u233\'e9ma du circuit \u233\'e9lectronique en utilisant des portes AND, OR et inverseur.}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab b) Optimisez ces \u233\'e9quations en utilisant la m\u233\'e9thode de Karnaugh. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab c) Fournissez le circuit \u233\'e9lectronique de la version optimis\u233\'e9e (en utilisant des portes AND, OR et inverseur). }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
17. \tab Pr\u233\'e9sumez avoir un flip-flop de type D (utilisez la d\u233\'e9finition pr\u233\'e9sent\u233\'e9e ici) dont les sorties sont couramment Q = 1 et Q' = 0. D\u233\'e9crivez en grand d\u233\'e9tail et exactement qu'est-ce qui arrive si la ligne d'horloge passe :}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab a) de 0 \u224\'e0 1 avec D = 0.\tab }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab b) de 1 \u224\'e0 0 avec D = 0. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
18.\tab R\u233\'e9crivez les instructions Pascal suivantes pour les rendre plus efficaces : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab a) if (x or (not x and y)) then write('1');}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709{\loch
\tab b) while (not x and not y) do somefunc(x, y);}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab c) if not ((x <> y) and (a = b)) then Something;}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
19.\tab Mettez en forme canonique (somme des }{\rtlch\ai \ltrch\i\loch
minterms}{\loch
) chacune des fonctions suivantes : }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab a) F(A,B,C) = A'BC + AB + BC\tab \tab b) F(A,B,C,D) = A + B + CD' + D}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab c) F(A,B,C) = A'B + B'A\tab \tab d) F(A,B,C,D) = A + BD'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
\tab e) F(A,B,C,D) = A'B'C'D + AB'C'D' + CD + A'BCD'}
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120{\loch
20.\tab Convertissez les r\u233\'e9sultats de la question 19 en un produit de }{\rtlch\ai \ltrch\i\loch
maxterms}{\loch
. }
\par \pard\plain \s38\dbch\af11\langfe1033\dbch\af11\afs20\qj\widctlpar\hyphpar0\ltrpar\cf0\loch\f7\fs21\lang1033\kerning1\tx-142\tx851\li851\ri0\lin851\rin0\fi-709\sb0\sa120\loch

\par }